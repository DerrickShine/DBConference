Handbook of Graph Grammars and Comp.,Grzegorz Rozenberg,Graph grammars originated in the late 60s; motivated by considerations about patternrecognition and compiler construction. Since then the list of areas which have interacted withthe development of graph grammars has grown quite impressively. Besides theaforementioned areas it includes software specification and development; VLSI layoutschemes; database design; modeling of concurrent systems; massively parallel computerarchitectures; logic programming; computer animation; developmental biology; musiccomposition; visual languages; and many others. The area of graph grammars and graphtransformations generalizes formal language theory based on strings and the theory of termrewriting based on trees. As a matter of fact within the area of graph grammars; graphtransformation is considered a fundamental programming paradigm where computation …,*,1997,1935
Software engineering for self-adaptive systems: A second research roadmap,Rogério De Lemos; Holger Giese; Hausi A Müller; Mary Shaw; Jesper Andersson; Marin Litoiu; Bradley Schmerl; Gabriel Tamura; Norha M Villegas; Thomas Vogel; Danny Weyns; Luciano Baresi; Basil Becker; Nelly Bencomo; Yuriy Brun; Bojan Cukic; Ron Desmarais; Schahram Dustdar; Gregor Engels; Kurt Geihs; Karl M Göschka; Alessandra Gorla; Vincenzo Grassi; Paola Inverardi; Gabor Karsai; Jeff Kramer; Antónia Lopes; Jeff Magee; Sam Malek; Serge Mankovskii; Raffaela Mirandola; John Mylopoulos; Oscar Nierstrasz; Mauro Pezzè; Christian Prehofer; Wilhelm Schäfer; Rick Schlichting; Dennis B Smith; João Pedro Sousa; Ladan Tahvildari; Kenny Wong; Jochen Wuttke,Abstract The goal of this roadmap paper is to summarize the state-of-the-art and identifyresearch challenges when developing; deploying and managing self-adaptive softwaresystems. Instead of dealing with a wide range of topics associated with the field; we focus onfour essential topics of self-adaptation: design space for self-adaptive solutions; softwareengineering processes for self-adaptive systems; from centralized to decentralized control;and practical run-time verification & validation for self-adaptive systems. For each topic; wepresent an overview; suggest future directions; and focus on selected challenges. Thispaper complements and extends a previous roadmap on software engineering for self-adaptive systems published in 2009 covering a different set of topics; and reflecting in parton the previous paper. This roadmap is one of the many results of the Dagstuhl Seminar …,*,2013,1369
Handbook of graph grammars and computing by graph transformation,Hartmut Ehrig; Grzegorz Rozenberg; Hans-J rg Kreowski,Graph grammars originated in the late 60s; motivated by considerations about patternrecognition and compiler construction. Since then; the list of areas which have interactedwith the development of graph grammars has grown quite impressively. Besides theaforementioned areas; it includes software specification and development; VLSI layoutschemes; database design; modeling of concurrent systems; massively parallel computerarchitectures; logic programming; computer animation; developmental biology; musiccomposition; visual languages; and many others. The area of graph grammars and graphtransformations generalizes formal language theory based on strings and the theory of termrewriting based on trees. As a matter of fact; within the area of graph grammars; graphtransformation is considered as a fundamental computation paradigm where computation …,*,1999,978
Graph transformation for specification and programming,Marc Andries; Gregor Engels; Annegret Habel; Berthold Hoffmann; Hans-Jörg Kreowski; Sabine Kuske; Detlef Plump; Andy Schürr; Gabriele Taentzer,Abstract The framework of graph transformation combines the potentials and advantages ofboth; graphs and rules; to a single computational paradigm. In this paper we present somerecent developments in applying graph transformation as a rule-based framework for thespecification and development of systems; languages; and tools. After reviewing the basicfeatures of graph transformation; we discuss a selection of applications; including theevaluation of functional expressions; the specification of an interactive graphical tool; anexample specification for abstract data types; and the definition of a visual database querylanguage. The case studies indicate the need for suitable structuring principles which areindependent of a particular graph transformation approach. To this end; we present theconcept of a transformation unit; which allows systematic and structured specification and …,Science of Computer programming,1999,259
Dynamic meta modeling: A graphical approach to the operational semantics of behavioral diagrams in UML,Gregor Engels; Jan Hendrik Hausmann; Reiko Heckel; Stefan Sauer,Abstract In this paper; dynamic meta modeling is proposed as a new approach to theoperational semantics of behavioral UML diagrams. The dynamic meta model extends thewell-known static meta model by a speci. cation of the system's dynamics by means ofcollaboration diagrams. In this way; it is possible to de. ne the behavior of UML diagramswithin UML. The conceptual idea is inherited from Plotkin's structured operational semantics(SOS) paradigm; a style of semantics speci. cation for concurrent programming languagesand process calculi: Collaboration diagrams are used as deduction rules to specify a goal-oriented interpreter for the language. The approach is exemplified using a fragment of UMLstatechart and object diagrams. Formally; collaboration diagrams are interpreted as graphtransformation rules. In this way; dynamic UML semantics can be both mathematically …,International Conference on the Unified Modeling Language,2000,218
A methodology for specifying and analyzing consistency of object-oriented behavioral models,Gregor Engels; Jochem M Küster; Reiko Heckel; Luuk Groenewegen,Abstract Object-oriented modeling favors the modeling of object behavior from differentviewpoints and the successive refinement of behavioral models in the development process.This gives rise to consistency problems of behavioral models. The absence of a formalsemantics for UML models and the numerous possibilities of employing behavioral modelswithin the development process lead to the rise of a number of different consistency notions.In this paper; we discuss the issue of consistency of behavioral models in the UML andpresent a general methodology how consistency problems can be dealt with. According tothe methodology; those aspects of the models relevant to the consistency are mapped to asemantic domain in which precise consistency tests can be formulated. The choice of thesemantic domain and the definition of consistency conditions can be used to construct …,ACM SIGSOFT software engineering notes,2001,200
Conceptual modelling of database applications using an extended ER model,Gregor Engels; Martin Gogolla; Uwe Hohenstein; Klaus Hülsmann; Perdita Löhr-Richter; Gunter Saake; Hans-Dieter Ehrich,Abstract In this paper; we motivate and present a data model for conceptual design ofstructural and behavioural aspects of databases. We follow an object centered designparadigm in the spirit of semantic data models. The specification of structural aspects isdivided into modelling of object structures and modelling of data types used for describingobject properties. The specification of object structures is based on an E xtended E ntity-Relationship (EER) model. The specification of behavioural aspects is divided into themodelling of admissible database state evolutions by means of temporal integrity constraintsand the formulation of database (trans) actions. The central link for integrating these designcomponents is a descriptive logic-based query language for the EER model. The logic partof this language is the basis for static constraints and descriptive action specifications by …,Data & Knowledge Engineering,1992,189
Detecting and resolving process model differences in the absence of a change log,Jochen M Küster; Christian Gerth; Alexander Förster; Gregor Engels,Abstract Business-driven development favors the construction of process models at differentabstraction levels and by different people. As a consequence; there is a demand forconsolidating different versions of process models by detecting and resolving differences.Existing approaches rely on the existence of a change log which logs the changes whenchanging a process model. However; in several scenarios such a change log does not existand differences must be identified by comparing process models before and after changeshave been made. In this paper; we present our approach to detecting and resolvingdifferences between process models; in the absence of a change log. It is based oncomputing differences and deriving change operations for resolving differences; therebyproviding a foundation for variant and version management in these cases.,International Conference on Business Process Management,2008,163
Rule-based specification of behavioral consistency based on the UML meta-model,Gregor Engels; Reiko Heckel; Jochen Malte Küster,Abstract Object-oriented modeling favors the modeling of object behavior from differentviewpoints and at different levels of abstraction. This gives rise to consistency problemsbetween overlapping or semantically related submodels. The absence of a formal semanticsfor the UML and the numerous ways of employing the language within the developmentprocess lead to a number of different consistency notions. Therefore; general meta-leveltechniques are required for specifying; analyzing; and communicating consistencyconstraints. In this paper; we discuss the issue of consistency of behavioral models in theUML and present techniques for specifying and analyzing consistency. Using meta-modelrules we transform elements of UML models into a semantic domain. Then; consistencyconstraints can by specified and validated using the language and the tools of the …,International Conference on the Unified Modeling Language,2001,142
Building integrated software development environments. Part I: tool specification,Gregor Engels; Claus Lewerentz; Manfred Nagl; Wilhelm Schäfer; Andy Schürr,Abstract The conceptual modeling approach of the IPSEN (Integrated Project SupportEnvironment) project for building highly integrated environments is based on usingattributed graphs to model and implement arbitrary object structures; in particular all kinds ofsoftware documents and their relationships. A language based on graph grammars; calledPROGRESS (PROgrammed Graph REwriting SyStems); and a suitable method for theapplication of this language; called graph grammar engineering; have been developed overthe last ten years. This language and method are being extensively used for specifying thecomplex graph structures of internal document representations as well as for specifying thefunctionality of all tools (editors; browsers; analyzers; debuggers) working on these internalrpresentations. This paper explains the language and the method for applying the …,ACM Transactions on Software Engineering and Methodology (TOSEM),1992,132
ClassSheets: automatic generation of spreadsheet applications from object-oriented specifications,Gregor Engels; Martin Erwig,Abstract Spreadsheets are widely used in all kinds of business applications. Numerousstudies have shown that they contain many errors that sometimes have dramatic impacts.One reason for this situation is the low-level; cell-oriented development process ofspreadsheets. We improve this process by introducing and formalizing a higher-level object-oriented model termed ClassSheet. While still following the tabular look-and feel ofspreadsheets; ClassSheets allow the developer to express explicitly business objectstructures within a spreadsheet; which is achieved by integrating concepts from the UML(Unified Modeling Language). A stepwise automatic transformation process generates aspreadsheet application that is consistent with the ClassSheet model. Thus; by deployingthe formal underpinning of ClassSheets; a large variety of errors can be prevented that …,Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering,2005,116
Process-oriented; flexible composition of web services with UML,Sebastian Thöne; Ralph Depke; Gregor Engels,Abstract The composition of elementary web services to larger-scale services has becomean important means to enhance e-business collaborations. If such composite web servicescan also integrate legacy components that are not yet provided as web services; the numberof possible compositions is increased. Following a process-oriented approach; thecompositions can be described as control-and data-flow between available web servicesand components. This paper discusses the Business Process Execution Language for WebServices (BPEL4WS); an existing service composition language; and proposes UML-WSCas an alternative; visual language. For the advanced description of service interfaces; UML-WSC extends the type system of the established Web Service Definition Language (WSDL).,International Conference on Conceptual Modeling,2002,104
Consistency-preserving model evolution through transformations,Gregor Engels; Reiko Heckel; Jochen M Küster; Luuk Groenewegen,Abstract With model-based development being on the verge of becoming in industrialstandard; the topic of research of statically checking the consistency of model made up ofseveral submodels has already received increasing attention. The evolution of modelswithin software engineering requires support for increment l consistency analysis techniquesof new version of the model after evolution; thereby voiding complete reiteration of allconsistency tests. In this paper; we discuss the problem of preserving consistency withinmodel-based evolution focusing on UML-RT models. We introduce the concept of modeltransformation rule that captures an evolution step. Composition of several evolution stepsleads to complex evolution of model. For each evolution step; we study the effects on theconsistency of the overall model and provide localized consistency checks for those parts …,International Conference on the Unified Modeling Language,2002,99
Verification of business process quality constraints based on visual process patterns,Alexander Forster; Gregor Engels; Tim Schattkowsky; Ragnhild Van Der Straeten,Business processes usually have to consider certain constraints like domain specific andquality requirements. The automated formal verification of these constraints is desirable; butrequires the user to provide an unambiguous formal specification. In particular since thenotations for business process modeling are usually visual flow-oriented languages; thenotational gap to the languages usually employed for the formal specification of constraints;eg; temporal logic; is significant and hard to bridge. Thus; our approach relies on UMLActivities as a single language for the specification of both business processes and thecorresponding constraints. For the expression of such constraints; we have provided aprocess pattern definition language based on specialized Activities. In this paper; wedescribe how model checking can be employed for formal verification of business …,Theoretical Aspects of Software Engineering; 2007. TASE'07. First Joint IEEE/IFIP Symposium on,2007,97
Quasar Enterprise: Anwendungslandschaften serviceorientiert gestalten,Bernhard Humm; Oliver Juwig; Andreas Hess; Gregor Engels; Marc Lohmann,*,*,2015,87
UML collaboration diagrams and their transformation to Java,Gregor Engels; Roland Hücking; Stefan Sauer; Annika Wagner,Abstract UML provides a variety of diagram types for specifying both the structure and thebehavior of a system. During the development process; models specified by use of thesediagram types have to be transformed into corresponding code. In the past; mainly classdiagrams and state diagrams have been considered for an automatic code generation. Inthis paper; we focus on collaboration diagrams. As an important prerequisite for a consistenttransformation into Java code; we first provide methodical guidelines on how to deploycollaboration diagrams to model functional behavior. This understanding yields a refinedmeta model and forms the base for the definition of a transformation algorithm. Theautomatically generated Java code fragments build a substantial part of the functionality andprevent the loss of important information during the transition from a model to its …,International Conference on the Unified Modeling Language,1999,87
SOCCA: Specifications of coordinated and cooperative activities,Gregor Engels; Luuk Groenewegen,*,Software Process Modelling and Technology,1994,81
SQL/EER—Syntax and semantics of an entity-relationship-based query language,Uwe Hohenstein; Gregor Engels,Abstract This paper presents the high-level query language SQL/EER for an extended Entity-Relationship model (EER model). SQL/EER directly supports all the concepts of the EERmodel and takes into account well-known features that are integral part of contemporaryquery languages; eg arithmetic and aggregate functions. In contrast to usual descriptions ofquery languages; we give SQL/EER a complete formal specification of syntax andsemantics. The syntax is defined by using an attribute grammar which fixes the context-freestructure and the context-sensitive rules. The operational semantics is defined by formallytranslating SQL/EER queries into queries of an existing; semantically well-defined calculus.The attribute grammar is extended to cover this translation; too. The query languageSQL/EER is used in a database design environment. In this context; the formal …,Information Systems,1992,73
Encapsulated hierarchical graphs; graph types; and meta types,Gregor Engels; Andy Schürr,Abstract Currently existing graph grammar-based specification languages have seriousproblems with supporting any kind of “specification-in-the-large” activities. More precisely;they have deficiences with respect to modeling hierarchical data structures or specifyingmeta activities like manipulation of graph schemata. Furthermore; already proposed graphgrammar module concepts are still too abstract to be useful in practice. Our contributionaddresses these problems by introducing a new hierarchical graph data model with aninfinite number of schema; meta-schema; etc. layers. It forms the base for a forthcomingconcrete modular graph grammar specification language where in addition informationhiding aspects like explicit export and import interfaces are expressible.,Electronic Notes in Theoretical Computer Science,1995,71
A combined reference model-and view-based approach to system specification,Gregor Engels; Reiko Heckel; Gabriele Taentzer; Hartmut Ehrig,The idea of a combined reference model-and view-based specification approach has beenproposed recently in the software engineering community. In this paper we present aspecification technique based on graph transformations which supports such a developmentapproach. The use of graphs and graph transformations supports an intuitive understandingand an integration of static and dynamic aspects on a well-defined semantical base. On thisbackground; formal notions of view and view relation are developed and the behaviour ofviews is described by a loose semantics. The integration of two views derived from acommon reference model is done in two steps. First; dependencies between the viewswhich are not given by the reference model are determined; and the reference model isextended appropriately. This is the task of a model manager. If the two views and the …,International Journal of Software Engineering and Knowledge Engineering,1997,68
Extending UML for modeling of multimedia applications,Stefan Sauer; Gregor Engels,An analysis of how visual modeling of structure and dynamic behavior of a multimediaapplication differs from modeling conventional software shows that aspects of the graphicaluser interface and time-dynamic behavior ought to be integral parts of a coherent multimediaapplication model. In this sense; we extend the model-view-controller paradigm towardsmultimedia. As a result; we present OMMMA-L; a visual language for the object-orientedmodeling of multimedia applications; that is based on the Unified Modeling Language(UML). The structural and behavioral diagram types of UML have been analyzed and areadapted and extended according to multimedia application characteristics. A presentationdiagram is introduced and integrated to adequately describe the visual presentation. Inaddition to explaining the different diagram types; we also give pragmatic guidelines on …,Visual Languages; 1999. Proceedings. 1999 IEEE Symposium on,1999,67
Testing the consistency of dynamic UML diagrams,Gregor Engels; Jan Hendrik Hausmann; Reiko Heckel; Stefan Sauer,ABSTRACT The Unified Modeling Language (UML) offers different diagrams to depict thebehavior of a modeled system and its elements. When employing different diagrams duringmodeling; it has to be ensured that these different specifications are consistent. Theconsistency conditions depend on the diagrams involved; the development processemployed; and the current stage of the development. In order to ensure consistency; there isa need for a consistency description which is formal and precise; yet understandable andeasily adoptable to new requirements. Furthermore; an automatic validation of modelsaccording to the consistency conditions is necessary. We propose dynamic meta modelingrules as a notation for the consistency conditions and provide the concept for an automatedtesting environment using these rules.,Proc. Sixth International Conference on Integrated Design and Process Technology (IDPT 2002),2002,64
Object-oriented modeling: a roadmap,Gregor Engels; Luuk Groenewegen,ABSTRACT Object-oriented modeling has become the de-facto standard in the early phasesof a software development process during the last decade. The current state-of-the-art isdominated by the existence of the Unified Modeling Language (UML); the-development ofwhich has been initiated and pushed by industry. This paper presents a list of requirementsfor an ideal object-oriented modeling language and compares it with the achievements ofUML and other object-oriented modeling approaches. This forms the base for the discussionof a roadmap for object-oriented modeling; which is structured according to a classificationscheme of six different themes; which are language-; model-or process-related; respectively.Keywords,Proceedings of the Conference on the Future of Software Engineering,2000,64
Process modeling using UML,Gregor Engels; Alexander Förster; Reiko Heckel; Sebastian Thöne,The Unified Modeling Language (UML) 1 is a visual; object-oriented; and multipurposemodeling language. Primarily designed for modeling software systems; it can also be usedfor business process modeling. Since the early 1970s; a large variety of languages for dataand software modeling like entity-relationship diagrams [2]; message sequence charts [5;10]; state charts [9]; and so on; have been developed; each of them focusing on a differentaspect of software structure or behavior. In the early 1990s; object-oriented designapproaches gained increasing attention; for instance; in the work of James Rumbaugh(Object Modeling Technique or OMT [21]); Grady Booch [1]; and Ivar Jacobson [12]. TheUML emerged from the intention of Rumbaugh; Booch; and Jacobson to find a commonframework for their approaches and notations. Furthermore; the language was also …,Process-Aware Information Systems,2005,61
UML—A Universal Modeling Language?,Gregor Engels; Reiko Heckel; Stefan Sauer,Abstract The Unified Modeling Language (UML) is the de facto industrial standard of anobject-oriented modeling language. It consists of several sublanguages which are suited tomodel structural and behavioral aspects of a software system. The UML was developed as ageneral-purpose language together with intrinsic features to extend the UML towardsproblem domain-specific profiles. The paper illustrates the language features of the UMLand its adaptation mechanisms. As a conclusion; we show that the UML or an appropriate; tobe defined core UML; respectively; may serve as a universal base of an object-orientedmodeling language. But this core has to be adapted according to problem domain-specificrequirements to yield an expressive and intuitive modeling language for a certain problemdomain.,International Conference on Application and Theory of Petri Nets,2000,57
A Method for Engineering a True Service-Oriented Architecture.,Gregor Engels; Andreas Hess; Bernhard Humm; Oliver Juwig; Marc Lohmann; Jan-Peter Richter; Markus Voß; Johannes Willkomm,Abstract: Service oriented architecture (SOA) is currently the most discussed concept forengineering enterprise IT architectures. True SOA is more than web services and webservices style of communication. In the first place; it is a paradigm for structuring thebusiness of an enterprise according to services. This allows companies to flexibly adapt tochanging market demands. Subsequently; it is a paradigm for structuring the enterprise ITarchitecture according to those business services. This paper presents a concrete methodand rules for engineering an enterprise IT architecture towards a true SOA. It can be seen asan instantiation of roadmaps in enterprise architecture frameworks.,ICEIS (3-2),2008,53
How to represent a visual specification,Marc Andries; Gregor Engels; Jan Rekers,Abstract We consider the representation of a visual specification within a highly integratedenvironment which provides specialized support for the associated visual language. Westate that such an environment needs to represent a visual specification at four levels inorder to perform its tasks:(1) the physical layout;(2) the pictorial structure;(3) the abstractstructure; and (4) the representation of the meaning. Furthermore; we will show how graphgrammars; constraint solving; and attribute evaluation can be used to keep therepresentations up-to-date with each other. It will turn out that defining the structure atdifferent levels and defining the visual syntax are in fact two names for the same thing.,*,1998,53
Analysis of UML activities using dynamic meta modeling,Gregor Engels; Christian Soltenborn; Heike Wehrheim,Abstract Dynamic Meta Modeling (DMM) is a universal approach to defining semantics forlanguages syntactically grounded on meta models. DMM has been designed with the aim ofgetting highly understandable yet precise semantic models which in particular allow for aformal analysis. In this paper; we exemplify this by showing how DMM can be used to give asemantics to and define an associated analysis technique for UML Activities.,International Conference on Formal Methods for Open Object-Based Distributed Systems,2007,52
Defining and validating transformations of UML models,Jochen M Kuster; Reiko Heckel; Gregor Engels,With the success of the UML; the ability of transforming models into programs or formalspecifications becomes a key to automated code generation or verification in the softwaredevelopment process. In this paper; we describe a concept for specifying modeltransformations by means of graph transformation rules on the UML meta model. In order tovalidate the termination and uniqueness of such transformations; we derive a number ofsufficient criteria from basic results of the theory of graph transformation. This ensures thatthe rules can be executed automatically while; at the same time; providing a high-levelvisual model of the transformation.,Human Centric Computing Languages and Environments; 2003. Proceedings. 2003 IEEE Symposium on,2003,52
A hybrid query language for an extended entity-relationship model,Marc Andries; Gregor Engels,Abstract We present the hybrid query language HQL/EER for an Extended Entity-Relationship model. As its main characteristic; this language allows a user tousebothgraphical and textual elements in the formulation of one and the same query. Wedemonstrate the look-and-feel of this query language by means of examples; and show howsyntax and semantics of this language are formally defined using programmed graphrewriting systems. Although we present the language in the context of the EER model; theconcept of hybrid languages is applicable in the context of other database models as well.We illustrate this claim by discussing a prototype implementation of a Hybrid Query Toolbased on an object-oriented approach; namely the Object Modeling Technique (OMT).,Journal of Visual Languages & Computing,1996,52
Finding the pattern you need: The design pattern intent ontology,Holger Kampffmeyer; Steffen Zschaler,Abstract Since the seminal book by the Gang of Four; design patterns have proven animportant tool in software development. Over time; more and more patterns have beendiscovered and developed. The sheer amount of patterns available makes it hard to findpatterns useful for solving a specific design problem. Hence; tools supporting searching andfinding design patterns appropriate to a certain problem are required. To develop suchtooling; design patterns must be described formally such that they can be queryed by theproblem to be solved. Current approaches to formalising design patterns focus on thesolution structure of the pattern rather than on the problems solved. In this paper; we presenta formalisation of the intent of the 23 patterns from the Gang-of-Four book. Based on thisformalisation we have developed a Design Pattern Wizard that proposes applicable …,International Conference on Model Driven Engineering Languages and Systems,2007,51
Classification and comparison of module concepts for graph transformation systems,Reiko Heckel; Gregor Engels; Hartmut Ehrig; Gabriele Taentzer,Abstract In this chapter we use a three-level approach for analyzing module concepts forgraph transformation systems. Based on the observation that module architectures consist ofbasic specifications like body or export interface and relations like the implementationrelation between them; or the import relation between a client and a server module; moduleconcepts are characterized by answering the questions 1. What are the basic specifications?2. Which relations between specifications are used? 3. How are specifications and relationscombined to module architectures? These three questions are investigated for five moduleconcepts available in the literature. As a reference example; a sample modular specificationof resource management in distributed operating systems is presented.,*,1999,50
Graph grammar engineering: A software specification method,Gregor Engels; Claus Lewerentz; Wilhelm Schäfer,Abstract Graphs as conceptual data models are accepted and used in a wide range ofdifferent problem areas. Giving some examples we outline common aspects for modelingcomplex structures by graphs. We present a formal frame-work based on graph grammars tospecify graph classes and the corresponding graph manipulations. We show that such aspecification can be written in a systematic; engineering-like manner. This is achieved by anextension of the known programmed; attributed graph grammars. Node-set operators areintroduced to facilitate graph queries. Concepts like abstraction; decomposition; refinement;parameterization; and integration have been adopted from software engineering to yield acomprehensive specification method. This method has successfully been applied to specifythe central data structures in a software development environment project.,International Workshop on Graph Grammars and Their Application to Computer Science,1986,50
Observable or invocable behaviour-you have to choose!,Jürgen Ebert; Gregor Engels,Abstract Several object-oriented modeling approaches propose to describe the dynamicbehaviour of objects by state transition diagrams. None of them provide precise rules orconditions for the interrelation between the behaviour description of classes and those oftheir subclasses. In this paper; we discuss this interrelation in detail. It turns out that one hasto distinguish between the observable and the invocable behaviour of objects and thatdifferent compatibility requirements between the diagrams exist depending on the type ofbehaviour. Keywords: object model; dynamic model; object life cycle; state transitiondiagram; inheritance 1 1 Introduction An often mentioned characteristics of object-orientedmodeling is the integrated description of structural as well as behavioural aspects of objects.In order to achieve this; current object-oriented development methods propose the usage …,*,1994,49
A view-oriented approach to system modelling based on graph transformation,Gregor Engels; Reiko Heckel; Gabi Taentzer; Hartmut Ehrig,Abstract. The idea of a combined reference model-and view-based specification approachhas been proposed recently in the software engineering community. In this paper wepresent a specification technique based on graph transformations which supports such adevelopment approach. The use of graphs and graph transformations supports an intuitiveunderstanding and an integration of static and dynamic aspects on a well-definedsemantical base. On this background; formal notions of view and view relation aredeveloped and the behaviour of views is described by a loose semantics. We define aconstruction for automatic view integration which assumes that the dependencies betweendifferent views are described by a reference model. The views and the reference model arekept consistent manuahy; which is the task of a model manager. AII concepts and results …,ACM SIGSOFT Software Engineering Notes,1997,45
UML-based behavior specification of interactive multimedia applications,Stefan Sauer; Gregor Engels,Availability of precise; yet usable modeling languages is essential to the construction ofmultimedia systems based on software engineering principles and methods. Althoughseveral languages have been proposed for the specification of isolated multimedia systemaspects; there not yet exists an integrated modeling language that adequately supportsmultimedia software development in practice. We propose an extension of the UnifiedModeling Language (UML) for the integrated specification of multimedia systems based onan object-oriented development method. Since integration of co-existing timed proceduraland interactive behavior is at the heart of multimedia systems; we focus on UML-basedspecification of behavior in this paper. In addition; we outline how these behavioral aspectsare to be integrated with media; presentation; and software architecture modeling to …,Human-Centric Computing Languages and Environments; 2001. Proceedings IEEE Symposia on,2001,44
Adapt cases: extending use cases for adaptive systems,Markus Luckey; Benjamin Nagel; Christian Gerth; Gregor Engels,Abstract Adaptivity is prevalent in today's software. Mobile devices self-adapt to availablenetwork connections; washing machines adapt to the amount of laundry; etc. Currentapproaches for engineering such systems facilitate the specification of adaptivity in theanalysis and the technical design. However; the modeling of platform independent modelsfor adaptivity in the logical design phase remains rather neglected causing a gap betweenthe analysis and the technical design phase. To overcome this situation; we propose anapproach called Adapt Cases. Adapt Cases allow the explicit modeling of adaptivity withdomain-specific means; enabling adaptivity to gather attention early in the softwareengineering process. Since our approach is based on the concept of use cases it is easyadoptable in new and even running projects that use the UML as a specification …,Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,2011,43
Model-based software product lines testing survey,S Oster; A Wübbeke; G Engels; A Schürr,*,*,2010,42
Detection of semantically equivalent fragments for business process model change management,Christian Gerth; Markus Luckey; Jochen M Küster; Gregor Engels,Modern business process modeling environments support distributed development bymeans of model version control; ie; comparison and merging of two different model versions.This is a challenging task since most modeling languages support an almost arbitrarycreation of process models. Thus; in multi-developer environments; process models or partsof them are often syntactically very different but semantically equivalent. Hence; thecomparison of business process models must be performed on a semantic level rather thenon a syntactic level. For the domain of business process modeling; this problem is yetunsolved. This paper describes an approach that allows the semantic comparison ofdifferent business process models using a normal form. For that purpose; the processmodels are fully automatically translated into process model terms and normalized using …,Services Computing (SCC); 2010 IEEE International Conference on,2010,40
A Tool for Process Merging in Business-Driven Development.,Jochen Malte Küster; Christian Gerth; Alexander Förster; Gregor Engels,Abstract. Business-driven development favors the construction of process models at differentabstraction levels and by different people. As a consequence; there is a demand forconsolidating different versions of process models by merging them. In this paper; we studya basic scenario; derive requirements and present a prototype for detecting and resolvingchanges between process models.,CAiSE Forum,2008,40
Towards model-driven unit testing,Gregor Engels; Baris Güldali; Marc Lohmann,Abstract The Model-Driven Architecture (MDA) approach for constructing software systemsadvocates a stepwise refinement and transformation process starting from high-level modelsto concrete program code. In contrast to numerous research efforts that try to generateexecutable function code from models; we propose a novel approach termed model-drivenmonitoring. On the model level the behavior of an operation is specified with a pair of UMLcomposite structure diagrams (visual contract); a visual notation for pre-and post-conditions.The specified behavior is implemented by a programmer manually. An automatic translationfrom our visual contracts to JML assertions allows for monitoring the hand-coded programsduring their execution. In this paper we present how we extend our approach to allow formodel-driven unit testing; where we utilize the generated JML assertions as test oracles …,International Conference on Model Driven Engineering Languages and Systems,2006,39
Consistent interaction of software components,Gregor Engels; Jochen M Küuster; Luuk Groenwegen,Abstract Constructing complex software systems by integrating different softwarecomponents is a promising and challenging approach. With the functionality of softwarecomponents given by models it is possible to ensure consistency of such models beforeimplementation in order to successfully build the system. Models consisting of differentsubmodels; the absence of an overall formal semantics and the numerous possibilities ofemploying models requires the development of techniques ensuring the consistency. In thispaper; we discuss the issue of consistency of models made up of different submodelsproposing a concept for the management of consistency. Consistency management relieson a consistency concept and a process for ensuring consistency of models. We introduce aconsistency concept for software components modeled in the Unified Modeling Language …,Journal of Integrated Design and Process Science,2002,38
Graph Grammars and Their Application to Computer Science: 5th International Workshop; Williamsburg; VA; USA; November (13-18); 1995. Selected Papers.,Janice Cuny,This book contains a collection of 37 refereed full papers selected from the contributionspresented at the 5th International Workshop on Graph Grammars and Their Applications toComputer Science; held in Williamsburg; Virginia; USA; in November 1994. The book coversthe whole spectrum of methods and techniques for the investigation of the structure ofgraphs and graph transformations. The papers are divided into nine topical sections onrewriting techniques; specification and semantics; software engineering; algorithms andarchitectures; concurrency; graph languages; pattern and graphics; structure and logic ofgraphs; and biology.,*,1996,38
Graph transformation as a conceptual and formal framework for system modeling and model evolution,Gregor Engels; Reiko Heckel,Abstract Distributed software systems are typically built according to a three layer conceptualstructure: Objects on the lowest layer are clustered by components on the second layer;which themselves are located at nodes of a computer network on the third layer. Orthogonalto these three layers; an instance level and a type or schema level are distinguished whenmodeling these systems. Accordingly; the changes a system experiences during its lifetimecan be classified as the system's dynamic behavior on the instance level and as theevolution of the system on the schema level. This paper shows how concepts from the areaof graph transformation can be applied to provide a conceptual and formal framework fordescribing the structural and behavioral aspects of such systems.,International Colloquium on Automata; Languages; and Programming,2000,37
Activity diagram patterns for modeling quality constraints in business processes,Alexander Foerster; Gregor Engels; Tim Schattkowsky,Abstract Quality management is an important aspect of business processes. Organizationsmust implement quality requirements; eg; according to standards like ISO 9001. Existingapproaches on business process modeling provide no explicit means to enforce suchrequirements. UML Activity Diagrams are a well recognized way of representing thosebusiness processes. In this paper; we present an approach for enforcing qualityrequirements in such business processes through the application of process quality patternsto Activity Diagrams. These patterns are defined using a pattern description language; beinga light-weight extension of UML Activity Diagrams. Accordingly; such patterns can be used inforward-engineering of business processes that incorporate quality constraints right from thebeginning.,International Conference on Model Driven Engineering Languages and Systems,2005,35
Executable visual contracts,Marc Lohmann; Stefan Sauer; Gregor Engels,Design by contract (DbC) is widely acknowledged to be a powerful technique for creatingreliable software. DbC allows developers to specify the behavior of an operation preciselyby pre-and post-conditions. Existing DbC approaches predominantly use textualrepresentations of contracts to annotate the actual program code with assertions. In theunified modeling language (UML); the textual object constraint language (OCL) supports thespecification of preand post-conditions by constraining the model elements that occur inUML diagrams. However; textual specifications in OCL can become complex andcumbersome; especially for software developers who are typically not used to OCL. In thispaper; we propose to specify the pre-and post-conditions of an operation visually by a pair ofUML object diagrams (visual contract). We define a mapping of visual contracts into Java …,Visual Languages and Human-Centric Computing; 2005 IEEE Symposium on,2005,35
Model-based verification and validation of properties,Gregor Engels; Jochen M Küster; Reiko Heckel; Marc Lohmann,Abstract One of the key issues in software development; like in all engineering problems; isto ensure that the product delivered meets its specification. Verification and validation arewell-established techniques for ensuring the quality of a product within the overall softwaredevelopment lifecycle. With models being expressed in the Unified Modeling Language; theapplication of verification and validation is complicated. Firstly; concerning verification; aUML model is typically not the input language of a verification tool. Secondly; with regards tovalidation; a UML model is also not directly executable. In this paper; we show howverification and validation can be achieved for UML models. Within our approach; graphtransformation techniques are applied for automated translation of UML models into alanguage understood by a verification tool or directly into an implementation. By the use …,Electronic Notes in Theoretical Computer Science,2003,35
Pragmatic and semantic aspects of a module concept for graph transformation systems,Hartmut Ehrig; Gregor Engels,Abstract The paper presents a conceptual framework for a module concept for graphtransformation systems from a software engineering as well as from a theoretical point ofview. The basic idea is to reuse concepts; which are known within or without the graphgrammar field; to structure large specifications. These are the concept of distributed graphtransformation systems; the concept of inheritance of specifications; and the import-export-interface concept. All these concepts are presented in a uniform framework based on thesyntactical notion of a graph class specification and its semantics given by a graphtransformation system. This is the basis for an explicit integration of these concepts and acorresponding specification language; to be discussed in a subsequent paper.,International Workshop on Graph Grammars and Their Application to Computer Science,1994,34
Dependent and conflicting change operations of process models,Jochen M Küster; Christian Gerth; Gregor Engels,Abstract Version management of models is common for structural diagrams such as classdiagrams but still challenging for behavioral models such as process models. For processmodels; conflicts of change operations are difficult to resolve because often dependencies toother change operations exist. As a consequence; conflicts and dependencies betweenchange operations must be computed and shown to the user who can then take them intoaccount while creating a consolidated version. In this paper; we introduce the concepts ofdependencies and conflicts of change operations for process models and provide a methodhow to compute them. We then discuss different possibilities for resolving conflicts. Usingour approach it is possible to enable version management of process models with minimalmanual intervention of the user.,European Conference on Model Driven Architecture-Foundations and Applications,2009,33
Object-oriented modeling of multimedia applications,GREGOR ENGELS; STEFAN SAUER,Abstract The field of multimedia software engineering is still in an inmature state. Significantresearch and development has been dedicated towards multimedia services and systemstechnology such as networking or database systems. Multimedia document formats havebeen standardized. But when it comes to multimedia application development; thedevelopment process is truncated to an implement-and-test method. Either specializedmultimedia authoring systems or multimedia frameworks or libraries complementingprogramming languages or system software are directly used for implementation. Nopreceding modeling phases for requirements specification; analysis; or design of the systemto build are enforced. The development of sophisticated multimedia process models andestablished; usable graphical notations tailored to the specification of multimedia systems …,*,2002,33
Quasar Enterprise–Anwendungslandschaften serviceorientiert gestalten. dpunkt. verlag,Gregor Engels; Andreas Hess; Bernhard Humm; Ooliver Juwig; Marc Lohmann; Jan-Peter Richter; Markus Voß; Johannes Willkomm,*,*,2008,32
Structuring software cities a multidimensional approach,Andreas Hess; Bernhard Humm; Markus Voss; Gregor Engels,Software cities alias application landscapes of large enterprises comprise tens or evenhundreds of IT applications. Structuring software cities into domains is an important task ofenterprise architects. The quality of the resulting domain model is crucial for the success ofenterprise architecture management and an important tool for the governance of thedevelopment of an enterprise's application landscape. This paper presents a novel methodfor constructing domain models based on business services; business objects; and businessdimensions. The method has been validated in numerous industrial projects.,Enterprise Distributed Object Computing Conference; 2007. EDOC 2007. 11th IEEE International,2007,32
The consistency workbench: A tool for consistency management in UML-based development,Gregor Engels; Reiko Heckel; Jochen M Küster,Abstract With the Unified Modeling Language becoming applied in diverse contexts; theability of defining and checking customized consistency conditions is gaining increasingimportance. In this paper; we introduce the Consistency Workbench for defining andestablishing consistency in a UML-based development process.,International Conference on the Unified Modeling Language,2003,32
Programmentwicklungsumgebungen: Konzepte und Realisierung,Gregor Engels; Wilhelm Schäfer,Leitfäden der angewandten Informatik Bauknecht/Zehnder: Grundzüge der Datenverarbeitung4. Aufl. 297 Seiten. Kart. DM 38– Beth / Heß / Wirl: Kryptographie 205 Seiten. Kart. DM 28;80Brüggemann-Klein: Einführung in die Dokumentenverarbeitung 200 Seiten. Kart. DM 34–Bunke: Modellgesteuerte Bildanalyse 309 Seiten. Geb. DM 49;80 Craemer: MathematischesModellieren dynamischer Vorgänge 288 Seiten. Kart. DM 42– Curth/Giebel: Management derSoftware-Wartung 184 Seiten. Kart. DM 34 – Engels/Schäfer:Programmentwicklungsumgebungen; Konzepte und Realisierung 248 Seiten. Kart. DM 38;–Frevert: Echtzeit-Praxis mit PEARL 2. Aufl. 216 Seiten. Kart. DM 36;–Frühauf/Ludewig/Sandmayr: Software-Projektmanagement und -Qualitätssicherung. 136Seiten. Kart. DM 28;– Gloor: Synchronisation in verteilten Systemen 239 Seiten. Kart. DM …,*,2013,31
Specialization of object life cycle definitions,Jürgen Ebert; Gregor Engels,Abstract Many object-oriented modeling approaches propose to use the concept of statetransition diagrams to describe object behaviour. But most of them are very vague on whichaspect of object behaviour should be described by them. In addition; the interrelationbetween the behaviour description of classes and those of their subclasses is rarely defined.In this paper we motivate and formalize the distinction between two kinds of usages of statetransition diagrams; called the observable and the invocable behaviour of objects. Based onthis; we formally define compatibility conditions between behaviour description of classesand those of their subclasses depending on the kind of behaviour. We provide sufficientcriteria for proving this compatibility and show that rules given by other authors are specialcases thereof.,Fachberichte Informatik,1997,31
High-quality specification of self-adaptive software systems,Markus Luckey; Gregor Engels,Today'software systems have to cope with changing environments while at the same timefacing high non-functional requirements such as flexibility and dependability. Recently;these non-functional requirements are addressed using self-adaptivity features; that is; thesystem monitors its environment and adjusts its structure or behavior in reaction to changes.In classical model-driven software engineering approaches; self-adaptivity introducesadditional complexity since self-adaptation features are distributed in a cross-cutting mannerat various different locations in the models; resulting in a tightly interwoven model landscapethat is hard to understand and maintain. A particular solution to cope with this problem is theseparation of concerns (SoC) to focus on the specific concern of self-adaptivity and allow in-depth analyses. Applying SoC requires suitable development processes; languages; and …,Software Engineering for Adaptive and Self-Managing Systems (SEAMS); 2013 ICSE Workshop on,2013,30
A meta-method for defining software engineering methods,Gregor Engels; Stefan Sauer,Abstract Today's software systems demand for sophisticated software engineeringprocesses and methods. Especially the globally distributed development of large softwaresystems requires precise and documented methods; but also lightweight and agile methodsneed to have a precise foundation. Effort that is invested once in the methods can besystematically reused in projects. We describe MetaME; a meta-method for modeling andtailoring software engineering methods. It builds on a meta-model of software engineeringconcepts. MetaME combines ideas from meta-modeling and method engineering. The meta-method comprises a product dimension and a process dimension. When the meta-method isapplied; software development concepts are paired with languages for their representationto form artifact types. In the process dimension of the software engineering method …,*,2010,30
Language-independent change management of process models,Christian Gerth; Jochen M Küster; Gregor Engels,Abstract In model-driven development approaches; process models are used at differentlevels of abstraction and are described by different languages. Similar to other softwareartifacts; process models are developed in team environments and underlie constantchange. This requires reusable techniques for the detection of changes between differentprocess models and the computation of dependencies and conflicts between changes. Inthis paper; we propose a framework for the construction of process model changemanagement solutions that provides generic techniques for the detection of differences andthe computation of dependencies and conflicts between changes. The framework containsan abstract representation for process models that serves as a common denominator fordifferent process models. In addition; we show how the framework is instantiated …,International Conference on Model Driven Engineering Languages and Systems,2009,29
Towards consistency-preserving model evolution,Gregor Engels; Jochen M Küster; Reiko Heckel; Luuk Groenewegen,Abstract Model-based software development poses requirements on the quality of modelswhich cannot yet be fulfilled by models in the standard object-oriented modeling language;the UML. In particular; the semantic consistency of UML models is an open issue. Model-based evolution; as one crucial aspect of model-based development; requires support for re-establishing the consistency of a new version of the model after an evolution step. In thisposition paper; we observe that; under certain assumptions; the new model can be shown tobe consistent if a certain semantic relation holds between the replaced sub-models.Thereby; one can avoid a complete re-iteration of all consistency checks for the new model;concentrating instead on those parts that have been modified.,Proceedings of the International Workshop on Principles of Software Evolution,2002,29
On the structure of structure-oriented editors for different applications,Gregor Engels; Manfred Nagl; W Schafer,Abstract The paper describes the experiences we got from the implementation of a series ofsyntax-directed editors within an incremental and integrated software developmentenvironment. The implementation of all editors is based on the same conceptual ideas forspecification and realization which is called graph technology. It is specific for the project apart of which we describe here. Using graph technology yields a very similar softwarearchitecture for all editors. We explain the development of such a standard architecture andalso outline some specific differences resulting from the corresponding application areas.,ACM SIGPLAN Notices,1987,29
From UML Activities to TAAL-Towards behaviour-preserving model transformations,Gregor Engels; Anneke Kleppe; Arend Rensink; Maria Semenyak; Christian Soltenborn; Heike Wehrheim,Abstract Model transformations support a model-driven design by providing an automatictranslation of abstract models into more concrete ones; and eventually program code.Crucial to a successful application of model transformations is their correctness; in the sensethat the meaning (semantics) of the models is preserved. This is especially important if themodels not only describe the structure but also the intended behaviour of the systems.Reasoning about and showing correctness is; however; often impossible as the source andtarget models typically lack a precise definition of their semantics. In this paper; we take afirst step towards provably correct behavioural model transformations. In particular; wedevelop transformations from UML Activities (which are visual models) to programs in TAAL;which is a textual Java-like programming language. Both languages come equipped with …,European Conference on Model Driven Architecture-Foundations and Applications,2008,28
Precise detection of conflicting change operations using process model terms,Christian Gerth; Jochen M Küster; Markus Luckey; Gregor Engels,Abstract Version management of process models requires that changes can be resolved byapplying change operations. Conflict detection is an important part of version managementand the minimization of the number of detected conflicts also reduces the overhead whenresolving changes. As not every syntactic conflict leads to a conflict when taking into accountmodel semantics; a computation of conflicts solely on the syntax leads to an unnecessaryhigh number of conflicts. In this paper; we introduce the notion of syntactic and semanticconflicts for change operations of process models. We provide a method how to efficientlycompute conflicts; using a term formalization of process models. Using this approach; wecan significantly reduce the number of overall conflicts and thereby reduce the amount ofwork for the user when resolving conflicts.,International Conference on Model Driven Engineering Languages and Systems,2010,25
Inspection effectiveness for different quality attributes of software requirement specifications: An industrial case study,Frank Salger; Gregor Engels; Alexander Hofmann,Early inspections of software requirements specifications (SRS) are known to be an effectiveand cost-efficient quality assurance technique. However; inspections are often applied withthe underlying assumption that they work equally well to assess all kinds of quality attributesof SRS. Little work has yet been done to validate this assumption. At Capgemini sd&m; weset up an inspection technique to assess SRS; the so called ldquospecification qualitygaterdquo (QG-Spec). The QG-Spec has been applied to a series of large scale commercialprojects. In this paper we present our lessons learned and discuss; which quality attributesare effectively assessed by means of the QG-Spec-and which are not. We argue that ourresults can be generalized to other existing inspection techniques. We came to theconclusion that inspections have to be carefully balanced with techniques for constructive …,Software Quality; 2009. WOSQ'09. ICSE Workshop on,2009,25
Quasar enterprise,Gregor Engels; Markus Voß,Zusammenfassung Die Gestaltung und Weiterentwicklung großer Anwendungslandschaftengilt heutzutage als eine der größten Herausforderungen in der Softwaretechnik. AlsLösungsansatz wurde in den letzten Jahren vielfach das Paradigma einerserviceorientierten Architektur (SOA) diskutiert und insbesondere durchherstellerspezifische Technologien unterstützt. Dieser Beitrag widmet sich einer häufigvernachlässigten methodischen Herangehensweise und stellt mit Quasar Enterprise einenstrukturierten und in der Praxis erprobten Lösungsansatz vor. Insbesondere werdenkonkrete Verfahrensbausteine für eine durchgängige Methode vorgestellt; die einemArchitekten helfen; eine auf das zu unterstützende Geschäft ausgerichteteAnwendungslandschaft zu entwickeln und zu warten. Wesentliche Charakteristika von …,Informatik-Spektrum,2008,25
Using UML activities for system-on-chip design and synthesis,Tim Schattkowsky; Jan Hendrik Hausmann; Gregor Engels,Abstract The continuous advances in manufacturing Integrated Circuits (ICs) enablecomplete systems on a single chip. However; the design effort for such System-on-Chip(SoC) solutions is significant. The productivity of the design teams currently lags behind theadvances in manufacturing and this design productivity gap is still widening. One importantreason is the lack of abstraction in traditional Hardware Description Languages (HDLs) likeVHDL. The UML provides more abstract concepts for modeling behavior that can also beemployed for hardware design. In particular; the new UML Activity semantics fit nicely withthe inherent data flow in hardware systems. Therefore; we introduce a UML-based designapproach for complete SoC specification. Our approach enables generation of completesynthesizable HDL code. The equivalent hardware can be automatically generated using …,International Conference on Model Driven Engineering Languages and Systems,2006,24
Teaching UML is teaching software engineering is teaching abstraction,Gregor Engels; Jan Hendrik Hausmann; Marc Lohmann; Stefan Sauer,Abstract As the Unified Modeling Language (UML) has by now seen widespread andsuccessful use in the software industry and academia alike; it has also found its way intomany computer science curricula. An outstanding advantage of teaching UML is that itenables an illustration of many crucial concepts of software engineering; far beyond itsconcrete notation. Most important among these concepts is that of abstraction. We present acourse design which demonstrates the use of UML as a vehicle for teaching such coreconcepts of software engineering. Multimedia elements and tools help to efficiently conveythe course's message to the students.,International Conference on Model Driven Engineering Languages and Systems,2005,24
MuSofT–Multimedia in der SoftwareTechnik,Ernst-Erich Doberkat; Gregor Engels,Zusammenfassung. Im Rahmen des Förderprogramms Neue Medien in der Bildung fördertdas BMBF das Vorhaben „MuSofT–Multimedia in der Softwaretechnik”. Dieses Vorhabensoll in den nächsten drei Jahren multimediale Lehr-und Lerneinheiten in diesoftwaretechnische Lehre einführen und insbesondere drei Aspekte der Softwaretechnik-Ausbildung unterstützen. Im ersten Aspekt wird die objektorientierte Modellierung als eineFolge von Phasen betrachtet; innerhalb deren Software-Produkte schrittweise konstruiertwerden. Hierzu gehören insbesondere die Analysephase mit dem Erfassen vonBenutzeranforderungen und die anschließende Entwurfsphase mit dem Umsetzen dieserAnforderungen in technische Modelle. Ein zweiter Aspekt ist die Auseinandersetzung mitdem Entwicklungsprozess selbst und den dazugehörenden übergreifenden Tätigkeiten …,Informatik Forschung und Entwicklung,2002,24
Ein Vorgehensmodell für die Multimedia-Entwicklung mit Autorensystemen,Ralph Depke; Gregor Engels; Katharina Mehner; Stefan Sauer; Annika Wagner,Zusammenfassung. Multimedia-Anwendungen sind interaktive Softwaresysteme undverlangen als solche; mit softwaretechnischen Methoden erstellt zu werden. Sie werdenheutzutage in der Regel mit Hilfe von Autorensystemen entwickelt; die eine Ad-hoc-Entwicklung auf Implementierungsniveau unterstützen. Hierdurch und wegen des Fehlensetablierter Vorgehensmodelle für die Multimedia-Softwareentwicklung reduziert sich derMultimedia-Entwicklungsprozeß auf die Implementierungsphase. Dies führt zu den in derSoftwaretechnik bekannten Problemen wie mangelnder Konzeption und fehlenderDokumentation. Wir stellen in diesem Beitrag ein Vorgehensmodell für die Entwicklung vonMultimedia-Anwendungen vor; in dessen Mittelpunkt eine Analyse-und Entwurfsphase imHinblick auf eine Implementierung der Multimedia-Anwendung mit einem Autorensystem …,Informatik Forschung und Entwicklung,1999,24
A survey of fuzzy service matching approaches in the context of on-the-fly computing,Marie C Platenius; Markus von Detten; Steffen Becker; Wilhelm Schäfer; Gregor Engels,Abstract In the last decades; development turned from monolithic software products towardsmore flexible software components that can be provided on world-wide markets in form ofservices. Customers request such services or compositions of several services. However; inmany cases; discovering the best services to address a given request is a tough challengeand requires expressive; gradual matching results; considering different aspects of a servicedescription; eg; inputs/ouputs; protocols; or quality properties. Furthermore; in situations inwhich no service exactly satisfies the request; approximate matching which can deal with acertain amount of fuzziness becomes necessary. There is a wealth of service matchingapproaches; but it is not clear whether there is a comprehensive; fuzzy matching approachwhich addresses all these challenges. Although there are a few service matching surveys …,Proceedings of the 16th International ACM Sigsoft symposium on Component-based software engineering,2013,23
Transition to service-oriented enterprise architecture,Martin Assmann; Gregor Engels,Abstract Enterprise Architecture (EA) has undergone many changes since the IT has foundits way into enterprises. At the moment the Service-Oriented Architecture (SOA) is beinghyped but has also gained some importance. Implementing SOA can have manyimplications for an enterprise; depending on how visionary the implemented architecture is.This paper provides the description of an enterprise architecture that is fully-fledgedconcerning service-orientation and points out the architectural challenges that have to bemastered with future research results.,European Conference on Software Architecture,2008,23
Model-driven monitoring: An application of graph transformation for design by contract,Gregor Engels; Marc Lohmann; Stefan Sauer; Reiko Heckel,Abstract The model-driven development (MDD) approach for constructing software systemsadvocates a stepwise refinement and transformation process starting from high-level modelsto concrete program code. In contrast to numerous research efforts that try to generateexecutable function code from models; we propose a novel approach termed model-drivenmonitoring. Here; models are used to specify minimal requirements and are transformed intoassertions on the code level for monitoring hand-coded programs during execution. Weshow how well-understood results from the graph transformation community can bedeployed to support this model-driven monitoring approach. In particular; models in the formof visual contracts are defined by graph transitions with loose semantics; while the automatictransformation from models to JML assertions on the code level is defined by strict graph …,International Conference on Graph Transformation,2006,23
A pattern-driven development process for quality standard-conforming business process models,Alexander Forster; Gregor Engels; Tim Schattkowsky; Ragnhild Van Der Straeten,Quality management is a hot issue in most organisations and must be considered in thebusiness processes of the organisation. Existing approaches on business processmodelling provide neither explicit strategy to model quality requirements on businessprocesses nor do they provide explicit support for the construction of business processessatisfying such quality requirements. In this paper; we present a pattern-driven developmentprocess for modelling business processes with respect to given quality constraints. Weintroduce a visual pattern specification language based on UML Activity Diagrams thatenables the expression of quality constraints as patterns. These patterns can be used in aforward-engineering development process which supports the business process designer inconstructing business processes by applying patterns. Thereby; quality constraints can be …,Visual Languages and Human-Centric Computing; 2006. VL/HCC 2006. IEEE Symposium on,2006,23
Anforderungen an eine elearning-Plattform-Innovation und Integration,Ernst-Erich Doberkat; Gregor Engels; Jan Hendrik Hausmann; Marc Lohmann; Christof Veltmann,Die vorliegende Studie wurde vom Ministerium für Schule; Wissenschaft und Forschung(MSWF) in Auftrag gegeben und federführend vom LMR Dr. Ulrich Heinemann betreut. DasZiel der Studie ist es; die Hochschulen bei der Festlegung der Anforderungen an eLearning-Plattformen zu unterstützen. Mit dieser Studie wollen wir den Hochschulen und dem MSWFein Instrument an die Hand geben; gemeinsam mit Informatikern Fragen an dieKonstrukteure von eLearning-Plattformen zu stellen und Antworten auszuwerten. ImRahmen der Studie wurde untersucht; welche Lehr-; Lern-und Verwaltungsprozesse demLehrbetrieb an Hochschulen zugrunde liegen. Aus diesen Prozessen werden funktionaleund nicht-funktionale Anforderungen abgeleitet; die eine eLearning-Plattform erfüllen muss;um zur Unterstützung von Lehrenden und Lernenden an den Hochschulen eingesetzt …,*,2003,23
Structural and behavioural views on OMT-classes,Jürgen Ebert; Gregor Engels,Abstract Object-oriented specification languages provide means to specify the staticstructure; as well as the allowed dynamic behaviour of objects. Here; the dynamic behaviouris usually described by giving the methods and a state transition diagram which defines theallowed sequences of methods on objects of a certain class. Specialized classes aredefined using the inheritance relationship. In order to enable reusability while guaranteeingtype substitutability; subclass specifications have to be compatible with respect to static anddynamic aspects with their corresponding superclass specifications. Classes have toprovide a large shopping list of operations to satisfy the needs of all possible users. Theinterests of specific users are often restricted to a subset of operations and thus to arestricted behaviour. This paper describes a formalization of class descriptions given by …,*,1994,23
Pattern-based modeling and formalizing of business process quality constraints,Lial Khaluf; Christian Gerth; Gregor Engels,Abstract The quality of business processes can be checked by verifying their compliancewith specific quality constraints. These constraints represent a set of required temporal andlogical relationships between different steps of business processes. Quality constraints areusually formulated as informal texts; which makes them difficult to be verified; when businessprocesses become complex. One way to solve this problem is by automating the verificationof quality constraints on business processes by applying model checking. To apply modelchecking; both business processes and quality constraints have to be formalized. In thispaper; we define a new visual language for modeling quality constraints and we provide apattern-based translation for quality constraint models into Computation Tree Logicformulas.,International Conference on Advanced Information Systems Engineering,2011,22
Graph grammar engineering: A method used for the development of an integrated programming support environment,Gregor Engels; Wilhelm Schäfer,Abstract We introduce a method to specify the functional behaviour of software tools in anincremental and integrated software development environment. This specification method isbased on graph grammars. It is an adequate method to specify the behaviour of all softwaresystems using graphs as internal data structures. We show that a specification can bedeveloped systematically by which the adaptability of the environment is increased towardsmodification of tools or extension by new tools. Furthermore; guidelines for theimplementation can directly be derived from this specification.,International Joint Conference on Theory and Practice of Software Development,1985,22
A view-based approach to system modelling based on open graph transformation systems,Gregor Engels; Hartmut Ehrig; Reiko Heckel; Gabriele Taentzer,*,Ehrig et al,*,22
Software specification using graph grammars,Gregor Engels; Rupert Gall; Manfred Nagl; Wilhelm Schäfer,Abstract The following paper demonstrates that programmed sequential graph grammarscan be used in a systematic proceeding to specify the changes of high level intermediatedata structures arising in a programming support environment; in which all tools work in anincremental and syntax-driven mode. In this paper we lay stress upon the way to get thespecification rather than on the result of this process. Therefore; we give here someapproach to “specification engineering” using graph grammars. This approach is influencedby the syntactical definition of the underlying language for Programming in the Small; themodule concept etc. to be supported on one side but also by the idea of the user interface.,Computing,1983,21
Detection and resolution of conflicting change operations in version management of process models,Christian Gerth; Jochen M Küster; Markus Luckey; Gregor Engels,Abstract Version management of process models requires that different versions of processmodels are integrated by applying change operations. Conflict detection betweenindividually applied change operations and conflict resolution support are integral parts ofversion management. For conflict detection it is utterly important to compute a precise set ofconflicts; since the minimization of the number of detected conflicts also reduces theoverhead for merging different process model versions. As not every syntactic conflict leadsto a conflict when taking into account model semantics; a computation of conflicts solely onthe syntax leads to an unnecessary high number of conflicts. Moreover; even the set ofprecisely computed conflicts can be extensive and their resolution means a significantworkload for a user. As a consequence; adequate support is required that guides a user …,Software & Systems Modeling,2013,20
Test suite quality for model transformation chains,Eduard Bauer; Jochen M Küster; Gregor Engels,Abstract For testing model transformations or model transformation chains; a softwareengineer usually designs a test suite consisting of test cases where each test case consistsof one or several models. In order to ensure a high quality of such a test suite; coverageachieved by the test cases with regards to the system under test must be systematicallymeasured. Using coverage analysis and the resulting coverage information; missing testcases and redundant test cases can be identified and thereby the quality of the test suite canbe improved. As test cases consist of models; a coverage analysis approach must measurehow complete models cover the domains of the transformations in the chain and to whatdegree of completeness transformations are covered when executing the test suite. In thispaper; we present a coverage analysis approach for measuring test suite quality for …,International Conference on Modelling Techniques and Tools for Computer Performance Evaluation,2011,20
Towards test-driven semantics specification,Christian Soltenborn; Gregor Engels,Abstract Behavioral models are getting more and more important within the softwaredevelopment cycle. To get the most use out of them; their behavior should be definedformally. As a result; many approaches exist which aim at specifying formal semantics forbehavioral languages (eg; Dynamic Meta Modeling (DMM); Semantic Anchoring). Most ofthese approaches give rise to a formal semantics which can eg be used to check the qualityof a particular language instance; for instance using model checking techniques. However; ifthe semantics specification itself contains errors; it is more or less useless; since one cannotrely on the analysis results. Therefore; the language engineer must make sure that thesemantics he develops is of the highest quality possible. To help the language engineer toachieve that goal; we propose a test-driven semantics specification process: the …,International Conference on Model Driven Engineering Languages and Systems,2009,20
Service-oriented enterprise architectures: Evolution of concepts and methods,Gregor Engels; Martin Assmann,This paper depicts the evolution of enterprise architectures to their today often used service-oriented form and presents a state-of-the-art development process for this kind ofarchitecture. The development process covers both the development of businessarchitecture as well as the appropriate software architecture. While showing up a possibleform of further evolution of enterprise architectures; we identify the major challenges forfuture development methods of enterprise architectures.,Enterprise Distributed Object Computing Conference; 2008. EDOC'08. 12th International IEEE,2008,20
Special Issue on Graph Transformation Systems,G Engels; H Ehrig; G Rozenberg,*,Fundamenta Informaticae,1996,20
A review corpus for argumentation analysis,Henning Wachsmuth; Martin Trenkmann; Benno Stein; Gregor Engels; Tsvetomira Palakarska,Abstract The analysis of user reviews has become critical in research and industry; as userreviews increasingly impact the reputation of products and services. Many review textscomprise an involved argumentation with facts and opinions on different product features oraspects. Therefore; classifying sentiment polarity does not suffice to capture a review'simpact. We claim that an argumentation analysis is needed; including opinionsummarization; sentiment score prediction; and others. Since existing language resources todrive such research are missing; we have designed the ArguAna TripAdvisor corpus; whichcompiles 2;100 manually annotated hotel reviews balanced with respect to the reviews'sentiment scores. Each review text is segmented into facts; positive; and negative opinions;while all hotel aspects and amenities are marked. In this paper; we present the design …,International Conference on Intelligent Text Processing and Computational Linguistics,2014,19
Dynamic computation of change operations in version management of business process models,Jochen Malte Küster; Christian Gerth; Gregor Engels,Abstract Version management of business process models requires that changes can beresolved by applying change operations. In order to give a user maximal freedomconcerning the application order of change operations; position parameters of changeoperations must be computed dynamically during change resolution. In such an approach;change operations with computed position parameters must be applicable on the model anddependencies and conflicts of change operations must be taken into account becauseotherwise invalid models can be constructed. In this paper; we study the concept of partiallyspecified change operations where parameters are computed dynamically. We provide aformalization for partially specified change operations using graph transformation andprovide a concept for their applicability. Based on this; we study potential dependencies …,European Conference on Modelling Foundations and Applications,2010,19
Comprehensive architecture evaluation and management in large software-systems,Frank Salger; Marcel Bennicke; Gregor Engels; Claus Lewerentz,Abstract The architecture of a software system is both a success and a failure factor. Takingthe wrong architectural decisions may break a project; since such errors are often systematicand affect cross-cutting aspects of the system to be built. Moreover; software projects getmore and more challenging due to the rising complexity and dynamics of businessprocesses; large team size and distributed development. As the software architecture is thecommon platform for many project activities; it constitutes a critical success factor. Thus; acomprehensive method for evaluating a software architecture and propagating importantproperties of it downstream to code is needed. At sd&m; we designed a comprehensivearchitecture evaluation and management framework in order to satisfy these needs. In thispaper; we derive a list of requirements; such a framework should fulfill. We then present …,International Conference on the Quality of Software Architectures,2008,19
Revised use case point method-effort estimation in development projects for business applications,Stephan Frohnhoff; Gregor Engels,Abstract Rapid and precise effort estimation of software development projects is crucial in ITindustry. In a case study; the Use Case Point (UCP) method was applied to 15 commercialsoftware development projects. The estimated efforts were compared with the incurredproject efforts. We measured a standard deviation of 42%. This is not acceptable forindustrial usage. Therefore; we propose appropriate improvements of the Use Case Pointmethod leading to significantly higher estimation accuracy with only 20% standard deviation.The contribution of this paper is a detailed description of the improved Use Case Pointmethod.,11th International Conference on Quality Engineering in Software Technology (CONQUEST 2008),2008,19
Elementary actions on an extended entity-relationship database,Gregor Engels,Abstract Semantic data models have been widely studied for the conceptual specification ofdatabases. However; most of these data models are restricted to the description of the staticstructure of a database. They do not provide means to specify the dynamic behaviour of adatabase. This paper sketches a language for the specification of actions on databaseswhich have been specified by an E extended E ntity-R elationship (EER) schema. Theseactions are based on so-called elementary actions; which are automatically be derived fromthe EER schema. So; it can always be guaranteed that these schema dependent elementaryactions preserve all inherent integrity constraints. The semantics of the elementary actions isgiven in two steps: First; it is shown how the semantics of a database schema; ie; a currentdatabase state; can be represented by an attributed graph. Then; the semantics of …,International Workshop on Graph Grammars and Their Application to Computer Science,1990,19
Operational semantics of algebraic specifications with conditional equations,Udo Pletat; Gregor Engels; Hans-Dieter Ehrich,*,*,1981,18
Modeling review argumentation for robust sentiment analysis,Henning Wachsmuth; Martin Trenkmann; Benno Stein; Gregor Engels,Abstract Most text classification approaches model text at the lexical and syntactic level only;lacking domain robustness and explainability. In tasks like sentiment analysis; suchapproaches can result in limited effectiveness if the texts to be classified consist of a seriesof arguments. In this paper; we claim that even a shallow model of the argumentation of atext allows for an effective and more robust classification; while providing intuitiveexplanations of the classification results. Here; we apply this idea to the supervisedprediction of sentiment scores for reviews. We combine existing approaches from sentimentanalysis with novel features that compare the overall argumentation structure of the givenreview text to a learned set of common sentiment flow patterns. Our evaluation in twodomains demonstrates the benefit of modeling argumentation for text classification in …,Proceedings of COLING 2014; the 25th International Conference on Computational Linguistics: Technical Papers,2014,17
Knowledge transfer in global software development: leveraging acceptance test case specifications,Frank Salger; Gregor Engels,Abstract Effective knowledge transfer (KT) is always important in software developmentprojects; but crucial in global software development (GSD). Two challenges arise: First;reviews of the software requirements specification (SRS) are indispensable; but not alwayseffective. Second; using knowledge representations that support KT from customers todevelopers is paramount. However;'classical'SRS often don't support SRS comprehensionof all stakeholders. We address these two challenges with a new approach that exploits themulti-fold power of a acceptance test case specifications (ATC-Specs): 1) A specific two-stage test-based review technique is used. We argue that these two-stage reviews of ATC-Specs increase the quality of the ATC-Specs and the SRS. 2) Additionally to the SRS; ATC-Specs are delivered to the offshore team; bridging the mental models of different …,Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 2,2010,17
Graph transformation and visual modeling techniques,Reiko Heckel; Gregor Engels,*,BULLETIN-EUROPEAN ASSOCIATION FOR THEORETICAL COMPUTER SCIENCE,2000,17
What is an End User Software Engineer?,Steven Clarke,Abstract The group of people described as end user software engineers are a very large anddiverse group. For example; research scientists building simulations of complex processesare described as end user software engineers as are school teachers who createspreadsheets to track the progress of their students. Given the difference in background anddomains in which different end user software engineers work; I argue that it is important todistinguish between different categories of end user software engineers. Such distinctionswill enable us to determine which tools and techniques are appropriate for which types ofend user software engineers. Indeed; such distinctions will also make clear the differencesand similarities between end user software engineers and so called professional softwareengineers.,Dagstuhl Seminar Proceedings,2007,16
Integrating software engineering and user-centred design for multimedia software developments,Gregor Engels; Stefan Sauer; Bettina Neu,The object-oriented modeling of interactive multimedia applications in the OMMMAapproach is designed to enable multimedia software developers to create comprehensiveanalysis and design models of multimedia software. For development of highly usablemultimedia applications; this approach must be embedded in a more holistic developmentprocess that takes a user-oriented perspective on multimedia software development. In thispaper; we elaborate on the differences between user-centred design activities and object-oriented software design activities and outline their integration in a comprehensivedevelopment process.,Human Centric Computing Languages and Environments; 2003. Proceedings. 2003 IEEE Symposium on,2003,16
Process-oriented; consistent integration of software components,Ralph Depke; Gregor Engels; S Thone; M Langham; B Lutkemeier,The integration of software components becomes a more and more important issue insoftware engineering. Process-oriented approaches should provide automated informationprocesses. Therefore; the software components have to be integrated in a consistent way; ie;their export interfaces have to be respected by the importing components. Furthermore; thetype system of component interfaces has to support a tunable degree of freedom. Thisallows the insertion of components with interfaces of restricted but sufficient degree ofcompatibility. In this paper; we develop a concept for consistent and flexible integration ofcomponents. We present a process modeling language that combines UML and XML inorder to support consistent; flexible; and executable processes. Finally; we provide aformalization of the proposed component type system.,Computer Software and Applications Conference; 2002. COMPSAC 2002. Proceedings. 26th Annual International,2002,16
Process-centered software engineering environments: academic and industrial perspectives,Gregor Engels; Wilhelm Schäfer; Robert Balzer; Volker Gruhn,Abstract Software engineering environments have a history of about two decades. Earlyenvironments provided support for small fragments of the software process (usually focusingon programming-in-the small). Then there was a trend towards support for more completesoftware processes (from early phases like requirements analysis and design down totesting and configuration management). Ten years ago the notion of process-centeredsoftware engineering environments initiated a new field in software engineering: softwareprocess research. The key idea was to use a model of a software process as inputparameter for a software engineering environment. The environment was supposed to“behave” in accordance to the process model. Some aspects of this vision became true;others turned out to be of little practicability.,Proceedings of the 23rd international conference on Software engineering,2001,16
On the Integration of Roles in the UML,Ralph Depke; Gregor Engels; Jochen Malte Küster,Abstract. Conventionally; the state space and behavior of an object is determined when theobject is created. Attributes and methods are not allowed to be attached to or retracted froman object during its lifetime. In other words; it is not feasible for an object to change its typedynamically. Furthermore; it is not possible to define several different views on an objectallowing to exhibit a specific view to another object and hiding part of its features to aparticular object. As a consequence; the concept of an object does not reflect appropriatelyreal-world entities which may change their behavior and exhibit only part of their behaviortowards another real-world entity. The concept of a role has been considered as anappropriate step forward to solving these kinds of problems. In this paper; we examine theconcept of roles and elaborate a proposal for the integration of a clear concept of roles in …,Technical Report,2000,16
A framework for adding packages to graph transformation approaches,Giorgio Busatto; Gregor Engels; Katharina Mehner; Annika Wagner,Abstract Graphs are a commonly used formalism for modeling many different kinds of staticand dynamic data. In many applications; data modeling can be improved by usinghierarchically structured graphs. But; while there already exist hierarchical graph datamodels; no general-purpose hierarchical graph data model exists yet; which unifies commonfeatures of these domain-specific models. In this paper; we present graph packages; ageneral formalism for defining hierarchical graphs; supporting the most important featuresfound in known applications. Because of the dynamic nature of graphs; hierarchical graphtransformation is also an important issue to be dealt with when using hierarchical graphs.Motivated by the successful application of graph grammars to the specification of graphtransformations; we also introduce a framework that allows to specify hierarchical graph …,International Workshop on Theory and Application of Graph Transformations,1998,16
Specification of coordinated behaviour by SOCCA,Gregor Engels; Luuk Groenewegen,Abstract The software process situations to be modelled usually exhibit a great diversity andcomplexity; as data; local behaviour as well as coordination of behaviour of human and non-human agents have to be modelled on a fine-grained level. Unfortunately no existingspecification formalism seems to be sufficiently suitable. To this aim the paper proposes aspecification formalism; which combines the best fitting (parts of) different formalisms; inorder to attain a satisfactory specification. The combination discussed in this paper isSOCCA (Specifications Of Coordinated and Cooperative Activities); composed of ExtendedEntity-Relationship (EER) based object-oriented modelling for the data perspective; statetransition diagrams for the local behaviour perspective; and PARADIGM for the coordinationof behaviour perspective.,European Workshop on Software Process Technology,1994,16
Towards a module concept for graph transformation systems,H Ehrig; G Engels,*,Techn. Report Leiden University,1993,16
CADDY: Computer-aided design of non-standard databases,Gregor Engels; Uwe Hohenstein; Klaus Hülsmann; Perdita Löhr-Richter; Hans-Dieter Ehrich,*,Proc. of the 1st Int. Conf. on System Development Environments & Factories,1989,16
A UML-based Rich Service Description Language for Automatic Service Discovery of Heterogeneous Service Partners.,Zille Huma; Christian Gerth; Gregor Engels; Oliver Juwig,Abstract. Service-oriented computing (SOC) emerges as a promising trend solving manyissues in distributed software development. Following the essence of SOC; servicedescriptions are defined by the service partners based on current standards; eg; WSDL [15].However; these standards are mostly structural and do not provide any behavioraldescription; which may lead to inaccurate service discovery results. There is a requirementfor a rich service description language for service partners that encompasses the structuralas well as behavioral information in the service description. Furthermore; service discoverybased on an automatic matching of these comprehensive service descriptions is a complextask; which is further complicated through the heterogeneity of the service partners' domainsin terms of different underlying ontologies. In this paper; we propose a rich service …,CAiSE Forum,2012,15
Quasar Enterprise: Anwendungslandschaften serviceorientiert gestalten. dpunkt,Gregor Engels; Andreas Hess; Bernhard Humm; Oliver Juwig; Marc Lohmann; J Richter; Markus Voß; Johannes Willkomm,*,Verl.; Heidelberg,2008,15
Assuring consistency of business process models and web services using visual contracts,Gregor Engels; Baris Güldali; Christian Soltenborn; Heike Wehrheim,Abstract Business process models describe workflows by a set of actions together with theirordering. When implementing business processes within a service-oriented architecture;these actions are mapped to existing IT (web) services; which are then to be executed in theorder specified by the business process. However; the execution of a web service canrequire certain preconditions to be fulfilled. These might not hold at the time of executionspecified in the business process model: it can be inconsistent with the web servicespecification. In this paper we propose a technique for checking consistency of processmodels with web service specifications. To this end; both are equipped with a formalsemantics (in terms of graph transformations). We show how to use an existing modelchecker for graph transformation systems to carry out the consistency check.,International Symposium on Applications of Graph Transformations with Industrial Relevance,2007,15
Syntax and semantics of hybrid database languages,Marc Andries; Gregor Engels,Abstract We present the hybrid query language HQL/EER for an Extended Entity-Relationship model. As its main characteristic; this language allows a user to freely mixgraphical and textual formulation of a query. We show how syntax and semantics of thishybrid language are formally defined by means of a slightly extended version of PROGRES;a specification formalism based on programmed and attributed graph rewriting systems.,*,1994,15
Vandalism detection in wikidata,Stefan Heindorf; Martin Potthast; Benno Stein; Gregor Engels,Abstract Wikidata is the new; large-scale knowledge base of the Wikimedia Foundation. Itsknowledge is increasingly used within Wikipedia itself and various other kinds of informationsystems; imposing high demands on its integrity. Wikidata can be edited by anyone and;unfortunately; it frequently gets vandalized; exposing all information systems using it to therisk of spreading vandalized and falsified information. In this paper; we present a newmachine learning-based approach to detect vandalism in Wikidata. We propose a set of 47features that exploit both content and context information; and we report on 4 classifiers ofincreasing effectiveness tailored to this learning task. Our approach is evaluated on therecently published Wikidata Vandalism Corpus WDVC-2015 and it achieves an area undercurve value of the receiver operating characteristic; ROC-AUC; of 0.991. It significantly …,Proceedings of the 25th ACM International on Conference on Information and Knowledge Management,2016,14
Knowledge transfer in global software development-leveraging ontologies; tools and assessments,Frank Salger; Stefan Sauer; Gregor Engels; Andrea Baumann,To be successful with global software development (GSD); development knowledge needsto be shared among the developers and stakeholders; and the quality of the exchangedinformation must be assured. Therefore; mature processes; methods and tools have to be inplace. If a unified and integrated solution does not exist; this impedes the exchange ofknowledge (and the migration of people between projects). In GSD; such a diversity canlead to new problems: offshore development teams have to repeatedly re-adjust to methodvariants used by the respective business units. This can lead to misinterpretation ofinformation and risks for project success. We report on re-aligning the varying softwareengineering methods and unifying the methodology throughout Capgemini sd&m. We alsostandardized quality assurance procedures and tightly integrated them with the …,Global Software Engineering (ICGSE); 2010 5th IEEE International Conference on,2010,14
From design models to test models by means of test ideas,Michael Mlynarski; Baris Güldali; Melanie Späth; Gregor Engels,Abstract Model-Based Testing is slowly becoming the next level of software testing. Itpromises higher quality; better coverage and efficient change management. MBT shows twomain problems of modeling the test behavior. While modeling test cases test designersrewrite most of the system specification. Further; the number of test cases generated bymodern tools is often not feasible. In practice; both problems are not solved. Assuming thatthe functional design is based on models; we show how to use them for software testing.With so-called test ideas; we propose a way to manually select and automatically transformthe relevant parts of the design model into a basic test model that can be used for test casegeneration. We give an example and discuss the potentials for tool support.,Proceedings of the 6th International Workshop on Model-Driven Engineering; Verification and Validation,2009,14
Dynamic models and behavioural views,Jürgen Ebert; Gregor Engels,*,*,1993,14
CADDY: a highly integrated environment to support conceptual database design,Gregor Engels; Perdita Lohr-Richter,The authors describe the development of the computer-aided software engineering (CASE)environment CADDY (computer-aided design of nontraditional databases); which offers anintegrated set of tools for specifying; analyzing; and prototyping a database application on aconceptual level. The development process consisted of a sequence of development steps;where each step corresponded to one of five main tasks. These five tasks are described.Remaining questions about the CADDY environment are discussed.,Computer-Aided Software Engineering; 1992. Proceedings.; Fifth International Workshop on,1992,14
Towards an automatic service discovery for UML-based rich service descriptions,Zille Huma; Christian Gerth; Gregor Engels; Oliver Juwig,Abstract Service-oriented computing (SOC) promises to solve many issues in the area ofdistributed software development; eg the realization of the loose coupling pattern in practicethrough service discovery and invocation. For this purpose; service descriptions mustcomprise structural as well as behavioral information of the services otherwise an accurateservice discovery is not possible. We addressed this issue in our previous paper andproposed a UML-based rich service description language (RSDL) providing comprehensivenotations to specify service requests and offers. However; the automatic matching of servicerequests and offers specified in a RSDL for the purpose of service discovery is a complextask; due to multifaceted heterogeneity of the service partners. This heterogeneity includesthe use of different underlying ontologies or different levels of granularity in the …,International Conference on Model Driven Engineering Languages and Systems,2012,13
ClassSheets-model-based; object-oriented design of spreadsheet applications.,Jan-Christopher Bals; Fabian Christ; Gregor Engels; Martin Erwig,Using spreadsheets is the preferred method to calculate; display or store anything that fits intoa table-like structure. They are often used by end users to create applications. But they haveone critical drawback - they are very error-prone … To reduce the error-proneness; we purposea new way of object-oriented modeling of spreadsheets prior to using them. These spreadsheetmodels; termed ClassSheets; are used to generate concrete spreadsheets on the instancelevel … By this approach sources of errors are reduced and spreadsheet applications are easierto understand … Spreadsheets are widely used in all kinds of businesses applications[EE05]. Using spreadsheet is the preferred method to calculate; display or store anything thatfits into a table-like structure. The application area of spreadsheets seems to be unlimited. Spreadsheetsare flexible to use; easy to create; and available on almost every PC on which an office …,Journal of Object Technology,2007,13
Flexible interconnection of graph transformation modules,Gregor Engels; Reiko Heckel; Alexey Cherchago,Abstract Modularization is a well-known concept to structure software systems as well astheir specifications. Modules are equipped with export and import interfaces and thus can beconnected with other modules requesting or providing certain features. In this paper; westudy modules the interfaces of which consist of behavioral specifications given by typedgraph transformation systems. We introduce a framework for classifying and systematicallydefining relations between typed graph transformation systems. The framework comprises anumber of standard ingredients; like homomorphisms between type graphs and mappingsbetween sets of graph transformation rules. The framework is applied to develop a novelconcept of substitution morphism by separating preconditions and effects in the specificationof rules. This substitution morphism is suited to define the semantic relation between …,*,2005,13
Graph Transformations,Hartmut Ehrig; Gregor Engels; Francesco Parisi-Presicce; Grzegorz Rozenberg,ICGT 2002 was the first International Conference on Graph Transformation following aseries of six international workshops on graph grammars with applications in computerscience; held in Bad Honnef (1978); Osnabrück (1982); Warrenton (1986); Bremen (1990);Williamsburg (1994); and Paderborn (1998). ICGT 2002 was held in Barcelona (Spain);October 7–12; 2002 under the auspices of the European Association of TheoreticalComputer Science (EATCS); the European Association of Software Science and Technology(EASST); and the IFIP Working Group 1.3; Foundations of Systems Specification. The scopeof the conference concerned graphical structures of various kinds (like graphs; diagrams;visual sentences and others) that are useful to describe complex structures and systems in adirect and intuitive way. These structures are often augmented by formalisms which add …,Second International Conference; ICGT,2004,13
Graphen als zentrale Datenstrukturen in einer Software-Entwicklungsumgebung,Gregor Engels,*,Fortschritt-Ber. der VDI-Ztschr.; R10,1986,13
Towards vandalism detection in knowledge bases: Corpus construction and analysis,Stefan Heindorf; Martin Potthast; Benno Stein; Gregor Engels,Abstract We report on the construction of the Wikidata Vandalism Corpus WDVC-2015; thefirst corpus for vandalism in knowledge bases. Our corpus is based on the entire revisionhistory of Wikidata; the knowledge base underlying Wikipedia. Among Wikidata's 24 millionmanual revisions; we have identified more than 100;000 cases of vandalism. An in-depthcorpus analysis lays the groundwork for research and development on automatic vandalismdetection in public knowledge bases. Our analysis shows that 58% of the vandalismrevisions can be found in the textual portions of Wikidata; and the remainder in structuralcontent; eg; subject-predicate-object triples. Moreover; we find that some vandals also targetWikidata content whose manipulation may impact content displayed on Wikipedia; revealingpotential vulnerabilities. Given today's importance of knowledge bases for information …,Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval,2015,12
Constructing efficient information extraction pipelines,Henning Wachsmuth; Benno Stein; Gregor Engels,Abstract Information Extraction (IE) pipelines analyze text through several stages. Thepipeline's algorithms determine both its effectiveness and its run-time efficiency. In real-world tasks; however; IE pipelines often fail acceptable run-times because they analyze toomuch task-irrelevant text. This raises two interesting questions: 1) How much" efficiencypotential" depends on the scheduling of a pipeline's algorithms? 2) Is it possible to devise areliable method to construct efficient IE pipelines? Both questions are addressed in thispaper. In particular; we show how to optimize the run-time efficiency of IE pipelines under agiven set of algorithms. We evaluate pipelines for three algorithm sets on an industriallyrelevant task: the extraction of market forecasts from news articles. Using a system-independent measure; we demonstrate that efficiency gains of up to one order of …,Proceedings of the 20th ACM international conference on Information and knowledge management,2011,12
An integrated quality assurance framework for specifying business information systems,Frank Salger; Stefan Sauer; Gregor Engels,*,Proc. of CAiSE Forum,2009,12
MuSofT–multimedia in der softwaretechnik,Ernst-Erich Doberkat; Corina Kopka; Gregor Engels,Zusammenfassung Im BMBF-Verbundprojekt MuSofT wurden multimediale Lehrmaterialienfür die Lehre der Softwaretechnik erarbeitet; die verschiedene Aspekte der Softwaretechnik-Ausbildung unterstützen. Aufgrund inhaltlicher Überlegungen des abzudeckendenThemenspektrums wurden Teilprojekte definiert; die zu den betrachteten ThemengebietenMaterialien entwickeln und in einem Portal zur weiteren Verwendung in der Lehre derSoftwaretechnik zur Verfügung stellen. In diesem Papier stellen wir die Teilprojekte vonMuSofT und deren Themenschwerpunkte vor und diskutieren einige Maßnahmen zurSicherung der Nachhaltigkeit. Wir legen den Schwerpunkt der Diskussion dabei auf diedidaktischen Grundannahmen; die inhaltliche und stilistische Abstimmung zwischen denMaterialien; die gleichförmige Beschreibung der Materialien durch Metadaten; die eine …,Softwaretechnik-Trends,2004,12
Consistency management within model-based object-oriented development of components,Jochen M Küster; Gregor Engels,Abstract The Unified Modeling Language (UML) favors the construction of modelscomposed of several submodels; modeling the system components under development atdifferent levels of abstraction and from different viewpoints. Currently; consistency of object-oriented models expressed in the UML is not defined in the UML language specification.This allows the construction of inconsistent UML models. Defining consistency of UMLmodels is complicated by the fact that UML models are applied differently; depending on theapplication domain and development process. As a consequence; a form of consistencymanagement is required that allows the software engineer to define; establish and manageconsistency; tailored specifically to the development context. In recent years; we havedeveloped a general methodology and tool support to overcome this problem. The …,International Symposium on Formal Methods for Components and Objects,2003,12
Relating functional requirements and software architecture: Separation and consistency of concerns,Reiko Heckel; Gregor Engels,Abstract In the early stages of most software processes; functional and non-functional (suchas architectural; performance; or security) requirements are expressed separately in differentsub-models. Later these requirements have to be integrated into one overall system design.The integration raises consistency issues between different sub-models; which have to beresolved in the process.,Journal of Software: Evolution and Process,2002,12
12 Coordinated Collaboration of Objects,G Engels; Luuk Groenewegen; Gerti Kappel,The computer has evolved from the purpose of pure number cranching to supporting thecoordinated collaboration between human and/or artificial beings to reach a certain goal.Objectoriented modelling techniques based on the central notions of object interaction andobject collaboration should provide the semantic expressivity to model such coordinatedcollaboration. Based on an investigation of the object-oriented modelling standard UML;however; the weaknesses of the existing modelling concepts are revealed. SOCCA ispresented instead; which is an object-oriented specification language supporting thearbitrarily fine-grained synchronisation of processes; ie; active objects. Based on severalexamples of the EU rental car system the expressive power of SOCCA is discussed andcompared to relatd work.,Advances in Object-Oriented Data Modeling,2000,12
A highly integrated tool set for program development support,Gregor Engels; Thorsten Janning; Wilhelm Schäfer,Abstract This paper describes the design of the integrated user interface of the softwaredevelopment environment IPSEN (Integrated Programming Support Environment). Weexplain the characteristic features of the IPSEN user interface; namely the structured layoutof the screen; the command-driven tool activation; and especially the highly integrated useof the IPSEN tool set. We demonstrate those features by taking a sample set of tools of theIPSEN environment. That tool set supports all the programming-in-the-small activities withinIPSEN. Finally; we sketch the realization of two prototypes running on an IBM-AT and a netof SUN workstations.,Proceedings of the 1988 ACM SIGSMALL/PC symposium on ACTES,1988,12
Software specification by graph grammars,Manfred Nagl; Gregor Engels; Rupert Gall; Wilhelm Schäfer,Abstract The following paper demonstrates that programmed sequential graph grammarscan be used in a systematic proceeding to specify the changes of high level intermediatedata structures arising in a programming support environment; in which all tools work in anincremental and syntax-driven mode. In this paper we lay stress upon the way to get thespecification rather than on the result of this process. Therefore; we give here someapproach to specification engineering using graph grammars. This approach is influencedby the syntactical definition of the underlying programming language or module concept etc.to be supported but also by the idea of the user interface.,International Workshop on Graph Grammars and Their Application to Computer Science,1982,12
Assembly-Based Method Engineering with Method Patterns.,Masud Fazal-Baqaie; Markus Luckey; Gregor Engels,Page 1. Assembly-based Method Engineering with Method Patterns Masud Fazal-Baqaie;Markus Luckey; Gregor Engels 27.02.2013 Page 2. development methods? Assembly-basedMethod Engineering with Method Patterns - Fazal-Baqaie - 27.02.2013 2 Many StakeholdersLarge; distributed System Novelty to stakeholders Some requirements of an ePassport project:Method should fit / be customized to the project: How to engineer customized methods?How to minimize the engineering effort? Continuous acquirer feedback Formal tenderAcquirer / supplier roles Requirements Specified Request for Proposal Released OfferSubmitted Contract Awarded Acceptance Completed System Specified System DesignedDetail Design Completed System Elements Realized System Integrated Delivery ConductedPage 3. Method engineering approaches …,Software Engineering (Workshops),2013,11
Model-based system testing using visual contracts,Baris Güldali; Michael Mlynarski; Andreas Wübbeke; Gregor Engels,In system testing the system under test (SUT) is tested against high-level requirementswhich are captured at early phases of the development process. Logical test casesdeveloped from these requirements must be translated to executable test cases byaugmenting them with implementation details. If manually done these activities are error-prone and tedious. In this paper we introduce a model-based approach for system testingwhere we generate first logical test cases from use case diagrams which are partiallyformalized by visual contracts; and then we transform these to executable test cases usingmodel transformation. We derive model transformation rules from the design decisions ofdevelopers.,Software Engineering and Advanced Applications; 2009. SEAA'09. 35th Euromicro Conference on,2009,11
Theory and Application of Graph Transformations: 6th International Workshop; TAGT'98 Paderborn; Germany; November 16-20; 1998 Selected Papers,Hartmut Ehrig; Gregor Engels; Hans-Jörg Kreowski; Grzegorz Rozenberg,Theareaofgraphtransformationoriginatedint… “graph grammars”–the main motivation camefrom practical considerations concerning pattern recognition and compiler construction.Since then; the list of areas which have interacted with the development of graphtransformation has grown impressively. The areas include: software speci? cation anddevelopment; VLSI layout schemes; database design; modeling of concurrent systems; m-sively parallel computer architectures; logic programming; computer animation;developmentalbiology; musiccomposition; distributedsystems; speci? cationl-guages;software and web engineering; and visual languages. As a matter of fact; graphtransformation is now accepted as a fundamental computation paradigm where computationincludes speci? cation; programming; and implementation. Over the last three decades …,*,2004,11
Towards team-automata-driven object-oriented collaborative work,Gregor Engels; Luuk Groenewegen,Abstract The paper studies and compares two different approaches to model communicationand cooperation. The approaches are team automata; a well-defined variant ofcommunicating automata; and statecharts; heavily used in object-oriented modellingmethods. The comparison yields interesting insights for modelling communication andcooperation. In particular; the differences between action-based; synchronous and state-based; asynchronous communication are elucidated.,*,2002,11
OMMMA: An Object-Oriented Approach for Modeling Multimedia Information Systems.,Stefan Sauer; Gregor Engels,Abstract We present an object-oriented approach based on the Unified Modeling Language(UML) for modeling structure and dynamic behavior of a multimedia information system. Weextend the Model-View-Controller paradigm for interactive systems towards multimedia andshow that aspects of the graphical user interface and time-dynamic behavior ought to beintegral parts of a model. This is done in the intention of achieving a coherent model of amultimedia information system. As a result; we present OMMMA-L; a UML-based languagefor the Object-Oriented Modeling of MultiMedia Applications. OMMMAL deploys class andstate diagrams of UML as well as an extended sequence diagram and a newly introducedpresentation diagram to adequately specify the visual presentation within a multimediainformation system. In addition to explaining the different diagram types; we also define …,Multimedia Information Systems,1999,11
How to represent a visual specification; Visual language theory,Marc Andries; Gregor Engels; Jan Rekers,*,*,1998,11
Specification of coordinated behaviour in the Software Development Process,Gregor Engels; Luuk PJ Groenewegen,A rapidly growing number of papers addresses the topic of software process modeling (seeeg [5];[1]). Due to the fact that this topic is still a very young discipline within softwareengineering; many of these papers pay much attention to defining the requirements tosoftware process modelling as well as to describing and discussing the basic concepts andnotions in this field. Examples of those discussed concepts and notions are: processes;process steps; process evolution; agents; products; documents; resources; tasks; activities;roles; actors; events; triggers; constraints; rules; cooperation; communication; interaction;coordination (see eg [2];[6];[4]). In specifying the software process by means of a softwareprocess model; these very notions have to be incorporated. But; the number of these notionsis quite impressive; and; moreover; some of these notions seem to be strongly related …,European Workshop on Software Process Technology,1992,11
Systematic evolution of model-based spreadsheet applications,Markus Luckey; Martin Erwig; Gregor Engels,Abstract Using spreadsheets is the preferred method to calculate; display or store anythingthat fits into a table-like structure. They are often used by end users to create applications;although they have one critical drawback—spreadsheets are very error-prone. Recentresearch has developed methods to reduce this error-proneness by introducing a new wayof object-oriented modeling of spreadsheets before using them. These spreadsheet models;termed ClassSheets; are used to generate concrete spreadsheets on the instance level. Bythis approach sources of errors are reduced and spreadsheet applications become easier tounderstand. As usual for almost every other application; requirements on spreadsheetschange due to the changing environment. Thus; the problem of evolution of spreadsheetsarises. The update and evolution of spreadsheets is the uttermost source of errors that …,Journal of Visual Languages & Computing,2012,10
From Trees to Graphs: Defining the Semantics of Diagram Languages with Graph Transformation.,Gregor Engels; Reiko Heckel,Abstract In order to define the semantics of diagram languages; new techniques may bedeveloped following the established approaches of denotational; operational; or algebraicsemantics of programming languages. Due to the multi-dimensional nature of diagrams (asopposed to the linear structure programs); these new approaches should be based ongraphs (rather than trees or terms) and graph transformation could provide the underlyingtechnology.,ICALP Satellite Workshops,2000,10
Industrial maintenance modelled in SOCCA: An experience report,Tineke de Bunje; Gregor Engels; Luuk Groenewegen; Aart Matsinger; Mark Rijnbeek,A large industrial process; software maintenance; has been modelled by using the processmodelling language SOCCA. The paper reports about the experiences with this trial. Inparticular; feasibility; expressiveness; quality and the overall benefits of a formal SOCCAmodel are discussed and compared to the formerly existing informal process description. Inorder to illustrate the results; a well chosen process model fragment from the larger model isoutlined in detail. It addresses in particular the human-intensive cooperation within theprocess and shows the seamless combination of technical components and human agentcomponents in the SOCCA model. The main conclusions from this trial are that formalSOCCA models are suited to model realistic industrial processes and that due to an intrinsicmodular structure of a SOCCA model; even huge models remain reasonably readable …,Software Process; 1996. Proceedings.; Fourth International Conference on the,1996,10
Object-Oriented System Development: Will the New Approach Solve Old Problems?,Gregor Engels; Gerti Kappel,Abstract Object-oriented system development is wideley recognized as improvingproductivity and reducing system maintenance costs. However; existing approaches havenot suciently addressed the following three questions which are equally important to usersand researchers. Firstly; what are the bene ts of object-oriented system developmentcompared to traditional approaches? Secondly; what are the essential features of anobjectoriented life cycle model to ful ll the bene ts of object-oriented development? Andthirdly; what are the pitfalls of object-oriented development and how to cope with them? Thepaper investigates answers to all three questions in concert.,IFIP Congress (3),1994,10
Graphs as Central Data Structures in a Software Development Environment,G Engels,*,Diss. U. Osnabruck. VDI Fortschnttsb,1986,10
Handling errors and exceptions in the algebraic specification of data types,Gregor Engels; Udo Pletat; Hans-Dieter Ehrich,*,*,1981,10
Model-based testing: achievements and future challenges,Michael Mlynarski; Baris Güldali; Stephan Weißleder; Gregor Engels,Abstract Software systems are part of our everyday life and they become more complex dayby day. The ever-growing complexity of software and high quality requirements pose toughchallenges to quality assurance. The quality of a software system can be measured bysoftware testing. However; if manually done; testing is a time-consuming and error-pronetask. Especially test case design and test execution are the most cost-intensive activities intesting. In the previous 20 years; many automation tools have been introduced forautomating test execution by using test scripts. However; the effort for creating andmaintaining test scripts remains. Model-based testing (MBT) aims at improving this part bysystematizing and automating the test case design. Thereby; test cases or automatable testscripts can be generated systematically from test models. MBT is already known for …,*,2012,9
TORC: test plan optimization by requirements clustering,Baris Güldali; Holger Funke; Stefan Sauer; Gregor Engels,Abstract Acceptance testing is a time-consuming task for complex software systems thathave to fulfill a large number of requirements. To reduce this effort; we have developed awidely automated method for deriving test plans from requirements that are expressed innatural language. It consists of three stages: annotation; clustering; and test planspecification. The general idea is to exploit redundancies and implicit relationships inrequirements specifications. Multi-viewpoint techniques based on RM-ODP (ReferenceModel for Open Distributed Processing) are employed for specifying the requirements. Wethen use linguistic analysis techniques; requirements clustering algorithms; and pattern-based requirements collection to reduce the total effort of testing against the requirementsspecification. In particular; we use linguistic analysis for extracting and annotating the …,Software Quality Journal,2011,9
Extending DMM behavior specifications for visual execution and debugging,Nils Bandener; Christian Soltenborn; Gregor Engels,Abstract Dynamic Meta Modeling (DMM) is a visual semantics specification techniquetargeted at behavioral languages equipped with a metamodel defining the language'sabstract syntax. Given a model and a DMM specification; a transition system can becomputed which represents the semantics of that model. It allows for the investigation of themodel's behavior; eg for the sake of understanding the model's semantics or to verify thatcertain requirements are fulfilled. However; due to a number of reasons such as tooling andthe size of the resulting transition systems; the manual inspection of the resulting transitionsystem is cumbersome. One solution would be a visualization of the model's behavior usinganimated concrete syntax. In this paper; we show how we have enhanced DMM such thatvisual execution and debugging can be added to a language in a simple manner.,International Conference on Software Language Engineering,2010,9
Design for Future–Legacy-Probleme von morgen vermeidbar?,Gregor Engels; Michael Goedicke; Ursula Goltz; Andreas Rausch; Ralf Reussner,Eine weit verbreitete Annahme ist; dass Software nicht altert; da Software als immateriellesGut keinerlei Verschleißerscheinungen unterliegt. Diese Annahme ist aber falsch–Softwarealtert. Die Umgebung; in der Software eingesetzt wird; verändert sich kontinuierlich und diedazugehörige Hardware und die Infrastruktur verändern sich. Wird die Software nichtebenfalls kontinuierlich weiterentwickelt; so altert sie rasch relativ zu ihrer Umgebung.Dieses Problem ist vor allem im Bereich der großen betrieblichen Informationssysteme unterdem Oberbegriff Legacy bekannt. Es sind große Systeme im industriellen Einsatz; teilweisenoch in FORTRAN oder COBOL geschrieben; die trotz suboptimaler Funktionalität undQualität weiter unangepasst im Einsatz bleiben; da eine Optimierung an der Komplexität desSystems und dem Aufwand für eine Einarbeitung durch die heutigen Entwickler scheitert …,Informatik-Spektrum,2009,9
Survey of ontology mapping techniques,Savithri Godugula; Gregor Engels,Abstract: Ontology mapping is a technique that has become quite useful for matchingsemantics between ontologies or schemas that were designed independently to each other.When ontologies are mapped; applications can query data from a multitude of data sourcestransparently; applications can treat each data source the same irrespective of their differingunderlying representations. Ontology mapping is done by analyzing various properties ofontologies; such as syntax; semantics and structure; in order to deduce alternate semanticsthat may apply to other ontologies; and therefore create a mapping. There has been muchresearch in this area; and despite this work; ontology mapping techniques are still not“perfect” and there is room for improvement. In this report; five recent ontolog mappingtechniques are examined in detail and discussed.,Software Quality and Assurance,2008,9
Model-driven monitoring: Generating assertions from visual contracts,Marc Lohmann; Gregor Engels; Stefan Sauer,The Visual Contract Workbench is a tool that supports model-driven development ofsoftware systems by lifting the Design by Contract idea; which is usually used at the codelevel; to the model level. It uses visual contracts for graphically specifying the pre-and post-conditions of an operation. Java classes with JML (Java modeling language) assertions aregenerated from visual contracts to facilitate automatic monitoring of the correctness of theprogrammers' implementation,Automated Software Engineering; 2006. ASE'06. 21st IEEE/ACM International Conference on,2006,9
IMMOS-Eine integrierte Methodik zur modellbasierten Steuergeräteentwicklung,H Schlingloff; C Sühl; H Dörr; M Conrad; J Stroop; S Sadeghipour; M Kühl; F Rammig; G Engels,Kurzfassung Der immer stärkere Einsatz elektronischer Steuergeräte im Automobil stelltimmer größere Herausforderungen an den zugehörigen Systementwicklungsprozess. Beider modellbasierten Entwicklung wird aus dem ursprünglichen Lasten-/Pflichtenheft miteiner systematischen Vorgehensweise ein Modell erzeugt; welches zentraler Angelpunktaller nachfolgenden Entwicklungsschritte ist. Dadurch werden neue Methoden zurVerwaltung und Konsistenzprüfung von Anforderungen notwendig. Einer der wesentlichenVorteile der modellbasierten Entwicklung ist der Effizienzgewinn durch eine automatischeCodegenerierung; welche neue Verfahren der Codeabsicherung erforderlich macht. Diemodellbasierte Entwicklung ermöglicht und erfordert zugleich neue Herangehensweisen anden Test. Grundlage hierfür ist die Erstellung eines Informationsmodells; welches alle …,Proceedings; BMBF-Statusseminar „Software Engineering,2006,9
Use Case Points in der industriellen Praxis,Stephan Frohnhoff; Volker Jung; Gregor Engels,Abstract: Fast and precise effort estimation of software development projects is crucial in ITindustry. Within a case study the Use Case Point method has been applied to 10 commercialsoftware development projects and compared with the incurred project efforts after projectclose. The method is ready for use in commercial projects. We propose appropriateimprovements of the Use Case Point method leading to significantly higher estimationaccuracy.,Applied Software Measurement-Proceedings of the International Workshop on Software Metrics and DASMA Software Metrik Kongress,2006,9
A hybrid interpreter in a software development environment,Gregor Engels; Andreas Schürr,Abstract This paper describes the realization of an execution tool for Modula-2 moduleswhich is part of an integrated tool set in a software development environment termed IPSEN(Incremental Programming Support Environment). In this environment; all softwaredocuments; eg Modula-2 modules; are manipulated by syntax-directed editors and arerepresented internally by attributed graphs. The execution of Modula-2 modules is done bytwo cooperating interpreters. The first one is a graph interpreter which traverses the internalgraph from statement to statement. These statements are translated into a low-level; moreefficiently executable object code and interpreted by a second interpreter. This concept of ahybrid interpreter allows the realization of an execution tool which offers a lot of runtimesupport features to the user.,European Software Engineering Conference,1987,9
Market-optimized service specification and matching,Svetlana Arifulina; Marie Christin Platenius; Steffen Becker; Christian Gerth; Gregor Engels; Wilhelm Schäfer,Abstract Various approaches in service engineering are based on service markets wherebrokers use service matching in order to perform service discovery. For matching; a brokertranslates the specifications of providers' services and requesters' requirements into her ownspecification language; in order to check their compliance using a matcher. The broker'ssuccess depends on the configuration of her language and its matcher because theyinfluence important properties like the effort for providers and requesters to create suitablespecifications as well as accuracy and runtime of matching. However; neither existingservice specification languages; nor existing matching approaches are optimized in suchway. Our approach automatically provides brokers with an optimal configuration of alanguage and its matcher to improve her success in a given market with respect to her …,International Conference on Service-Oriented Computing,2014,8
Normalizing heterogeneous service description models with generated QVT transformations,Simon Schwichtenberg; Christian Gerth; Zille Huma; Gregor Engels,Abstract Service-Oriented Architectures (SOAs) enable the reuse and substitution ofsoftware services to develop highly flexible software systems. To benefit from the growingplethora of available services; sophisticated service discovery approaches are needed thatbring service requests and offers together. Such approaches rely on rich servicedescriptions; which specify also the behavior of provided/requested services; eg; by pre-andpostconditions of operations. As a base for the specification a data schema is used; whichspecifies the used data types and their relations. However; data schemas are typicallyheterogeneous wrt. their structure and terminology; since they are created individually intheir diverse application contexts. As a consequence the behavioral models that are typedover the heterogeneous data schemas; cannot be compared directly. In this paper; we …,European Conference on Modelling Foundations and Applications,2014,8
Towards specification patterns for global software development projects-experiences from the industry,Frank Salger; Jochen Englert; Gregor Engels,The quality of a software requirements specification (SRS) is critical to project success;especially in global software development (GSD). Devising a high quality SRS however isdifficult. Moreover; companies have compiled their own specification method; and find itimpossible to rewrite rolled-out methods so profoundly that they address GSD specificchallenges. We describe how Capgemini sd&m addressed this problem by augmenting itsspecification method by a set of 'specification patterns' for GSD projects. These patternsconcisely describe practices that analysts have to keep in mind when writing a SRS for anoffshore development team. The patterns are agnostic to concrete life cycle models; and canthus be employed in various GSD project settings. We explain how applying the patternshelp to melt client; onshore and offshore developers into 'one team'. A real world case …,Quality of Information and Communications Technology (QUATIC); 2010 Seventh International Conference on the,2010,8
Assessments in global software development: a tailorable framework for industrial projects,Frank Salger; Gregor Engels; Alexander Hofmann,Assessments are an effective technique for software quality assurance. As global softwaredevelopment (GSD) becomes the standard; an assessment framework must be flexible tosupport different sourcing and shoring models. Although much work exists on inspectionsand reviews; an assessment framework which addresses these challenges is missing. Wepresent a systematic yet flexible assessment framework. The paper contributes: i) Thedescription of our assessment framework which addresses four challenges: Appropriatenessof a software requirements specification (SRS); viability of software architectures and SRS;wholeness of work packages; and compliance of results with predefined quality objectives.ii) A detailed explanation how the assessment framework can be tailored to support offshoreand outsourcing scenarios. This paper describes the result of a two years research …,Software Engineering; 2010 ACM/IEEE 32nd International Conference on,2010,8
Unternehmensweit verstehen–unternehmensweit entwickeln: Von der Modellierungssprache zur Softwareentwicklungsmethode,Gregor Engels; Stefan Sauer; Christian Soltenborn,Zusammenfassung Sollen wir UML 1.4; UML 2.0 oder eine ganz andereModellierungssprache für unsere Softwareentwicklung einsetzen? Der folgende Beitragzeigt; dass bei der Festlegung einer unternehmensweiten Entwicklungsmethode nicht dieFrage nach der Modellierungssprache im Vordergrund stehen sollte. Viel entscheidender fürden Erfolg von Softwareentwicklungsprojekten in einem Unternehmen ist ein einheitlichesVerständnis der Entwicklungskonzepte und-artefakte sowie ihrer Beziehungenuntereinander. Eine Einigung über ein unternehmensweites Domänenmodell derSoftwareentwicklungskonzepte sollte deshalb vor der Auswahl von Modellierungssprachen;eines konkreten Vorgehensmodells und geeigneter Werkzeuge erfolgen.,Informatik-Spektrum,2008,8
Meta-design: A conceptual framework for end-user software engineering,Gerhard Fischer,Abstract In a world that is not predictable; improvisation; evolution; and innovation are morethan a luxury: they are a necessity. The challenge of design is not a matter of getting rid ofthe emergent; but rather of including it and making it an opportunity for more creative andmore adequate solutions to problems. Meta-design is an emerging conceptual frameworkaimed at defining and creating social and technical infrastructures in which new forms ofcollaborative design can take place. It extends the traditional notion of system designbeyond the original development of a system. It is grounded in the basic assumption thatfuture uses and problems cannot be completely anticipated at design time; when a system isdeveloped. Users; at use time; will discover mismatches between their needs and thesupport that an existing system can provide for them. These mismatches will lead to …,Dagstuhl Seminar Proceedings,2007,8
MuSoft: Multimedia in der Softwaretechnik,Klaus Alfert; Ernst-Erich Doberkat; Gregor Engels,Im BMBF-Verbundprojekt MuSofT werden multimediale Lehrmaterialien für die Lehre derSoftwaretechnik entwickelt. Neben den inhaltliche Aspekten sind die Distribution und dieLizenzierung der erstellten Lehrmaterialien wichtige Themakomplexe; um die Nachhaltigkeitdes Projektes zu erhöhen. In diesem Papier stellen wir die in MuSofT gewählten Lösungeneiner Open-Content-Lizenz sowie eines Portals zur Distribution der entwickelten Materialienvor.,DeLFI 2003; Tagungsband der 1. e-Learning Fachtagung Informatik; 16.-18. September 2003 in Garching bei München.,2003,8
Realisierung eines diagrammübergreifenden Konsistenzmanagement-Systems für UML-Spezifikationen,Robert Wagner; Wilhelm Schäfer; Gregor Engels,Ich versichere; dass ich die Arbeit ohne fremde Hilfe und ohne Benutzung anderer als derangegebenen Quellen angefertigt habe; und dass die Arbeit in gleicher oder ähnlicher Formnoch keiner anderen Prüfungsbehörde vorgelegen hat und von dieser als Teil einerPrüfungsleistung angenommen wurde. Alle Ausführungen; die wörtlich oder sinngemäßübernommen wurden; sind als solche gekennzeichnet.,Master's thesis; University of Paderborn; Department of Mathematics and Computer Science; Paderborn; Germany; November,2001,8
Design Representation,Jürgen Ebert; Gregor Engels,Abstract Following usual software life cycle models the early phases of the softwaredevelopment process consist of activities like problem analysis; requirement definition; andsystem design. During these early phases only a rather imprecise; insecure; incomplete; andusually very abstract knowledge exists about the software system to be developed. On theother hand; there is a need to communicate about this knowledge by the developers as wellas by potential users and; of course; between both groups of people. Furthermore; thedecisions cast during the early stages of system development have a far-reaching effectthroughout the life cycle up to maintenance and thus must be well documented.,Encyclopedia of Software Engineering,1994,8
RSDL workbench results for OAEI 2014.,Simon Schwichtenberg; Christian Gerth; Gregor Engels,Abstract The vision of automatic service composition is to automatically combine singleservices to a software solution that satisfies certain requirements. Comprehensive servicespecifications are needed to receive suitable compositions. The Rich Service DescriptionLanguage (RSDL) has been developed and can be used to specify ontological andbehavioral semantics of services comprehensively. Part of a service's RSDL specification isits domain ontology that comprises concepts to describe; eg; the service's input and outputparameters. The RSDL Workbench (RSDLWB) is a platform that provides tools for thespecification; matching; and composition of services. In particular; RSDLWB matchesontologies that are part of RSDL specifications. In this paper; we present that ontologymatcher and the evaluation results as determined by the Ontology Alignment Evaluation …,OM,2015,7
Information extraction as a filtering task,Henning Wachsmuth; Benno Stein; Gregor Engels,Abstract Information extraction is usually approached as an annotation task: Input texts runthrough several analysis steps of an extraction process in which different semantic conceptsare annotated and matched against the slots of templates. We argue that such an approachlacks an efficient control of the input of the analysis steps. In this paper; we hence proposeand evaluate a model and a formal approach that consistently put the filtering view in thefocus: Before spending annotation effort; filter those portions of the input texts that maycontain relevant information for filling a template and discard the others. We model alldependencies between the semantic concepts sought for with a truth maintenance system;which then efficiently infers the portions of text to be annotated in each analysis step. Thefiltering view enables an information extraction system (1) to annotate only relevant …,Proceedings of the 22nd ACM international conference on Information & Knowledge Management,2013,7
Ensuring consistency among business goals and business process models,Benjamin Nagel; Christian Gerth; Gregor Engels; Jennifer Post,The paradigm of service-oriented architectures has emerged as an architectural style fordesigning enterprise applications. Requirements engineering for such applicationscomprises the specification of business goal models representing stakeholder objectivesand the operationalization to business process models that specify the required compositionof services. Inconsistencies between business goals and derived business processes canlead to service compositions that are not in line with the actual stakeholder objectives. Forpreserving consistency it is required to consider logical and temporal dependencies amonggoals (eg the order in which they need to be achieved) in the derivation of businessprocesses. In previous work; we provided a technique for the elicitation and specification ofdependencies between business goals. Extending this approach; we aim at validating the …,Enterprise Distributed Object Computing Conference (EDOC); 2013 17th IEEE International,2013,7
Kaos4SOA-Extending KAOS Models with Temporal and Logical Dependencies.,Benjamin Nagel; Christian Gerth; Jennifer Post; Gregor Engels,Abstract. In requirements engineering for service-oriented systems; stakeholder objectivesare described by goal models from which business process models are derived that definethe required service compositions. A goal-based requirements specification should ensurecompleteness of the goals that need to be achieved as well as the consideration of temporaland logical dependencies between goals. Recent approaches lack the ability to elicitate andspecify the stakeholders' knowledge about dependencies between goals that need to beconsidered in the derivation of business processes. We present Kaos4SOA; an extendedgoal notation for the explicit specification of goal dependencies and briefly describe howexisting approaches can be extended to validate the consistency of business processesagainst these dependencies. The application of our approach is supported by the …,CAiSE Forum,2013,7
Precise mappings between business process models in versioning scenarios,Christian Gerth; Markus Luckey; Jochen M Küster; Gregor Engels,In the development process of service-oriented systems; business process models are usedat different levels. Typically; high-level business process models that describe businessrequirements and needs are stepwise refined to the IT level by different business modelersand software architects. As a result; different process model versions must be compared andmerged by means of model version control. An important prerequisite for process modelversion control is an elaborated matching approach that results in precise mappingsbetween different process model versions. The challenge of such an approach is to dealwith syntactically different process models that are semantically equivalent. For that purpose;matching techniques must consider the semantics of process modeling languages. In thispaper; we present a matching approach for process models in a versioning scenario …,Services Computing (SCC); 2011 IEEE International Conference on,2011,7
QUAASY: Quality assurance of adaptive systems,Markus Luckey; Christian Gerth; Christian Soltenborn; Gregor Engels,Abstract The emerging approach to tackle the increasing complexity of today's softwaresystems is the use of self-adaptation techniques. Modeling and implementing adaptivityfeatures is a burdensome and error-prone task that potentially results in erroneous systemmodels. As a consequence; quality analysis and assurance must be considered early in thedevelopment of self-adaptive systems. We propose a quality assurance approach for self-adaptive systems in terms of an integrated modeling and analysis approach; which helpsidentifying errors in modeled self-adaptive systems early in the design process. We employa modeling language for self-adaptive systems including adaptation rules and formallydefine their semantics. Given the language and its formal semantics; we formulate qualityproperties; such as fairness of the specified adaptation rule system. These quality …,Proceedings of the 8th ACM international conference on Autonomic computing,2011,7
Integrated specification and quality assurance for large business information systems,Frank Salger; Stefan Sauer; Gregor Engels,Abstract We present the" specification framework" of Capgemini sd&m. It consists of ourspecification method which serves as the constructive basis for creating complex softwarespecifications; and its concerted analytical counterpart; the" specification quality gate". Sincethis framework is tailored to the specification of large business information systems (BIS); itallows a quick ramp-up phase for software engineering projects without the need forextensive tailoring or extension.,Proceedings of the 2nd India software engineering conference,2009,7
Kontextsensitive Qualitätsplanung von Softwaremodellen.,Hendrik Voigt; Gregor Engels,Abstract: Der Goal Question Metric (GQM) Ansatz stellt eine allgemeineQualitätsmanagementstrategie dar und berücksichtigt infolgedessen nicht dieBesonderheiten von Software-Modellen. Wir haben eine kontextsensitive Qualitätsplanungfür Software-Modelle entwickelt; die den GQM-Ansatz auf die Qualitätsplanung von Software-Modellen zuschneidet und um Konzepte und Aktivitäten erweitert. Dabei konzentrieren wiruns auf den Kontext eines Software-Modells als entscheidenden Einflussfaktor für dieDokumentation von Informationsbedürfnissen; Qualitätsverständnis und Messung. UnserAnsatz zur Qualitätsplanung besteht aus einem Metamodell zur Formulierung relevanterInhalte und einem Prozess; der als Leitfaden bei der Planung dient.,*,2009,7
Quality plans for measuring testability of models,Hendrik Voigt; Baris Güldali; Gregor Engels,Abstract For models used in model-based testing; the evaluation of their testability is animportant issue. Existing approaches lack some relevant aspects for a systematic andcomprehensive evaluation. Either they do (1) not consider the context of software models;(2)not offer a systematic process for selecting and developing right measurements;(3) notdefine a consistent and common quality understanding; or (4) not distinct between objectiveand subjective measurements. We present a novel quality management approach for theevaluation of software models in general that considers all these aspects in an integratedway. Our approach is based on a combination of the Goal Question Metric (GQM) andquality models. We demonstrate our approach by systematically developing a short qualityplan for measuring the testability of software models.,Software Engineering,2008,7
Model Driven Engineering Languages and Systems: 10th International Conference; MoDELS 2007; Nashville; USA; September 30-October 5; 2007; Proceedings,Gregor Engels,This book constitutes the refereed proceedings of the 10th International Conference onModel Driven Engineering Languages and Systems (formerly the UML series ofconferences); MODELS 2007; held in Nashville; USA; September 30-October 5; 2007. The45 revised full papers were carefully reviewed and selected from 158 initial submissions.The papers are organized in topical sections.,*,2007,7
Easy model-driven development of multimedia user interfaces with GuiBuilder,Stefan Sauer; Gregor Engels,Abstract GUI builder tools are widely used in practice to develop the user interface ofsoftware systems. Typically they are visual programming tools that support direct-manipulative assembling of the user interface components. We have developed the toolGuiBuilder which follows a model-driven approach to the development of graphical(multimedia) user interfaces. This allows a meta-design approach where user interfacedevelopers as well as prospective users of the system are supported in modelling thedesired functionality of the GUI on a high level of abstraction that is easy to understand for allinvolved stakeholders. The model consists of compositional presentation diagrams to modelthe structure of the user interface and hierarchical statechart diagrams to model itsbehaviour. GuiBuilder then supports the transformation of the model to Java; ie; the …,International Conference on Universal Access in Human-Computer Interaction,2007,7
End-user software engineering and professional end-user developers,Judith Segal,Abstract There is a great variety of end user developers and a great variety of contexts withinwhich they develop. End user developers may have little or no experience of usingcomputers â€“or may be adept coders in general purpose programming languages. Theymay develop their software on their own over a few minutes â€“or in groups over years. Thesoftware produced may be for their own use only â€“or for a large community of users. It maybe inconsequential â€“or the consequences of its failure may be great. In this paper; weidentify and discuss the problems of one particular group of end user developersâ€“professional end user developers â€“who have no fear of coding and who developsoftware which plays a vital part in furthering their professional goals.,Dagstuhl Seminar Proceedings,2007,7
Testing properties of generic functions,Patrik Jansson; Johan Jeuring; Laurence Cabenda; Gerbo Engels; Jacob Kleerekoper; Sander Mak; Michiel Overeem; Kees Visser,Abstract A datatype-generic function is a family of functions indexed by (the structure of) atype. Examples include equality tests; maps and pretty printers. Property based testing toolslike QuickCheck and Gast support the definition of properties and test-data generators; andthey check if a monomorphic property is satisfied by the test cases. Generic functions satisfygeneric properties and this paper discusses specifying and testing such properties. It showshow generic properties and generators can be expressed; and explains three bugs wefound and corrected in the Generic Haskell library.,Symposium on Implementation and Application of Functional Languages,2006,7
Industrielle Fallstudie: Einsatz visueller Kontrakte in serviceorientierten Architekturen.,Gregor Engels; Baris Güldali; Marc Lohmann; Oliver Juwig; Jan-Peter Richter,Zusammenfassung: Serviceorientierte Architekturen (SOA) erlauben eine schnelle undkosteneffiziente Bereitstellung unterschiedlicher Funktionalitäten zur Unterstützung derGeschäftsprozesse eines Unternehmens. Dazu werden fachliche Funktionalitäten in Formvon Enterprise Services zur Verfügung gestellt. Die hohe Zahl von Enterprise Serviceserfordert eine geeignete semantische Beschreibung zu deren effizienten Verwaltung. Zursemantischen Beschreibung von Enterprise Services sowie zur Formulierung vonSuchanfragen ist an der Universität Paderborn die Methode der visuellen Kontrakteentwickelt worden. Das Papier stellt die Ergebnisse der ersten Phase einer umfangreichenindustriellen Fallstudie zur Evaluation der praktischen Anwendbarkeit visueller Kontrakte imKontext einer SOA vor.,Software Engineering,2006,7
Software Engineering and eLearning: The MuSofT Project,Ernst-Erich Doberkat; Gregor Engels; Jan Hendrik Hausmann; Marc Lohmann; Jörg Pleumann; Jens Schröder,Abstract eLearning supports the education in certain disciplines. Here; we report aboutnovel eLearning concepts; techniques; and tools to support education in SoftwareEngineering; a subdiscipline of computer science. We call this" Software EngineeringeLearning". On the other side; software support is a substantial prerequisite for eLearning inany discipline. Thus; Software Engineering techniques have to be applied to develop andmaintain those software systems. We call this" eLearning Software Engineering". Bothaspects have been investigated in a large joint; BMBF-funded research project; termedMuSofT (Multimedia in Software Engineering). The main results are summarized in thispaper.,eleed,2005,7
UML-based Behavior,Gregor Engels,*,Specification of Interactive Multimedia Applications,2004,7
Quality ensuring development of software processes,Alexander Förster; Gregor Engels,Abstract Software development is a complex process where many organizational units;persons; systems and artifacts are involved. In companies that exceed a certain size thebusiness processes become difficult to handle and the quality of the product can decrease.A process-oriented view on software development is increasingly popular witnessed bycurrent publications on the software development process and the application of modernquality management systems. The ISO 9000 norm describes a quality management systemthat provides a process oriented view on general production processes and is widely usedin many industries. In this paper we suggest a systematic way of describing and developingsoftware processes that contain certain desirable properties and fulfill quality managementdemands. Therefore; the design pattern approach known from object-oriented software …,European Workshop on Software Process Technology,2003,7
Durchgängige Unterstützung für Entwurf; Implementierung und Betrieb von Komponenten in offenen Softwarearchitekturen mittels UML,Matthias Tichy; Wilhelm Schäfer; Gregor Engels,Große Softwaresysteme bilden das Rückgrad jedes Unternehmens und sind entscheidendfür dessen Erfolg. Sie bestehen aus mehreren Millionen Zeilen Quelltext und werdendezentral von großen Teams entwickelt. Heutzutage bestehen diese Softwaresysteme nichtmehr aus großen monolithischen Blöcken; sondern aus vielen einzelnen; räumlich undlogisch verteilten Systemen. Es ist notwendig; dass die einzelnen Teilsysteme einesverteilten Systems einfach integriert werden können. Für die erfolgreiche Nutzung dieserSoftwaresysteme sind einige Eigenschaften vonnöten. Das System muss einfach undkostengünstig um neue Fähigkeiten erweitert und an andere Umgebungsbedingungenangepasst werden können. Zudem muss die Wahrscheinlichkeit von Ausfällen minimal sein.Diese Probleme–Wartbarkeit und Fehlertoleranz–werden in dieser Arbeit angesprochen …,*,2002,7
MVC-Based Modeling Support for Embedded Real-Time Systems,Stefan Sauer; Gregor Engels,Several software architecture paradigms have been proposed for the development ofinteractive software systems and applications. Their common idea is the separation of userinterface components from application logic. Normally; they are deployed as design patternsor basic frameworks of interactive systems. Deploying these architecture paradigms formultimedia systems or embedded real-time systems; first requires an appropriate adaptionto the specific aspects of these application areas. We will compare within this position papertwo well-known architecture paradigms and motivate an advanced architecture paradigmapplicable to real-time; embedded multimedia systems. In addition; we will discuss that thearchitecture paradigm should be reflected within the structure of a modeling language.,OMER Workshop,1999,7
Ein Ansatz zur Verbesserung des Entwicklungsprozesses von Multimedia-Anwendungen,Ralph Depke; Gregor Engels; Katharina Mehner; Stefan Sauer; Annika Wagner,MM-Anwendungen werden in der Regel mit Autorensystemen erstellt. Marktführer beidiesen Syste-men sind Director|| Mac97b]; Authorware [Mac97a] und Toolbook [Asy97].Hierbei handelt es sich um interaktive Werkzeugumgebungen; die die ErstellungHilfēVõīDFāgKDFöp Techniken ermöglichen. Falls die gewünschte Funktionalität derAnwendung die im Werkzeug vordefinierten Möglichkeiten übersteigt; steht in der Regeleine einfache Skriptsprache zur Verfügung; mit der die fehlende Funktionalität ausprogram-miert werden muf. Die wesentliche Idee von Auto-rensystemen besteht darin; die Ad-hoc-Entwicklung von MM-Anwendungen zu ermöglichen. Stellt man die Bildschirmgestaltung inden Vordergrund; sind Drag&Drop-Techniken die geradezu ideale Art; MM-Dokumente zukomponieren. Die Benutzung der vordefinierten Funktionalität für die Anwendungslogik,Softwaretechnik-Trends,1998,7
The Design of an Adaptive and Portable Programming Support Environment,Gregor Engels; W Schaefer,*,Proc. of the 8th Intern. Computing Symposium; Florence,1985,7
A model-based framework for multi-adaptive migratory user interfaces,Enes Yigitbas; Stefan Sauer; Gregor Engels,Abstract Nowadays users are surrounded by a broad range of networked interaction devicesfor carrying out their everyday activities. Flexible and natural interaction with such devices ina seamless manner remains a challenging problem; as many different contexts of use(platform; user; and environment) have to be supported. In this regard; enabling taskcontinuity by preserving the user interface's state and adapting it to the changing context ofuse can help to improve user experience despite possible device changes. Thedevelopment of such multi-adaptive migratory user interfaces (MAMUIs) involves severalchallenges for developers that are partially addressed by frameworks like CAMELEON-RT.However; supporting the development of user interfaces with adaptation and migrationcapabilities is still a challenging task. In this paper; we present an integrated model …,International Conference on Human-Computer Interaction,2015,6
PBlaman: performance blame analysis based on Palladio contracts,Frank Brüseke; Henning Wachsmuth; Gregor Engels; Steffen Becker,SUMMARY In performance-driven software engineering; the performance of a system isevaluated through models before the system is assembled. After assembly; the performanceis then validated using performance tests. When a component-based system fails certainperformance requirements during the tests; it is important to find out whether individualcomponents yield performance errors or whether the composition of components is faulty.This task is called performance blame analysis. Existing performance blame analysisapproaches and also alternative error analysis approaches are restricted; because theyeither do not employ expected values; use expected values from regression testing; or usestatic developer-set limits. In contrast; this paper describes the new performance blameanalysis approach PBlaman that builds upon our previous work and that employs the …,Concurrency and Computation: Practice and Experience,2014,6
Semi-automated test planning for e-ID systems by using requirements clustering,Baris Güldali; Holger Funke; Michael Jahnich; Stefan Sauer; Gregor Engels,In acceptance testing; customer requirements as specified in system specifications have tobe tested for their successful implementation. This is a time-consuming task due to inherentsystem complexity and thus a large number of requirements. In order to reduce efforts inacceptance testing; we introduce a novel approach that exploits redundancies and implicitrelations in requirements specifications; which are based on multi-viewpoint techniques; inour case the reference model for open distributed processing (RM-ODP). It deploysrequirements clustering and linguistic analysis techniques for reducing the total number oftest cases. We report on concrete experiences with this approach within joint R&D work ofthe Software Quality Lab (s-lab) of the University of Paderborn and HJP Consulting; aninternational consulting company; specialized in planning; procurement and acceptance …,Automated Software Engineering; 2009. ASE'09. 24th IEEE/ACM International Conference on,2009,6
Modellierungssprache,G Engels,*,URL http://www. oldenbourg. de,2009,6
UML-A Universal Language? ICATPN 2000; LNCS 1825,Gregor Engels; Reiko Heckel; Stefan Sauer,*,*,2000,6
Handbook of graph grammars and Computing by graph Transformation; Vol. II: Specification and Programming,Gregor Engels; Hartmut Ehrig; Hans-Jörg Kreowski; Grzegorz Rozenberg,*,World Scientific; Singapore,1999,6
Hans-J org Kreowski; and Grzegorz Rozenberg; editors,Hartmut Ehrig; Gregor Engels,*,Handbook of Graph Grammars and Computing by Graph Transformation,1991,6
On the structure of an incremental and integrated software development environment,Gregor Engels; Claus Lewerentz; M Nagl; W Schäfer,*,*,1985,6
Features of IT service markets: A systematic literature review,Bahar Jazayeri; Marie C Platenius; Gregor Engels; Dennis Kundisch,Abstract The provision of IT solutions over electronic marketplaces became prominent inrecent years. We call such marketplaces IT service markets. IT service markets have somecore architectural building blocks that impact the quality attributes of these markets.However; these building blocks and their impacts are not well-known. Thus; design choicesfor IT service markets have been made ad-hoc until now. Furthermore; only single aspects ofsuch markets have been investigated until now; but a comprehensive view is missing. In thispaper; we identify common features and their interrelations on the basis of a systematicliterature review of 60 publications using grounded theory. This knowledge provides anempirical evidence on the interdisciplinary design choices of IT service markets and it servesas a basis to support market providers and developers to integrate market features …,International Conference on Service-Oriented Computing,2016,5
Model-Integrating Software Components,Mahdi Derakhshanmanesh; Jürgen Ebert; Thomas Iguchi; Gregor Engels,Abstract In order to handle complexity of software systems; component-based as well asmodel-driven approaches have become popular in the past. In a model-driven developmentprocess the problem arises that over time model and code may be not aligned. Thus; inorder to avoid this steadily increasing distance between models and code; we propose theintegration of (executable) models and code at the component level. Redundancy–thesource of inconsistencies–is reduced by interpreting models directly. Moreover; variabilityand adaptivity can be achieved by querying and transforming the embedded models. As thebasis for such Model-Integrating Components (MoCos); we introduce a componentrealization concept that is compatible with existing component technologies. We provide areference implementation using Java; OSGi and TGraphs and apply it successfully in a …,International Conference on Model Driven Engineering Languages and Systems,2014,5
Linguistic consistency of goal models,Fabian Pittke; Benjamin Nagel; Gregor Engels; Jan Mendling,Abstract Goal models are used for the elicitation and specification of strategic requirementsin early phases of the software engineering lifecycle. By explicitly modeling requirements ona strategic level; these goals provide input for the derivation of operational softwarespecifications. An unambiguous and consistent definition of the goals is the prerequisite forthis derivation. Addressing this challenge; this paper presents an analytic approach for theautomatic detection of linguistic inconsistencies in goal models. By providing syntactical andsemantic consistency conditions; we support requirements engineers by improving theoverall quality of goal-oriented requirements specifications. To demonstrate the applicabilityof our approach; we apply it to three case studies taken from literature using theimplemented tool support.,*,2014,5
Decision support via automated metric comparison for the palladio-based performance blame analysis,Frank Brüseke; Gregor Engels; Steffen Becker,Abstract When developing component-based systems; we incorporate third-party black-boxcomponents. For each component; performance contracts have been specified by theirdevelopers. If errors occur when testing the system built from these components; it is veryimportant to find out whether components violate their performance contracts or whether thecomposition itself is faulty. This task is called performance blame analysis. In our previouswork we presented a performance blame analysis approach that blames components basedon a comparison of response time values from the failed test case to expected valuesderived from the performance contract. In that approach; the system architect needs tomanually assess if the test data series shows faster or slower response times than the dataderived from the contract. This is laborious as the system architect has to do this for each …,Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering,2013,5
Automatic pipeline construction for real-time annotation,Henning Wachsmuth; Mirko Rose; Gregor Engels,Abstract Many annotation tasks in computational linguistics are tackled with manuallyconstructed pipelines of algorithms. In real-time tasks where information needs are statedand addressed ad-hoc; however; manual construction is infeasible. This paper presents anartificial intelligence approach to automatically construct annotation pipelines for giveninformation needs and quality prioritizations. Based on an abstract ontological model; weuse partial order planning to select a pipeline's algorithms and informed search to obtain anefficient pipeline schedule. We realized the approach as an expert system on top of ApacheUIMA; which offers evidence that pipelines can be constructed ad-hoc in near-zero time.,International Conference on Intelligent Text Processing and Computational Linguistics,2013,5
Graph Transformation: 6th International Conference; ICGT 2012; Bremen; Germany; September 24-29; 2012; Proceedings,Hartmut Ehrig; Gregor Engels; Hans-Jörg Kreowski; Grzegorz Rozenberg,This book constitutes the proceedings of the 6th International Conference on GraphTransformations; ICGT 2012; held in Bremen; Germany; in September 2012. The 30 papersand 3 invited papers presented were carefully reviewed and selected from numeroussubmissions. The papers are organized in topical sections on behavioural analysis; high-level graph transformation; revisited approaches; general transformation models; structuringand verification; graph transformations in use;(meta-) model evolution and incrementalapproaches.,*,2012,5
End-User Design,Alexander Repenning,Abstract Are UML diagrams a good tool to teach middle school students how to make videogames? Probably not; but what kinds end-user design aids such as mental models;scaffolding structures; examples or other kinds of objects to think we can we give to end-users in order to gradually introduce them to good programming practice?,Dagstuhl Seminar Proceedings,2007,5
MODELS 2007. LNCS; vol. 4735,G Engels; B Opdyke; DC Schmidt; F Weil,*,*,2007,5
End-user software engineering position paper,Henry Lieberman,My goal is to make the process of programming easier; especially for people who are notnecessarily specialists in computer science. Why is it so much harder to program a computerthan simply to use a computer application? I can't think of any good reason why this is so; wejust happen to have a tradition of arcane programming languages and mystically complexsoftware development techniques. We can do much better. My background is in Human-Computer Interface and Artificial Intelligence; and my methodology is to use ideas fromthese fields to improve the situation. HCI has amassed an enormous body of knowledgeabout what makes interfaces easy to use; and this has been applied widely to manycomputer applications for end users. Oddly; little of this has been applied to makinginterfaces for programming easier to use. Non-experts tend to believe that programmers …,Dagstuhl Seminar Proceedings,2007,5
Entwicklungsprozess von Web-Anwendungen,Gregor Engels; Marc Lohmann; Annika Wagner,*,Web Engineering: Systematische Entwicklung von Web-Anwendungen,2003,5
Modelling concurrent behaviour through consistent statechart views,G Engels; LPJ Groenewegen; J Küster; G Reggio; A Knapp; B Rumpe; B Selic; R Wieringa,*,G. Reggio; A. Knapp; B. Rumpe; B. Selic; R. Wieringa (Eds.): Dynamic Behaviour in UML Models: Semantic Questions;¡¡ UML¿¿ 2000 Workshop Proceedings; York; UK,2000,5
UML-basierte Modellierung von Multimediaanwendungen,Stefan Sauer; Gregor Engels,Zusammenfassung Der Entwicklungsprozeß von Multimediaanwendungen sollte ebensowie der herkömmlicher Softwaresysteme eine Analyse und einen Entwurf beinhalten. Indieser Arbeit diskutieren wir; inwiefern die Modellierung der Struktur und des dynamischenVerhaltens einer Multimediaanwendung über die Modellierung herkömmlicher Softwarehinausgeht. Wir zeigen; daß Aspekte der Benutzungsschnittstelle und das Zeitverhaltenintegraler Bestandteil der Modellierung sein sollten. Als Ergebnis stellen wir dieobjektorientierte Modellierungssprache OMMMA-L vor; die auf der Unified ModelingLanguage (UML) aufbaut. Die Struktur-und Verhaltensdiagramme von UML wurdenanalysiert und gemäß der Charakteristika von Multimedia adaptiert bzw. erweitert. ImKlassendiagramm werden die Medientypen und die logische Struktur der Anwendung …,*,1999,5
A formalisation of SOCCA using Z; part 1: the type level concepts,JHM Dassen; LPJ Groenewegen; IG Sprinkhuizen-Kuyper; PWM Koopman; PJ't Hoen; G Engels,Abstract This document starts the formalisation of the modelling language of the SOCCA OOmethod in the formal specification language Z. It captures the" static" aspects of SOCCA; iethe meaning of SOCCA language elements at the type level; rather than" dynamic" aspects(dealing with the instance level (objects in execution)). It is restricted to core SOCCA;proposed extensions are not formalised. Contents 1 Introduction 2 1.1SOCCA................................................... 2 1.2 Goals of the formalisation..........................................2 1.3 Z....................................................... 3 1.4 Scope of this document...........................................3 1.5 Conventions used in this document..................................... 3...,*,1999,5
Object-oriented specification of coordinated collaboration,Gregor Engels; Luuk PJ Groenewegen; Gerti Kappel,Abstract Object-oriented specification mechanisms have become famous for modellingstructure and behaviour together in terms of autonomous objects communicating viamessage passing. However; whereas most object-oriented specification methods are strongin modelling the local behaviour of single objects; they fall short on modelling thecoordinated behaviour and collaboration of several objects together. The aim of this paper isto contribute to fill this gap. The paper reports on concepts; language constructs; andexperiences with three collaboration formalisms in the area of object-oriented specifications.,*,1996,5
Coordination by behavioural views and communication patterns,Luuk Groenewegen; Gregor Engels,In [2] a proposal for a new specification formalism was formulated; aiming at modellingsoftware processes; including nonhuman as well as human actors. In two later papers;[3]and [4]; the formalism; from then on called SOCCA; was successfully applied to some smallpart of the standard software process modelling case ISPW-6; see [7]. SOCCA is an exampleof a so-called ecclectic modelling approach; as it combines and consistently integratesdifferent existing modelling formalisms. SOCCA uses EER-like object-oriented classdiagrams for the static perspective; state transition diagrams for the dynamic perspective;and PARADIGM for the communication. SOCCA is still under development; for instance theobject flow reflecting the process perspective is not yet mature; and also computer supportfor SOCCA still has to be developped. During the development so far; SOCCA has been …,European Workshop on Software Process Technology,1995,5
Fundamentals of Object-Oriented Languages; Systems and Methods,HD Enrich; Gregor Engels; Jan Paredaens; Peter Wegner,During the last decade; there has been progress within the object-oriented community inagreeing on what object-orientedness means. The role of object identity; specialization;inheritance; and dynamic binding have been examined. However; a careful look at articleswritten by people with a theory; programming language; database; and softwareengineering background shows that the semantical understanding of the same features stilldi ers considerably. A well-known example is the feature of inheritance; which has quite a dierent meaning for persons from the database community with a semantic data modelbackground and persons from the programming language community with a compilingtechnique background. This observation also applies to the literature on object-orientedsoftware development methods. Here; object-oriented analysis and design methods are …,Dagstuhl Seminar Report,1994,5
Quasar Enteprise; dpunkt. verlag; 2008,G Engels; A Hess; B Humm; O Juwig; M Lohmann; JP Richter; M Voß; J Willkomm,*,*,*,5
Patterns for constructing mutation operators: Limiting the search space in a software engineering application,Thomas Kühne; Heiko Hamann; Svetlana Arifulina; Gregor Engels,Abstract We apply methods of genetic programming to a general problem from softwareengineering; namely example-based generation of specifications. In particular; we focus onmodel transformation by example. The definition and implementation of modeltransformations is a task frequently carried out by domain experts; hence; a (semi-)automatic approach is desirable. This application is challenging because the underlyingsearch space has rich semantics; is high-dimensional; and unstructured. Hence; acomputationally brute-force approach would be unscalable and potentially infeasible. Toaddress that problem; we develop a sophisticated approach of designing complex mutationoperators. We define 'patterns' for constructing mutation operators and report a successfulcase study. Furthermore; the code of the evolved model transformation is required to have …,European Conference on Genetic Programming,2016,4
Market-specific service compositions: Specification and matching,Svetlana Arifulina; Felix Mohr; Gregor Engels; Marie Christin Platenius; Wilhelm Schäfer,The Collaborative Research Centre" On-The-Fly Computing" works on foundations andprinciples for the vision of the Future Internet. It proposes the paradigm of On-The-FlyComputing; which tackles emerging worldwide service markets. In these markets; serviceproviders trade software; platform; and infrastructure as a service. Service requesters staterequirements on services. To satisfy these requirements; the new role of brokers; who are(human) actors building service compositions on the fly; is introduced. Brokers have tospecify service compositions formally and comprehensively using a domain-specificlanguage (DSL); and to use service matching for the discovery of the constituent servicesavailable in the market. The broker's choice of the DSL and matching approaches influencesher success of building compositions as distinctive properties of different service markets …,Services (SERVICES); 2015 IEEE World Congress on,2015,4
Model-driven specification of adaptive cloud-based systems,Benjamin Nagel; Christian Gerth; Enes Yigitbas; Fabian Christ; Gregor Engels,Abstract In cloud-based systems; business process models compose loosely coupledservices to fulfill a certain goal. In order to ensure a high quality of service (QoS) of thesesystems; irregularities and violations need to be detected and handled at runtime byadapting the system. As a consequence; engineering such systems requires an explicitmodeling of adaptation rules; which define how the system is adapted under certainconditions. These rules are defined based on models that specify QoS agreements as wellas service bindings and business processes that are adapted. In this paper; we present amodeling approach for adaptive; cloud-based systems which supports the explicitspecification of adaptation rules. We are introducing a metamodel for specifying bindingsbetween business processes and cloud services considering Service Level Agreements …,Proceedings of the 1st International Workshop on Model-Driven Engineering for High Performance and CLoud computing,2012,4
Coverage Criteria for Testing DMM Specifications,Svetlana Arifulina,Abstract Behavioral modeling languages are most useful if their behavior is specifiedformally such that it can eg be analyzed and executed automatically. Obviously; the qualityof such behavior specifications is crucial. The rule-based semantics specification techniqueDynamic Meta Modeling (DMM) honors this by using the approach of Test-driven SemanticsSpecification (TDSS); which makes sure that the specification at hand at least describes thecorrect behavior for a suite of test models. However; in its current state TDSS does notprovide any means to measure the quality of such a test suite.,*,2011,4
A Formal; Graph-Based Semantics for UML Activities,Markus Hornkamp; Gregor Engels; Heike Wehrheim; Christian Soltenborn,In the development process of large software systems models play an important role;comparable to blueprints in the architecture of buildings. First; they can be used indiscussions with the end-users of a software that is going to be developed to check; if thebusiness functionality is correct according to their wishes. Second; the architects of such asoftware can check quality aspects of the architecture itself using models; before the actualimplementation starts; which is beneficial; because the later design changes are made; themore expensive it gets. Models can also help by letting people work at higher levels ofabstraction; or focus on certain detailed aspects. Whatever may be required by developersto discuss.,*,2009,4
SOFSEM 2009: Theory and Practice of Computer Science: 35th Conference on Current Trends in Theory and Practice of Computer Science; Špindleruv Mlýn; Czech...,Mogens Nielsen; Antonin Kucera; Peter Bro Miltersen; Catuscia Palamidessi; Petr Tuma; Frank Valencia,This book constitutes the refereed proceedings of the 35th Conference on Current Trends inTheory and Practice of Computer Science; SOFSEM 2009; held in Špindleruv Mlýn; CzechRepublic; in January 2009. The 49 revised full papers; presented together with 9 invitedcontributions; were carefully reviewed and selected from 132 submissions. SOFSEM 2009was organized around the following four tracks: Foundations of Computer Science; Theoryand Practice of Software Services; Game Theoretic Aspects of E-commerce; and Techniquesand Tools for Formal Verification.,*,2009,4
Formalisierung der funktionalen Anforderungen mit visuellen Kontrakten und deren Einsatz für modellbasiertes Testen,Gregor Engels; Baris Güldali; Stefan Sauer,Die Hauptaufgabe der Anforderungsanalyse ist es; Kundenwünsche zu verstehen und sie ineiner Form aufzunehmen; so dass weitere Beteiligte im Software-Entwicklungsprozessdiese für die anschließenden Entwicklungsaktivitäten nutzen können. Dafür müssen diefunktionalen und nichtfunktionalen Anforderungen klar und verständlich formuliert sein. DieFormulierung muss außerdem eindeutig und einheitlich sein; damit die Anforderungen desKunden von Entwicklern richtig verstanden werden. Heutzutage geschieht die Aufnahmeder Kundenanforderungen meist in Form einer informalen Prosabeschreibung; die zwar dieKommunikation zwischen dem Kunden und dem Anforderungsanalysten erleichtert aber;wenn nicht sorgfältig geschrieben; zu Missverständnissen führen kann. Besonders wichtigist die Qualität der Anforderungsspezifikation; wenn daraus weitere Softwareartefakte …,Softwaretechniktrends Band,2008,4
Process Merging in Business-Driven Development,Jochen M Küster; Christian Gerth; Alexander Förster; Gregor Engels,Abstract. Business-driven development favors the construction of process models at differentabstraction levels and by different people. As a consequence; there is a demand forconsolidating different versions of process models by merging them. Process merging canbe considered as a special case of model composition. However; in order to be applicableby a business user; process merging has to fulfill specific requirements such as user-friendliness and minimal manual intervention. In this paper; we present our approach toprocess merging. It is based on calculating differences and ordering them according to theunderlying structure of process models. This allows to resolve differences in a particular user-friendly way by eg automating reconnection of inserted process elements.,*,2008,4
Quasar Enterprise;. dpunkt. verlag,G Engels; A Hess; B Humm; O Juwig; JP Richter; M Lohmann; M Voß; J Willkomm,*,*,2008,4
Gender HCI issues in end-user software engineering environments,Laura Beckwith; Margaret M Burnett; Susan Wiedenbeck,Abstract Although gender differences in a technological world are receiving significantresearch attention; much of the research and practice has aimed at how society andeducation can impact the successes and retention of female computer scienceprofessionals. The possibility of gender issues within software; however; has receivedalmost no attention. We hypothesize that factors within software have a strong impact onhow well female problem solvers can make use of the software. Evidence from other fieldsand investigations of our own have revealed evidence supporting this hypothesis.,Dagstuhl Seminar Proceedings,2007,4
Model-driven development for end-users; too!?,Gregor Engels,Abstract Elicitating the requirements and creating a model of a software system are standardactivities in the development process of professional software development. The talkdiscusses whether these two development phases are also present in end-user softwaredevelopment and how they could look like. It is argued that one has to distinguish betweenat least two types of end-user software developers. Those; who are not professional softwaredevelopers; but work in an engineering domain and follow stepwise developmentprocesses. They are used to have requirements specifications as well as models; too. But;non-professional; non-engineering end-users; eg spreadsheet developers; donâ€™ t andwould not like to distinguish between different steps in the development process. Therefore;we propose to hide the distinction between these different steps by closely …,Dagstuhl Seminar Proceedings,2007,4
Design Pattern Spezifikation und Erkennung auf Basis von Story-Diagrammen,Marcus Palasdies; Wilhelm Schäfer; Gregor Engels,Ich versichere; daß ich die Arbeit ohne fremde Hilfe und ohne Benutzung anderer als derangegebenen Quellen angefertigt habe; und daß die Arbeit in gleicher oder ähnlicher Formnoch keiner anderen Prüfungsbehörde vorgelegen hat und von dieser als Teil einerPrüfungsleistung angenommen wurde. Alle Ausführungen; die wörtlich oder sinngemäßübernommen wurden; sind als solche gekennzeichnet.,Master's Thesis; University of Paderborn,2001,4
A Methodology for Specifying and Analyzing Consistency of Object Oriented Behavioral Models. Procs. of the IEEE Int,G Engels; J Küster; R Heckel; L Groenewegen,*,Conference on Foundation of Software Engineering. Vienna,2001,4
Multimedia in der wirtschaftswissenschaftlichen Lehre; Erfahrungsbericht; Redaktion: C,EE Doberkat; G Engels; G Grauer; HL Grob; U Kelter; W Leidhold; V Nienhaus,*,Kopka; Münster,2000,4
Koopman; and G. Engels. SOCCA extended with UML like packages,JHM PJ't Hoen; LPJ Dassen; IG Groenewegen; PWM Sprinkhuizen-Kuyper,*,*,1999,4
A Hybrid Query Language for an Extended Entity-Relationship Model.(revised version of TR 93-15),Marc Andries; Gregor Engels,*,*,1995,4
Object-oriented specification of coordinated collaboration; N. Terashima and Ed. Altman,G Engels; LPJ Groenewegen; G Kappel,*,Proc. IFIP World Conference on IT Tools,*,4
uster; L. Groenewegen; and R. Heckel. A methodology for specifying and analyzing consistency of object-oriented behavioral models,G Engels,*,Proceedings of the 8th European Software Engineering Conference (ESEC) and 9th ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE-9),*,4
Cross-device integration of android apps,Dennis Wolters; Jonas Kirchhoff; Christian Gerth; Gregor Engels,Abstract Integrating apps on mobile devices into applications running on other devices isusually difficult. For instance; using a messenger on a smartphone to share a text written ona desktop computer often ends up in a cumbersome solution to transfer the text; becausemany applications are not designed for such scenarios. In this paper; we present anapproach enabling the integration of apps running on Android devices into applicationsrunning on other devices and even other platforms. This is achieved by specifying adaptersfor Android apps; which map their services to a platform-independent service interface. Forthis purpose; we have developed a domain-specific language to ease the specification ofsuch mappings. Our approach is applicable without the need to modify the existing Androidapps providing the service. We analyzed its feasibility by implementing our approach and …,International Conference on Service-Oriented Computing,2016,3
Automatized derivation of comprehensive specifications for black-box services,Simon Schwichtenberg; Gregor Engels,Abstract Today; cloud vendors host third party black-box services; whose developers usuallyprovide only textual descriptions or purely syntactical interface specifications. Cloud vendorsthat give substantial support to other third party developers to integrate hosted services intonew software solutions would have a unique selling feature over their competitors. However;to reliably determine if a service is reusable; comprehensive service specifications areneeded. Characteristic for comprehensive in contrast to syntactical specifications are theformalization of ontological and behavioral semantics; homogeneity according to a globalontology; and a service grounding that links the abstract service description and its technicalrealization. Homogeneous; semantical specifications enable to reliably identify reusableservices; whereas the service grounding is needed for the technical service integration. In …,Proceedings of the 38th International Conference on Software Engineering Companion,2016,3
Software Processes Management by Method Engineering with MESP,Masud Fazal-Baqaie; Gregor Engels,Abstract Software process management (SPM) is seen as a key factor for the resultingquality of software. Based on our experience in industrial process improvement projects; wesee two major challenges to apply SPM effectively. Thereby; in our work; we focus on themethod aspect of software development processes. First; methods have to be tailoredconsistently to projects by composing agile as well as plan-driven method building blocks.Second; methods have to be enactable to ensure that they are put into practice as intended.In this chapter; we present our assembly-based method engineering approach calledMethod Engineering with Method Services and Method Patterns (MESP) and explain how ittackles common SPM challenges. MESP follows the service-oriented paradigm to createformally defined composition-based methods. The methods are created specifically for …,*,2016,3
Breathing life into situational software engineering methods,Masud Fazal-Baqaie; Christian Gerth; Gregor Engels,Abstract Software engineering methods are used to prescribe and coordinate the tasksnecessary to plan; build; deliver; and maintain software. There is a broad consensus thatthere is no one-size-fits-all method and that; eg; agile and plan-driven approaches have tobe mixed sometimes; based on the context of a project. Creating these so-called situationalmethods and assuring that they cover all necessary details consistently is a challenge.There is also the challenge for the project teams to follow methods as prescribed by themethod engineer. Our approach supports the creation of consistent situational methods froma repository of pre-existing building blocks. Moreover; we present means to enact thesemethods with standard BPEL/BPEL4People workflow engines; automating the coordinationof tasks and providing guidance for them.,International Conference on Product-Focused Software Process Improvement,2014,3
Use Your Best Device! Enabling Device Changes at Runtime,Dennis Bokermann; Christian Gerth; Gregor Engels,Abstract The usage of different computing devices; like desktop computers or smartphones;in our everyday lifes increases continuously. Moreover; smart watches and other wearablesare ready to accompany us in our daily habits. As a consequence; applications aredeveloped for a variety of different computing devices; in order to give users the freedom tochoose a device that really fits their current situation. If this situation changes; a differentdevice may become more suitable than the chosen one. In most cases; applications do notsupport changing the executing device at runtime; since this is usually not considered atdesign time and would require the transferal of the current state. In this paper; we present anapproach to define device changes for process-driven applications. To this extent; we enrichprocess models with deployment information; which allows specifying where it should be …,International Conference on Business Process Management,2014,3
Automated service discovery and composition for On-the-Fly SOAs,Zille Huma; Christian Gerth; Gregor Engels; Oliver Juwig,Abstract. The true essence of service-oriented computing is the realization of softwaredevelopment based on services that are composed to service-oriented architectures (SOA).In recent years; the number of available software services steadily increased; favored by therise of cloud computing with its attached delivery models like Software-as-a-Service (SaaS).To fully leverage the opportunities provided by these services for developing highly flexibleand aligned SOA; integration of new services as well as the substitution of existing servicesmust be simplified. As a consequence; approaches for automated and accurate servicediscovery and composition are needed. In this paper; we propose an automatic servicecomposition approach as an extension to our earlier work on automatic service discovery.To ensure accurate results; it matches the service request and available offers based on …,*,2013,3
Learning efficient information extraction on heterogeneous texts,Henning Wachsmuth; Benno Stein; Gregor Engels,Abstract From an efficiency viewpoint; information extraction means to filter the relevantportions of natural language texts as fast as possible. Given an extraction task; differentpipelines of algorithms can be devised that provide the same precision and recall but thatvary in their run-time due to different pipeline schedules. While recent research investigatedhow to determine the run-time optimal schedule for a collection or a stream of texts; thispaper goes one step beyond: we analyze the run-times of efficient schedules as a function ofthe heterogeneity of the texts and we show how this heterogeneity is characterized from adata perspective. For extraction tasks on heterogeneous big data; we present aselfsupervised online adaptation approach that learns to predict the optimal scheduledepending on the input text. Our evaluation suggests that the approach will significantly …,Proceedings of the Sixth International Joint Conference on Natural Language Processing,2013,3
Multi-staged quality assurance for self-adaptive systems,Markus Luckey; Christian Thanos; Christian Gerth; Gregor Engels,The emerging approach to tackle the increasing complexity of today's software systems isthe use of self-adaptation techniques. Most often; self-adaptation is introduced in terms ofexternalized adaptation rules (eg event-condition-action rules). Modeling and implementingadaptation rules introduces an additional amount of complexity that potentially results inerroneous system specification models. As a consequence; quality analysis and assurancemust be considered early in the development cycle of self-adaptive systems. In this paper;we propose an efficient quality assurance approach for self-adaptive systems in terms of anintegrated modeling and analysis approach; which is capable to identify errors (egconflicting adaptation rules) in the set of adaptation rules early in the design process. Basedon Adapt Cases; a high-level design modeling language for self-adaptive systems; we …,Self-Adaptive and Self-Organizing Systems Workshops (SASOW); 2012 IEEE Sixth International Conference on,2012,3
Using rule overriding to improve reusability and understandability of Dynamic Meta Modeling specifications,Christian Soltenborn; Gregor Engels,Abstract Dynamic Meta Modeling (DMM) is a visual semantics specification techniquetargeted at languages based on a metamodel. A DMM specification consists of a runtimemetamodel and operational rules which describe how instances of the runtime metamodelchange over time. A known deficiency of the DMM approach is that it does not support therefinement of a DMM specification; eg; in the case of defining the semantics for a refined andextended domain-specific language (DSL). Up to now; DMM specifications could only bereused by adding or removing DMM rules. In this paper; we enhance DMM such that DMMrules can override other DMM rules; similar to a method being overridden in a subclass; andwe show how rule overriding can be realized with the graph transformation tool GROOVE.We argue that rule overriding does not only have positive impact on reusability; but also …,Journal of Visual Languages & Computing,2011,3
Engineering self-coordinating software intensive systems,Wilhelm Schäfer; Mauro Birattari; Johannes Blömer; Marco Dorigo; Gregor Engels; Rehan O'Grady; Marco Platzner; Franz Rammig; Wolfgang Reif; Ansgar Trächtler,In a globalized world; technical systems are becoming ubiquitous; and are increasinglyinteracting directly with the physical world. The design space of such systems also;therefore; includes the basic laws of physics. Examples of such systems are worldwideproduction systems; public transport systems and the Internet as a commercial platform(including shipping the real products of course).,Proceedings of the FSE/SDP workshop on Future of software engineering research,2010,3
Graph transformations and model-driven engineering: the merits of Manfred Nagl,Gregor Engels; Claus Lewerentz; Wilhelm Schäfer; Andy Schürr; Bernhard Westfechtel,Short CV Manfred was born in 1944 in Landskron; Czechia. In 1963; he enrolled formathematics and physics at the University of Erlangen-Nuremberg; from which he receiveda master degree in 1969. Subsequently; he worked at a research lab of Siemens AG in thearea of graphics software. In 1971; he returned to the University of Erlangen-Nuremberg. Atthe chair of programming languages headed by Hans-Jürgen Schneider; he focused ongraph grammars and graph rewriting systems. Manfred received a doctoral degree in 1974and a habilitation degree in 1979; both from the Engineering Faculty of the University ofErlangen-Nuremberg. In 1979; Manfred obtained his first position as a professor at theUniversity of Koblenz-Landau; where he worked as an associate professor of computerscience until 1981. He then moved to the University of Osnabrück; where he held the …,*,2010,3
Improving reusability of dynamic meta modeling specifications with rule overriding,Gregor Engels; Daniela Fisseler; Christian Soltenborn,In this paper; we enhance DMM such that DMM rules can “override” other DMM rules; similarto a method being overridden in a subclass. We argue that this does not only have positiveimpact on reusability of DMM specifications; but also improves the intuitive understandabilityof DMM rules.,Visual Languages and Human-Centric Computing; 2009. VL/HCC 2009. IEEE Symposium on,2009,3
A holistic software engineering method for service-oriented application landscape development,Andrea Baumann; Gregor Engels; Alexander Hofmann; Stefan Sauer; Johannes Willkomm,Abstract Enterprises are transforming into enterprises which follow from a business as wellas from an IT perspective a service-oriented paradigm. This change towards service-oriented enterprise and IT architectures has to be reflected in the methodologies ofdeveloping whole application landscapes as well as individual applications. Quasar (QualitySoftware Architecture) has been developed as the standard architecture and developmentmethod of Capgemini sd&m for individual applications. For the development of service-oriented enterprise application landscapes; Quasar Enterprise has been designed. BothQuasar and Quasar Enterprise are integrated with each other within a holistic softwareengineering method to seamlessly cover the full development lifecycle of service-orientedapplication landscapes; from business modeling and service design to actual software …,Working Conference on Practice-Driven Research on Enterprise Transformation,2009,3
IKS Deliverable-D1. 1 Report: Design of the Semantic Benchmark Experiment,Tobias Kowatsch; Wolfgang Maass; Violeta Damjanovic; Wernher Behrendt; Andreas Gruber; Benjamin Nagel; Stefan Sauer; Gregor Engels,Public Deliverable-The objective of this deliverable is to design a benchmark model forContent Management Systems (CMSs) in order to identify relevant requirements for theInteractive Knowledge Stack (IKS). The IKS will be a layered set of software components andspecifications with the goal to improve the interaction with knowledge objects of CMSs byusing Semantic Web technologies. In contrast to projects that benchmarked rather technicalaspects of CMSs; we propose a model that evaluates CMSs consistently from the businessperspective down to the technology layer. This approach is based on IT alignment theorythat states that higher degrees of fit between business needs and IT result in increasedbusiness performance. Accordingly; IT executives of organizations that provide CMSs and ITexecutives of organizations that use CMSs as well as CMS developers are taken into …,*,2009,3
Modellbasierter Komponententest mit visuellen Kontrakten.,Jens Ellerweg; Gregor Engels; Baris Güldali,Abstract: Das Verhalten von quasimodalen Klassen ist abhängig von dem Systemzustand;in dem sie ausgeführt werden. Beim Testen von quasimodalen Klassen muss derSystemzustand so gesetzt werden; damit die zu testende Klasse ausgeführt werden kann.Nach der Testausführung müssen die Änderungen im Systemzustand evaluiert und so dieKorrektheit des Verhaltens der Klasse gegenüber ihrer Spezifikation geprüft werden. Indiesem Beitrag stellen wir ein modellbasiertes Verfahren zum Komponententest vor; mitdem das Verhalten der quasimodalen Klassen anhand Vor-und Nachbedingungenmodelliert und durch automatisiert generierte Testfälle geprüft wird. Die implementierteWerkzeugunterstützung ermöglicht die Einbindung des Verfahrens in dieentwicklungsnahen Aktivitäten des Komponententests.,GI Jahrestagung (1),2008,3
Empirical studies in end-user software engineering and viewing scientific programmers as end-users,Jeffrey Carver,*,proceedings of Dagstuhl Seminar on End-User Software Engineering; Internationales Begegnungs-und Forschungszentrum für Informatik (IBFI) Schloss Dagstuhl,2007,3
Exploiting Domain-Specific Structures For End-User Programming Support Tools,Robin Abraham; Martin Erwig,Abstract In previous work we have tried to transfer ideas that have been successful ingeneral-purpose programming languages and mainstream software engineering into therealm of spreadsheets; which is one important example of an end-user programmingenvironment. More specifically; we have addressed the questions of how to employ theconcepts of type checking; program generation and maintenance; and testing inspreadsheets. While the primary objective of our work has been to offer improvements forend-user productivity; we have tried to follow two particular principles to guide ourresearch.(1) Keep the number of new concepts to be learned by end users at a minimum.(2)Exploit as much as possible information offered by the internal structure of spreadsheets. Inthis short paper we will illustrate our research approach with several examples.,Dagstuhl Seminar Proceedings,2007,3
Designers Need End-User Software Engineering,Mark D Gross,Abstract This position paper for the End-User Software Engineering workshop outlines threesystems that employ end user programming for designers: a constraint-based designenvironment; a sketch recognition interface for knowledge based systems; and a physicalprogramming environment for building modular robots.,Dagstuhl Seminar Proceedings,2007,3
Abschlussbericht des Projektes MuSoft-Multimedia in der SoftwareTechnik,Ernst-Erich Doberkat; Gregor Engels; Corina Kopka,Das Projekt MuSofT–Multimedia in der Softwaretechnik wurde im Rahmen des ProgrammesNeue Medien in der Bildung seit Anfang März 2001 vom Bundesministerium für Bildung undWissenschaft gefördert und endete im Dezember 2003. Das Projekt hat sich zum Zielgesetzt; die Ausbildung im Bereich der Softwaretechnik in den Hochschulen durch denEinsatz Neuer Medien insbesondere in der Präsenzlehre zu unterstützen und zuverbessern. Mit diesem Abschlussbericht wollen wir die Projektergebnisse dokumentieren.Für die Belange von MuSofT; die über die Verantwortlichkeit einzelner Teilprojektehinausgehen; haben wir von Projektbeginn an Koordinationsteams geplant und eingesetzt.Die Aufgaben dieser über die einzelnen Standorte hinweg tätigen Koordinationsteams mitden Namen KT1 bis KT6 lassen sich wie folgt charakterisieren:,*,2004,3
2nd Int’l Conference on Graph Transformation (ICGT’04); number 3256 in Lecture Notes in Computer Science,Hartmut Ehrig; Gregor Engels; Francesco Parisi-Presicce; Grzegorz Rozenberg,*,*,2004,3
MuSofT: Multimedia in Software Engineering,K Alfert; EE Doberkat; G Engels,*,Proceedings of 1st DeLFI,2003,3
Extending UML for modeling multimedia applications,Sauer Stefan; Gregor Engels,*,1999 IEEE Symposium on Visual Languages; Tokyo; Japan,1999,3
TAGT'98: 6th International Workshop on Theory and Application of Graph Transformation: Paderborn; November 16-20; 1998,Engels,*,*,1998,3
Reuse of software process fragments is reuse of software too,Luuk Groenewegen; Gregor Engels,By means of a special software process model component we have been successful inspecifying software process model evolution. This component also handles much reuse ofsoftware process model fragments. To handle the reuse of the software as it is beingproduced by a software process; another extra component can be added to the model forthat software process. It is argued why this extra component is comparable to the specialcomponent for evolution.,Software Process Workshop; 1996. Process Support of Software Product Lines.; Proceedings of the 10th International,1996,3
Industrial maintenance modelled in SOCCA,T de Buntje; Gregor Engels; Luuk Groenewegen; Aart Matsinger,*,Fourth International Conference on the Software Process. Proceedings,1996,3
Towards a module concept for graph transformation systems: The software perspective,H Ehrig; G Engels,*,Proc. Colloquium on Graph Transformation and its Application in Computer Science. Technical Report B-19; Universitat de les Illes Balears,1995,3
Visual Specification of Complex Database Actions,Gregor Engels; Perdita Löhr,Abstract The paper presents an approach to specify in an integrated way by visual;diagrammatic languages the structural and behavioural aspects of database applications.Hereby; well-known extended Entity-Relationship diagrams are employed to specify thestructural aspects. The behavioural aspects of a database application are specified by usingViAL (Visual Action Language). ViAL specifications are a special kind of data (or betterobject) flow diagrams; where so-called elementary actions are used as basic buildingblocks. These elementary actions are automatically derived from a given EER diagram. Theyguarantee that after finishing their execution all inherent integrity constraints are fulfilled. Thepaper explains the features of the language ViAL and gives some illustrating examples.,*,1995,3
SQL,Uwe Hohenstein; Gregor Engels,*,EER {syntax and semantics of an entity-relationship-based query language. Information Systems; 17 (3): 209 {242,1992,3
Formal Semantics of an Extended Entity-Relationship Query Language,U Hohenstein; G Engels,*,Proceedings of the 9th International Conference on Entity-Relationship Approach,1990,3
Konzepte einer Software-Architektur-Beschreibungssprache,Jürgen Ebert; Gregor Engels,Kurzfassung Bei der Entwicklung komplexer Softwaresysteme ist die Festlegung einerSoftware-Architektur; dh eine Zerlegung des Gesamtsystems in eine Menge vonuntereinander in Beziehung stehenden Software-Bausteinen; unumgänglich. Wir geben indieser Arbeit eine Sprache zur textuellen Beschreibung derartiger Software-Architekturenan; die von der (lokalen) Beschreibung der Semantik der Software-Bausteine unabhängigist. Hierzu präzisieren wir den Begriff des Software-Bausteins; erläutern Operatoren zurKonstruktion von Bausteinen aus bereits definierten und legen fest; welche Beziehungenzwischen Softwäre-Bausteinen existieren können. Weiterhin geben wir einenParametrisierungsmechanismus für Software-Bausteine an; der an Abstraktionskonzeptendes λ-Kalküls orientiert ist. Dieses Vorgehen ermöglicht es; dieselbe …,*,1989,3
Ein Konzept zur Beschreibung von Software-Architekturen,Jürgen Ebert; Gregor Engels,*,*,1988,3
An operational semantics for specifications of abstract data types with error handling,Gregor Engels; Udo Pletat; H-D Ehrich,Summary A new approach to an operational treatment of errors and exceptions inspecifications of abstract data types is presented. Considering a specification as a termrewriting system; we define an operational semantics and give conditions that are sufficientfor its well-definedness (Church-Rosser property). Also; we give conditions that are sufficientfor the termination of reduction strategies; respecting the specified error and exceptionhandling.,Acta informatica,1983,3
UML-based modeling of multimedia applications,S Sauer; G Engels,*,Proc. Modellierung’99,*,3
XDAI-A: Framework for Enabling Cross-Device Integration of Android Apps,Dennis Wolters; Jonas Kirchhoff; Christian Gerth; Gregor Engels,Abstract A lot of people are managing multiple computing devices suited for differentpurposes; like private and work devices. Integrating applications running on differentdevices is often a problem; because the services provided by those applications are notmeant to be integrated. In this demonstration; we present our XDAI-A framework whichenables cross-device integration of services provided by Android apps. The framework usesadapters to convert Android-internal service interfaces of existing apps into external serviceswith a platform-independent interface that can be accessed from applications on otherdevices and even other platforms. Our ready-to-use framework does not require to alterexisting Android apps; since the adapters are installed separately. For the convenientspecification of adapters; our framework comes with a domain-specific language (DSL) …,International Conference on Service-Oriented Computing,2016,2
Configuration of Specification Language and Matching for Services in On-The-Fly Computing,Svetlana Arifulina; Marie Christin Platenius; Christian Gerth; Steffen Becker; Gregor Engels; Wilhelm Schäfer,In order to buy and use software services; service requesters have to discover serviceswhich satisfy their requirements and are available on service markets. Various approachesintroduce service brokers; who serve as intermediaries between requesters and providers[ACKM10]. For the discovery; a broker matches the requesters' requirements specification tospecifications of the provided services. For this; brokers use a matcher that determines theextent; to which a provider's service complies to the requesters' requirements. Furthermore;providers and requesters often use different specification languages. Thus; the broker has totranslate their specifications into her own language supported by a corresponding matcher.This translation is out of the scope of this report as it can be done automatically based onexisting approaches [KLR+ 12]. In the market; different brokers compete with each other …,*,2014,2
Goal-Driven Composition of Business Process Models,Benjamin Nagel; Christian Gerth; Gregor Engels,Abstract Goal-driven requirements engineering is a well-known approach for the systematicelicitation and specification of strategic business goals in early phases of softwareengineering processes. From these goals concrete operations can be derived that arecomposed in terms of a business process model. Lacking consistency between goal modelsand derived business processes especially with respect to the dependencies between goalscan result in an implementation that is not in line with the actual business objectives. Hence;constraints indicated from these dependencies need to be considered in the derivation ofbusiness process models. In previous work; we introduced the extended goal modelinglanguage Kaos4SOA that provides comprehensive modeling capabilities for temporal andlogical dependencies among goals. Further; we presented an approach to validate the …,International Conference on Service-Oriented Computing,2013,2
Automated service composition for on-the-fly soas,Zille Huma; Christian Gerth; Gregor Engels; Oliver Juwig,Abstract In the service-oriented computing domain; the number of available softwareservices steadily increased in recent years; favored by the rise of cloud computing with itsattached delivery models like Software-as-a-Service (SaaS). To fully leverage theopportunities provided by these services for developing highly flexible and aligned SOA;integration of new services as well as the substitution of existing services must be simplified.As a consequence; approaches for automated and accurate service discovery andcomposition are needed. In this paper; we propose an automatic service compositionapproach as an extension to our earlier work on automatic service discovery. To ensureaccurate results; it matches service requests and available offers based on their structural aswell as behavioral aspects. Afterwards; possible service compositions are determined by …,International Conference on Service-Oriented Computing,2013,2
Palladio-based performance blame analysis,Frank Brüseke; Gregor Engels; Steffen Becker,Abstract Performance is an important quality attribute for business information systems.When a tester has spotted a performance error; the error is passed to the softwaredevelopers to fix it. However; in component-based software development the tester has to doblame analysis first; ie the tester has to decide; which party is responsible to fix the error. Ifthe error is a design or deployment issue; it can be assigned to the software architect or thesystem deployer. If the error is specific to a component; it needs to be assigned to thecorresponding component developer. An accurate blame analysis is important; becausewrong assignments of errors will cause a loss of time and money. Our approach aims atdoing blame analysis for performance errors by comparing performance metrics obtained inperformance testing and performance prediction. We use performance prediction values …,Proceedings of the 16th international workshop on Component-oriented programming,2011,2
Graph transformations and model-driven engineering: essays dedicated to Manfred Nagl on the occasion of his 65th birthday,Gregor Engels; Claus Lewerentz; Wilhelm Schäfer; Andy Schürr; Bernhard Westfechtel,Volume Editors Gregor Engels University of Paderborn 33098 Paderborn; Germany E-mail:engels@ uni-paderborn. de Claus Lewerentz Brandenburg Technical University at Cottbus 03046Cottbus; Germany E-mail: cl@ tu-cottbus. de Wilhelm Schäfer University of Paderborn 33098Paderborn; Germany E-mail: wilhelm@ upb. de Andy Schürr Technische Universität Darmstadt64283 Darmstadt; Germany E-mail: andy. schuerr@ es. tu-darmstadt. de Bernhard WestfechtelUniversity of Bayreuth 95447 Bayreuth; Germany E-mail: Bernhard. Westfechtel@uni-bayreuth. de Cover illustration: The illustration appearing on the cover of this book is thework of Anna Tait. Library of Congress Control Number: 2010939155 CR Subject Classification(1998): D. 2; F. 3; D. 3; D. 2.4; C. 2; D. 1 LNCS Sublibrary: SL 2–Programming and Software EngineeringISSN 0302-9743 ISBN-10 3-642-17321-7 Springer Berlin Heidelberg New York ISBN-13 …,*,2010,2
A generic meta-model-based approach for specifying framework functionality and usage,Fabian Christ; Jan-Christopher Bals; Gregor Engels; Christian Gerth; Markus Luckey,Abstract Enterprise software development is based on the usage of frameworks. However;well-established concepts to specify framework functionality and how to use it can hardly befound. As consequence; there are poor framework documentations. Various problems arisefrom this; eg a high effort for learning a framework and therefore the need of frameworkspecialists. Existing framework description languages (FDL) focus on parts of the problembut do not cover all aspects of specifying framework functionality and usage. In this paper;we present a generic approach for specifying all aspects of framework functionality andusage. We collected requirements to identify relevant aspects and defined a generic meta-model for FDLs. The generic meta-model is the base for defining concrete FDLs whileguaranteeing that all relevant framework aspects are covered. Particularly; due to its …,International Conference on Modelling Techniques and Tools for Computer Performance Evaluation,2010,2
Automatic generation of behavioral code-too ambitious or even unwanted?,Gregor Engels,− Member Founding Board Informatics Europe (http://www.informatics-europe.org/) − SteeringCommittee MODELS Conference; Visual Languages and Human-Centric Computing(VLHCC); International Conference on Graph Transformations (ICGT) … Objectives of modernsoftware development • efficient development process • software of high quality • correct • adaptable• reusable • … Solution / Dream (?) • Model-driven Development (MDD) • Model-driven Architecture(MDA) • Service-oriented Architecture (SOA) … Automatic code generation needs ▪ completemodels ▪ semantics-preserving transformations … Fujaba - From UML to Java and Back Again… ▪ started in 1997 at the University of Paderborn … ▪ http://wwwcs.uni-paderborn.de/cs/fujaba/ ▪ Albert Zündorf (University of Kassel) … ▪ http://www.se.eecs.uni-kassel.de/se/index.php?fujabaproject▪ Holger Giese (HPI Potsdam) … ▪ http://www.hpi.uni-potsdam.de/giese/projekte/fujaba.html,Behaviour Modelling in Model Driven Architecture; First European Workshop on Behaviour Modelling in Model Driven Architecture (BM-MDA),2009,2
A Bidirectional Transformation between EMF Models and Typed Graphs,Thomas Rheker; Gregor Engels; Franz Josef Rammig,Abstract Dynamic Meta Modeling (DMM) allows to expand meta modeling to the semanticsof a model. By transforming Eclipse Modeling Framework (EMF) models to typed graphs; theresults of this thesis allow to use the Groove toolset to compute graph transition systems forthe EMF models. Using Groove and a corresponding ruleset; we can then check thetransition system for interesting states. This thesis also presents the reverse transformationfrom Groove to EMF which could be used to transform these interesting states back andinspect them inside the Eclipse platform.,*,2008,2
A Model-Based Approach for Platform-Independent Binary Components with Precise Timing and Fine-Grained Concurrency,Tim Schattkowsky; Gregor Engels; Alexander Forster,Fine grained concurrency and accurate timing can be essential for embedded hardware andsoftware systems. These requirements should be reflected in the specification and must beconsistently enforced by the actual implementation. Automated synthesis of theimplementation from such specifications appears to be a straightforward way to ensure thisconsistency. However; especially for software systems this is quite difficult; since softwarelacks the inherent timing and concurrency of a hardware system. Still; the same timing andconcurrency requirements have to be fulfilled. Thus; we introduce a UML-based designapproach that supports the synthesis of embedded hardware or software systems fromessentially the same abstract specification. Our approach provides explicit support forspecifying fine grained concurrency and microsecond accurate timing. In our approach …,System Sciences; 2007. HICSS 2007. 40th Annual Hawaii International Conference on,2007,2
Architectural style-based modeling and simulation of complex software systems,Ping Guo; Gregor Engels; Reiko Heckel,The design and development of complex software systems is a difficult task; and it is noteasy to ensure the quality of a developed software. The paper presents an architectural style-based approach to specifying and analyzing complex software systems. The approachdeveloped is based on UML-like meta models and graph transformation techniques tosupport sound methodological principals; formal analysis and refinement. The approach isillustrated through the specification and simulation of architectural styles of mobilecomputing middleware; where three abstract levels of architectural styles are defined inorder to decrease the complexity brought by mobility.,Software Engineering Conference; 2005. APSEC'05. 12th Asia-Pacific,2005,2
Design by Contract zur semantischen Beschreibung von Web Services.,Gregor Engels; Marc Lohmann; Stefan Sauer,Abstract: Die Vision von Web Services ist; dass ein Service Requestor einen ServiceProvider dynamisch finden und binden kann. Für das Finden eines Web Services müssendie Anforderungen eines Requestors und die Beschreibung eines Services miteinanderverglichen werden. Syntaktische Beschreibungen reichen hierfür nicht aus. Eine Möglichkeitzur semantischen Beschreibung von Web Services basiert auf der Technik Design byContract. In diesem Papier führen wir eine UML-basierte Notation für Kontrakte sowie einMatching-Konzept ein. Damit wird eine automatisierte; semantische Suche nach WebServices möglich.,GI Jahrestagung (2),2005,2
Towards a Formal Framework for Inter-Enterprise Application Integration1,Reiko Heckel; Gregor Engels,Abstract A major concern of software development today is the integration of applications ofdifferent enterprises; eg; over the internet. This requires a shift of focus from systemdevelopment towards integration of enterprise models and evolution of systems. Wepropose a conceptual framework for a method addressing these issues and discuss itsformalization by means of graph transformation concepts.,Electronic Notes in Theoretical Computer Science,2002,2
UML basierte Spezifikation von Benutzerschnittstellen,Michael Kisker; W Schäfer; G Engels,Ich versichere; daß ich die Arbeit ohne fremde Hilfe und ohne Benutzung anderer; als derangegebenen Quellen angefertigt habe und daß die Arbeit in gleicher oder ähnlicher Formnoch keiner anderen Prüfungsbehörde vorgelegen hat und von dieser als Teil einerPrüfungsleistung angenommen worden ist. Alle Ausführungen; die wörtlich oder sinngemäßübernommen worden sind; sind als solche gekennzeichnet.,*,2001,2
Graph transformation as a meta language for dynamic modeling and model evolution,Reiko Heckel; Gregor Engels,Abstract A major concern of software evolution is to achieve and maintain consistencybetween both different (sub) systems and different layers of the same system. Based on aconceptual model of distributed systems which distinguishes the three layers of objects;software; and hardware components and; orthogonally; a type and an instance level; wediscuss solutions to several consistency problems. We classify the state changes a systemexperiences during its lifetime as the system's dynamics (if the changes happen at theinstance level) and the evolution of the system (if the type or schema level is affected). Anapproach based on graph transformation and meta modeling is used to formalize theseconcepts.,Int. Special Session on Formal Foundations of Software Evolution; Lisboa; Portugal,2001,2
Multimedia in der wirtschaftswissenschaftlichen Lehre,Ernst-Erich Doberkat; Gregor Engels; G Grauer; Heinz Lothar Grob; Udo Kelter; Wolfgang Leidhold; Volker Nienhaus,*,Erfahrungsbericht; Münster,2000,2
Formal Integration of Software Engineering Aspects Using a Graph Rewrite System-A Typical Experience?!-,Andreas Zamperoni; Gregor Engels,Abstract This position paper weighs the benefits against the problems of using a graphrewrite system for the formal specification of an integrated software engineering model andfor its implementation using the same graph rewrite system. The integrated softwareengineering approach; called GRIDS 1; has been motivated by the shortcomings of softwareengineering support for real-life software projects. It is based on the formal integration ofsoftware engineering aspects for the automatic construction and well-defined manipulationof situational project frameworks. GRIDS uses the graph rewrite system PROGRES for theformal specification of the concepts and for their prototypical implementation. Withoutclaiming to cover the entire field of graph rewrite systems; the experiences of this particular;graph-based approach are used as example for a discussion about the adequacy; the …,International Workshop on Applications of Graph Transformations with Industrial Relevance,1999,2
Dynamic Meta Modelling: A Graphical Approach to Operational Semantics,Gregor Engels; Reiko Heckel; Stefan Sauer,CiteSeerX - Document Details (Isaac Councill; Lee Giles; Pradeep Teregowda):The UML meta model [3] captures the abstract syntax...,UML 2000-The Unified Modeling Language. Advancing the Standard; vol. 1939 of LNCS,1999,2
Towards measurable process models,Tineke De Bunje; Gregor Engels; Luuk Groenewegen; Michael Heus; Aart Matsinger,Due to high market pressure; development of industrial software has to become cheaper;more flexible; more reliable; and more efficient. Thus for all software development projects;improvement of the software development process has become an important objective. Inorder to be able to speak about and to reach improvement; two prerequisites have to befulfilled. First; explicit models of (parts of) the software process are needed; and second;metrics have to be defined to get concrete; comparable values about the quality of thesoftware development process. The need for; and the benefits of; combining process modelswith metrics has been stated in several publications ([1; 2; 7; 9; 11]). In particular; successfulexperiences with the combination of the so-called Goal-Question-Metrics (GQM) paradigmand process modelling are described in eg [10] and [4]. This position paper continues and …,European Workshop on Software Process Technology,1996,2
Specification of a programming support environment by graph grammars,Gregor Engels; W Schäfer,*,*,1982,2
Adapt cases,Markus Luckey; Benjamin Nagel; C Gerth; Gregor Engels,*,6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems; SEAMS,*,2
Overview of the Wikidata Vandalism Detection Task at WSDM Cup 2017,Stefan Heindorf; Martin Potthast; Gregor Engels; Benno Stein,Abstract: We report on the Wikidata vandalism detection task at the WSDM Cup 2017. Thetask received five submissions for which this paper describes their evaluation and acomparison to state of the art baselines. Unlike previous work; we recast Wikidata vandalismdetection as an online learning problem; requiring participant software to predict vandalismin near real-time. The best-performing approach achieves a ROC-AUC of 0.947 at a PR-AUC of 0.458. In particular; this task was organized as a software submission task: tomaximize reproducibility as well as to foster future research and development on this task;the participants were asked to submit their working software to the TIRA experimentationplatform along with the source code for open source release.,arXiv preprint arXiv:1712.05956,2017,1
Self-adaptive UIs: integrated model-driven development of UIs and their adaptations,Enes Yigitbas; Hagen Stahl; Stefan Sauer; Gregor Engels,Abstract Self-adaptive UIs have been promoted as a solution for context variability due totheir ability to automatically adapt to the context-of-use at runtime. In classical model-drivenUI development (MDUID) approaches; self-adaptivity and context management introduceadditional complexity since self-adaptation features are distributed in a cross-cutting mannerat various locations in the models. This results in a tightly interwoven model landscape thatis hard to understand and maintain. In this paper; we present an integrated model-drivendevelopment method where a classical model-driven development of UIs is coupled with aseparate model-driven development of UI adaptation rules and context-of-use. We base ourapproach on the core UI modeling language IFML; and focus on a new modeling languagefor adaptation rules; called AdaptUI. We show how generated UI code is coupled with …,European Conference on Modelling Foundations and Applications,2017,1
From Open API to Semantic Specifications and Code Adapters,Simon Schwichtenberg; Christian Gerth; Gregor Engels,Today; modern IT-systems are often an interplay of third-party web services. Developers intheir role as requesters integrate existing services of different providers into new IT-systems.Providers use frameworks like Open API to create syntactic service specifications from whichrequesters generate code to integrate services. Proper service discovery is crucial to identifyusable services in the growing plethora of third-party services. Most advanced servicediscovery approaches rely on semantic specifications; eg; OWL-S. While semanticspecifications are crucial for a precise discovery; syntactical specification are needed forservice invocation. To close the gap between semantic and syntactic specifications; servicegrounding establishes links between the semantic and syntactic specifications. However; fora large number of web services still no semantic specification or grounding exists. In this …,Web Services (ICWS); 2017 IEEE International Conference on,2017,1
Linking Services to Websites by Leveraging Semantic Data,Dennis Wolters; Stefan Heindorf; Jonas Kirchhoff; Gregor Engels,Websites increasingly embed semantic data for search engine optimization. The mostcommon ontology for semantic data; schema. org; is supported by all major search enginesand describes over 500 data types; including calendar events; recipes; products; and TVshows. As of today; users wishing to pass this data to their favorite applications; eg; theircalendars; cookbooks; price comparison applications or even smart devices such as TVreceivers; rely on cumbersome and error-prone workarounds such as reentering the data ora series of copy and paste operations. In this paper; we present Semantic Data Mediator(SDM); an approach that allows the easy transfer of semantic data to a multitude of services;ranging from web services to applications installed on different devices. SDM extractssemantic data from the currently displayed web page on the client-side; offers suitable …,Web Services (ICWS); 2017 IEEE International Conference on,2017,1
Towards systematic spreadsheet construction processes,Jorge Mendes; Jácome Cunha; Francisco Duarte; Gregor Engels; João Saraiva; Stefan Sauer,Abstract Spreadsheets are used in professional business contexts to make decisions basedon collected data. Usually; these spreadsheets are developed by end users (egaccountants) in an ad-hoc way. The effect of this practice is that the business logic of aconcrete spreadsheet is not explicit to them. Thus; its correctness is hard to assess andusers have to trust. We present an approach where structure and computational behavior ofa spreadsheet are specified by a model with a process-like notation based on combining pre-defined functional spreadsheet services with typed interfaces. This allows for a consistentconstruction of a spreadsheet by defining its structure and computational behavior as well asfilling it with data and executing the defined computational behavior. Thus; concretespreadsheets are equipped with a specification of their construction process. This …,Proceedings of the 39th International Conference on Software Engineering Companion,2017,1
A variability model for store-oriented software ecosystems: an enterprise perspective-supplementary material,Bahar Jazayeri; Olaf Zimmermann; Gregor Engels; Dennis Kundisch,Today; the software industry delivers more than (a family of) software: it rather providesusers with composed software solutions and complementary environments such asoperating platforms; execution environment; and preconfigured assets. A softwareecosystem is a collaborative architectural approach to create a market on top of softwareplatforms by opening them to external actors. Examples of the external actors are third-partydevelopers and hardware suppliers. Existing ecosystems allow the external actors to accessthe platforms at different levels of the software life cycle [EB12]. This has caused them todiversify in many different ways; eg; in software type and the target group of users [MH13].For instance; software development ecosystems (eg; Atlassian 1 and Eclipse 2) enablecollaborative work among developers by providing code sharing and development …,*,2017,1
Concept-Based Engineering of Situation-Specific Migration Methods,Marvin Grieger; Masud Fazal-Baqaie; Gregor Engels; Markus Klenke,Abstract Software migration methods enable to reuse legacy systems by transferring theminto new environments. Thereby; the method used needs to fit to the project's situation byconsidering conceptual differences between the source and target environment andautomating parts of the migration whenever suitable. Using an inappropriate migrationmethod may lead to a decreased software quality or increased effort. Various methodengineering approaches have been proposed to support the development of situation-specific migration methods. However; most do not provide a sufficient degree of flexibilitywhen developing a method or fall short in guiding the endeavor. To address this problem;we introduce a situational method engineering framework to guide the development ofmodel-driven migration methods by assembling predefined buildings blocks. The …,International Conference on Software Reuse,2016,1
Introduction to the special section on best papers from SEAMS 2014,Nelly Bencomo; Gregor Engels,This special section in the current issue of TAAS; which consists of revised and extendedversions of 4 selected papers that were originally presented at the 9th ACM/IEEEInternational Symposium on Software Engineering for Adaptive and Self-Managing Systems(SEAMS 2014). The symposium was held in Hyderabad; India; on June 2 and 3; 2014; andwas co-located with the 36th International Conference on Software Engineering (ICSE2014). We received 80 full paper submissions for review. Of these; 18 papers were acceptedand classified into 15 long papers and 3 short papers. The acceptance rate was therefore22.5%; which is comparable to those of previous editions of SEAMS. SEAMS brings togetherresearchers and practitioners from diverse areas; such as biologically inspired computing;artificial intelligence; machine learning; and control systems; to investigate; discuss; and …,ACM Transactions on Autonomous and Adaptive Systems (TAAS),2016,1
Modeling Cross-Device Systems with Use Case Diagrams.,Dennis Wolters; Christian Gerth; Gregor Engels,Abstract. Information systems often support a variety of different device types like desktopcomputers; smartphones or tablets. Some can even be used in a cross-device manner; ie;using multiple devices in parallel or being able to switch from one device to another whileinteracting with the system. Even though there is increasing support to implement such cross-device systems; existing modeling languages only provide limited means to specify them. Inthis paper; we present an extended form of UML use case diagrams; which allows toproperly take the cross-device features of a system into account and serves as a first steptowards a model-based development process for cross-device systems.,CAiSE Forum,2016,1
On-The-Fly computing: automatic service discovery and composition in heterogeneous domains,Zille Huma; Christian Gerth; Gregor Engels,Abstract In software markets of the future; customer-specific software will be developed ondemand based on distributed software and hardware services. Based on a customer-specific request; available service offers have to be discovered and composed intosophisticated IT services that fulfill the customer's request. A prerequisite of this vision arerich service descriptions; which comprise structural as well as behavioral aspects of theservices; otherwise an accurate service discovery and composition is not possible. However;automatic matching of service requests and offers specified in rich service descriptions forthe purpose of service discovery is a complex task; due to the multifaceted heterogeneity ofthe service partners. This heterogeneity includes the use of different specificationlanguages; different underlying ontologies; or different levels of granularity in the …,Computer Science-Research and Development,2015,1
Model-integrating software components,Mahdi Derakhshanmanesh; Jürgen Ebert; Thomas Iguchi; Gregor Engels,In a model-driven development process the problem arises that over time model and codemay be not aligned. Thus; in order to avoid this steadily increasing distance between modelsand code; we propose the integration of (executable) models and code at the componentlevel. Redundancy-the source of inconsistencies-is reduced by interpreting models directly.Moreover; variability and adaptivity can be achieved by querying and transforming theembedded models. As the basis for such Model-Integrating Components (MoCos); we,Software-engineering and management 2015,2015,1
Kooperative methoden-und werkzeugentwicklung zur cloudmigration von proprietärenanwendungskomponenten,Benjamin Nagel; Klaus Schröder; Steffen Becker; Stefan Sauer; Gregor Engels,Die cloudbasierte Bereitstellung von Funktionen als Software-as-a-Service (SaaS)ermöglicht die Erschließung neuer Kundenpotenziale bei kleinen und mittelgroßenUnternehmen. Um bestehende Anwendungskomponenten als SaaS anzubieten; muss eineentsprechende Migration durchgeführt werden. Das Projekt AACC beschäftigt sich mit dermodellgetriebenen Überführung von Anwendungskomponenten in Cloud-Computing-Umgebungen. Der hierbei durchgeführte Wissenstransfer beinhaltet softwaretechnischeKompetenzen zur Methodendefinition; Konzepte der modellgetriebenenSoftwareentwicklung und technische Kenntnisse zur Implementierung einer integriertenWerkzeugunterstützung. In diesem Beitrag beschreiben wir die In-halte desWissenstransfers; die erarbeiteten Lösungen und unsere Erfahrungen aus dem Projekt.,Software-engineering and management 2015,2015,1
Entwurf einer 3D-Sprache für UML-Klassendiagramme zur Verbesserung der Darstellung von parametrisierten Klassen,Florian Stolte; Gregor Engels,Hiermit versichere ich; die vorliegende Arbeit ohne Hilfe Dritter und nur mit denangegebenen Quellen und Hilfsmitteln angefertigt zu haben. Alle Stellen; die aus denQuellen entnommen wurden; sind als solche kenntlich gemacht worden. Diese Arbeit hat ingleicher oder ähnlicher Form noch keiner Prüfungsbehörde vorgelegen.,Bachelorarbeit; Universität Paderborn,2014,1
Measuring the software size of sliced V-model projects,Andreas Deuter; Gregor Engels,Companies expect higher productivity of their software teams when introducing newsoftware development methods. Productivity is commonly understood as the ratio of outputcreated and resources consumed. Whereas the measurement of the resources consumed israther straightforward; there are several definitions for counting the output of a softwaredevelopment. Source code-based metrics create a set of valuable figures direct from theheart of the software-the code. However; depending on the chosen process model softwaredevelopers and testers produce also a fair amount of documentation. Up to now this outputremains uncounted leading to an incomplete view on the development output. This articleaddresses this open point by proposing a novel automated way on software quantitymeasurement. It extends source code-based metrics; namely the size of code changes …,Software Measurement and the International Conference on Software Process and Product Measurement (IWSM-MENSURA); 2014 Joint Conference of the International Workshop on,2014,1
Modellbasierte Bewertung von Testprozessen nach TPI NEXT mit Geschäftsprozess-Mustern.,Claudia Schumacher; Baris Güldali; Gregor Engels; Markus Niehammer; Matthias Hamburg,Abstract: Die Qualität eines zu entwickelnden Softwareprodukts wird entscheidend durch dieQualität des zugehörigen Testprozesses beeinflusst. Das TPI®-Modell ist einReferenzmodell zur Bewertung der Qualität eines Testprozesses; das mittelsKontrollpunkten den Reifegrad von Testaktivitäten bestimmt. Dabei ist allerdings sowohl dieInterpretation des zu bewertenden Testprozesses; welcher in der Praxis häufig gar nichtoder nur informell beschrieben ist; als auch die Interpretation des TPI®-Modells selbst vondem Wissen und den Erfahrungen des bewertenden Experten abhängig. Dies führtunmittelbar zu einer langwierigen; schwierigen und insbesondere subjektiven Bewertungeines Testprozesses. Um eine objektivere; einfachere und effizientere Bewertung zuermöglichen; wird im Beitrag ein Ansatz vorgestellt; mit dem ein Testprozess als …,Software Engineering,2013,1
Ten years of software and systems modeling,Gregor Engels; Jon Whittle,The first issue of the Journal of Software and Systems Modeling was published inSeptember 2002. In the very first editorial; the journal's Editors-in-Chief noted that one of thekey aims of the journal was “to provide researchers as well as tool vendors andstandardization committees with insights that can lead to better modeling languages andtechniques; and provide software and system developers with a deeper understanding [...]that can lead to more effective application.” In the 10 years that have passed since that firstSoSyM issue; the world of software and systems modeling has seen a lot of changes. In2002; UML was still a relative new kid on the block; since then; we have seen a majorrevision in the form of UML 2.0 in 2005. At the time of writing; the latest version of the UMLspecification is 2.4. Just prior to the publication of the first SoSyM issue; a major …,Software & Systems Modeling,2012,1
Sicherstellen der Betrachtung von nicht-funktionalen Anforderungen in SCRUM-Prozessen durch Etablierung von Feedback,Gregor Engels; Silke Geisen; S Sauer; O Port,Abstract: Agile Vorgehensmodelle wie SCRUM haben mit der Zeit immer mehr anBedeutung gewonnen. Obwohl sie erhebliche Erfolge vorzuweisen haben; haben sich inder Praxis diverse Probleme hervorgetan. Nicht-funktionale Anforderungen wiebeispielsweise Performanz oder Benutzungsfreundlichkeit finden wenig oder gar keineBetrachtung. Um dieses zu verbessern und ein frühzeitiges Feedback vom Kunden undAnwender in den Lebenszyklus eines Sprints fest zu etablieren; stellt dieser Beitrag eineErweiterung des SCRUM-Prozesses um eine weitere Tätigkeit zur Qualitätssicherung vor.Der Kunde und Anwender sowie ihr rechtzeitiges Feedback an das Entwicklungsteamwerden durch diese Tätigkeit fest in den Prozess mit eingebunden; so dass ihr Feedback inweitere Betrachtungen und Planungen mit einfließt. Aufgrund des inkrementellen …,Informatik,2009,1
Risikoanalyse für die rekonfiguration selbstoptimierender mechatronischer systeme,Maik Niggemann; Wilhelm Schäfer; Gregor Engels,*,*,2009,1
Identification of Software Product Line Component Services.,Martin Assmann; Gregor Engels; Thomas von der Maßen; Andreas Wübbeke,Abstract. Software Product Line (SPL) approaches do not centrally improve the maintenanceof software products of a SPL. This paper presents an approach for reducing maintenancecosts of SPL products by using the concept Software as a Service (SaaS). The SPL-SaaSapproach was developed with the experiences of arvato services integrating the SPLconcept since years. It shows up the advantageous and disadvantageous characteristics ofcomponents that play a role for the concept combination. The main goal is to enable an IT-architect to identify adequate components. Therefore criteria for the identification of softwarecomponents suitable for the approach are derived from these characteristics. Furthermorethe requirements of the potential service users are examined and categorized concerningtheir effects on the system architecture. Special requirements of customers often lead to …,ENASE,2009,1
Architektur & Management im Großen meistern,Arndt Bode; Manfred Broy; Uwe Dumslaff; Gregor Engels,Es geht nicht nur um die Blaupause für IT-Systeme und nicht nur um den großen Projektplanmit den richtigen Meilensteinen. Architekten produzieren letztlich auch nicht ihre Architektursondern das IT-System selbst; das gemäß deren Vorgaben fertig gestellt wird undangemessen den richtigen Architekturprinzipien folgt. Das funktioniert nur; wenn beimDesign die Baubarkeit von Beginn an berücksichtigt wird. Das Projektergebnis überlebt dasIT-Projekt selbst. Das Projekt dient der Erstellung des Ergebnisses und der entlang derBaurichtlinien des Architekten entwickelten Projektpläne. Dennoch liefert derProjektmanager nicht nur den Projektplan sondern ebenso als wesentliches Ergebnis daszu erstellende Gewerk. Das haben Architekt und Projektmanager gemeinsam unddeswegen ziehen sie auch gemeinsam am selben Strang. Sie müssen das anfangs …,*,2008,1
Analysis of uml activities with dynamic meta modeling techniques,Christian Soltenborn; Gregor Engels,Measuring the quality of models should be an important part of the model-driven approach(MDA): If models are treated as first-class elements; they obviously should not contain any seriousflaws. However; manually analyzing complex mod- els is not feasible. Therefore; the goal mustbe to provide tool support for the modeler which assists her in identifying errors; inconsistenciesetc. within the model. One requirement for this is that the semantics of the modeling languageis defined formally. To define semantics for behavioral modeling languages like UMLActivities; we propose the use of the Dynamic Meta Modeling (DMM) approach [1]. DMM wasdeveloped with two requirements in mind: A DMM based semantics specification should notonly be formal; but also easily understandable. DMM fulfills both requirements by using typedgraphs and graph transformation rules (GTRs)— which both have visual …,International Conference on Model Driven Engineering Languages and Systems,2006,1
Multi-Private Public Partnership (MPPP)–Softwaretechnik auf dem Weg in die Industrie,Gregor Engels; Matthias Gehrke; Stefan Sauer,Zusammenfassung: Forschung und Innovation sind die Grundlagen erfolgreicherUnternehmerschaft. Dies gilt sowohl für Großunternehmen als auch für kleine und mittlereUnternehmen (KMU). Aufgrund des großen Markt-und Kostendrucks und der begrenztenVerfügbarkeit von Ressourcen ist es den KMU allerdings häufig nicht möglich; eigeneForschungsabteilungen aufzubauen. Eine Lösung ist die Kooperation mitForschungsgruppen einer in der Region liegenden Universität. Hier ist es jedoch für einKMU häufig schwierig; die richtigen Ansprechpartner an der Universität und die passendeForm der Zusammenarbeit zu finden. Deshalb wurde das s-lab (Software Quality Lab) ander Universität Paderborn gegründet. Es ist ein Forschungs-und Technologietransferinstitut;an dem mehrere Forschungsgruppen aus dem Gebiet Softwaretechnik und mehrere …,Hochberger/Liskowsky,2006,1
Modellbasierte Entwicklung von Web Services mit Design by Contract.,Gregor Engels; Marc Lohmann; Stefan Sauer,Abstract: Die Qualität Service-orientierter Softwaresysteme hängt wesentlich von derEinbindung der richtigen Dienste ab. Zwei grundsätzliche Aspekte kommen hierbei zumTragen:(1) Passen die Anforderungen eines Service Requestors und dieServicebeschreibung eines Service Providers zusammen und (2) ist die Implementierungder Web Services korrekt gegenüber der Servicebeschreibung. Wir verwenden Design byContract Techniken auf der Modellebene zur semantischen Beschreibung von WebServices und führen ein Matching-Konzept für den Vergleich von Requestor-und Provider-Kontrakten ein. Damit wird eine automatisierte; semantische Suche nach Web Servicesmöglich. Wir erläutern zudem eine modellbasierte Vorgehensweise zur Entwicklung vonWeb Services. Hierbei werden aus den Modellen der Anwendung (1) die auswertbaren …,GI Jahrestagung (2),2005,1
Ergebnisbericht des Jahres 2002 des Projektes" MuSofT-Multimedia in der SoftwareTechnik",Klaus Alfert; Ernst-Erich Doberkat; Gregor Engels,Das Projekt MuSofT–Multimedia in der Softwaretechnik wird im Rahmen des ProgrammesNeue Medien in der Bildung seit Anfang März 2001 vom Bundesministerium für Bildung undWissenschaft gefördert und endet im Dezember 2003. Das Projekt hat sich zum Ziel gesetzt;die Ausbildung im Bereich der Softwaretechnik in den Hochschulen durch den EinsatzNeuer Medien insbesondere in der Präsenzlehre zu unterstützen und zu verbessern. Wiebereits im letzten Jahr wollen wir mit diesem Jahresbericht die Projektergebnissedokumentieren. Nach zwei Jahren Laufzeit liegt das letzte Jahr vor uns; daher haben wireinen Schwerpunkt der Berichte der Teilprojekte auf die technische Realisierung gelegt. Fürdie Belange von MuSofT; die über die Verantwortlichkeit einzelner Teilprojektehinausgehen; haben wir von Projektbeginn an Koordinationsteams geplant und …,*,2003,1
Quality ensuring development of software processes,Alexander Forster; Gregor Engels,Abstract. Software development is a complex process where many organizational units;persons; systems and artifacts are involved. In companies that exceed a certain size thebusiness processes become difﬁcult to handle and the quality of the product can decrease.A process-oriented view on software development is increasingly popular witnessed bycurrent publications on the software development process and the application of modernquality management systems. The ISO 9000 norm describes a quality management systemthat provides a process oriented view on general production processes and is widely usedin many industries. In this paper we suggest a systematic way of describing and developingsoftware processes that contain certain desirable properties and fulﬁll quality managementdemands. Therefore; the design pattern approach known from object-oriented software …,Lecture Notes in Computer Science,2003,1
Challenges and achievements in software engineering (CHASE),G Engels; W Schafer,Abstract Software engineering environments have a history of about two decades. Earlyenvironments provided support for small ji-agments of the software process (usuallyfocusing on programming-in-the small). Then there was a trend towards support for morecomplete software processes Cfrom early phases like requirements analysis and designdown to testing and configuration management). Ten years ago the notion ofprocesscentered software engineering environments initiated a new field in softwareengineering: software process research. The key idea was to use a model of a softwareprocess as input parameter for a software engineering environment. The environment wassupposed to “behave” in accordance to the process model. Some aspects of this visionbecame true; others turned out to be of little practicability.,Software Engineering; 2001. ICSE 2001. Proceedings of the 23rd International Conference on,2001,1
Techniken des Software-Entwurfs I,Gregor Engels,*,*,2000,1
UML Collaboration Diagrams and Theiij Transformation to Java—Extended Version*—,Gregor Engels; Roland Hücking; Stefan Sauer; Annika Wagner,*,*,1999,1
How to represent a visual specification,Gregor Engels; M Andries; J Rekers,ABSTRACT We consider the representation of a visual specification within a highlyintegrated environment which provides specialized support for the associated visuallanguage. We state that such an environment needs to represent a visual specification atfour levels in order to perform its tasks:(1) the physical layout;(2) the pictorial structure;(3) theabstract structure; and (4) the representation of the meaning. Furthermore; we will show howgraph grammars; constraint solving; and attribute evaluation can be used to keep therepresentations up-to-date with each other. It will turn out that defining the structure atdifferent levels and defining the visual syntax are in fact two names for the same thing.,*,1998,1
Modular; Visual Specifications of Software Processes.,Gregor Engels; Luuk Groenewegen,*,ISPW,1993,1
Konzeption einer integrierten Datenbank-Entwurfsumgebung,G Engels; U Hohenstein; L Neugebauer; G Saake; HD Ehrich,Zusammenfassung Es werden Konzepte für eine Entwurfsumgebung vorgestellt; in derWerkzeuge zur Unterstützung des konzeptionellen Datenbankentwurfs integriert sind.Grundlage für diese Umgebung sind umfangreiche theoretische Untersuchungen zurFestlegung eines semantisch wohldefinierten Datenmodells; mit dem insbesondere Nicht-Standard-Anwendungen geeignet modelliert werden können. Es werden eine Reihe vonEdier-; Analyse-und Ausführungswerkzeugen skizziert; die es ermöglichen; einkonzeptionelles Datenbankschema; also die Beschreibung der statischen Struktur einerDatenbank und der erlaubten Aktionen; zu entwickeln; zu untersuchen und auf einemexistierenden Datenbanksystem im Sinne eines" rapid prototyping"'auszutesten. Alle dieseWerkzeuge werden in einer Umgebung mit einheitlicher Benutzerschnittstelle integriert.,Proc. DBTA/SI Conf.“Data Dictionaries und Entwicklungswerkzeuge für Datenbankanwendungen,*,1
DeLFI 2004,Gregor Engels; Silke Seehusen,L. Kornelsen; U. Lucke; D. Tavangarian; M. Waldhauer; N. Ossipova Strategien und Werkzeugezur Erstellung multimedialer Lehr- und Lernmaterialien auf Basis von XML … P. Ziewer; H. SeidlAnnotiertes Lecture Recording … J. Pleumann Erfahrungen mit dem multimedialen; didaktischenModellierungswerkzeug DAVE … S. Thanheiser; F. Toussaint; H. Schmeck Die;;Softwaretanstelle" mit integriertem Verleihsystem fur mobile Gerate … F. Behringer; D.Engeldinger; K. Weicker Web-basierte Administration des Ubungsbetriebs mit ECLAUS …D. Reil; H. - J. Appelrath Kostenpflichtiger Content in Lemportalen … O. Ferstl; C. Ullrich EineMultiView-Benutzungsoberflache flir integrierte Lernumgebungen … P. Dawabi; M. WessnerModellierung von Blended Learning Szenarien … C. Kopka; D. Schmedding; J. Schroder DerUnified Process im Grundstudium - Didaktische Konzeption; von Lernmodulen und …,*,*,1
Auf dem Weg zu einer integrierten Datenbank-Entwurfsumgebung,G Engels; U Hohenstein; G Saake; HD Ehrich,Zusammenfassung Die hier vorgestellte Datenbank-Entwurfsumgebung hat zum Ziel;Software-Werkzeuge zur Unterstützung des Erstellens; Änderns; Analysierens und Testenseines konzeptionellen Datenbankschemas unter einer einheitlichen Benutzerschnittstelle zuintegrieren. Das Vorhaben basiert auf umfangreichen theoretischen Vorüberlegungen zurFestlegung eines semantisch wohldefinierten konzeptionellen Datenmodells. Diezugehörigen Schemata bestehen aus einer 4--Schichten-Spezifikation. ln den ersten beidenSchichten werden Objekte und Beziehungen zwischen diesen durch eine erweiterte Formvon Entity-Relationship-Diagrammen und anwendungsspezifische Attributwertebereichedurch algebraische Spezifikationen modelliert. ln der dritten Schicht werden durchdynamische Integritätsbedingungen in der Form temporaler Formeln zulässige …,Proc. GI-Workshop “Sprachspezifische Programmierumgebungen,*,1
Gerechtigkeit in flexiblen Arbeits-und Managementprozessen,Gregor Engels; Günter W Maier; Sonja K Ötting; Eckhard Steffen; Alexander Teetz,Zusammenfassung Cyber-Physical Systems werden vermehrt in allen Bereichen derIndustrie; Wirtschaft und Gesellschaft eingesetzt; um Produktions-undDienstleistungsprozesse zu unterstützen. Sie zeichnen sich dadurch aus; dass intelligente;softwaregestützte Komponenten und menschliche Akteure eng vernetzt sind; um komplexeAufgaben zu erfüllen. In diesen sozio-technischen Systemen werden Arbeits-undManagementprozesse ausgeführt; die sich flexibel an veränderte Situationsfaktorenanpassen und bei denen Aufgaben und insbesondere auch Entscheidungen sowohlautomatisiert als auch von menschlichen Akteuren durchgeführt werden. Um eine hoheNutzerakzeptanz dieser Systeme zu erzielen; muss bei der Modellierung und Umsetzungdieser Prozessunterstützung auf spezifische Eigenschaften von Beschäftigten geachtet …,*,2018,*
A Variability Model for Store-Oriented Software Ecosystems: An Enterprise Perspective,Bahar Jazayeri; Olaf Zimmermann; Gregor Engels; Dennis Kundisch,Abstract Pioneers of today's software industry like Salesforce and Apple have establishedsuccessful ecosystems around their software platforms. Architectural knowledge of theexisting ecosystems is implicit and fragmented among online documentation. In protection ofintellectual property; existing documentation hardly reveals influential business strategiesthat affect the ecosystem structure. Thus; other platform providers can hardly learn from theexisting ecosystems in order to systematically make reasonable design decisions withrespect to their business strategies to create their own ecosystems. In this paper; we identifya variability model for architectural design decisions of a store-oriented software ecosystemproduct line from an enterprise perspective; comprising business; application; andinfrastructure views. We derive the variability model from fragmentary material of existing …,International Conference on Service-Oriented Computing,2017,*
Model-Driven Context Management for Self-adaptive User Interfaces,Enes Yigitbas; Silas Grün; Stefan Sauer; Gregor Engels,Abstract The user interfaces (UIs) of interactive systems become increasingly complex sincemany heterogeneous and dynamically changing context-of-use parameters regarding userprofile; platform; and usage environment have to be supported. Self-adaptive UIs have beenpromoted as a solution for context variability due to their ability to automatically adapt to thecontext-of-use at runtime. Context modeling and context management are importantprerequisites for supporting self-adaptive UIs; but introduce additional complexity sincecontext information has to be captured using sensors from heterogeneous sources anddynamic context changes have to be monitored to enable UI adaptation at runtime. Toovercome the complex and cumbersome task of context management; we present a model-driven approach for developing a flexible context manager supporting self-adaptive UIs …,International Conference on Ubiquitous Computing and Ambient Intelligence,2017,*
Systematic spreadsheet construction processes,Jorge Mendes; Jácome Cunha; Francisco Duarte; Gregor Engels; João Saraiva; Stefan Sauer,Spreadsheets are used in professional business contexts to make decisions based oncollected data. Usually; these spreadsheets are developed by end users in an ad-hoc way.Thus; the business logic of a concrete spreadsheet is not explicit to end users; making itscorrectness hard to assess and users have to trust. We present an approach where structureand computational behavior of a spreadsheet are specified by a model with a process-likenotation based on pre-defined functional spreadsheet services with typed interfaces. Thisenables a consistent construction process of a spreadsheet that comprises defining itsstructure and computational behavior as well as filling it with data and executing the definedcomputational behavior. Thus; concrete spreadsheets are equipped with a specification oftheir construction process. This supports their understanding and correct usage; even in …,Visual Languages and Human-Centric Computing (VL/HCC); 2017 IEEE Symposium on,2017,*
From User Demand to Software Service: Using Machine Learning to Automate the Requirements Specification Process,Lorijn van Rooijen; Frederik Simon Baumer; Marie Christin Platenius; Michaela Geierhos; Heiko Hamann; Gregor Engels,Abstract—Bridging the gap between informal; imprecise; and vague user requirementsdescriptions and precise formalized specifications is the main task of requirementsengineering. Techniques such as interviews or story telling are used when requirementsengineers try to identify a user's needs. The requirements specification process is typicallydone in a dialogue between users; domain experts; and requirements engineers. In ourresearch; we aim at automating the specification of requirements. The idea is to distinguishbetween untrained users and trained users; and to exploit domain knowledge learned fromprevious runs of our system. We let untrained users provide unstructured natural languagedescriptions; while we allow trained users to provide examples of behavioral descriptions. Inboth cases; our goal is to synthesize formal requirements models similar to statecharts …,2017 IEEE 25th International Requirements Engineering Conference Workshops (REW),2017,*
Adapt-UI: an IDE supporting model-driven development of self-adaptive UIs,Enes Yigitbas; Stefan Sauer; Gregor Engels,Abstract Self-adaptive UIs (SAUIs) have been promoted as a solution for context variabilitydue to their ability to automatically adapt to the context-of-use at runtime. The developmentof SAUIs is a complex task since self-adaptivity and context management aspects have to beincorporated in the UI development process. In this paper; we present an integrateddevelopment environment (IDE) for model-driven development of SAUIs. This IDE; namedAdapt-UI; provides integrated views for UI; context and adaptation modeling. Based on thespecified models; final UI code and context as well as adaptation services are generatedand integrated in an overall UI framework. This allows runtime UI adaptation realized by anautomatic reaction to context-of-use changes. The benefit of our approach is demonstratedby a case study; showing the development of self-adaptive UIs for a university library …,Proceedings of the ACM SIGCHI Symposium on Engineering Interactive Computing Systems,2017,*
Visual Requirements Modeling for Cross-Device Systems,Dennis Wolters; Christian Gerth; Gregor Engels,Abstract. Modern information systems have to support a variety of different device types likedesktop computers; smartphones; or tablets. Furthermore; it is important to enable users touse device types that fit their needs or are suited for the tasks at hand; eg; allowing them touse multiple devices in parallel or sequentially by switching from one device to another.Such cross-device interactions must be taken into account already during requirementsanalysis to ensure that they are properly addressed in later phases of development.Unfortunately; current requirements modeling techniques do not provide adequatetechniques to model cross-device systems. In this paper; we present an extended form ofuse case diagrams able to model such systems. Using our approach it is possible to specifywhich device types can be used when performing a certain use case and what kinds of …,Computer Science and Information Systems,2017,*
Message from the IoT-ASAP Chairs,Romina Spalazzese; Marie C Platenius; Steffen Becker; Gregor Engels; Per Persson,The Internet of Things (IoT) includes billions of things; ie; connected objects and devices thatare heterogeneous; distributed; and possibly intelligent and run applications and servicesfrom the Internet of Services (IoS). Things span; for instance; RFID tags; sensors; computers;plants; lamps; autonomous robots; and self-driving vehicles. Often; things are connectedthrough heterogeneous platforms also providing support for; eg; data collection;management; and applications deployment. Additionally; things can offer their functionalitiesas (web) services facilitating their dynamic interaction.,Software Architecture Workshops (ICSAW); 2017 IEEE International Conference on,2017,*
On-The-Fly Computing,Daniel Szopinski; Bahar Jazayeri; Gregor Engels; Dennis Kundisch,Das Enterprise Architecture Management stellt umfangreiche Methoden; Modelle undFrameworks für die Modellierung von Unternehmensarchitekturen zur Verfügung. DieEntwicklung von Software und deren Integration in IT-Landschaften ist heutzutagezunehmend von Komplexität und Unsicherheit geprägt. Dieser Beitrag (Research-in-progress) möchte ein neues Paradigma–das On-The-Fly Computing–vorschlagen; umdiesen Herausforderungen zu begegnen; mögliche Lösungsansätze zu diskutieren sowieerste Ergebnisse eines Referenzmodells für individualisierte IT-Dienstleistungen indynamischen Software-Märkten dokumentieren.,INFORMATIK 2017,2017,*
Concept-Based Engineering of Situation-Specific Migration Methods,Gregor Engels; Markus Klenke,Abstract. Software migration methods enable to reuse legacy systems by transferring theminto new environments. Thereby; the method used needs to fit to the project's situation byconsidering conceptual differences between the source and target environment andautomating parts of the migration whenever suitable. Using an inappropriate migrationmethod may lead to a decreased software quality or increased effort. Various methodengineering approaches have been proposed to support the development of situation-specific migration methods. However; most do not provide a sufficient degree of flexibilitywhen developing a method or fall short in guiding the endeavor. To address this problem;we introduce a situational method engineering framework to guide the development ofmodel-driven migration methods by assembling predefined buildings blocks. The …,Software Reuse: Bridging with Social-Awareness: 15th International Conference; ICSR 2016; Limassol; Cyprus; June 5-7; 2016; Proceedings,2016,*
Message from the workshop chairs,Gregor Engels; Arbi Ghazarian; Paul Ralph,Skip to main content Arizona State University Logo …,Unknown Journal,2016,*
SOFSEM 2016: Theory and Practice of Computer Science: 42nd International Conference on Current Trends in Theory and Practice of Computer Science; Harracho...,Rūsiņš Mārtiņš Freivalds; Gregor Engels; Barbara Catania,This book constitutes the proceedings of the 42nd International Conference on CurrentTrends in Theory and Practice of Computer Science; SOFSEM 2016; held in Harrachov;Czech Republic; in January 2016. The 43 full papers presented in this volume were carefullyreviewed and selected from 116 submissions. They are organized in topical sectionsnamed: foundations of computer science; software engineering: methods; tools;applications; and data; information; and knowledge engineering. The volume also contains7 invited talks in full paper length.,*,2016,*
Thoughts on the Evolution Towards Model-Integrating Software,Mahdi Derakhshanmanesh; Marvin Grieger; Jürgen Ebert; Gregor Engels,Developing software that can be modified and evolved easily is a challenging task. Yet; thefastpaced market requires quick adaptation of products in reaction to emergingrequirements. As a basis for flexible software; we proposed to develop software based onModel-Integrating Components (MoCos) in previous work [1]. A MoCo is a non-redundant;reusable and executable combination of logically related models and code in an integratedform where both parts are stored together in one component. The outcome of twocomprehensive feasibility studies on building software with Mo-Cos let us conclude thatcombining the strengths of modeling languages (eg; abstraction; separation of concerns)and programming languages (eg; performance) within components yields flexible andwellperforming software; indeed. Even though we provided the MoCo concept as a basis …,Softwaretechnik-Trends,2016,*
Theory and practice of model transformations 2016,PME Van Gorp; G Engels,Abstract This volume contains the papers presented at ICMT 2016: the 9th InternationalConference on Model Transformation held during July 4–5; 2016; in Vienna as part of theSTAF 2016 (Software Technologies: Applications and Foundations) conference series. ICMTis the premier forum for researchers and practitioners from all areas of model transformation.,*,2016,*
Theory and practice of model transformations 2016: preface,PME Van Gorp; G Engels,KNAW Narcis. Back to search results. Publication Theory and practice of modeltransformations 2016:preface (2016). Pagina-navigatie: Main …,Theory and Practice of Model Transformations,2016,*
Theory and Practice of Model Transformations,Pieter Van Gorp; Gregor Engels,This volume contains the papers presented at ICMT 2016: the 9th International Conferenceon Model Transformation held during July 4–5; 2016; in Vienna as part of the STAF 2016(Software Technologies: Applications and Foundations) conference series. ICMT is thepremier forum for researchers and practitioners from all areas of model transformation.Model transformation encompasses a variety of technical spaces; including modelware;grammarware; dataware; and ontoware; a variety of model representations; eg; based ondifferent types of graphs; and a range of transformation paradigms including rule-basedtransformations; term rewriting; and manipulations of objects in generalpurposeprogramming languages.,*,2016,*
4th SEMAT Workshop on General Theory of Software Engineering (GTSE 2015),Paul Ralph; Gregor Engels; Ivar Jacobson; Michael Goedicke,General theories explain the fundamental phenomena that constitute a research domain.They apply across a domain and often integrate many theories and concepts into a singlecohesive view. While general theories are extremely important for education and researchcoordination; and common in many disciplines (eg sociology; criminology; electricalengineering; biology; physics); software engineering lacks a well-accepted general theory.The General Theory of Software Engineering workshop seeks to rectify this situation bypromoting theory development in software engineering. The fourth workshop in this series;held in conjunction with the International Conference on Software Engineering; displayed apromising trend toward more theory development papers.,Software Engineering (ICSE); 2015 IEEE/ACM 37th IEEE International Conference on,2015,*
SEAMS 2015,Paola Inverardi; Bradley Schmerl; Romina Spalazzese; Jesper Andersson; Nelly Bencomo; Yuriy Brun; Radu Calinescu; Javier Cámara; Betty HC Cheng; Myra Cohen; Gregor Engels; Antonio Filieri; David Garlan; Carlo Ghezzi; Holger Giese; Hassan Gomaa; Alessandra Gorla; Seok–Won Lee; Rogério de Lemos; Jeff Magee; Sam Malek; Hausi A Müller; John Mylopoulos; Bashar Nuseibeh; Patrizio Pelliccione,The 10th International Symposium on Software Engineering for Adaptive and Self-ManagingSystems (SEAMS 2015) is being held in Firenze; Italy on 18-19 May 2015. Welcome to theproceedings! Many more domains are requiring software systems to be adaptive to changingcontexts; environments and requirements; to be resilient in the face of uncertainty and error; andto be composed and managed at run time. SEAMS provides a venue to present novel self-adaptiveapplications and domains; and to formulate and discuss methods for engineering such systemsin a methodical and assurable way … SEAMS 2015 features two keynote presentations; 16technical presentations; and 3 presentations of artifacts over two days. The invited keynote speakersare Jeff Kramer (Imperial College London; UK) and Marco Carvalho (Florida Institute ofTechnology; USA) … This proceedings contains the final versions of the papers …,*,2015,*
Why Models and Code Should be Treated as Friends,Mahdi Derakhshanmanesh; Jürgen Ebert; Gregor Engels,Abstract Various approaches have been proposed to face the difficulties related toconstructing and maintaining modern software systems. Often; they incorporate models insome part of the development or evolution process. Even the use of models at runtimeseems to receive more and more attention as a way to enable the quick; systematic andautomated application of change operations on software as it executes. Assuming thatexisting systems have been largely developed in code and that novel target architecturesdepend on–or even embed–models to some extent; the possible roles of models and codeas well as their interaction and interchangeability need to be thoroughly examined. In thisposition paper; we attempt to initiate a discussion on why models and code should becomecloser friends.,Softwaretechnik-Trends,2014,*
Object-oriented specification of,G Engels; LPJ Groenewegen; G Kappel,Abstract Object-oriented specification mechanisms have become famous for modellingstructure and behaviour together in terms of autonomous objects communicating viamessage passing. However; whereas most object-oriented specification methods are strongin modelling the local behaviour of single objects; they fall short on modelling thecoordinated behaviour and collaboration of several objects together. The aim of this paper isto contribute to fill this gap. The paper reports on concepts; language constructs; andexperiences with three collaboration formalisms in the area of object-oriented specifications.,Advanced IT Tools: IFIP World Conference on IT Tools 2–6 September 1996; Canberra; Australia,2013,*
Informatik’99: Informatik überwindet Grenzen,Kurt Beiersdörfer; Gregor Engels; Wilhelm Schäfer,Technologische Entwicklungen in der Informatik haben heute weitreichende Auswirkungennicht nur auf den privaten Alltag; sondern vor allem auch auf die gesamtwirtschaftlicheEntwicklung. Dieser umfassenden Bedeutung will die 29. Jahrestagung der Gesellschaft fürInformatik unter dem Motto „Informatik überwindet Grenzen “gerecht werden.,*,2013,*
Visual Specification of Complex,Gregor Engels,Abstract The paper presents an approach to specify in an integrated way by visual;diagrammatic languages the structural and behavioural aspects of database applications.Hereby; well-known extended Entity-Relationship diagrams are employed to specify thestructural aspects. The behavioural aspects of a database application are specified by usingViAL (Visual Action Language). ViAL specifications are a special kind of data (or betterobject) flow diagrams; where so-called elementary actions are used as ba-sic buildingblocks. These elementary actions are automatically derived from a given EER diagram. Theyguarantee that after finishing their ex-ecution all inherent integrity constraints are fulfilled.The paper explains the features of the language ViAL and gives some illustrating examples.,East/West Database Workshop: Proceedings of the Second International East/West Database Workshop; Klagenfurt; Austria; 25–28 September 1994,2013,*
Service Matching under Consideration of Explicitly Specified Service Variants,Marie Christin Platenius; Markus von Detten; Wilhelm Schafer; Christian Gerth; Gregor Engels,One of the main ideas of Service-Oriented Computing (SOC) is the delivery of flexiblycomposable services provided on world-wide markets. For a successful service discovery;service requests have to be matched with the available service offers. However; in asituation in which no service that completely matches the request can be discovered; thecustomer may tolerate slight discrepancies between request and offer. Some existing fuzzymatching approaches are able to detect such service variants; but they do not allow toexplicitly specify which parts of a request are not mandatory. In this paper; we improve anexisting service matching approach based on Visual Contracts leveraging our preliminarywork of design pattern detection. Thereby; we support explicit specifications of servicevariants and realize gradual matching results that can be ranked in order to discover the …,Web Services (ICWS); 2013 IEEE 20th International Conference on,2013,*
On-the-fly Computing-Das Entwicklungs-und Betriebsparadigma für Softwaresysteme der Zukunft.,Gregor Engels,On-the-Fly Computing– Das Entwicklungs-und Betriebsparadigma für Softwaresysteme der ZukunftGregor Engels Institut für Informatik Universität Paderborn Zukunftsmeile 1 33102 Paderbornengels@ upb. de Extended Abstract Alle Domänen und Branchen der heutigen Wirtschaft sindauf eine effiziente und effektive Entwicklung von benötigten Softwaresystemen angewiesen.Das 40 Jahre alte Prinzip der Beschaffung von Softwaresystemen durch den Einkauf vonteuren; relativ unflexiblen Standardlösungen beziehungsweise der noch teureren Erstellungdurch Softwarehäuser oder eigene Softwareabteilungen muss deshalb in Frage gestelltwerden. Mit dem Einsatz von Cloud Computing-Techniken wird es möglich; Softwaresystemeund die für den Betrieb benötigten Ressourcen nur bei Bedarf und nur in der benötigten Formeinzukaufen. Mit dem Ansatz der service-orientierten Architekturen stehen Methoden zur …,Software Engineering,2013,*
Fachartikel-IT IST NICHT GLEICH IT: EIN PLÄDOYER FÜR EINE SITUATIONSBEZOGENE SOFTWAREENTWICKLUNG,Uwe Dumslaff; Gregor Engels; Marion Kremer,*,Objekt Spektrum,2012,*
Approaches to improve reliability of service composition,Jörg Hohwiller; Diethelm Schlegel; Gregor Engels,Abstract Nowadays; enterprises realize functionality as systems that are composed ofservices. This includes even mission critical parts of their business. Hence; the reliability ofsuch systems including their composition and services is increasingly important. However; itis a challenge to establish a high reliability in this context because distribution offunctionality increases the potential points of failure. Different approaches exist to increasereliability but they typically act on a restricted scope like network layer or software design. Inorder to obtain better results; it is often necessary to combine multiple approachesdepending on the actual situation and the requirements. This paper classifies commonlyused approaches according their scope and rates their effects on the reliability. Thereby; itsupports the selection of approaches to improve reliability and finally helps to find a …,International Conference on Service-Oriented Computing,2011,*
Sicherheit in der Informationstechnik-Verantwortungsteilung zwischen Nutzern; Wirtschaft und Staat,Martin Schallbruch; Stephan Micklitz; Constanze Kurz; Luc Steels; Manfred Broy; Danny Dolev; Christa Weßel; Kai Meyer; Felix Zwingenberger; Marcel Donges; Andreas Harth; Denny Vrandecic; Thomas Magedanz; Julius Müller; Philipp Taesler; Monique Janneck; Manfred F Moldaschl; Christian Traubinger; Doris Blutner; Katrin Hirte; Max-R Ulbricht; Felix Limbach; Jochen Wulf; Rüdiger Zarnekow; Michael Düser; Johannes Kettern; Frank Joachim Frey; Robert Mertens; Stefan Andres; Samir Dorhmi; Ulrich Bareth; Axel Küpper; Behrend Freese; Marian Benner; Volker Gruhn; Sebastian Milenk; Djamshid Tavangarian; Daniel Versick; Odej Kao; Andreas Kohne; Robert Hilbrich; Matthias Gerlach; Martin Von Löwis; Peter Tröger; Evgeny Semenov; Matthias Goeken; Konrad Walser; Stefan Stieglitz; Christian Meske; Jens Bartenschlager; Karin Gräslund; Jana Nizold; Sandy Eggert; Martin Burwitz; Hannes Schlieter; Werner Esswein; Christian Neuhaus; Robert Wierschke; Andreas Polze; Plamen Kiradjiev; Bernd Rehwaldt; Yevheniy Eydelman; Carol Gutzeit; Steffen Dienst; Stefan Kühne; Jörg Hohwiller; Diethelm Schlegel; Lothar Wieske; Andre Grübel; René Reiners; Helge Buckow; Hans-Jürgen Groß; Gunther Piller; Norbert Strumpf; Oliver F Nandico; Johannes Willkomm; Alfred Zimmermann; Maciej Wienszczak; Robert Tolksdorf; Oliver Stecklina; Peter Langendörfer; Simon Hunke; Gabriel Klein; Marko Jahnke; Lothar Braun; Alexander Klein; Leon Aaron Kaplan; Georg Carle; Hannes Federrath; Christoph Gerber; Stefan Metzger; Wolfgang Hommel; Helmut Reiser; Alexander Knaus; Johannes Stüttgen; Jan Göbel; Markus Engelberth; Felix Freiling; Joel Chinnow; Dennis Grunewald; Rainer Bye; Ahmet Camtepe; Sahin Albayrak; Martin Möller; Karsten Bsufka; Kurt Sandkuhl; Ralf-Detlef Kutsche; Thomas Baar; Matthias Book; Klaus Aengenvoort; Nikola Milanovic; Rolf Hänisch; Bernd Landmesser; Wilhelm Mülder; Katrin Flöter; Henner Knabenreich; Andreas Eckhardt; Mark Andrási; Jürgen Karla; Björn Gronenschild; Stefan Strohmeier; Christian Gasper; Daniel Müller; Eduard Wessel; Ricardo Buettner; Andreas Mielke; Philipp Bitzer; Eike M Hirdes; Axel Hoffmann; Jan Marco Leimeister; Daniel Fürstenau; Gregor Grambow; Roy Oberhauser; Manfred Reichert; Uta Lösch; David Müller; Elmar P Wach; Katja Hose; Steffen Metzger; Ralf Schenkel; Wolfgang Müller; Ralf Hofestädt; Klaus Kuhn; Can Türker; Jan Taubert; Fabian Prasser; Sebastian Wurst; Gregor Lamla; Alfons Kemper; Sebastian Arzt,Opens internal link in current window A Opens internal link in current window B Opensinternal link in current window C Opens internal link in current window D Opens internal linkin current window EOpens internal link in current window F Opens internal link in currentwindow G Opens internal link in current window H Opens internal link in current window IOpens internal link in current window J,INFORMATIK 2011-Informatik schafft Communities,2011,*
Workshop und Fachgruppentreffen der FG OOSE-" Evolutionäre Software-und Systementwicklung-Methoden und Erfahrungen"(ESoSyM 2011).,Gregor Engels; Bernhard Schätz; Matthias Riebisch; Christian Zeidler; ABB Forschungszentrum Ladenburg,Workshop und Fachgruppentreffen der FG OOSE– „Evolutionäre Software-undSystementwicklung– Methoden und Erfahrungen “(ESoSyM 2011) Gregor Engels1; BernhardSchätz2; Matthias Riebisch3; Christian Zeidler4 1 Universität Paderborn engels@ upb. de 2fortiss GmbH schaetz@ fortiss. org 3 Technische Universität Ilmenau matthias. riebisch@tu-ilmenau. de 4 ABB Forschungszentrum Ladenburg christian. zeidler@ de. abb. com Bei derEntwicklung von Softwaresystemen sind immer komplexere Anforderungen zu erfüllen. Gleichzeitigsteigen die Forderungen nach langfristiger Nutzbarkeit bei einfa- cher Änderbarkeit derSysteme. Evolutionäre Entwicklung und modellbasierte Methoden helfen; diese Ziele zu erreichenund Risiken der Entwicklung besser zu beherrschen. Aller- dings bestehen Differenzen zwischender Entwicklung von Ansätzen in der Forschung und der Anwendung in industrieller …,Software Engineering,2011,*
Towards economical software release recommendations,Yavuz Sancar; Frank Brüseke; Stefan Sauer; Gregor Engels; Hendrik Voigt,Abstract An economic view on software quality is essential for company success. Aneconomic view is also needed for the assessment whether software is ready for release. Togive an economical software release recommendation; we must trade off the consequentialcosts against the removal costs. Simply causing release recommendations on failure-basedmetrics is not sufficient. We must also regard the test quality if the software release dependson failure statistics. In this work; we survey existing release recommendation approaches.We conclude that existing approaches do not sufficiently regard costs or test quality. Thus;none of the approaches can give an economical release recommendation. We present arelease recommendation framework. It focuses on trading off the failure consequential costsagainst the failure removal costs for each failure at the end of the test process. The test …,Proceedings of the 1st Workshop on Testing Object-Oriented Systems,2010,*
Towards Generalizing Visual Process Patterns,Christian Soltenborn; Gregor Engels,Abstract Visual Process Patterns (VPP) is a visual language to describe constraints on thebehavior of UML Activities. They have been developed for the sake of formulating andverifying requirements on business process models in a visual; intuitive way (with UMLActivities being one possible description language). In the VPP approach; a visual processpattern is translated into an LTL formula; which can then be verified against a transitionsystem describing the behavior of the Activity under consideration.,Electronic Communications of the EASST,2010,*
Software Engineering 2010: Workshopband (inkl. Doktorandensymposium); Paderborn; 22-26.02. 2010,Gregor Engels; Markus Luckey; Alexander Pretschner; Ralf Reussner,*,*,2010,*
Guest Editorial to the Special Section on MODELS 2007,Gregor Engels,This section of “Software & Systems Modeling” contains four selected papers of the tenthMODELS conference. MODELS 2007 was held in Nashville; TN; USA; from September 30 toOctober 5; 2007. This conference on Model Driven Engineering Languages and Systemshas established itself as the key international venue for the presentation of scientific resultsin the domain of model driven engineering and related topics such as software modelingand model transformation. A total of 45 papers were selected for publication in theconference proceedings from 158 papers submitted for review. The papers presented at theconference covered a wide range of issues from model transformation; meta modeling;model and consistency analysis; service and process modeling; language definition; as wellas modeling methods. The program of the conference week comprised three keynote …,Software and Systems Modeling,2010,*
IKS Deliverable-D1. 2 Report: Semantic Benchmark Applications,Benjamin Nagel; Stefan Sauer; Gregor Engels; Wernher Behrendt; Andreas Gruber; Tobias Kowatsch; Wolfgang Maass,Confidential Deliverable-The objective of this deliverable is to describe the results of theexercise which is executed to benchmark the industrial software capabilities as one aspectof the requirements capturing process for the Interactive Knowledge Stack. The theoreticalfoundation and the underlying model which are used for the benchmarking approach havebeen designed in (Kowatsch et al. 2009; IKS D1. 1 Design of the Semantic BenchmarkExperiment). Combining business-driven requirements and technical aspects thebenchmark model provides a two-fold approach addressing IT executives of CMS providersand customers on the one hand and CMS developers and architects on the other hand. Theexperiment includes interviews and development tasks (" semantic challenges") to evaluatebusiness needs and technological capabilities.,*,2010,*
International Colloquium on Graph and Model Transformation–On the occasion of the 65th birthday of Hartmut Ehrig (GMT 2010),Gregor Engels; Christian Soltenborn,Abstract: Deriving a new language LB from an already existing one LA is a typical task indomain-specific language engineering. Here; besides adjusting LA's syntax; the languageengineer has to modify the semantics of LA to derive LB's semantics. Particularly; in case ofbehavioral modeling languages; this is a difficult and errorprone task; as changing thebehavior of language elements or adding behavior for new elements might have undesiredside effects. Therefore; we propose a test-driven language derivation process. In a first step;the language engineer creates example models containing the changed or newly addedelements in different contexts. For each of these models; the language engineer alsoprecisely describes the expected behavior. In a second step; each example model and itsdescription of behavior is transformed into an executable test case. Finally; these test …,Electronic Communications of the EASST,2010,*
Graph Transformations: 4th International Conference; ICGT 2008; Leicester; United Kingdom; September 7-13; 2008; Proceedings,Hartmut Ehrig; Reiko Heckel; Grzegorz Rozenberg; Gabriele Taentzer,This book constitutes the refereed proceedings of the 4th International Conference on GraphTransformations; ICGT 2008; held in Leicester; UK; in September 2008. The 27 revised fullpapers presented together with 5 tutorial and workshop papers and 3 invited lectures werecarefully selected from 57 submissions. All current aspects in graph drawing are addressedincluding hypergraphs and termgraph rewriting; applications of graph transformation;execution of graph transformations; compositional systems; validation and verification; graphlanguages and special transformation concepts; as well as patterns and modeltransformations. In addition the volume contains 17 short papers of the ICGT 2008 DoctoralSymposium.,*,2008,*
Revealing Commonalities Concerning Maintenance of Software Product Line Platform Components,Martin Assmann; Gregor Engels; Thomas von der Massen; Andreas Wübbeke,Abstract Software Product Line (SPL) development provides the possibility of reusingcommon parts in similar software products. However the SPL approach does not centrallyimprove the maintenance of software products of a Software Product Line. This paperpresents an approach for reducing maintenance costs of SPL products by using the conceptSoftware as a Service (SaaS) by revealing exploitable commonalities concerning themaintenance of SPL platform components. This SPL-SaaS approach was developed withthe experiences of arvato services integrating the software product line concept since years.It shows up the advantageous and disadvantageous characteristics of platform componentsthat play a role for the concept combination. Main goal is to enable an IT-architect to identifyplatform components to be adequate for a common maintenance. Therefore criteria for …,International Conference on Evaluation of Novel Approaches to Software Engineering,2008,*
Graphtransformationen für komponentenbasierte Softwarearchitekturen,Wilhelm Schäfer; Gregor Engels,Die steigende Komplexität sowohl bei der Entwicklung als auch im laufenden Betrieb vonSoftwaresystemen stellt neue Anforderungen an die Spezifikation vonSoftwarearchitekturen. So sind Entscheidungen bereits auf der obersten architektonischenDesignebene zu treffen; um im resultierenden Softwaresystem Ziele wie z. B. eine guteSkalierbarkeit oder eine hohe Erweiterbarkeit zu erreichen. Um solcheDesignentscheidungen zu beschreiben; werden Architekturbeschreibungssprachen [SG96]eingesetzt. Solche Sprachen ermöglichen die Beschreibung; Modellierung undStrukturierung einer Softwarearchitektur mit formalen und graphischen Artefakten. Einaktueller Trend im Software Engineering ist die Entwicklung von selbstoptimierendenSystemen [FGK+ 04]. Ein selbstoptimierendes Softwaresystem passt sein Verhalten im …,*,2008,*
Part II-Universal Access Methods; Techniques and Tools-Easy Model-Driven Development of Multimedia User Interfaces with GuiBuilder,Stefan Sauer; Gregor Engels,*,Lecture Notes in Computer Science,2007,*
End-user (further) development: A case for negotiated semiotic engineering,Clarisse de Souza,Abstract Semiotic Engineering views human-computer interaction as a special case ofcomputer-mediated communication. In it; designers communicate to users their designvision about computer artifacts: what they are meant to do and how; but also what benefitsthey bring to users' lives (as perceived by designers). The semiotic theories of meaningsubscribed by Semiotic Engineering postulate that meanings always evolve-there are nofixed meanings. Thus; the meanings users assign to computer artifacts and the meaningfulsituations in which they expect such artifacts to be valuable evolve. End user development isthus a requirement for" useful artifacts". Users should be able to encode new meanings andmeaningfulness in them. However; there are limitations for this encoding: helping designersand users negotiate new meanings at interaction time; through the mediation of systems' …,Dagstuhl Seminar Proceedings,2007,*
Dependability in Web Software,Sebastian Elbaum; II Fisher; Gregg Rothermel,Abstract The web is an increasingly important platform used for a wide variety of tasks on aregular basis. And as the web becomes more important; the ways in which it is used growsincreasingly sophisticated. End users build web pages and applications; use webapplications in new and unexpected ways and use web macro tools to automate web-basedtasks. All of these tasks are error-prone. In addition; they often depend on externalcomponents outside of the control of the developer or end user. Therefore we have beendeveloping tools and methodologies to assist users with these,Dagstuhl Seminar Proceedings,2007,*
End-user Programming of Ambient Narratives,Mark van Doorn,Abstract Ambient Intelligence is a vision on the future of consumer electronics;telecommunications and computing in which devices move into the background while at thesame time placing the user experience in the foreground. Producing Ambient Intelligentenvironments on a large scale is problematic however. First; it is technologically not possiblein the foreseeable future to mass produce a product or service that generates AmbientIntelligence; given the current state-of-the-art in machine learning and artificial intelligence.Second; it is economically not feasible to manually design and produce Ambient Intelligenceapplications for each person individually. One of the main research questions in creatingsuch environments is the design of a system capable of supporting mass customization ofambient experiences by means of end-user programming. A brief outline of the approach …,Dagstuhl Seminar Proceedings,2007,*
Helping Everday Users Establish Confidence for Everyday Applications,Mary Shaw,Abstract End users obtain their desired results by combining elements of information andcomputation from different applications. Software engineering provides little support foridentifying; selecting; or combining these elements â€“that is; for helping end users todesign computational support for their own tasks. Software engineering provides even lesssupport to help end users to decide whether the resulting system is sufficiently dependableâ€“whether it will meet their expectations. Many users; especially end users; basejudgments about software on informal and undependable information; and they drawconclusions with informal rather than rational decision methods. We have been developingsupport for everyday dependability; with an emphasis on expressing expectations inabstractions familiar to the user and on obtaining software behavior that reasonably …,Dagstuhl Seminar Proceedings,2007,*
Helping Everyday Users Establish Confidence for Everyday Applications,Margaret H Burnett Germany; Gregor Engels; Brad A Myers,Abstract End users obtain their desired results by combining elements of information andcomputation from different applications. Software engineering provides little support foridentifying; selecting; or combining these elements–that is; for helping end users to designcomputational support for their own tasks. Software engineering provides even less supportto help end users to decide whether the resulting system is sufficiently dependable–whetherit will meet their expectations. Many users; especially end users; base judgments aboutsoftware on informal and undependable information; and they draw conclusions withinformal rather than rational decision methods. We have been developing support foreveryday dependability; with an emphasis on expressing expectations in abstractionsfamiliar to the user and on obtaining software behavior that reasonably satisfies those …,*,2007,*
07081 Executive Summary--End-User Software Engineering,Margaret M Burnett; Gregor Engels; Brad A Myers; Gregg Rothermel,Abstract From 18.01. 07 to 23.02. 07; the Dagstuhl Seminar 07081;" End-User SoftwareEngineering''; was held in the International Conference and Research Center (IBFI); SchlossDagstuhl. During the seminar; several participants presented their current research; andongoing work and open problems were discussed. This document summarizes the event.,Dagstuhl Seminar Proceedings,2007,*
End Users Creating More Effective Software,Brad A Myers,Abstract: End-User Software is created using a variety of different techniques andparadigms. The “creating” part is defined as the process of representing the desired programin a computer-understandable form; and entering that representation into the computer.Programs can be represented using textual languages; visual (also called graphical)languages; spreadsheets (which are often included as a type of visual language);programming by example; or simple menu-based specifications. Textual languages rangefrom general purpose languages such as Java; to special purpose languages such asStarLogo and MatLab for simulations and the HANDS language for kids; to “programming”using English as in Metafor. There is also research on how tools can make it easier to enterthe text; such as the Alice syntax-directed editor. Visual Programming languages use 2D …,Dagstuhl Seminar Proceedings,2007,*
07081 Abstracts Collection---End-User Software Engineering,Margaret M Burnett; Gregor Engels; Brad A Myers; Gregg Rothermel,Abstract From 18.01. 07 to 23.02. 07; the Dagstuhl Seminar 07081``End-User SoftwareEngineering''was held in the International Conference and Research Center (IBFI); SchlossDagstuhl. During the seminar; several participants presented their current research; andongoing work and open problems were discussed. Abstracts of the presentations givenduring the seminar as well as abstracts of seminar results and ideas are put together in thispaper. The first section describes the seminar topics and goals in general. Links to extendedabstracts or full papers are provided; if available.,Dagstuhl Seminar Proceedings,2007,*
Dank an die Gutachter,K Aberer; G Alonso; U Aßmann; T Braun; AP Buchmann; A Dengel; G Engels; JC Freytag; S Glesner; K Grimm; AG DaimlerChrysler; RH Berlin Güting; S Herrmann; F Kammüller; B König-Ries; D Kossmann; B Krämer; K Küspert; J Lechtenbörger; B Mitschang; A Oberweis; A Poetzsch-Heffter; L Prechtelt; N Ritter; R Schenkel; H Schlingloff; B Seeger; B Steffen; D Taubner; JUBS AG; Basel Tychy,*,*,2006,*
Special Issue with Selected Papers from ICGT 2004,Gregor Engels; Fernando Orejas; Francesco Parisi-Presicce,Since its origins in the late 1960's; the field of graph transformations has been systematicallydeveloped and applied in the many areas where static and dynamic modeling by means ofgraphical structures play an important role. Following a successful First InternationalConference on Graph Transformation in Barcelona (ES); the Second InternationalConference on Graph Transformation (ICGT 2004) was held in Rome (IT) in September2004. The ICGT series of conferences; to be held every 2 years; follows a series ofinternational workshops that started in 1978 and were organized at four-year intervals. Thescope of the conference encompasses graphical structures of various kinds; like graphs;trees; diagrams; networks; and visual sentences; as an intuitive and expressive way todescribe complex systems; whose evolution is described by transformations of such …,Fundamenta Informaticae,2006,*
Web Engineering,Gregor Engels,*,*,2005,*
Modellbasierte Softwareentwicklung “Seminar im Wintersemester 2004/05,Stefan Sauer; Gregor Engels,*,*,2005,*
Volume Editors,Jun-Prof Dr Holger Giese; Albert Zündorf; Holger Giese; Gregor Engels; Pieter van Gorp; Sabine Glesner; Luuk Groenewegen; Reiko Heckel; Jens Jahnke; Mark Minas; Manfred Nagl; Jörg Niere; Bernhard Rumpe; Andy Schürr; Wilhelm Schäfer; Dániel Varró,Fujaba is an Open Source UML CASE tool project started at the software engineering groupof Paderborn University in 1997. It initially combined features of commercial “ExecutableUML” CASE tools with rule-based visual programming concepts adopted from its ancestor;the graph transformation tool PROGRES. In 2002; Fujaba was redesigned and became theFujaba Tool Suite with a plug-in architecture allowing developers to add functionality easilywhile retaining full control over their contributions. Fujaba followed the model-drivendevelopment philosophy right from its beginning in 1997. At the early days; Fujaba had aspecial focus on code generation from UML diagrams resulting in a visual programminglanguage with a special emphasis on object structure manipulating rules. Today; at leastseven rather independent tool versions are under development in Paderborn; Kassel …,*,2005,*
Special issue on modeling and development of multimedia systems,G Engels; S Sauer,*,*,2004,*
Graph Transformations: Second International Conference; ICGT 2004; Rome; Italy; September 28-October 1; 2004; Proceedings,Hartmut Ehrig; Gregor Engels; Francesco Parisi-Presicce; Grzegorz Rozenberg,ICGT 2004 was the 2nd International Conference on Graph Transformation; following thefirst one in Barcelona (2002); and a series of six international workshops on graphgrammars with applications in computer science between 1978 and 1998. ICGT 2004 washeld in Rome (Italy); Sept. 29–Oct. 1; 2004 under the auspices of the European Associationfor Theoretical Computer Science (EATCS); the European Association of Software Scienceand Technology (EASST); and the IFIP WG 1.3; Foundations of Systems Specification. Thescope of the conference concerned graphical structures of various kinds (like graphs;diagrams; visual sentences and others) that are useful when describing complex structuresand systems in a direct and intuitive way. These structures are often augmented withformalisms that add to the static description a further dimension; allowing for the …,*,2004,*
Workshop on Petri Nets and Graph Transformations,Hartmut Ehrig; Julia Padberg; Grzegorz Rozenberg,Abstract The relationship between graph grammars and Petri nets is the topic of thisworkshop with the emphasis on work in progress and especially the transfer of conceptsbetween both areas. Both areas are prominent specification formalisms for concurrent anddistributed systems. It is well-known that the token game of place-transition nets can bemodeled by double pushouts of discrete labeled graphs. This allows to relate basic notionsof place-transition nets like marking; enabling; firing; steps; and step sequences tocorresponding notions of graph grammars and to transfer semantical concepts from Petrinets to graph grammars. Since a marking of a net on one hand and a graph of a graphgrammar on the other hand correspond to the state of a system to be modeled; graphgrammars can be seen to generalize place-transition nets by allowing more structured …,International Conference on Graph Transformation,2004,*
KT 4–Integrationsplattform,Klaus Alfert; Ernst-Erich Doberkat; Gregor Engels; Jan Hendrik Hausmann; Corina Kopka; Marc Lohmann; Jörg Pleumann; Annika Wagner,Dieser Bericht fasst die Arbeit des Koordinationsteams 4 (KT4) im Rahmen des ProjektesMuSofT (Multimedia in der Softwaretechnik) zusammen. Aufgabe von KT4 war dieRealisierung einer technischen Plattform zur Sicherung der Nachhaltigkeit derProjektergebnisse. Diese Aufgabe hat KT4 dahingehend gelöst; ein webbasiertes Portal zuentwickeln; mit dem die Lerneinheiten; die in MuSofT entwickelt werden; zentral gesammeltund der Öffentlichkeit zugänglich gemacht werden können.,Abschlussbericht des Projektes “MuSofT–Multimedia in der SoftwareTechnik”,2004,*
E-and distance learning in an african context,Diana Taiwe Kolyang,At the University of Ngaoundere; we carried out a small experiment with colleagues at theDepartment of Mathematics and Computer Science which consists of using ematerials inteaching. Also we launch a programme for distance learning which encompasses an accessto a local database. One of the evaluation goals is to study how; in a context of poorindustrialization and reduced access to e-technology; students consume e-learning andwhat difficulties occur. Students who have no access to libraries find themselves lost duringand after the lectures. They had no way of relating keywords and keynotes used in e-materials to literature contexts or textbooks. Accustomed to their old way of learning(dictating the course in full sentences; followed by examples); they had to make a big steptowards accepting the lectures presented that way. These results fall in a bigger and more …,DeLFI 2004: Die 2. e-Learning Fachtagung Informatik; Tagung der Fachgruppe e-Learning der Gesellschaft für Informatik eV (GI) 6.-8. September 2004 in Paderborn,2004,*
The editors-in-chief and the editorial board would like to acknowledge the following people for their expert and continuing assistance in evaluating manuscript submi...,Serge Abiteboul; Charu Agrawal; Sihem Ahmer-Yahia; Gustavo Alonso; Toshiyuki Amagasa; Hiroki Arimura; Masayoshi Aritsugi; Chris Atkinson; Paolo Atzeni; Elena Baralis; Sonia Bergamaschi; Elisa Bertino; Azer Bestavros; Philippe Bonnet; Jerzy Brezinski; Sjaak Brinkkemper; Kurt Brown; Nicolas Bruno; Janis Bubenko; Alejandro Buchmann; Christoph Bussler; Fabio Casati; Sharma Chakravarthy; Don Chamberlin; Yatin Chawathe; Shu-Ching Chen; Jan Chomicki; Vassilis Christophides; Panos Chountas; Lawrence Chung; Peter Dadam; David de Frutos Escrig; Joaquin Delgado; Alex Delis; Eric Dubois; J urgen Ebert; Johann Eder; David Embley; Gregor Engels; Georgios Evangelidis; Ron Fagin; Christian Fahrner; Christos Faloutsos; Patrick Fan; Leonidas Fegaras; Donal Flynn; Johann Christoph Freytag; Hans Fritschi; Norbert Fuhr; Richard Furuta; Dimitrios Georgakopoulos; Andreas Geppert; Michael Gertz; Martin Glinz; Matteo Golfarelli; Goetz Graefe; Peter Green; Sol Greenspan; Paul Grefen; Volker Gruhn; Giovanna Guerrini; G Ralf-Hartmut,*,Information Systems,2004,*
Visual Modelling and Validation of Distributed Systems,Gabriele Taentzer,Distributed system technologies are fast developing and the complexity of networkedsystems increases. For this reason the precise design of distributed systems is necessary;comprising all key aspects. The employment of formal methods is restricted to few aspectssuch as performance and correctness of distributed algorithms; while the investigation ofconsistency issues; as they arise eg when data is shared between different sites; is still achallenge. In this work; approaches to visual modelling and validation of distributed systemsare considered focussing on the Unified Modeling Language (UML) as visual modellinglanguage and graph transformation as formal validation domain. To meet the mainrequirements for distributed system modelling; UML has been extended by a number ofprofiles and heavy-weight language extensions. For visual reasoning about certain key …,*,2003,*
Modell-basierte Analyse von ausführbaren Geschäftsprozessen für Web Services,Gregor Engels; Reiko Heckel,Geschäftsprozesse strukturieren und begleiten das Arbeitsleben seit jeher (vgl.[Göbels2000]). Dagegen ändern sich die Sprache und der Formalisierungsgrad stetig; in denen derGeschäftsprozess vorliegt. Geschäftsprozesse mit einem geringen Formalisierungsgradkönnen ausschließlich unter Mitwirken von Menschen ausgeführt und analysiert werden; dieim Falle eines Konflikts flexibel und kreativ reagieren und in diesem Aspekt Rechnernüberlegen sind.,*,2003,*
Bericht KT4 2001-2002,Klaus Alfert; Ernst-Erich Doberkat; Gregor Engels; Jan Hendrik Hausmann; Corina Kopka; Marc Lohmann; Jörg Pleumann; Annika Wagner,115 zwischen den Projektpartnern unumgänglich; um ein konsistentes und erfolgreichesProjektergebnis zu erreichen. Zu diesem Zweck wurden Koordinationsteams gebildet; dieübergreifende Aufgaben im Projekt planen und realisieren sollen. In diesem Bericht werdenAufgaben und Arbeiten des Koordinationsteams 4 in den Jahren 2001 und 2002zusammengefasst.,Ergebnisbericht des Jahres 2002 des Projektes “MuSofT–Multimedia in der SoftwareTechnik”,2003,*
Third International Joint Workshop on Conceptual Modeling Approaches for E-business: A Web Service Perspective (eCOMO 2002)-Process; Models; and Web Serv...,Sebagtian Thone; Ralph Depke; Gregor Engels,*,Lecture Notes in Computer Science,2003,*
Multimedia in der Informatik-Lehre,Ernst-Erich Doberkat; Gregor Engels,*,Informatik bewegt: Informatik 2002-32. Jahrestagung der Gesellschaft für Informatik ev (GI),2002,*
MuSofT-Teilprojekt 1.1 Ergebnisbericht 2001,Gregor Engels; Jan Hendrik Hausmann; Marc Lohmann; Annika Wagner,Das Gebiet der Softwaretechnik beschäftigt sich mit der zielorientierten Entwicklung vonSoftware. Die Ziele der Entwicklung werden dabei in der Anforderungsde£ nition vomAnwender vorgegeben. In dieser Phase werden die unterschiedlichen Informationen erfasst;strukturiert und festgehalten; die als Grundlage aller folgenden Entscheidungen imEntwicklungsprozess dienen. Aktuelle Studien belegen; dass Fehler; die in dieser Phasebegangen werden; nicht nur schwer zu korrigieren sind; sondern in vielen Fällen auch zumScheitern ganzer Projekte führen. Trotzdem wird dieses zentrale Thema in der universitärenAusbildung häu£ g mit einem geringeren Fokus versehen; als zB implementierungsnaheGebiete wie Algorithmen und Architekturen. Ein Grund hierfür ist mit Sicherheit in derTatsache zu suchen; dass viele der Probleme; die es in der Anforderungsde£ nition zu …,Ergebnisbericht des Jahres 2001 des Projektes “MuSofT–Multimedia in der SoftwareTechnik”,2002,*
Universität Gesamthochschule Paderborn,AG Datenbank; Gregor Engels; Stefan Sauer; Nadine Bylebyl,*,*,2001,*
Computer Science-Research and Development,Birgit Pröll; Werner Retschitzegger; Roland Wagner; Ulrich Sigmund; Theo Ungerer,Zusammenfassung. In der vorliegenden Arbeit wird ein mehrfdig superskalarer Prozessor imHinblick auf Multimediaverarbeitung entworfen und mit einem Multimediaprogramm als Lastgetestet. Neu ist hierbei die Kombination von Multimediabefehlen mit der mehrfdigenProzessortechnik und deren Evaluierung mit einer realistischen Last aus demMultimediabereich. Diese Last besteht aus einem handoptimierten...,Computer Science,2001,*
Class-like Descriptions of Packages,LPJ PJ't Hoen; JHM Dassen; PWM Koopman; G Engels; IG Sprinkhuizen-Kuyper,Abstract Current object-oriented modelling languages provide concepts like packages (ormodules) to structure large-scale object-oriented models. These concepts are purelysyntactical. They are used to de ne model-speci c name scopes and thus to hideencapsulated features inside a package. But; in order to understand the semantics of what iscontained in a package; one still has to zoom into a package and to study its detailed ne-grained structure. We present a new approach termed class-like description (CLD) ofpackages. These CLDs allow to view a package as an ordinary class; and to abstract fromthe detailed (hierarchical) structure of a package. Thus; packages can be treated as ordinaryclasses on this higher level of abstraction.,*,2000,*
The Behaviour of Packages,LPJ PJ't Hoen; PWM Koopman; G Engels; IG Sprinkhuizen-Kuyper,*,*,2000,*
Class-like Descriptions of Packages,PWM Koopman; G Engels; IG Sprinkhuizen-Kuyper,*,*,2000,*
Structuring SOCCA Models with UML-like Packages,LPJ PJ't Hoen; Dassen IG Sprinkhuizen-Kuyper PWM Koopman; G Engels,Abstract This document de nes UML-like packages for SOCCA (Speci cation of Coordinatedand Cooperative Activities). The packages structure and encapsulate the classes of a(SOCCA) model … Please use the primary author's contact address:hoen@wi.LeidenUniv.nl … 3.1 Identity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 3.2 Basic Class Denition . . . . . . . . . . . . . . . . . . . . . 7 3.3 Meta Relationships . . . . . . . . . . . . . . . . . . . . . . . 8 3.4 PotentialInheritance . . . . . . . . . . . . . . . . . . . . . . 9 3.5 Packages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 3.5.1The Basic Package De nition . . . . . . . . . . . . . 11 3.5.2 Working with the Package Parts . . . . . . .. . . . 12 3.5.3 Indentities of the Package Parts … 6.1 Export of Classes by Packages. . . . . . . . . . . . . . . . . 25 6.2 Import of Classes by Packages . . . . . . . . . . . . . . . . . 26 … A.1 Why Z. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 A.2 The Type Checker . . . . . . . . . . . . . . . . . . . . . . . 28 …,*,1999,*
General Chairperson,T Bench-Capon; V Marik; G Soda; AM Tjoa; A Cammelli; H Afsarmanesh; B Amann; F Andres; K Bauknecht; B Bhargava; J Bing; J Bubenko; L Camarinha-Matos; WS Cellary; S Christodoulakis; B Croft; J Debenham; P Drazan; J Eder; T Eiter; G Engels; E Fernandez; AL Furtado; G Gardarin; F Golshani; A Hameurlain; I Hawryszkiewycz; M Ibrahim,*,TJM,1999,*
Antonio Cammelli,Frederic Andres,*,*,1999,*
A formalisation of SOCCA using Z,JHM Dassen; Luuk PJ Groenewegen; Ida G Sprinkhuizen-Kuyper; PWM Koopman; Pieter Jan't Hoen; G Engels,Abstract This document starts the formalisation of the modelling language of the SOCCA OOmethod in the formal specification language Z. It captures the “static” aspects of SOCCA; iethe meaning of SOCCA language elements at the type level; rather than “dynamic” aspects(dealing with the instance level (objects in execution)). It is restricted to core SOCCA;proposed extensions are not formalised.,*,1999,*
ELSEVIER Science of Computer Programming 34 (1999) 239,M Andries; G Engels; A Habel; B Hoffmann; HJ Kreowski; S Kuske; D Plump,*,Science of Computer Programming,1999,*
Formalization of the software process modelling language SOCCA,Gregor Engels; Luuk Groenewegen; Ray Dassen,NWO (Dutch national research council) through SION (foundation for computer scienceresearch in the Netherlands) Project goals/programme The software process modellinglanguage SOCCA (Specification of Coordinated and Cooperative Activities) has beendeveloped within the SEIS (software engineering and information systems) group at LeidenUniversity. It encompasses a number of significant extensions to the well-known object-oriented OMT and UML approaches. Like these; 5OCCA cconsists of a carefully chosencombination of formalisms. In SOCCA four perspectives are distinguished:,European Workshop on Software Process Technology,1998,*
2.1 Tight Integration on One Document: The Programming Environment,G Engels; M Nagl; W Schäfer; B Westfechtel,2.1. 1 Introduction re pis environment demonstrates integration of different tools operating onthe sane catalocument. Each such document correspondstoa body of a module whoseinteria" ecified in a software architecture. Specification of module interfaces belongs to Piland is therefore not discussed in this section.,*,1996,*
Definition of an Encapsulated Hierarchical Graph Data Model,G Busatto; G Engels,*,*,1996,*
Industrial Modelled in SOCCA: An Experience Report,T de Bunje; G Engels; L Groenewegen,*,*,1996,*
Graph Transformations,G Engels; H Ehrig; Grzegorz Rozenberg,ICGT 2004 was the 2nd International Conference on Graph Transformation; following thefirst one in Barcelona (2002); and a series of six international workshops on graphgrammars with applications in computer science between 1978 and 1998. ICGT 2004 washeld in Rome (Italy); Sept. 29–Oct. 1; 2004 under the auspices of the European Associationfor Theoretical Computer Science (EATCS); the European Association of Software Scienceand Technology (EASST); and the IFIP WG 1.3; Foundations of Systems Specification. Thescope of the conference concerned graphical structures of various kinds (like graphs;diagrams; visual sentences and others) that are useful when describing complex structuresand systems in a direct and intuitive way. These structures are often augmented withformalisms that add to the static description a further dimension; allowing for the …,*,1996,*
Definition of an Encapsulated Hierarchical Graph Data Model Static Aspects; Part,G Busatto; G Engels,Abstract Graph grammars have been successfully used as a formalism for the speci cation ofrealistic problems but; as far as speci cation-in-the-large activities are concerned; they stillhave some de ciencies. In particular; most of them only support the use of at graphs;whereas for certain applications hierarchical graphs would be a more suitable modellingtool. Furthermore; there is still the need for a graph grammar module concept that allows tosplit large speci cations into smaller sub-speci cations. We want to address this problem byapplying object-oriented concepts to develop a hierarchical graph data model that supportsa suitable module concept for graph grammars. In this paper; we present the rst step in thede nition of our encapsulated hierarchical graph (EHG) data model. We introduce the notionof EHG that supports complex nodes (ie nodes with an encapsulated graph as their …,*,1996,*
Specialization of Object Life Cycle Definitions,J urgen Ebert; Gregor Engels,Abstract Several object-oriented modeling approaches propose to describe the dynamicbehaviour of objects by state transition diagrams. None of them provides precise rules orconditions for the interrelation between the behaviour description of classes and those oftheir subclasses. In this paper; we discuss this interrelation in detail. It turns out that one hasto distinguish between the observable and the invocable behaviour of objects and that dierent compatibility requirements between the diagrams exist depending on the type ofbehaviour.,*,1995,*
Distributed modelling session,Gregor Engels,A fine-grained modelling of all aspects of a software process inherently results in large andcomplex specifications. In order to overcome this complexity; software process models haveto be appropriately modularized. This means that the specification is spread over several;interrelated subspecifications; where each subspecification describes a certain view on thesoftware process. The aim of this session is to discuss this topic in more detail. In particularthe following questions are addressed: 1. Which views on a software process have to bemodelled? 2. Does a view describe a certain aspect of a software process (eg the productview) or does a view describe a complete software process from a certain point of view (egthe manager view). 3. What are appropriate specification means to describe a certain view?4. What are the interrelations between different views and how can they be integrated into …,European Workshop on Software Process Technology,1995,*
van den Bussche. J<. 170 van Eekelen; M 358 Voisin. F 312\Volz. D 119,E Barendsen; K Barthelmann; M Beyer; B Courcelle; J Dingel; H Ehrig; G Engels; E Grabska; D Janssens; Y Kawahara; M Korff; J Lagergren; M Lowe; Y Mizoguchi; U Montanari; M Nagl; A Nakamura; J Paredaens; A Peron; R Plasmeijer; G Schied; S Smetsers; G Taentzer,*,Graph Transformations in Computer Science: International Workshop; Dagstuhl Castle; Germany; January 4-8; 1993: Proceedings,1994,*
Blanken; HM; see Teeuw; WB,BR Gaines; M Gogolla; G Engels; U Hohenstein; K Hiilsmann; K Meyer-Wegener; NM Mattos; DE Monarchi; G Saake; P Sander; A Heuer; FSC Tseng; ALP Chert; WP Yang; WP Yang,*,Data & Knowledge Engineering,1992,*
Einführung und Übersicht,Gregor Engels; Wilhelm Schäfer,Zusammenfassung Der ständig steigende Aufwand und die damit verbundeneKostenexplosion bei der Entwicklung komplexer und qualitativ hochwertiger Software beiständig fallenden Hardwarekosten wird üblicherweise mit dem Stichwort Softwarekrisecharakterisiert. Ausgehend von diesem Problem hat sich in der Informatik in den letzten 20Jahren das Forschungsgebiet der Softwaretechnik; auch Software-Engineering genannt;herauskristallisiert. Die Forschung in diesem Gebiet zielt darauf ab; ingenieurmäßigeVorgehensweisen und Methoden für die Softwareerstellung zu entwickeln und einzusetzen.,*,1989,*
Moderne Programmentwicklungsumgebungen: Anforderungen und konzeptionelle Überlegungen,Gregor Engels; Wilhelm Schäfer,Zusammenfassung Im Teil I dieses Buches haben wir erläutert; inwieweit sich eine PEUeinerseits von den isolierten Werkzeugen eines Programmiersystems; andererseits aberauch von dem umfangreichen Werkzeugsatz einer Softwareentwicklungsumgebungunterscheidet. In diesem Teil II des Buches werden wir nun detailliert erläutern; welcheAnforderungen an eine moderne PEU zu stellen sind und wie diese Anforderungen durcheine entsprechende Implementierung realisiert werden können. Hierzu werden wir imKapitel 1 eine Reihe von Werkzeugen vorstellen; die einen Anwendungsprogrammierer beieiner komfortablen und zeiteffizienten Entwicklung eines Programms unterstützen unddaher Bestandteil jeder modernen PEU sein sollten. Dazu gehören heutzutage auchMindestanforderungen an die Benutzerschnittstelle einer PEU; die wir ebenfalls im …,*,1989,*
Realisierung einer Programmentwicklungsumgebung am Beispiel IPSEN,Gregor Engels; Wilhelm Schäfer,Zusammenfassung Zur Klasse der SEUen; die Integration auf allen 3 Ebenen anstreben undzum Teil realisiert haben; gehört auch das Projekt IPSEN (Integrated Programming SupportEnvironment (/Na 85a/)). Aufbauend auf Ideen; die in/Sch 75/und/Na 80/dargestellt sind;wurde es 1981 an der Universität Osnabrück ins Leben gerufen und wird mittlerweile an derRWTH Aachen fortgeführt. In seinem Rahmen entstanden die Dissertationen der beidenAutoren (/En 86/;/Sc 86/); die eine wesentliche Grundlage dieses Buches bilden.,*,1989,*
Abstracts des Workshops' Grundlagen von Datenbanken',H-D Ehrich; G Engels; M Gogolla,*,*,1989,*
Zusammenfassung und Ausblick,Günter Menges,Zusammenfassung Während die Darstellung und der Vergleich der Grundmodelle sichkaum resümieren lassen; möchte ich die besonders für den Praktiker wichtigen Antwortenauf die Anwendungsfrage kurz resümieren. Dabei sollen zugleich mögliche zukünftigeEntwicklungen skizziert werden. Abschließend werfen wir noch einen Blick auf die Modelleund Verfahrensweisen; die in diesem Buch nicht dargestellt worden sind; sowie auf dieweiterführende Literatur.,*,1969,*
Semi-automatic Alignment of REST APIs to Schema. org for E ective Service Discovery,Simon Schwichtenberg; Stefan Heindorf; Christian Gerth; Gregor Engels,Abstract Today's web services are usually REST APIs which are described purelysyntactically. Semantic specifications based on ontologies are almost always missing sincetheir creation requires a lot of manual effort. However; semantic specifications candramatically improve service discovery and matching by unifying heterogeneous domainterminologies. In this paper; we present ASTRO; a semi-automatic tool to derive semanticOWL-S specifications from syntactic Open API specifications. It assists service providers andcloud vendors to align syntactic specifications to the widely-adopted schema. org ontology.In our evaluation; we demonstrate the practicality of our approach on a real-world dataset ofREST APIs from the Mashape marketplace: About 51% of the Mashape concepts can bemapped to schema. org and this alignment improves the effectiveness of the service …,*,*,*
Digitalisierungspotenziale in Geschäftsprozessen effizient und effektiv erkennen,Florian Rittmeier; Gregor Engels; Alexander Teetz,Abstract: An important element of digital transformation is the digitalization of processeswithin enterprises. A major challenge is the systematic identification of digitalizationpotentials in business processes. Existing approaches require experts who identify saidpotentials by using the timeconsuming method of pattern catalogs or by relying on theirprofessional experiences. In this paper we classify potentials of digitalization andcorresponding patterns for a future pattern-based analysis procedure. This shall allow for theautomated identification of digitalization potentials in BPMN diagrams. In comparison toexisting approaches; our proposed method could support a more efficient and effectiveidentification of digitalization potentials by experts. Abstract: Ein wichtiges Element derDigitalen Transformation ist die Digitalisierung der Prozesse in Unternehmen. Eine …,*,*,*
SOFSEM 2016: Theory and Practice of Computer Science LNCS 9587,Rūsiņš Martiņš Freivalds; Gregor Engels; Barbara Catania,This volume contains the invited and contributed papers selected for presentation at the42nd Conference on Current Trends in Theory and Practice of Computer Science (SOFSEM2016); which was held January 23–28; 2016; in Harrachov; Czech Republic. SOFSEM(originally SOFtware SEMinar) is devoted to leading research and fosters cooperationamong researchers and professionals from academia and industry in all areas of computerscience. SOFSEM started in 1974 in the former Czechoslovakia as a local conference andwinter school combination. The renowned invited speakers and the growing interest of theauthors from abroad gradually turned SOFSEM in the mid-1990s into an internationalconference with proceedings published in the Springer LNCS series; in the last two years intheir prestigious subline ARCOSS:,*,*,*
Challenges and Achievements in Software Engineering (CHASE),Track Coordinators; Gregor Engels; Wilhelm Schäfer,*,*,*,*
Services aus der Cloud= Fahren im Nebel? Wie minimiere ich die Risiken und erreiche hohe Qualität?,Gregor Engels,Abstract: Der Kostendruck einerseits und die Verfügbarkeit des Internets andererseits führendazu; dass Softwaresysteme auf Services aus der Cloud zurückgreifen (müssen bzw.können). Dies gilt für alle Anwendungsbereiche und somit insbesondere auch für dieSoftware im Auto. Aber wie sorge ich dafür; dass die Services aus der Cloud zu meinemSoftwaresystem passen und die Anforderungen erfüllen? Der Vortrag diskutiert aktuelleAnsätze der konstruktiven und analytischen Qualitäts-sicherung; um durch Maßnahmensowohl zur Entwicklungs-als auch Laufzeit eine hohe Qualität beim Einsatz von Servicesaus der Cloud zu erzielen. Insbesondere wird über aktuelle Arbeiten im neuen DFGSonderforschungsbereich 901” On-the-Fly Computing” berichtet.,*,*,*
Semantic Data Mediator: Linking Services to Websites,Dennis Wolters; Stefan Heindorf; Jonas Kirchhoff; Gregor Engels,Abstract. Many websites offer links to social media sites for convenient content sharing.Unfortunately; those sharing capabilities are quite restricted and it is seldom possible toshare content with other services; like those provided by a user's favorite applications orsmart devices. In this paper; we present Semantic Data Mediator (SDM)—a flexiblemiddleware linking a vast number of services to millions of websites. Based on reusablerepositories of service descriptions defined by the crowd; users can easily fill a personalregistry with their favorite services; which can then be linked to websites by SDM. For this;SDM leverages semantic data; which is already available on millions of websites due tosearch engine optimization. Further support for our approach from website or servicedevelopers is not required. To enable the use of a broad range of services; data …,*,*,*
SEAMS 2017,Marin Litoiu; Nelly Bencomo; Gregor Engels; Rogério de Lemos,A not-for-profit organization; IEEE is the world's largest technical professional organization dedicatedto advancing technology for the benefit of humanity. © Copyright 2017 IEEE - All rightsreserved. Use of this web site signifies your agreement to the terms and conditions.,*,*,*
SEAMS 2017,Dalal Alrajeh; Jesper Andersson; Rami Bahsoon; Arosha Bandara; Luciano Baresi; Jacob Beal; Nelly Bencomo; Amel Bennaceur; Victor Braberman; Tomas Bures; Radu Calinescu; Javier Cámara; Betty Cheng; Siobhán Clarke; Rogério de Lemos; Elisabetta di Nitto; Nicolás D’Ippolito; Ada Diaconescu; Gregor Engels; Antonio Filieri; Erik Fredericks; Holger Giese; Hassan Gomaa; Joel Greenyer; Mark Harman; Valerie Issarny; Pooyan Jamshidi; Jean-Marc Jézéquel; Samuel Kounev; Philippe Lalanda; Seok–Won Lee; Marin Litoiu; Xiaoxing Ma; Martina Maggio; Sam Malek; Nenad Medvidovic,Dalal Alrajeh Imperial College London Jesper Andersson Linnaeus University Rami BahsoonUniversity of Birmingham Arosha Bandara The Open University Luciano Baresi Politecnico diMilano Jacob Beal Raytheon BBN Technologies Nelly Bencomo Aston University Amel BennaceurThe Open University Victor Braberman University of Buenos Aires Tomas Bures Charles UniversityRadu Calinescu University of York Javier Cámara Carnegie Mellon University Betty Cheng MichiganState University Siobhán Clarke Trinity College Dublin Rogério de Lemos University of KentElisabetta di Nitto Politecnico di Milano Nicolás D'Ippolito University of Buenos Aires Ada DiaconescuTelecom ParisTech Gregor Engels University of Paderborn Antonio Filieri Imperial College LondonErik Fredericks Oakland University Holger Giese Potsdam University Hassan Gomaa GeorgeMason University Joel Greenyer Leibniz Universität Hannover Mark Harman University …,*,*,*
1 SICP–Software Innovation Campus Paderborn: Strategische Forschungspartnerschaft für software-getriebene Innovationen,Stefan Sauer; Gregor Engels,Der Software Innovation Campus Paderborn (kurz: SICP) ist ein strategischesKooperationsmodell für die Erforschung software-getriebener Innovationen. Er motiviert sichaus der besonderen Bedeutung von Software für eine zunehmend vernetzte Gesellschaft.Um die technischen Herausforderungen zu bewältigen und die fachlichen Ziele zuerreichen; wird ein neues Kooperationsmodell für Forschung und Innovation entwickelt; dasauf den existierenden Stärken und Kompetenzen der beteiligten Partner aufsetzt und dieIdee eines Forschungscampus umsetzt.,*,*,*
Andreas Rott,G Engels; W Schäfer,*,*,*,*
Universit at Paderborn Fachbereich 17-Mathematik/Informatik Arbeitsgruppe Softwaretechnik Warburger Straße 100 D-33098 Paderborn,Sergej Wagner; Wilhelm Schiafer; Gregor Engels,I ch versi c here; da ß ich die A rbeit ohne fremde Hilfe und ohne B enut z ung anderer alsder angegebenen Q uellen angefertigt habe; und da ß die A rbeit in gleic her oder} ahnlicher F orm no ch keiner anderen Pr} ufungsbeh} orde vorgelegt hat und von dieser als T eileiner Pr} ufungsleistung angenommen w urde. A lle A usf} uhrungen; die w} ortlic h odersinngem} a ß} ubernommen w urden; sind als sol c he gekenn z ei c hnet.,*,*,*
SEAMS 2016,Carlo Ghezzi; Sam Malek; Joel Greenyer; Danny Weyns; Jesper Andersson; Pooyan Jamshidi; Rogerio De Lemos; Yuriy Brun; Radu Calinescu; Nenad Medvidovic; John Mylopoulos; Daniel Menasce; Xiaoxing Ma; Ladan Tahvildari; Gregor Engels; Jeff Kramer; Liliana Pasquale; Paola Inverardi; Marin Litoiu; Nicolas D'Ippolito; Hausi A Muller; Bradley Schmerl; Hassan Gomaa; David Garlan; Nelly Bencomo; Bashar Nuseibeh; Kenji Tei; Franco Zambonelli; Antonio Filieri; Raffaela Mirandola,This volume contains the final versions of the papers accepted for presentation at thesymposium. We received 50 submissions for review. Each paper was reviewed by at least threeprogram committee members. Subsequently; each was paper thoroughly discussed. Conflictsof interest were taken version seriously. No one participated in any way in the decision processof any paper where a conflict of interest was previously identified. Of the submitted papers; 18papers were accepted; 8 as full research papers; 8 as short research papers; and 2 as shortpapers in the artifact track … We would like to thank the program committee and the externalreviewers for volunteering their time to evaluate the submissions and provide detailed feedbackto the authors. We would like to also thank all authors of the papers for submitting their work toSEAMS. We are grateful to the organizing committee of ICSE 2016 with their assistance …,*,*,*
TOSE 2016,Gregor Engels; Arbi Ghazarian; Paul Ralph; Colin Atkinson; Doo-Hwan Bae; Luciano Baresi; Balbir Barn; Reda Bendraou; Ilia Bider; Jürgen Börstler; Mathias Ekstedt; Cengiz Erbas; Iaakov Exman; Ian Gorton; Robert Hall; Jon Hall; Shihong Huang; Stefan Jähnichen; Patrizio Pellicone; Dewayne E Perry; Tero Päivärinta; Lucia Rapanotti; Kari Smolander; Mark Staples; Anca Stoica; Klaas-Jan Stol; Aaron Visaggio; Hongyu Zhang,Gregor Engels University of Paderborn Arbi Ghazarian Arizona State University Paul Ralph LancasterUniversity … Colin Atkinson University of Mannheim Doo-Hwan Bae KAIST Luciano Baresi DEI- Politecnico di Milano Balbir Barn Middlesex University London Reda Bendraou UPMC-LIP6Ilia Bider Stockholm University/IbisSoft Jürgen Börstler Blekinge Institute of Technology MathiasEkstedt KTH - Royal Institute of Technology Cengiz Erbas Aselsan Iaakov Exman JCE - JerusalemCollege of Engineering Ian Gorton SEI Robert Hall AT&T Labs Research Jon Hall The OpenUniversity Shihong Huang Florida Atlantic University Stefan Jähnichen Technische UniversitätBerlin Patrizio Pellicone Chalmers Uni. of Technology and Uni. of Gothenburg Dewayne E PerryESEL; The University of Texas at Austin Tero Päivärinta Luleå University of Technology LuciaRapanotti The Open University Kari Smolander Lappeenranta University of Technology …,*,*,*
Semi-Formal and Formal Specification Techniques for Software Systems,Hartmut Ehrig; Gregor Engels; Fernando Orejas; Martin Wirsing,During the last 20 years several different formal and semi-formal specification techniqueshave been successfully developed and used. Applications comprise the specification ofsimple programs; data types and processes as well as of complex hardware and softwaresystems. The variety of specification techniques ranges from formal set theoretical; algebraicand logic approaches for specifying sequential systems and from Petri-nets; processalgebras; automata; graph grammars for specifying concurrent and distributed behaviors tosemi-formal software engineering methods such as UML which has become the de factosoftware engineering standard for developing large and complex systems. Formal and semi-formal approaches have their advantages and disadvantages: the informal diagrammaticmethods are easier to understand and to apply but they can be ambiguous. Due to the …,*,*,*
Graphtransitionsregeln als Mittel zur Beschreibung der,Jan Hendrik Hausmann; Gregor Engels,Zusammenfassung In dieser Arbeit soll gezeigt werden; daß es möglich ist; das Konzept vonSOS-Regeln. die zur SemantikbeschēibūīgVõTēūēlTōüēlēProgr…diēgrāphischēMõdēlliērūngssprāchē UML zu übertragen. Es entstehen dabeiGraphtransitionsregeln; die geeignet sind; die Semantik von UML präzise zu spezifizieren;Problēmstellung Im RāhīmēīdēsīmdēnēSofwārēēnwicklūngspro…isīdēFPhāsēdēFēigēnlichēSofwārēērsēIlūg die Modellierung vorgeschaltet; in derschrittweise ausgehend von der Problemstellung die Struktur des zu erstellendenProgrammes entwickelt wird. Als gemeinsame Notation für die Beteiligten dieser Phasewerden seit 1997 als Standard die Diagramme der UML (Unified Modeling Language)genutzt. Diese bietet die Möglichkeit sowohl die statische Struktur von objektorientierten …,*,*,*
of Objects,Gregor Engels; Lūūk Groenewegen; Gerti Kappel,Abstract: The computer has evolved from the purpose of pure number crunching to sup-porting the coordinated collaboration between human and/or artificial beings TēāEhāTEērīāīgāITObjēEEõFiēīēdīīõdēlīgē…central notions of object interaction and object collaboration should provide the semanticexpressivity to model such coordinated collaboration. Based on an investigation of theobject-oriented modelling standard UML; however; the weaknesses of the existingmodelling concepts are revealed. SOCCA is presented instead; which is an object-orientedspecification language supporting the arbitrarily fine-grained synchronisation of processes;ie; active objects. Based on several examples of the EU rental car system the expressivepower of SOCCA is discussed and compared to related approaches,*,*,*
UML Collaboration Diagrams and Their,Gregor Engels; Roland Hücking; Stefan Sauer; Annika Wagner,Abstract. UML provides a variety of diagram types for specifying both the structure and thebehavior of a system. During the development process; models specified by use of thesediagram types have to be transformed into corresponding code. In the past; mainly classdiagrams and state diagrams have been considered for an automatic code generation.IThispāpēFēfūsīEllābāīdīgāsTĀsā īpāpē requisite for a consistent transformation into Javacode; we first provide īēThõdiāTgūidēlīēsõThõõdēpõõIlābõTāfiīdi… functional behavior.This understanding yields a refined meta model and foshēbāsēfhēdēfinīīīīfāīānsfīnāETālgihThēā…generated Java code fragments build a substantial part of the functionality and prevent theloss of important information dūring Fhīāīsifiī frīāīdēIFõisīlīīīīFāFin,*,*,*
Universität Dortmund Universität Paderborn Fachbereich Informatik FB 17-Informatik 44221 Dortmund 33095 Paderborn,Ernst-Erich Doberkat; Gregor Engels,Abstract: Neue Medien werden in der universitären Lehre in zunehmendem Maßeeingesetzt. Nachdem sich noch vor einigen Jahren nur vereinzelte Pilotprojekte mit demThema beschäftigt haben; wird inzwischen eine Vielzahl von Projekten öffentlich gefördert.Als Beispiel sei das BMBF-Förderprogramm Neue Medien in der Hochschullehre genannt.,*,*,*
Modelling of Collaboration with UML and SOCCA...................... 13 Martin Grosse-Rhode Temporal Ordering of Actions vs. Rule Based Specifications (An Application...,Ilham Alloui; Egidio Astesiano; Egon Börger; Christine Choppy; JHM Dassen; Jörg Desel; Klaus Diderich; Gregor Engels,Participants meeting at Dagstuhl Considered the weather as too cool! The idea of a poolWould attract just a fool; A firm rule is: wear things of good wool! Bernd Krieg-BrücknerDuring the last 20 years several different formal and semi-formal specification techniqueshave been successfully developed and used. Applications comprise the specification ofsimple programs; data types and processes as well as complex hardware and softwaresystems. The variety of specification techniques ranges from formal set theoretical;algebraic; and logic approaches for specifying sequential systems and from Petri-nets;process algebras; automata; and graph grammars for specifying concurrent and distributedbehaviors to semi-formal software engineering methods for developing complex systems.,*,*,*
GTSE 2015,Paul Ralph; Gregor Engels; Ivar Jacobson; Michael Goedicke,General theories explain the fundamental phenomena that constitute a research domain. Theyapply across a domain and often integrate many theories and concepts into a single cohesiveview. While general theories are extremely important for education and researchcoordination; and common in many disciplines (eg sociology; criminology; electricalengineering; biology; physics); software engineering lacks a well-accepted general theory. TheGeneral Theory of Software Engineering workshop seeks to rectify this situation by promotingtheory development in software engineering … This year; the GTSE workshop received 18submissions; each of which received a minimum of three reviews. To maximize time for fruitfuldiscussion; we limited acceptance to 8 papers. Our process was simple: seven papers had clearlypositive reviews and were accepted; of the three papers with borderline reviews we …,*,*,*
GTSE 2015,Gregor Engels; Michael Goedicke; Ivar Jacobson; Paul Ralph; Joao Paulo Almeida; Colin Atkinson; Doo-Hwan Bae; Jongmoon Baik; Luciano Baresi; Reda Bendraou; Arne J Berre; Ilia Bider; Jürgen Börstler; Ivica Crnkovic; Mathias Ekstedt; Cengiz Erbas; Iaakov Exman; Ian Gorton; Robert Hall; Shihong Huang; Stefan Jähnichen; Pontus Johnson; Howell Jordan; Philippe Kruchten,Gregor Engels University of Paderborn; Germany Michael Goedicke University ofDuisburg-Essen; Germany Ivar Jacobson Paul Ralph Ivar Jacobson International; SwitzerlandUniversity of Auckland; New Zealand … Joao Paulo Almeida Federal University of EspiritoSanto; Brazil Colin Atkinson University of Mannheim; Germany Doo-Hwan Bae KAIST; Republicof Korea Jongmoon Baik KAIST; Republic of Korea Luciano Baresi Politecnico di Milano; ItalyReda Bendraou UPMC; France / LIP6; France Arne.J. Berre SINTEF; Norway Ilia Bider StockholmUniversity; Sweden / IbisSoft; Sweden Jürgen Börstler Blekinge Institute of Technology; SwedenIvica Crnkovic Mälardalen University; Sweden Mathias Ekstedt KTH Royal Institute ofTechnology; Sweden Gregor Engels University of Paderborn; Germany Cengiz ErbasAselsan; Turkey Iaakov Exman Jerusalem College of Engineering; Israel Michael …,*,*,*
Dank an die Gutachter,S Abdennadher; W Bibel; A Bode; W Effelsberg; G Engels; T Flik; JC Freytag; N Fuhr; U Furbach; R Gimnich; M Glinz; JM Haake; FernUniversität-GH Hagen; H Härtig; A Henrich; S Herrmann,Abdennadher; S.; Universität München Bibel; W.; Technische Universität Darmstadt Bode;A.; Technische Universität München Desel; J.; Universität Eichstätt Deßloch; S.; Universität KaiserslauternEffelsberg; W.; Universität Mannheim Engels; G.; Universität Paderborn Flik; T.; Technische UniversitätBerlin Freytag; J.-C.; Humboldt-Universität zu Berlin Fuhr; N.; Universität Duisburg Furbach;U.; Universität Koblenz-Landau Geske; U.; Fraunhofer-Institut FIRST; Berlin Gimnich; R.; IBMFrankfurt Glinz; M.; Universität Zürich Haake; JM; FernUniversität-GH Hagen Härtig; H.; TechnischeUniversität Dresden Henrich; A.; Universität Bamberg Herrmann; S.; Technische Universität BerlinHust; A.; Deutsches Forschungszentrum für Künstliche In- telligenz; KaiserslauternJablonski; S.; Universität Erlangen-Nürnberg Keil-Slawik; R.; Universität PaderbornKneuper; R.; TLC; Frankfurt am Main Knorz; G.; Fachhochschule Darmstadt Krämer; B …,*,*,*
Wilhelm Schaefer; University of Paderborn; Germany,Vincenzo Ambriola; Naser Barghouti; Wolfgang Emmerich; Gregor Engels; Katsuro Inoue; Nazim Madhavji; Chris Marlin; Leon Osterweil; Dewayne Perry,*,*,*,*
Program Commit ee,Vincenzo Ambriola; Sjaak Brinkkemper; Gregor Engels; Udo Kelter; Fred Long; Boris Magnusson; Gregor Snelting,*,*,*,*
Jason TL Wang; New Jersey Institute of Technology; USA Du Zhang; California State University; USA Liang-Jie Zhang; IBM Watson Research Center; USA,Yoshihiro Akiyama; Japan Osman Balci; Bharat Bhargava; Paolo Bottoni; Jonathan Bowen; Shih-Fu Chang; Arbee LP Chen; Chien-Hsiung Chen; Deren Chen; Ray Chen; Lin-Lin Chen; Betty HC Cheng; Chih-Ping Chu; Yi Deng; Wolfgang Effelsberg; Gregor Engels; Xudong He; Hans-Juergen Hoffmann; YeeTsong Juan; Kane Kim; Moon Hae Kim; Jonathan Lee; Sheng-Tun Li; Bertrand MT Lin; Alan Liu; Jonathan CL Liu; Stephen Morris; Janet Murray; Yunmook Nah; Robert Reynolds; Timothy K Shih; Young Chul Shim; Jaideep Srivastavam; Yung-Nien Sun; Petri Vuorimaa; Jenn-Hwa Yang; Enrico Vicario,*,*,*,*
General Chairperson,IRIT Abdelkader Hameurlain; Roland Traunmüller; A Min Tjoa; Vladimir Marik; Hamideh Afsarmanesh; Ala Al-Zobaidie; CNAM Bernd Amann; France Frederic Andres; Kurt Bauknecht; Trevor Bench-Capon; Alfs Berztiss; Jon Bing; Omran Bukhres; Luis Camarinah-Matos; Antonio Cammelli; Stavros Christodoulakis; Paolo Ciaccia; Christine Collet; France LSR-IMAG; Carlo Combi; William Bruce Croft; John Debenham; Misbah Deen; Nina Edelweiss; Johann Eder; Thomas Eiter; Gregor Engels,2002 DEXA; the 13th International Conference on Database and Expert SystemsApplications was held on September 2–6; 2002; at the Université Aix–Marseille II; France.The quickly growing field of information systems required the establishment of morespecialized discussion platforms (the DaWaK conference; EC-Web conference; eGOVconference and DEXA workshops); and there were held in parallel with DEXA; also in Aix-en-Provence. The resulting book was prepared with great effort. Starting with the preparation ofsubmitted papers; the papers went through the reviewing process. The accepted paperswere revised to final versions by their authors and arranged to the conference program. Thisyear 241 papers were submitted and our thanks go to all who have contributed. Theprogram committee and the supporting reviewers produced altogether about 730 referee …,*,*,*
I. CSMR 2011 ORGANIZING COMMITTEE,Andreas Winter; Yiannis Kanellopoulos; Tom Mens; Volker Riediger; Christos Tjortjis; OFFIS Christian Zillmann; Andrea De Lucia; Jens Knodel; Jan Jelschen; Nils Göde; Mikio Aoyama; Maria Teresa Baldassarre; Jesus M Gonzales Barahona; Jim Buckley; Danilo Caivano; Gerardo Canfora; Rafael Capilla; Andrea Capiluppi; Juan Carlos Duenas; Alexandros Chatzigeorgiou; Tom Dean; Florian Deissenboeck; Serge Demeyer; Massimiliano Di Penta; Jürgen Ebert; Gregor Engels; Rudolf Ferenc; Rainer Gimnich; Yann-Gaël Guéhéneuc; Tibor Gyimothy; Mark Harman; Wilhelm Willi Hasselbring; Shihong Huang; Marianne Huchard; Toshihiro Kamiya; Holger Kienle; Kostas Kontogiannis; Rainer Koschke; Jens Krinke; Grace Lewis; Mircea Lungu,• Radu Marinescu; Polytechnic University of Timisoara; Romania • Kim Mens; University ofLouvain; Belgium • Oscar Nierstrasz; University of Bern; Switzerland • Liam O'Brien; NationalICT Australia Limited; Australia • Martin Pinzger; Delft University of Technology; Netherlands• Ralf H. Reussner; Karlsruhe Institute of Technology (KIT); Germany • Filippo Ricca; Universityof Genova; Italy • Romain Robbes; University of Chile; Chile • Wilhelm Schäfer; University ofPaderborn; Germany • Klaus Schmid; University of Hildesheim; Germany • Sibylle Schupp; TechnicalUniversity of Hamburg-Harburg; Germany • Harry Sneed; Germany • Diomidis Spinellis; AthensUniversity of Economics and Business; Greece • Eleni Stroulia; University of Alberta; Canada• Tarja Systa; Tampere University of Technology; Finland • Ladan Tahvildari; University ofWaterloo; Canada • Dalila Tamzalit; University of Nantes; France • Scott Tilley; Florida …,*,*,*
General Chairperson,Valdimir Marik; Olga Stepankova; Werner Retschitzegger; A Min Tjoa; Hamideh Afsarmanesh; Ala Al-Zobaidie; CNAM Bernd Amann; France Frederic Andres; Kurt Bauknecht; Trevor Bench-Capon; Alfs Berztiss; Sourav S Bhowmick; Jon Bing; UMIT Christian Böhm; Austria Alex Borgida; Omran Bukhres; Luis Camarinah-Matos; Antonio Cammelli; Elizabeth Chang; Stavros Christodoulakis; Paolo Ciaccia; Carlo Combi; Don Cowell; John Debenham; Misbah Deen; Elisabetta Di Nitto; Nina Edelweiss; Johann Eder; Thomas Eiter; Gregor Engels; Peter Fankhauser; Ling Feng; Eduardo Fernandez; Burkhard Freitag; Mariagrazia Fugini; Georges Gardarin,*,*,*,*
General Chairperson,Kim Viborg Andersen; John Debenham; A Min Tjoa; Witold Abramowicz; Hamideh Afsarmanesh; Ala Al-Zobaidie; Walid G Aref; Ramazan S Aygun; Kurt Bauknecht; Trevor Bench-Capon; Elisa Bertino; Bishwaranjan Bhattacharjee; Sourav S Bhowmick; Christian Böhm; Luis Camarinah-Matos; Tiziana Catarci; Aaron Ceglar; Elizabeth Chang; Sudarshan S Chawathe; Ming-Syan Chen; Carlo Combi; Isabel Cruz; Misbah Deen; Elisabetta Di Nitto; Nina Edelweiss; Johann Eder; Gregor Engels; Tomoya Enokido; Peter Fankhauser; Germany Ling Feng; Eduardo Fernandez,General Chairperson: Kim Viborg Andersen; Copenhagen Business School; Denmark … ConferenceProgram Chairpersons: John Debenham; University of Technology; Sydney; Australia RolandR. Wagner; FAW; University of Linz; Austria … Workshop Chairpersons: A Min Tjoa; TechnicalUniversity of Vienna; Austria Roland R. Wagner; FAW; University of Linz; Austria … ProgramCommittee: Witold Abramowicz; The Poznan University of Economics; Poland Michel Adiba;IMAG – Laboratoire LSR; France Hamideh Afsarmanesh; University of Amsterdam; The NetherlandsAla Al-Zobaidie; University of Greenwich; UK Walid G. Aref; Purdue University; USA RamazanS. Aygun; University of Alabama in Huntsville; USA Leonard Barolli; Fukuoka Institute of Technology(FIT); Japan Kurt Bauknecht; Universität Zürich; Switzerland Trevor Bench-Capon; Universityof Liverpool; United Kingdom Elisa Bertino; Università di Milano; Italy Bishwaranjan …,*,*,*
General Chairperson,Heinrich C Mayr; Jiri Lazansky; Gerald Quirchmayr; Pavel Vogel; A Min Tjoa; Vladimir Marik; Hamideh Afsarmanesh; Ala Al-Zobaidie; CNAM Bernd Amann; France Frederic Andres; Kurt Bauknecht; Trevor Bench-Capon; Alfs Berztiss; Jon Bing; Omran Bukhres; Luis Camarinah-Matos; Antonio Cammelli; Stavros Christodoulakis; Paolo Ciaccia; Christine Collet; France LSR-IMAG; Carlo Combi; William Bruce Croft; John Debenham; Misbah Deen; Nina Edelweiss; Johann Eder; Eiter Thomas; Gregor Engels; Peter Fankhauser,DEXA 2001; the 12th International Conference on Database and Expert SystemsApplications was held on September 3–5; 2001; at the Technical University of Munich;Germany. The rapidly growing spectrum of database applications has led to theestablishment of more specialized discussion platforms (DaWaK conference; EC-Webconference; and DEXA workshop); which were all held in parallel with the DEXA conferencein Munich. In your hands are the results of much effort; beginning with the preparation of thesubmitted papers. The papers then passed through the reviewing process; and the weaccepted papers are revised to final versions by their authors and arranged width to theconference program. All this culminated in the conference itself. A total of 175 papers weresubmitted too this conference; and I would like to thank all the authors. They are the real …,*,*,*
Testing properties of generic functions,L Cabenda; G Engels; J Kleerekoper; S Mak; M Overeem; K Visser,Abstract A datatype-generic function is a family of functions indexed by (the structure of) atype. Examples of generic functions are equality tests; maps and pretty printers. QuickCheckis one of the most advanced tools for testing properties of functional programs. It supportsthe definition of properties and random test-data generators in Haskell; and checks if amonomorphic property is satisfied by the test cases. Generic functions satisfy genericproperties and this paper discusses specifying and testing such properties. It shows howgeneric properties can be formulated; and how QuickCheck can be used to test genericproperties. Furthermore; it shows how to automatically generate QuickCheck generatorsusing Generic Haskell.,*,*,*
Software Engineering and eLearning: The MuSofT Project www. musoft. org,Ernst-Erich Doberkat; Gregor Engels; Jan Hendrik Hausmann; Marc Lohmann; Jörg Pleumann; Jens Schröder,*,*,*,*
Program Co-Chairs,Martin Erwig; Andy Schürr; Chris Hundhausen; Jing Dong; Kendra Cooper; Gregor Engels; Alan Blackwell; Paolo Bottoni; Margaret Burnett; Phil Cox; John Hosking; Susan Wiedenbeck; Thomas Baar; Adam Borkowski; Shi-Kuo Chang; Maria Francesca Costabile; Gennaro Costagliola; Isabel Cruz; Mark Gross,Page 1. xii Committees Organizing Committee General Chair Kang Zhang; University of Texasat Dallas; USA Program Co-Chairs Martin Erwig; Oregon State University; USA Andy Schürr;Technische Universität Darmstadt; Germany Publicity Chair Chris Hundhausen; WashingtonState University; USA Finance Chair Jing Dong; University of Texas at Dallas; USA Tutorial /Workshop Chair Mark Minas; Universität der Bundeswehr in München; Germany Local ChairKendra Cooper; University of Texas at Dallas; USA Steering Committee Chair Gregor Engels;Universität Paderborn; Germany Steering Committee Alan Blackwell; University of Cambridge;UK Paolo Bottoni; Università di Roma; Italy Margaret Burnett; Oregon State University; USA …,*,*,*
Evolutionäre Software-und Systementwicklung-Methoden und Erfahrungen (ESoSyM-2011),Verbindung zwischen Werkzeugen; Erfahrungsberichte aus Einführung; Matthias Riebisch; Gregor Engels; Christian Zeidler; ABB Forschungszentrum Ladenburg; Wilhelm Hasselbring; Barbara Paech; Ralf Reussner; Detlef Streitferdt; Peter Tabeling; AG InterVista,Evolutionäre Software-und Systementwicklung- Methoden und Erfahrungen (ESoSyM-2011)Workshop der Konferenz SE2011 und Fachgruppentreffen der Fachgruppe OOSE der GIZiele: Bei der Entwicklung von Softwaresystemen sind immer komplexere Anforderungen zuerfüllen. Gleichzeitig steigen die Forderungen nach langfristiger Nutzbarkeit bei einfacher Änderbarkeitder Systeme. Evolutionäre Entwicklung und modellbasierte Methoden helfen; diese Ziele zuerreichen und Risiken der Entwicklung besser zu beherrschen. Allerdings bestehen Differenzenzwischen der Entwicklung von Ansätzen in der Forschung und der Anwendung in industriellerSoftwareentwicklung. Der Workshop soll breiten Raum für die Erörterung problemangepaßterAnsätze und Ergebnisse der Forschung sowie der Problemstellungen und Erfahrungen der Industriebieten. Darüber hinaus soll er auch eine Zusammenfassung und Darstellung der …,Gesellschaft für Informatik eV (GI) publishes this series in order to make available to a broad public recent findings in informatics (ie computer science and informa-tion systems); to document conferences that are organized in co-operation with GI and to publish the annual GI Award dissertation.,*,*
From Trees to Graphs: De£ ning the Semantics of Diagram Languages with Graph Transformation,Gregor Engels; Reiko Heckel,Abstract In order to de£ ne the semantics of diagram languages; new techniques may bedeveloped following the established approaches of denotational; operational; or algebraicsemantics of programming languages. Due to the multi-dimensional nature of diagrams (asopposed to the linear structure of programs); these new approaches should be based ongraphs (rather than trees or terms) and graph transformation could provide the underlyingtechnology.,*,*,*
Software Engineering and eLearning: The MuSofT Project [1] urn: nbn: de: 0009-5-2008,Ernst-Erich Doberkat; Gregor Engels; Jan Hendrik Hausmann; Marc Lohmann; Jörg Pleumann; Jens Schröder,*,*,*,*
1 Process Modeling in UML,G ENGELS; A FORSTER; R HECKEL,*,*,*,*
Observable or Invocable Behaviour-You Have to Choose!,J urgen Ebert; Gregor Engels,Abstract Several object-oriented modeling approaches propose to describe the dynamicbehaviour of objects by state transition diagrams. None of them provide precise rules orconditions for the interrelation between the behaviour description of classes and those oftheir subclasses. In this paper; we discuss this interrelation in detail. It turns out that one hasto distinguish between the observable and the invocable behaviour of objects and that dierent compatibility requirements between the diagrams exist depending on the type ofbehaviour.,*,*,*
Modelle für automobile Software,Gregor Engels; Dipl-Inform Jens Gaulke; Engels Sein Forschungsgebiet,25 ForschungsForum Universität Paderborn intuitiv zu verstehen und damit auch fürInformatiklaien als Auftraggeber verwendbar. Das Modell spielt somit imSoftwareentwicklungsprozess eine zentrale Rolle. Die in der Modellbeschreibungfestgelegten Anforderungen müssen von dem zu realisierenden Softwaresystem erfülltwerden. In diesem Sinne kann das Modell als Vertragsgrundlage zwischen Auftraggeberund Softwareentwicklungsteam dienen. Bei der Entwicklung technischer Systeme ist esheutzutage üblich; dass Teile des Systems von externen Partnern; so genanntenZulieferern; erstellt werden. Hierbei wird dem Zulieferer ein Lastenheft; in der Regel einetextuelle Form einer Modellbeschreibung; übergeben. Der Zulieferer entwickelt dann einenentsprechenden Prototypen bzw. letztendlich ein Produkt (vgl. hierzu Abbildung 1). Auf …,*,*,*
Universit at GH Paderborn; FB 17 Informatik; Warburger Str. 100; D-33098 Paderborn,A VIEW-BASED APPROACH TO; R HECKEL; G ENGELS,*,*,*,*
Note: An asterisk* following a name indicates a program committee member,Allen Ambler; Laura Beckwith; Alan Blackwell; Paolo Bottoni; Ruven Brooks; Jean-Marie Burkhardt; Margaret Burnett; Shi-Kuo Chang; Cynthia Corritore; Gennaro Costagliola; Philip Cox; Isabel Cruz; Allen Cypher; Vincenzo Deufemia; Francoise Detienne; Gregor Engels; Martin Erwig; Irene Finocchi; Carmine Gravino; Reiko Heckel; Masahito Hirakawa; Stefan Hoermann; John Hosking; Ken Kahn; Stuart Kent; Laura Leventhal; Henry Lieberman; Katharina Mehner; Evangelos Milios; Mark Minas; Bonnie Nardi; Marian Petre; Giuseppe Polese; Robert Rist; Peter Rodgers; Mary Beth Rosson; Jorma Sajaniemi; Tim Schattkowsky; Andy Schuerr; Timothy Shih; Trevor Smedley; John Stasko; Ralf Steinmetz; Genny Tortora; Willemien Visser; Susan Wiedenbeck; Aaron Wilson; Stuart Zweben,*,*,*,*
Reconciling TGGs with QVT,Robert Wagner; Gregor Engels,Single software tools are typically developed for a certain application domain and; thus; areworking on structured data; their model; that suits the requirements of this domain best.When integrating software tools or information systems that work on proprietary domainmodels; transformations between these models become necessary. Today; softwaredevelopment is increasingly based on technologies where conceptual and platformindependent models and metamodels play a centralized role. Such model driventechnologies are utilized not only to develop single software components; but to integratethese components into more complex software systems. The Object Management Group(OMG;[OMG]) presents an approach to separate the conceptual application model from theunderlying technologies; called Model Driven Architecture (MDA;[MDA]). Developing …,*,*,*
UML} Collaboration Diagrams and their,M Andries; G Engels; J Rekers; A Schürr,*,Proc. UML'99; Fort Collins; CO; USA,*,*
Graph transformations(Rome; 28 September- 2 October 2004),Hartmut Ehrig; Gregor Engels; Francesco Parisi-Presicce; Grzegorz Rozenberg,*,Lecture notes in computer science,*,*
Alpha,Fabian Christ; Gregor Engels; Benjamin Nagel; Stefan Sauer; Sebastian Germesin; Enrico Daga; Ozgur Kilic,*,*,*,*
Konzeption und Realisierung einer Internet-basierten Datenbankanwendung,R DEPKE; G ENGELS; C BOROWSKI,*,*,*,*
10. Prozess der Entwicklung von Web-Anwendungen,Gregor Engels; Marc Lohmann; Annika Wagner,Zusammenfassung Ist es möglich klassische Softwareentwicklungsprozesse für dieEntwicklung von Web-Anwendungen zu nutzen? Dazu formulieren wir sechs grundlegendeAnforderungen an den Prozess der Entwicklung von Web-Anwendungen. DieseAnforderungen werden zur Evaluation des Rational Unified Process (RUP) und von ExtremeProgramming (XP) verwendet. Dabei konzentrieren wir uns auf den eigentlichen Prozess;dh die Organisation des Ablaufs der Entwicklung; und lassen die zugrunde liegendenMethoden so weit wie möglich ausgeklammert. Es zeigt sich; dass keiner der Prozesse inder Lage ist; alle Anforderungen zu erfüllen. Die Stärken des RUP liegen in seinerAnpassbarkeit an den Grad der Komplexität der zu entwickelnden Anwendung. Die Stärkenvon XP dagegen liegen im Umgang mit kurzen Entwicklungszeiten und sich erst …,*,*,*
Konzeption und prototypische Realisierung eines XML-fähigen Mailtools,Marc Lohmann; Gregor Engels,Ich versichere; daß ich die vorliegende Diplomarbeit selbstständig verfaßt und keineanderen Quellen und Hilfsmittel als die angegebenen benutzt habe. Die Stellen; dieanderen Werken dem Wortlaut oder Sinn nach entnommen wurden; habe ich unter derAngabe der Quelle als Zitat kenntlich gemacht. Das gleiche gilt auch für beigegebeneSkizzen; Tabellen und Darstellungen. Die Arbeit hat in gleicher Form noch keiner anderenPrüfungsbehörde vorgelegen.,*,*,*
Benchmark,Tobias Kowatsch; Wolfgang Maass; Violeta Damjanovic; Wernher Behrendt; Andreas Gruber; Benjamin Nagel; Stefan Sauer; Gregor Engels,1 Executive Summary The objective of this deliverable is to design a benchmark model forCMSs in order to identify relevant requirements for IKS. The Interactive Knowledge Stack willbe a layered set of software components and specifications with the goal to improve theinteraction with knowledge objects of CMSs by using Semantic Web technologies. Incontrast to projects that benchmarked rather technical aspects of CMSs; we propose amodel that evaluates CMSs consistently from the business perspective down to thetechnology layer. This approach is based on IT alignment theory that states that higherdegrees of fit between business needs and IT result in increased business performance.Accordingly; IT executives of organizations that provide CMSs and IT executives2 oforganizations that use CMSs as well as CMS developers are taken into account covering …,*,*,*
Modelling of Coordinated Collaboration,Gregor Engels; Luuk Groenewegen; Gerti Kappel,In modern software systems one can observe a tendency towards supporting ongoing workof concurrently active individuals. These individuals might be human beings; or arti cialobjects like software components. They are somehow interrelated and interconnected andthey communicate with each other to share and exchange information. This tendency can forinstance be observed in the growing importance as well as gradual shift in meaning of thenotion of user-friendlyness. User-friendlyness is no longer restricted to warnings in case ofinput errors or to extensive help facilities. Nowadays; it comprises informing a user aboutpossible consequences of an action taken and of possible next steps after such an action.This information also re ects the state of a system as a whole. So possible e ects of otherusers actions are taken into account; too. At this point the original notion of …,*,*,*
Ein verfeinerter GQM-Ansatz zur Qualitätsbewertung von Software-Modellen,Hendrik Voigt; Gregor Engels,Zusammenfassung Wir stellen einen Qualitätsmanagementansatz zur Bewertung vonSoftware-Modellen vor. Unser Ansatz basiert auf der Goal Question Metric (GQM). Wirverfeinern GQM und fügen wichtige Konzepte und Aktivitäten hinzu; um auf diese Weise dieBesonderheiten bei der Qualitätsbewertung von Software-Modellen berücksichtigen zukönnen. Dabei konzentrieren wir uns insbesondere auf den Kontext eines Software-Modellsals entscheidenden Einflussfaktor für die Dokumentation von Informationsbedürfnissen;Qualitätsverständnis; Messung und Analyse. Aktuell wird eine Werkzeugunterstützung fürdie Eclipse Plattform entwickelt; damit unser Qualitätsmanagementansatz evaluiert undwirtschaftlich eingesetzt werden kann.,TUM,*,*
TAGT'98: theory and application of graph transformations(Paderborn; 16-20 November 1998; selected papers),Hartmut Ehrig; Gregor Engels; Hans-Jörg Kreowski; Grzegorz Rozenberg,*,Lecture notes in computer science,*,*
