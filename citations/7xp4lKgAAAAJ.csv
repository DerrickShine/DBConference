Curated databases,Peter Buneman; James Cheney; Wang-Chiew Tan; Stijn Vansummeren,Abstract Curated databases are databases that are populated and updated with a great dealof human effort. Most reference works that one traditionally found on the reference shelves oflibraries--dictionaries; encyclopedias; gazetteers etc.--are now curated databases. Since it isnow easy to publish databases on the web; there has been an explosion in the number ofnew curated databases used in scientific research. The value of curated databases lies inthe organization and the quality of the data they contain. Like the paper reference works theyhave replaced; they usually represent the efforts of a dedicated group of people to produce adefinitive description of some subject area. Curated databases present a number ofchallenges for database research. The topics of annotation; provenance; and citation arecentral; because curated databases are heavily cross-referenced with; and include data …,Proceedings of the twenty-seventh ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems,2008,142
On the expressiveness of implicit provenance in query and update languages,Peter Buneman; James Cheney; Stijn Vansummeren,Abstract Information describing the origin of data; generally referred to as provenance; isimportant in scientific and curated databases where it is the basis for the trust one puts intheir contents. Since such databases are constructed using operations of both query andupdate languages; it is of paramount importance to describe the effect of these languageson provenance. In this article we study provenance for query and update languages that areclosely related to SQL; and compare two ways in which they can manipulate provenance sothat elements of the input are rearranged to elements of the output: implicit provenance;where a query or update only provides the rearranged output; and provenance is providedimplicitly by a default provenance semantics; and explicit provenance; where a query orupdate provides both the output and the description of the provenance of each …,ACM Transactions on Database Systems (TODS),2008,133
Inferring XML schema definitions from XML data,Geert Jan Bex; Frank Neven; Stijn Vansummeren,Abstract Although the presence of a schema enables many optimizations for operations onXML documents; recent studies have shown that many XML documents in practice either donot refer to a schema; or refer to a syntactically incorrect one. It is therefore of utmostimportance to provide tools and techniques that can automatically generate schemas fromsets of sample documents. While previous work in this area has mostly focused on theinference of Document Type Definitions (DTDs for short); we will consider the inference ofXML Schema Definitions (XSDs for short)---the increasingly popular schema formalism thatis turning DTDs obsolete. In contrast to DTDs where the content model of an elementdepends only on the element's name; the content model in an XSD can also depend on thecontext in which the element is used. Hence; while the inference of DTDs basically …,Proceedings of the 33rd international conference on Very large data bases,2007,119
Learning deterministic regular expressions for the inference of schemas from XML data,Geert Jan Bex; Wouter Gelade; Frank Neven; Stijn Vansummeren,Abstract Inferring an appropriate DTD or XML Schema Definition (XSD) for a given collectionof XML documents essentially reduces to learning deterministic regular expressions fromsets of positive example words. Unfortunately; there is no algorithm capable of learning thecomplete class of deterministic regular expressions from positive examples only; as we willshow. The regular expressions occurring in practical DTDs and XSDs; however; are suchthat every alphabet symbol occurs only a small number of times. As such; in practice itsuffices to learn the subclass of deterministic regular expressions in which each alphabetsymbol occurs at most k times; for some small k. We refer to such expressions as k-occurrence regular expressions (k-OREs for short). Motivated by this observation; weprovide a probabilistic algorithm that learns k-OREs for increasing values of k; and selects …,ACM Transactions on the Web (TWEB),2010,109
Provenance: a future history,James Cheney; Stephen Chong; Nate Foster; Margo Seltzer; Stijn Vansummeren,Abstract Science; industry; and society are being revolutionized by radical new capabilitiesfor information sharing; distributed computation; and collaboration offered by the World WideWeb. This revolution promises dramatic benefits but also poses serious risks due to the fluidnature of digital information. One important cross-cutting issue is managing and recordingprovenance; or metadata about the origin; context; or history of data. We posit thatprovenance will play a central role in emerging advanced digital infrastructures. In thispaper; we outline the current state of provenance research and practice; identify hard openresearch problems involving provenance semantics; formal modeling; and security; andarticulate a vision for the future of provenance.,Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications,2009,97
Inference of concise regular expressions and DTDs,Geert Jan Bex; Frank Neven; Thomas Schwentick; Stijn Vansummeren,Abstract We consider the problem of inferring a concise Document Type Definition (DTD) fora given set of XML-documents; a problem that basically reduces to learning concise regularexpressions from positive examples strings. We identify two classes of concise regularexpressions—the single occurrence regular expressions (SOREs) and the chain regularexpressions (CHAREs)—that capture the far majority of expressions used in practical DTDs.For the inference of SOREs we present several algorithms that first infer an automaton for agiven set of example strings and then translate that automaton to a corresponding SORE;possibly repairing the automaton when no equivalent SORE can be found. In the process;we introduce a novel automaton to regular expression rewrite technique which is ofindependent interest. When only a very small amount of XML data is available; however …,ACM Transactions on Database Systems (TODS),2010,75
What are real SPARQL queries like?,Francois Picalausa; Stijn Vansummeren,Abstract We present statistics on real world SPARQL queries that may be of interest forbuilding SPARQL query processing engines and benchmarks. In particular; we analyze thesyntactical structure of queries in a log of about 3 million queries; harvested from theDBPedia SPARQL endpoint. Although a sizable portion of the log is shown to consist of so-called conjunctive SPARQL queries; non-conjunctive queries that use SPARQL's union oroptional operators are more than substantial. It is known; however; that query evaluationquickly becomes hard for queries including the non-conjunctive operators union or optional.We therefore drill deeper into the syntactical structure of the queries that are not conjunctiveand show that in 50% of the cases; these queries satisfy certain structural restrictions thatimply tractable evaluation in theory. We hope that the identification of these restrictions …,Proceedings of the International Workshop on Semantic Web Information Management,2011,69
A provenance model for manually curated data,Peter Buneman; Adriane Chapman; James Cheney; Stijn Vansummeren,Abstract Many curated databases are constructed by scientists integrating various existingdata sources “by hand”; that is; by manually entering or copying data from other sources.Capturing provenance in such an environment is a challenging problem; requiring a goodmodel of the process of curation. Existing models of provenance focus on queries/views indatabases or computations on the Grid; not updates of databases or Web sites. In this paperwe motivate and present a simple model of provenance for manually curated databases anddiscuss ongoing and future work.,International Provenance and Annotation Workshop,2006,53
Scalable multi-query optimization for exploratory queries over federated scientific databases,Anastasios Kementsietsidis; Frank Neven; Dieter Van de Craen; Stijn Vansummeren,Abstract The diversity and large volumes of data processed in the Natural Sciences todayhas led to a proliferation of highly-specialized and autonomous scientific databases withinherent and often intricate relationships. As a user-friendly method for querying thiscomplex; ever-expanding network of sources for correlations; we propose exploratoryqueries. Exploratory queries are loosely-structured; hence requiring only minimal userknowledge of the source network. Evaluating an exploratory query usually involves theevaluation of many distributed queries. As the number of such distributed queries canquickly become large; we attack the optimization problem for exploratory queries byproposing several multi-query optimization algorithms that compute a global evaluation planwhile minimizing the total communication cost; a key bottleneck in distributed settings …,Proceedings of the VLDB Endowment,2008,48
Relative expressive power of navigational querying on graphs,George HL Fletcher; Marc Gyssens; Dirk Leinders; Dimitri Surinx; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Yuqing Wu,Abstract Motivated by both established and new applications; we study navigational querylanguages for graphs (binary relations). The simplest language has only the two operatorsunion and composition; together with the identity relation. We make more powerfullanguages by adding any of the following operators: intersection; set difference; projection;coprojection; converse; and the diversity relation. All these operators map binary relations tobinary relations. We compare the expressive power of all resulting languages. We do thisnot only for general path queries (queries where the result may be any binary relation) butalso for boolean or yes/no queries (expressed by the nonemptiness of an expression). Forboth cases; we present the complete Hasse diagram of relative expressiveness. In particularthe Hasse diagram for boolean queries contains some nontrivial separations and a few …,Information sciences,2015,45
A structural approach to indexing triples,François Picalausa; Yongming Luo; George HL Fletcher; Jan Hidders; Stijn Vansummeren,Abstract As an essential part of the W3C's semantic web stack and linked data initiative; RDFdata management systems (also known as triplestores) have drawn a lot of researchattention. The majority of these systems use value-based indexes (eg; B+-trees) for physicalstorage; and ignore many of the structural aspects present in RDF graphs. Structuralindexes; on the other hand; have been successfully applied in XML and semi-structureddata management to exploit structural graph information in query processing. In thosesettings; a structural index groups nodes in a graph based on some equivalence criterion;for example; indistinguishability with respect to some query workload (usually XPath).Motivated by this body of work; we have started the SAINT-DB project to study and develop anative RDF management system based on structural indexes. In this paper we present a …,Extended Semantic Web Conference,2012,43
A graph model of data and workflow provenance,Umut Acar; Peter Buneman; James Cheney; Jan Van Den Bussche; Natalia Kwasnikowska; Stijn Vansummeren,Abstract Provenance has been studied extensively in both database and workflowmanagement systems; so far with little convergence of definitions or models. Provenance indatabases has generally been defined for relational or complex object data; by propagatingfine-grained annotations or algebraic expressions from the input to the output. This kind ofprovenance has been found useful in other areas of computer science: annotationdatabases; probabilistic databases; schema and data integration; etc. In contrast; workflowprovenance aims to capture a complete description of evaluation–or enactment–of aworkflow; and this is crucial to verification in scientific computation. Workflows and theirprovenance are often presented using graphical notation; making them easy to visualize butcomplicating the formal semantics that relates their run-time behavior with their …,*,2010,42
Type inference for unique pattern matching,Stijn Vansummeren,Abstract Regular expression patterns provide a natural; declarative way to expressconstraints on semistructured data and to extract relevant information from it. Indeed; it is acore feature of the programming language Perl; surfaces in various UNIX tools such as sedand awk; and has recently been proposed in the context of the XML programming languageXDuce. Since regular expressions can be ambiguous in general; different disambiguationpolicies have been proposed to get a unique matching strategy. We formally define thematching semantics under both (1) the POSIX; and (2) the first and longest matchdisambiguation strategies. We show that the generally accepted method of defining thelongest match in terms of the first match and recursion does not conform to the natural notionof longest match. We continue by solving the type inference problem for both …,ACM Transactions on Programming Languages and Systems (TOPLAS),2006,38
On deciding well-definedness for query languages on trees,Stijn Vansummeren,Abstract The well-definedness problem for a database query language consists of checking;given an expression and an input type; that the expression never yields a runtime error onany input adhering to the input type. In this article; we study the well-definedness problem forquery languages on trees that are built from a finite set of partially defined base operationsby adding variables; constants; conditionals; let bindings; and iteration. We identifyproperties of base operations that can make the problem undecidable and give restrictionsthat are sufficient to ensure decidability. As a direct result; we obtain a large fragment ofXQuery for which well-definedness is decidable.,Journal of the ACM (JACM),2007,34
Storing and indexing massive RDF datasets,Yongming Luo; François Picalausa; George HL Fletcher; Jan Hidders; Stijn Vansummeren,Abstract The resource description framework (RDF for short) provides a flexible method formodeling information on the Web [34; 40]. All data items in RDF are uniformly representedas triples of the form (subject; predicate; object); sometimes also referred to as (subject;property; value) triples.,*,2012,30
A crash course on database queries,Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren,Abstract Complex database queries; like programs in general; can" crash"; ie; can raiseruntime errors. We want to avoid crashes without losing expressive power; or we want tocorrectly predict the absence of crashes. We show how concepts and techniques fromprogramming language theory; notably type systems and reflection; can be adaptedto thisend. Of course; the specific nature of database queries (asopposed to general programs);also requires some new methods; andraises new questions.,Proceedings of the twenty-sixth ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems,2007,28
Recording provenance for sql queries and updates,Stijn Vansummeren; James Cheney,Knowing the origin of data (ie; where the data was copied or created from)---its provenance---is vital for assessing the trustworthiness of contemporary scientific databases such asUniProt and SWISS-PROT. Unfortunately; provenance information must currently berecorded manually; by added effort of the database maintainer. Since such maintenance istedious and error-prone; it is desirable to provide support for recording provenance in thedatabase system itself. We review a recent proposal for incorporating such support; as wellas its theoretical properties.,*,2007,28
Document spanners: A formal approach to information extraction,Ronald Fagin; Benny Kimelfeld; Frederick Reiss; Stijn Vansummeren,Abstract An intrinsic part of information extraction is the creation and manipulation ofrelations extracted from text. In this article; we develop a foundational framework where thecentral construct is what we call a document spanner (or just spanner for short). A spannermaps an input string into a relation over the spans (intervals specified by bounding indices)of the string. The focus of this article is on the representation of spanners. Conceptually;there are two kinds of such representations. Spanners defined in a primitive representationextract relations directly from the input string; those defined in an algebra apply algebraicoperations to the primitively represented spanners. This framework is driven by SystemT; anIBM commercial product for text analysis; where the primitive representation is that of regularexpressions with capture variables. We define additional types of primitive spanner …,Journal of the ACM (JACM),2015,23
Towards practical meta-querying,Jan Van den Bussche; Stijn Vansummeren; Gottfried Vossen,Abstract We describe a meta-querying system for databases containing queries in additionto ordinary data. In the context of such databases; a meta-query is a query about queries.Representing stored queries in XML; and using the standard XML manipulation languageXSLT as a sublanguage; we show that just a few features need to be added to SQL to turn itinto a fully-fledged meta-query language. The good news is that these features can bedirectly supported by extensible database technology.,Information Systems,2005,23
Towards a theory of search queries,George HL Fletcher; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren,Abstract The need to manage diverse information sources has triggered the rise of veryloosely structured data models; known as dataspace models. Such information managementsystems must allow querying in simple ways; mostly by a form of searching. Motivated bythese developments; we propose a theory of search queries in a general model ofdataspaces. In this model; a dataspace is a collection of data objects; where each dataobject is a collection of data items. Basic search queries are expressed using filters on dataitems; following the basic model of Boolean search in information retrieval. We characterizesemantically the class of queries that can be expressed by searching. We apply our theory toclassical relational databases; where we connect search queries to the known class of fullygeneric queries; and to dataspaces where data items are formed by attribute-value pairs …,ACM Transactions on Database Systems (TODS),2010,21
Cleaning inconsistencies in information extraction via prioritized repairs,Ronald Fagin; Benny Kimelfeld; Frederick Reiss; Stijn Vansummeren,Abstract The population of a predefined relational schema from textual content; commonlyknown as Information Extraction (IE); is a pervasive task in contemporary computationalchallenges associated with Big Data. Since the textual content varies widely in nature andstructure (from machine logs to informal natural language); it is notoriously difficult to write IEprograms that extract the sought information without any inconsistencies (eg; a substringshould not be annotated as both an address and a person name). Dealing withinconsistencies is hence of crucial importance in IE systems. Industrial-strength IE systemslike GATE and IBM SystemT therefore provide a built-in collection of cleaning operations toremove inconsistencies from extracted relations. These operations; however; are collectedin an ad-hoc fashion through use cases. Ideally; we would like to allow IE developers to …,Proceedings of the 33rd ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems,2014,19
Spanners: a formal framework for information extraction,Ronald Fagin; Benny Kimelfeld; Frederick Reiss; Stijn Vansummeren,Abstract An intrinsic part of information extraction is the creation and manipulation ofrelations extracted from text. In this paper; we develop a foundational framework where thecentral construct is what we call a spanner. A spanner maps an input string into relationsover the spans (intervals specified by bounding indices) of the string. The focus of this paperis on the representation of spanners. Conceptually; there are two kinds of suchrepresentations. Spanners defined in a primitive representation extract relations directly fromthe input string; those defined in an algebra apply algebraic operations to the primitivelyrepresented spanners. This framework is driven by SystemT; an IBM commercial product fortext analysis; where the primitive representation is that of regular expressions with capturevariables. We define additional types of primitive spanner representations by means of …,Proceedings of the 32nd ACM SIGMOD-SIGACT-SIGAI symposium on Principles of database systems,2013,16
Annotations are relative,Peter Buneman; Egor V Kostylev; Stijn Vansummeren,Abstract Most systems that have been developed for annotation of data assume a two-levelstructure in which annotation is superimposed on; and separate from; the data. Howeverthere are many cases in which an annotation may itself be annotated. For example threadsin e-mail and newsgroups allow the imposition of one comment on another; beliefannotations can be compounded; and valid time; regarded as an annotation can be freelymixed with belief annotations (at time t 1; B 1 believed that at time t 2; B 2 believed that...). Inthis paper we describe a hierarchical model of annotation in which there is no absolutedistinction between annotation and data. First; we introduce a term model for annotationsand; in order to express the fact that an annotation may apply to two or more data valueswith some shared structure; we provide a simple schema for annotation hierarchies. We …,Proceedings of the 16th International Conference on Database Theory,2013,16
Principles of provenance (dagstuhl seminar 12091),James Cheney; Anthony Finkelstein; Bertram Ludäscher; Stijn Vansummeren,Abstract This report documents the program and the outcomes of Dagstuhl Seminar12091``Principles of Provenance''. The term``provenance''refers to information about theorigin; context; derivation; ownership or history of some artifact. In both art and science;provenance information is crucial for establishing the value of a real-world artifact;guaranteeing for example that the artifact is an original work produced by an important artist;or that a stated scientific conclusion is reproducible. Since it is much easier to copy or alterdigital information than it is to copy or alter real-world artifacts; the need for tracking andmanagement of provenance information to testify the value and correctness of digitalinformation has been firmly established in the last few years. As a result; provenancetracking and management has been studied in many settings; ranging from databases …,Dagstuhl Reports,2012,15
Discovering XSD keys from XML data,Marcelo Arenas; Jonny Daenen; Frank Neven; Martin Ugarte; Jan Van Den Bussche; Stijn Vansummeren,Abstract A great deal of research into the learning of schemas from XML data has beenconducted in recent years to enable the automatic discovery of XML schemas from XMLdocuments when no schema or only a low-quality one is available. Unfortunately; and instrong contrast to; for instance; the relational model; the automatic discovery of even thesimplest of XML constraints; namely XML keys; has been left largely unexplored in thiscontext. A major obstacle here is the unavailability of a theory on reasoning about XML keysin the presence of XML schemas; which is needed to validate the quality of candidate keys.The present article embarks on a fundamental study of such a theory and classifies thecomplexity of several crucial properties concerning XML keys in the presence of an XSD;like; for instance; testing for consistency; boundedness; satisfiability; universality; and …,ACM Transactions on Database Systems (TODS),2014,14
SchemaScope: a system for inferring and cleaning XML schemas,Geert Jan Bex; Frank Neven; Stijn Vansummeren,Abstract We present SchemaScope; a system to derive Document Type Definitions and XMLschema from a corpus of sample XML documents. Tools are provided to visualize; clean andrefine existing or inferred schemas. A number of use cases illustrate the versatility of thesystem; as well as various types of applications.,Proceedings of the 2008 ACM SIGMOD international conference on Management of data,2008,14
Polymorphic type inference for the named nested relational calculus,Jan Van den Bussche; Stijn Vansummeren,Abstract The named nested relational calculus is the canonical query language for thecomplex object database model and is equipped with a natural static type system. Given anexpression in the language; without type declarations for the input variables; there is theproblem of whether there are any input type declarations under which the expression is well-typed. Moreover; if there are; then which are they; and what is the corresponding output typefor each of these&quest; This problem is solved by a logic-based approach; and the decisionproblem is shown to be NP-complete.,ACM Transactions on Computational Logic (TOCL),2007,14
Well-definedness and semantic type-checking for the nested relational calculus,Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren,Abstract The well-definedness problem for a programming language consists of checking;given an expression and an input type; whether the semantics of the expression is definedfor all inputs adhering to the input type. A related problem is the semantic type-checkingproblem which consists of checking; given an expression; an input type; and an output typewhether the expression always returns outputs adhering to the output type on inputsadhering to the input type. Both problems are undecidable for general-purposeprogramming languages. In this paper we study these problems for the Nested RelationalCalculus; a specific-purpose database query language. We also investigate how theseproblems behave in the presence of programming language features such as singletoncoercion and type tests.,Theoretical computer science,2007,14
Une plate-forme technologique liée à la paralysie cérébrale-Le projet ICT4Rehab,Serge Van Sint Jan; Vanessa Wermenbol; Patrick Van Bogaert; Kaat Desloovere; Marc Degelaen; Bernard Dan; Patrick Salvia; Els Ortibus; Bruno Bonnechère; Yann-Aël Le Borgne; Gianluca Bontempi; Stijn Vansummeren; Victor Sholukha; Fédor Moiseev; Marcel Rooze,L'appareil musculosquelettique (AMSQ) est primordial pour effectuer nos tâchesquotidiennes et professionnelles; et interagir socialement avec notre entourage. Lespathologies de l'AMSQ ont un retentissement important sur notre fonctionnement normal. Iln'est donc pas étonnant que les pathologies de l'AMSQ arrivent en tête dans les statistiquesmondiales relatives à l'absentéisme professionnel ou aux coûts sociétaux liés à la prise encharge des patients qui en sont atteints. L'AMSQ est aussi impliqué dans des pathologieslourdes du système nerveux central; telles que la paralysie cérébrale (PC); dont l'étiologiecomplexe complique l'interprétation des signes cliniques et l'obtention d'un consensus sur lamise en place d'un suivi clinique. Le projet ICT4Rehab a développé une plateformetechnologique intégrée proposant des outils qui permettent une gestion et une …,médecine/sciences,2013,13
The impact of transitive closure on the expressiveness of navigational query languages on unlabeled graphs,George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Yuqing Wu,Abstract Several established and novel applications motivate us to study the expressivepower of navigational query languages on graphs; which represent binary relations. Ourbasic language has only the operators union and composition; together with the identityrelation. Richer languages can be obtained by adding other features such as intersection;difference; projection and coprojection; converse; and the diversity relation. The expressivepower of the languages thus obtained cannot only be evaluated at the level of path queries(queries returning binary relations); but also at the level of Boolean or yes/no queries(expressed by the nonemptiness of an expression). For the languages considered above;adding transitive closure augments the expressive power not only at the level of pathqueries but also at the level of Boolean queries; for the latter provided that multiple input …,Annals of Mathematics and Artificial Intelligence,2015,11
The impact of transitive closure on the boolean expressiveness of navigational query languages on graphs,George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Yuqing Wu,Abstract Several established and novel applications motivate us to study the expressivepower of navigational query languages on graphs; which represent binary relations. Ourbasic language has only the operators union and composition; together with the identityrelation. Richer languages can be obtained by adding other features such as other setoperators; projection and coprojection; converse; and the diversity relation. In this paper; weshow that; when evaluated at the level of boolean queries with an unlabeled input graph (ie;a single relation); adding transitive closure to the languages with coprojection addsexpressive power; while this is not the case for the basic language to which none; one; orboth of projection and the diversity relation are added. In combination with earlier work [10];these results yield a complete understanding of the impact of transitive closure on the …,International Symposium on Foundations of Information and Knowledge Systems,2012,11
On the complexity of deciding typability in the relational algebra,Stijn Vansummeren,Abstract. We investigate the complexity of the typability problem for the relational algebra.This problem consists of deciding; for a given relational algebra expression; whether thereexists an assignment of types to variables occurring in the expression such that theexpression is well-typed under the assignment. We obtain that the problem is NP-completein general. In particular; we show that the problem becomes NP-hard due to (1) the cartesianproduct operator;(2) the selection operator on arbitrary sets of typed predicates;(3) theselection operator on “well-behaved” sets of typed predicates together with join andprojection or renaming. However; the problem is in P when (1) we only allow union;difference; join and selection on “well-behaved” sets of typed predicates; or (2) we allow alloperators except cartesian product; where the set of selection predicates can mention at …,Acta Informatica,2005,11
Similarity and bisimilarity notions appropriate for characterizing indistinguishability in fragments of the calculus of relations,George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren,Motivated by applications in databases; this article considers various fragments of thecalculus of binary relations. The fragments are obtained by leaving out; or keeping in; someof the standard operators; along with some derived operators such as set difference;projection; coprojection and residuation. For each considered fragment; a characterization isobtained for when two given binary relational structures are indistinguishable byexpressions in that fragment. The characterizations are based on appropriately adaptednotions of simulation and bisimulation.,Journal of Logic and Computation,2015,10
Deciding well-definedness of XQuery fragments,Stijn Vansummeren,Abstract Unlike in traditional query languages; expressions in XQuery can have anundefined meaning (ie; these expressions produce a run-time error). It is hence natural toask whether we can solve the well-definedness problem for XQuery: given an expressionand an input type; check whether the semantics of the expression is defined for all inputsadhering to the input type. In this paper we investigate the well-definedness problem for non-recursive fragments of XQuery under a bounded-depth type system. We identify properties ofbase operations which can make the problem undecidable and give conditions which aresufficient to ensure decidability.,Proceedings of the twenty-fourth ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems,2005,10
Well-definedness and semantic type-checking in the nested relational calculus and XQuery,Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren,Abstract Two natural decision problems regarding the XML query language XQuery are well-definedness and semantic type-checking. We study these problems in the setting of arelational fragment of XQuery. We show that well-definedness and semantic type-checkingare undecidable; even in the positive-existential case. Nevertheless; for a “pure” variant ofXQuery; in which no identification is made between an item and the singleton containing thatitem; the problems become decidable. We also consider the analogous problems in thesetting of the nested relational calculus.,International Conference on Database Theory,2005,9
Relative expressive power of navigational querying on graphs using transitive closure,Dimitri Surinx; George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Yuqing Wu,Abstract Motivated by both established and new applications; we study navigational querylanguages for graphs (binary relations). The simplest language has only the two operatorsunion and composition; together with the identity relation. We make more powerfullanguages by adding any of the following operators: intersection; set difference; projection;coprojection; converse; transitive closure; and the diversity relation. All these operators mapbinary relations to binary relations. We compare the expressive power of all resultinglanguages; both for binary-relation queries as well as for boolean queries. In the absence oftransitive closure; a complete Hasse diagram of relative expressiveness has already beenestablished. Moreover; it has already been shown that for boolean queries over a singleedge label; transitive closure does not add any expressive power when only projection …,Logic Journal of the IGPL,2015,8
Meta-SQL: Towards practical meta-querying,Jan Van den Bussche; Stijn Vansummeren; Gottfried Vossen,Abstract Enterprise databases often contain not only ordinary data; but also queries.Examples are view definitions in the system catalog; usage logs or workloads; and storedprocedures as in SQL/PSM or Postgres. Unfortunately; these queries are typically stored aslong strings; which makes it hard to use standard SQL to express meta-queries: queriesabout queries. Meta-querying is an important activity in situations such as advanceddatabase administration; database usage monitoring; and workload analysis. Here aresome examples of meta-queries to a usage log.(i)“Which queries in the log do the mostjoins?”(ii)“Which queries in the log return an empty answer on the current instance of thedatabase?”(iii) View expansion:“Replace; in each query in the log; each view name by itsdefinition as given in the system catalog.”(iv) Given a list of new view definitions (under …,International Conference on Extending Database Technology,2004,8
Principles of Guarded Structural Indexing,François Picalausa; George HL Fletcher; Jan Hidders; Stijn Vansummeren,ABSTRACT We present a new structural characterization of the expressive power of theacyclic conjunctive queries in terms of guarded simulations; and give a finite preservationtheorem for the guarded simulation invariant fragment of first order logic. We discuss therelevance of these results as a formal basis for constructing so-called guarded structuralindexes. Structural indexes were first proposed in the context of semistructured querylanguages and later successfully applied as an XML indexation mechanism for XPath-likequeries on trees and graphs. Guarded structural indexes provide a generalization ofstructural indexes from graph databases to relational databases.,17th International Conference on Database Theory; ICDT 2014,2014,7
XML typechecking,Véronique Benzaken; Giuseppe Castagna; Haruo Hosoya; Benjamin C Pierce; Stijn Vansummeren,XML access control refers to the practice of limiting access to (parts of) XML data to onlyauthorized users. Similar to access control over other types of data and resources; XMLaccess control is centered around two key problems:(i) the development of formal models forthe specification of access control policies over XML data; and (ii) techniques for efficientenforcement of access control policies over XML data.,*,2009,7
SCULPT: A schema language for tabular data on the web,Wim Martens; Frank Neven; Stijn Vansummeren,Abstract Inspired by the recent working effort towards a recommendation by the World WideWeb Consortium (W3C) for tabular data and metadata on the Web; we present in this papera concept for a schema language for tabular web data called SCULPT. The languageconsists of rules constraining and defining the structure of regions in the table. Theseregions are defined through the novel formalism of region selection expressions. We presenta formal model for SCULPT and obtain a linear time combined complexity evaluationalgorithm. In addition; we consider weak and strong streaming evaluation for SCULPT andpresent a SCULPT fragment for each of these streaming variants. Finally; we discuss severalextensions of SCULPT including alternative semantics; types; complex content; and exploreregion selection expressions as a basis for a transformation language.,Proceedings of the 24th International Conference on World Wide Web,2015,6
Structural recursion as a query language on lists and ordered trees,Edward L Robertson; Lawrence V Saxton; Dirk Van Gucht; Stijn Vansummeren,Abstract XML query languages need to provide some mechanism to inspect and manipulatenodes at all levels of an input tree. We investigate the expressive power provided in thisregard by structural recursion. In particular; we show that the combination of verticalrecursion down a tree combined with horizontal recursion across a list of trees gives rise to arobust class of transformations: it captures the class of all primitive recursive queries. Sincequeries are expected to be computable in at most polynomial time for all practical purposes;we next identify a restriction of structural recursion that captures the polynomial time queries.We also give corresponding results for list-based complex objects.,Theory of Computing Systems,2009,5
A software reference architecture for semantic-aware Big Data systems,Sergi Nadal; Victor Herrero; Oscar Romero; Alberto Abelló; Xavier Franch; Stijn Vansummeren; Danilo Valerio,Abstract Context: Big Data systems are a class of software systems that ingest; store;process and serve massive amounts of heterogeneous data; from multiple sources. Despitetheir undisputed impact in current society; their engineering is still in its infancy andcompanies find it difficult to adopt them due to their inherent complexity. Existing attempts toprovide architectural guidelines for their engineering fail to take into account important BigData characteristics; such as the management; evolution and quality of the data. Objective:In this paper; we follow software engineering principles to refine the λ-architecture; areference model for Big Data systems; and use it as seed to create Bolster; a softwarereference architecture (SRA) for semantic-aware Big Data systems. Method: By including anew layer into the λ-architecture; the Semantic Layer; Bolster is capable of handling the …,Information and software technology,2017,3
Complex event recognition languages: Tutorial,Alexander Artikis; Alessandro Margara; Martin Ugarte; Stijn Vansummeren; Matthias Weidlich,Page 1. Tutorial: Complex Event Recognition Languages Alexander Artikis University of PiraeusNCSR Demokritos Athens; Greece a.artikis@iit.demokritos.gr Alessandro Margara Politecnicodi Milano Milano; Italy alessandro.margara@polimi.it Martin Ugarte Université Libre de BruxellesBrussels; Belgium martin.ugarte@ulb.ac.be Stijn Vansummeren Université Libre de BruxellesBrussels; Belgium svsummer@ulb.ac.be Matthias Weidlich Humboldt-Universtität zu Berlin Berlin;Germany matthias.weidlich@hu-berlin.de ABSTRACT Complex event recognition (CER) refersto the detection of events in Big Data streams. The paper presents a summary of the mostprominent models and algorithms for CER; and discusses the main conceptual links and the dierences between them. ACM Reference format: Alexander Artikis; Alessandro Margara; MartinUgarte; Stijn Vansummeren; and Matthias Weidlich. 2017 …,Proceedings of the 11th ACM International Conference on Distributed and Event-based Systems,2017,3
Declarative cleaning of inconsistencies in information extraction,Ronald Fagin; Benny Kimelfeld; Frederick Reiss; Stijn Vansummeren,Abstract The population of a predefined relational schema from textual content; commonlyknown as Information Extraction (IE); is a pervasive task in contemporary computationalchallenges associated with Big Data. Since the textual content varies widely in nature andstructure (from machine logs to informal natural language); it is notoriously difficult to write IEprograms that unambiguously extract the sought information. For example; during extraction;an IE program could annotate a substring as both an address and a person name. When thishappens; the extracted information is said to be inconsistent; and some way of removinginconsistencies is crucial to compute the final output. Industrial-strength IE systems likeGATE and IBM SystemT therefore provide a built-in collection of cleaning operations toremove inconsistencies from extracted relations. These operations; however; are …,ACM Transactions on Database Systems (TODS),2016,3
Relative expressive power of downward fragments of navigational query languages on trees and chains,Jelle Hellings; Marc Gyssens; Yuqing Wu; Dirk Van Gucht; Jan Van den Bussche; Stijn Vansummeren; George HL Fletcher,Abstract Motivated by the continuing interest in the tree data model; we study the expressivepower of downward fragments of navigational query languages on trees. The basicnavigational query language we consider expresses queries by building binary relationsfrom the edge relations and the identity relation; using composition and union. We study theeffects on the expressive power when we add transitive closure; projections; coprojections;intersection; and difference. We study expressiveness at the level of boolean queries andpath queries; on labeled and unlabeled trees; and on labeled and unlabeled chains. In allthese cases; we are able to present the complete Hasse diagram of relative expressiveness.In particular; we were able to decide; for each fragment of the navigational query languagesthat we study; whether it is closed under difference and intersection when applied on …,Proceedings of the 15th Symposium on Database Programming Languages,2015,3
Structural recursion on ordered trees and list-based complex objects,Edward L Robertson; Lawrence V Saxton; Dirk Van Gucht; Stijn Vansummeren,Abstract XML query languages need to provide some mechanism to inspect and manipulatenodes at all levels of an input tree. In this paper we investigate the expressive powerprovided in this regard by structural recursion. We show that the combination of verticalrecursion down a tree combined with horizontal recursion across a list of trees gives rise to arobust class of transformations: it captures the class of all primitive recursive queries. Sincequeries are expected to be computable in at most polynomial time for all practical purposes;we next identify a restriction of structural recursion that captures the polynomial time queries.Although this restriction is semantical in nature; and therefore undecidable; we provide aneffective syntax. We also give corresponding results for list-based complex objects.,International Conference on Database Theory,2007,3
AHM ter Hofstede,WMP van der Aalst; L Aldred; M Dumas,*,Design and implementation of the YAWL system;” Advanced Information Systems Engineering,2003,3
An integration-oriented ontology to govern evolution in big data ecosystems,Sergi Nadal; Oscar Romero; Alberto Abelló; Panos Vassiliadis; Stijn Vansummeren,Abstract: Big Data architectures allow to flexibly store and process heterogeneous data; frommultiple sources; in their original format. The structure of those data; commonly supplied bymeans of REST APIs; is continuously evolving. Thus data analysts need to adapt theiranalytical processes after each API release. This gets more challenging when performing anintegrated or historical analysis. To cope with such complexity; in this paper; we present theBig Data Integration ontology; the core construct to govern the data integration processunder schema evolution by systematically annotating it with information regarding theschema of the sources. We present a query rewriting algorithm that; using the annotatedontology; converts queries posed over the ontology to queries over the sources. To copewith syntactic evolution in the sources; we present an algorithm that semi-automatically …,arXiv preprint arXiv:1801.05161,2018,2
Incorporating information extraction in the relational database model,Yoav Nahshon; Liat Peterfreund; Stijn Vansummeren,Abstract Modern information extraction pipelines are typically constructed by (1) loadingtextual data from a database into a special-purpose application;(2) applying a myriad of text-analytics functions to the text; which produce a structured relational table; and (3) storing thistable in a database. Obviously; this approach can lead to laborious development processes;complex and tangled programs; and inefficient control flows. Towards solving thesedeficiencies; we embark on an effort to lay the foundations of a new generation of text-centricdatabase management systems. Concretely; we extend the relational model byincorporating into it the theory of document spanners which provides the means andmethods for the model to engage the Information Extraction (IE) tasks. This extended model;called Spannerlog; provides a novel declarative method for defining and manipulating …,Proceedings of the 19th International Workshop on Web and Databases,2016,2
Well-defined NRC queries can be typed,Jan Van den Bussche; Stijn Vansummeren,Abstract We study the expressive power of the static type system of the Nested RelationalCalculus NRC and show that on so-called homogeneous input and output types; the NRCtype system is expressively complete: every untyped but homogeneously well-defined NRCexpression can be equivalently expressed by a well-typed expression. The NRC static typesystem hence does not limit the expressive power of the query writer.,*,2013,2
Translating SQL into the relational algebra,Jan Van den Bussche; Stijn Vansummeren,Translating an arbitrary SQL query into a logical query plan (ie; a relational algebraexpression) is a complex task. In these course notes we try to explain the most importantelements of this translation by making the following simplifying assumptions:• Since thelatest version of SQL is a very large and complex language (including features likerecursion; stored procedures; user defined functions;...) we will focus here on the so-calledSQL-92 subset of the language; which can be considered as the traditional “heart” of SQL,Course notes; Hasselt University and Université Libre de Bruxelles,2009,2
Non-linear prefixes in query languages,Antonio Badia; Stijn Vansummeren,Abstract In first order logic there are two main extensions to quantification: generalizedquantifiers and non-linear prefixes. While generalized quantifiers have been explored from adatabase perspective; non-linear prefixes have not-most likely because of complexityconcerns. In this paper we first illustrate the usefulness of non-linear prefixes in querylanguages by means of example queries. We then introduce the subject formally;distinguishing between two forms of non-linearity: branching and cumulation. To escapecomplexity concerns; we focus on monadic quantifiers. In this context; we show thatbranching does not extend the expressive power of first order logic when it is interpretedover finite models; while cumulation does not extend the expressive power when it isinterpreted over bounded models. Branching and cumulation do; however; allow us to …,Proceedings of the twenty-sixth ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems,2007,2
Automata and logic on trees: Algorithms,Wim Martens; Stijn Vansummeren,*,*,2007,2
The Dynamic Yannakakis Algorithm: Compact and Efficient Query Processing Under Updates,Muhammad Idris; Martín Ugarte; Stijn Vansummeren,Abstract Modern computing tasks such as real-time analytics require refresh of query resultsunder high update rates. Incremental View Maintenance (IVM) approaches this problem bymaterializing results in order to avoid recomputation. IVM naturally induces a trade-offbetween the space needed to maintain the materialized results and the time used to processupdates. In this paper; we show that the full materialization of results is a barrier for moregeneral optimization strategies. In particular; we present a new approach for evaluatingqueries under updates. Instead of the materialization of results; we require a data structurethat allows:(1) linear time maintenance under updates;(2) constant-delay enumeration of theoutput;(3) constant-time lookups in the output; while (4) using only linear space in the size ofthe database. We call such a structure a Dynamic Constant-delay Linear Representation …,Proceedings of the 2017 ACM International Conference on Management of Data,2017,1
A Relational Framework for Information Extraction,Ronald Fagin; Benny Kimelfeld; Frederick Reiss; Stijn Vansummeren,Abstract Information Extraction commonly refers to the task of populating a relationalschema; having predefined underlying semantics; from textual content. This task ispervasive in contemporary computational challenges associated with Big Data. In this articlewe provide an overview of our work on document spanners--a relational framework forInformation Extraction that is inspired by rule-based systems such as IBM's SystemT.,ACM SIGMOD Record,2016,1
Empirical evaluation of guarded structural indexing.,Erik Agterdenbos; George HL Fletcher; Chee-Yong Chan; Stijn Vansummeren,ABSTRACT Traditional indices in relational databases are designed for queries that areselective by value. However; queries can also retrieve records on their relational structure. Inour research; we found that traditional indices are ineffective for structurally selectivequeries. To accelerate such queries; socalled 'structural indices' have been applied in graphdatabases. These indices group together structurally similar nodes to obtain a compactrepresentation of the graph structure. We studied how structural indices can be applied inrelational databases and evaluated their performance. Guarded bisimulation groupstogether relational tuples with similar structure; which we use to obtain a guarded structuralindex. Our solution requires significantly less space than traditional indices. At the sametime; it can offer several orders of magnitude faster query evaluation performance.,EDBT,2016,1
Type inferentie in ML; de relationele algebra en XDuce,Stijn Vansummeren,*,*,2001,1
Comparing Downward Fragments of the Relational Calculus with Transitive Closure on Trees,Jelle Hellings; Marc Gyssens; Yuqing Wu; Dirk Van Gucht; Jan Van den Bussche; Stijn Vansummeren; George HL Fletcher,Abstract: Motivated by the continuing interest in the tree data model; we study the expressivepower of downward navigational query languages on trees and chains. Basic navigationalqueries are built from the identity relation and edge relations using composition and union.We study the effects on relative expressiveness when we add transitive closure; projections;coprojections; intersection; and difference; this for boolean queries and path queries onlabeled and unlabeled structures. In all cases; we present the complete Hasse diagram. Inparticular; we establish; for each query language fragment that we study on trees; whether itis closed under difference and intersection. Subjects: Databases (cs. DB) Cite as: arXiv:1803.01390 [cs. DB](or arXiv: 1803.01390 v1 [cs. DB] for this version) Submission historyFrom: Jelle Hellings [view email][v1] Sun; 4 Mar 2018 17: 38: 51 GMT (38kb),arXiv preprint arXiv:1803.01390,2018,*
A Second-Order Approach to Complex Event Recognition,Alejandro Grez; Cristian Riveros; Martin Ugarte; Stijn Vansummeren,Abstract: Complex Event Recognition (CER for short) refers to the activity of detectingpatterns in streams of continuously arriving data. This field has been traditionallyapproached from a practical point of view; resulting in heterogeneous implementations withfundamentally different capabilities. The main reason behind this is that defining formalsemantics for a CER language is not trivial: they usually combine first-order variables forjoining and filtering events with regular operators like sequencing and Kleene closure.Moreover; their semantics usually focus only on the detection of complex events; leaving theconcept of output mostly unattended. In this paper; we propose to unify the semantics andoutput of complex event recognition languages by using second order objects. Specifically;we introduce a CER language called Second Order Complex Event Logic (SO-CEL for …,arXiv preprint arXiv:1712.01063,2017,*
Tutorial: Complex Event Recognition Languages,Alexander Artikis; Alessandro Margara; Martin Ugarte; Stijn Vansummeren; Matthias Weidlich,Page 1. Tutorial: Complex Event Recognition Languages Alexander Artikis University of PiraeusNCSR Demokritos Athens; Greece a.artikis@iit.demokritos.gr Alessandro Margara Politecnicodi Milano Milano; Italy alessandro.margara@polimi.it Martin Ugarte Université Libre de BruxellesBrussels; Belgium martin.ugarte@ulb.ac.be Stijn Vansummeren Université Libre de BruxellesBrussels; Belgium svsummer@ulb.ac.be Matthias Weidlich Humboldt-Universtität zu Berlin Berlin;Germany matthias.weidlich@hu-berlin.de ABSTRACT Complex event recognition (CER) refersto the detection of events in Big Data streams. The paper presents a summary of the mostprominent models and algorithms for CER; and discusses the main conceptual links and the dierences between them. ACM Reference format: Alexander Artikis; Alessandro Margara; MartinUgarte; Stijn Vansummeren; and Matthias Weidlich. 2017 …,*,2017,*
Parallel evaluation of multi-semi-joins,Jonny Daenen; Frank Neven; Tony Tan; Stijn Vansummeren,Abstract While services such as Amazon AWS make computing power abundantly available;adding more computing nodes can incur high costs in; for instance; pay-as-you-go planswhile not always significantly improving the net running time (aka wall-clock time) of queries.In this work; we provide algorithms for parallel evaluation of SGF queries in MapReduce thatoptimize total time; while retaining low net time. Not only can SGF queries specify all semi-join reducers; but also more expressive queries involving disjunction and negation. SinceSGF queries can be seen as Boolean combinations of (potentially nested) semi-joins; weintroduce a novel multi-semi-join (MSJ) MapReduce operator that enables the evaluation ofa set of semi-joins in one job. We use this operator to obtain parallel query plans for SGFqueries that outvalue sequential plans wrt net time and provide additional optimizations …,Proceedings of the VLDB Endowment,2016,*
PP1. 5–1899 Management and interpretation of medical data related to cerebral palsy: the ICT4 Rehab project,B Bonnechère; V Wermenbol; B Dan; P Salvia; Y Le Borgne; G Bontempi; S Vansummeren; V Sholukha; F Moiseev; B Jansen; M Rooze; S Van Sint Jan,Aim: To review the experience with botulinum toxin A (BoNT-A) of a paediatricmultidisciplinary cerebral palsy clinic and test stability of doses and inter-session intervals indifferent patient groups. Methods: Children and adolescents; younger than 18 years old withSpastc Cerebral Palsy (SCP) who received BoNT-A injections were included in this study.Onabotulinumtoxin A and Abobotulinumtoxin A were used for multi-level upper and/or lowerlimb injections; repeated as needed at> 4 months intervals. Data on the dosage scheme; thefrequency of the injections and the duration of the treatment along with patients'demographic data were collected. Results: 454 patients with a mean age of 5.3 years (±3.6)received 1515 BoNT-A sessions. Total doses/kg of BoNT-A were stable across sessions (p=0.244) but they were higher in children bilaterally (p< 0.001) and more severely involved …,European Journal of Paediatric Neurology,2013,*
Dagstuhl Reports; Vol. 2; Issue 2 ISSN 2192-5283,Georg Carle; Hervé Debar; Falko Dressler; Hartmut König; Rainer Koschke; Ira D Baxter; Michael Conradt; James R Cordy; Daniel A Keim; Fabrice Rossi; Thomas Seidl; Michel Verleysen; Stefan Wrobel; James Cheney; Anthony Finkelstein; Bertram Ludäscher; Stijn Vansummeren,Network Attack Detection and Defense Early Warning Systems – Challenges and Perspectives(Dagstuhl Seminar 12061) Georg Carle; Hervé Debar; Falko Dressler; and Hartmut König… Software Clone Management Towards Industrial Application (Dagstuhl Seminar12071) Rainer Koschke; Ira D. Baxter; Michael Conradt; and James R. Cordy ........... 21 … InformationVisualization; Visual Data Mining and Machine Learning (Dagstuhl Seminar 12081) DanielA. Keim; Fabrice Rossi; Thomas Seidl; Michel Verleysen; and Stefan Wrobel … Principles ofProvenance (Dagstuhl Seminar 12091) James Cheney; Anthony Finkelstein; BertramLudäscher; and Stijn Vansummeren … Published online and open access by Schloss Dagstuhl– Leibniz-Zentrum für Informatik GmbH; Dagstuhl Publishing; Saarbrücken/Wadern;Germany. Online available at http://www.dagstuhl.de/dagrep,*,2012,*
SeedEP2: Integrated modelling of the musculoskeletal system,Serge Van Sint Jan; B De Bono; Victor Sholukha; Fedor Moiseev; S Van Summeren,DI-fusion; le Dépôt institutionnel numérique de l'ULB; est l'outil de référencementde laproduction scientifique de l'ULB.L'interface de recherche DI-fusion permet de consulter lespublications des chercheurs de l'ULB et les thèses qui y ont été défendues.,*,2012,*
Storing and Indexing Massive RDF Datasets,George Fletcher; Jan Hidders; Yongming Luo; Francois Picalausa; Stijn Vansummeren; Roberto De Virgilio; Francesco Guerra; Yannis Velegrakis,Résumé: In this chapter we present a general survey of the currentstate of the art in RDFstorage and indexing. In the flurry ofresearch on RDF data management in the last decade;we can identifythree different perspectives on RDF:(1) a relational perspective;(2) an entityperspective; and (3) a graph-based perspective. Eachof these three perspectives has drawnfrom ideas and results inthree distinct research communities to propose solutionsformanaging RDF data: relational databases (for the relationalperspective); informationretrieval (for the entity perspective); and graph theory and graph databases (for the graph-basedperspective). Our goal in this chapter is to give an up-to-dateoverview ofreprespentative solutions within each perspective.,Semantic Search over the Web,2012,*
XML Typechecking,Giuseppe Castagna; Véronique Benzaken; Haruo Hosoya; Benjamin Pierce; Stijn Vansummeren,Toggle navigation. HAL: HAL; HALSHS; TEL; MédiHAL; Liste des portails; AURéHAL; API;Documentation. Episciences.org; Sciencesconf.org; Support. Connexion: Connexion; Créerun compte; Mot de passe oublié ? Login oublié ? fr; en. Accueil; Dépôt; Consultation: Lesderniers dépôts; Par type de publication; Par discipline; Par année de publication; Parstructure de recherche; Les portails de l'archive; Les collections. Recherche; Documentation:Tutoriels; Compte et profil: Pourquoi créer un compte et un profil dans HAL; Créer son compteet son profil dans HAL; Modifier son compte ou son profil dans HAL; Modifier son mot depasse; Login ou mot de passe oublié; Les droits associés au profil. Déposer: Avant decommencer; Les types de publication acceptés …,*,2009,*
Scalable Multi-Query Optimization for Exploratory Queries over Federated Scientific Databases,Dieter VAN DE CRAEN; Frank Neven; Stijn VANSUMMEREN; Anastasios KEMENTSIETSIDIS,The diversity and large volumes of data processed in the Natural Sciences today has led toa proliferation of highly-specialized and autonomous scientific databases with inherent andoften intricate relationships. As a user-friendly method for querying this complex; ever-expanding network of sources for correlations; we propose exploratory queries. Exploratoryqueries are loosely-structured; hence requiring only minimal user knowledge of the sourcenetwork. Evaluating an exploratory query usually involves the evaluation of many distributedqueries. As the number of such distributed queries can quickly become large; we attack theoptimization problem for exploratory queries by proposing several multi-query optimizationalgorithms that compute a global evaluation plan while minimizing the total communicationcost; a key bottleneck in distributed settings. The proposed algorithms are necessarily …,*,2008,*
Database Theory,Leonid Libkin; Vladlen Koltun; Christos H Papadimitriou; Albert Atserias; Diego Calvanese; Giuseppe De Giacomo; Maurizio Lenzerini; Moshe Y Vardi; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Alin Deutsch; Bertram Ludäscher; Alan Nash; Yossi Matias; Daniel Urieli; José L Balcázar; Gemma C Garriga,Read the latest articles of Theoretical Computer Science at ScienceDirect.com;Elsevier's leading platform of peer-reviewed scholarly literature.,*,2007,*
Inferring XML Schema Definitions from XML Data,Stijn Vansummeren,*,33rd International Conference on Very Large Data Bases: VLDB 2007: September 23-27; 2007; Vienna; Austria,2007,*
Proceedings of the Twenty-Fifth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems,Stijn Vansummeren,DI-fusion; le Dépôt institutionnel numérique de l'ULB; est l'outil de référencementde laproduction scientifique de l'ULB.L'interface de recherche DI-fusion permet de consulter lespublications des chercheurs de l'ULB et les thèses qui y ont été défendues.,*,2006,*
Well-definedness; semantic type-checking and type inference for database query languages,Stijn Vansummeren,The operations of a general-purpose programming language such as C or Java are onlydefined on certain kinds of inputs. For example; if a is an array; then the array indexation a [i]is only defined if i lies within the boundaries of the array. If; during the execution of aprogram; an operation is supplied with the wrong kind of input; then the output of theprogram is undefined. Indeed; the program may exit with a runtime error; or worse yet; it maycompute the wrong output. To detect such programming errors as early as possible; it ishence natural to ask whether we can solve the well-definedness problem: given anexpression and an input type; decide whether the semantics of the expression is defined forall inputs adhering to the input type. Unfortunately; this problem is undecidable for anycomputationally complete programming language; by Rice's Theorem. Most programming …,*,2005,*
Tor Sandqvist,Rafael Izbicki; Luís Gustavo Esteves; Dimitri Surinx; George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Yuqing Wu; Daniyar Shamkanov; LM Cabrer; HA Priestley; Mohammad Ardeshir; S Mojtaba Mojtahedi,Base-extension semantics for intuitionistic sentential logic Tor Sandqvist … Logical consistencyin simultaneous statistical test procedures Rafael Izbicki and Luís Gustavo Esteves … Relativeexpressive power of navigational querying on graphs using transitive closure Dimitri Surinx;George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; StijnVansummeren and Yuqing Wu … Nested sequents for provability logic GLP Daniyar Shamkanov… A general framework for product representations: bilattices and beyond LM Cabrer and HAPriestley … Reduction of provability logics to Σ1-provability logics Mohammad Ardeshir andS. Mojtaba Mojtahedi … 21st Workshop on Logic; Language; Information and Computation(WoLLIC 2014) Ulrich Kohlenbach; Pablo Barceló and Ruy de Queiroz,*,*,*
Logic and Computation,Marcello D’Agostino; Luciano Floridi; Arnold Beckmann; Norbert Preining; George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Norihiro Kamide; Eduardo Mizraji; Nils Bulling; Matei Popovici; Misha Gavrilovich; Assaf Hasson; Itay Kaplan; Leonardo Manuel Cabrer; Daniele Mundici; LP Belluce; A Di Nola; G Lenzi,Page 1. Journal of Logic and Computation Contents Editorial The logic and philosophy ofinformation corner: Presentation and call for papers 525 Marcello D'Agostino and Luciano FloridiRegular Articles Separating intermediate predicate logics of well-founded and duallywell-founded structures by monadic sentences 527 Arnold Beckmann and Norbert PreiningSimilarity and bisimilarity notions appropriate for characterizing indistinguishability in fragmentsof the calculus of relations 549 George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van denBussche; Dirk Van Gucht and Stijn Vansummeren Trilattice logic: an embedding-based approach581 Norihiro Kamide Differential and integral calculus for logical operations. A matrix–vectorapproach 613 Eduardo Mizraji A game-theoretic approach to compute stable topologies in mobilead hoc networks 639 Nils Bulling and Matei Popovici …,*,*,*
LOGIC JOURNAL of the IGPL,Tor Sandqvist; Rafael Izbicki; Luís Gustavo Esteves; Dimitri Surinx; George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche; Dirk Van Gucht; Stijn Vansummeren; Yuqing Wu; Daniyar Shamkanov; LM Cabrer; HA Priestley; Mohammad Ardeshir; S Mojtaba Mojtahedi; Ulrich Kohlenbach; Pablo Barceló; Ruy de Queiroz,Original Articles Base-extension semantics for intuitionistic sentential logic … Tor SandqvistLogical consistency in simultaneous statistical test procedures … Rafael Izbicki and Luís GustavoEsteves Relative expressive power of navigational querying on graphs using transitive closure759 Dimitri Surinx; George HL Fletcher; Marc Gyssens; Dirk Leinders; Jan Van den Bussche;Dirk Van Gucht; Stijn Vansummeren and Yuqing Wu Nested sequents for provability logic GLP… Daniyar Shamkanov A general framework for product representations: bilattices and beyond… LM Cabrer and HA Priestley Reduction of provability logics to Σ1-provability logics … MohammadArdeshir and S. Mojtaba Mojtahedi Conference report 21st Workshop on Logic; Language; Informationand Computation (WoLLIC 2014) … Ulrich Kohlenbach; Pablo Barceló and Ruy de Queiroz,*,*,*
3.9 (Highly) Distributed Processes & The Role of Events,Stefan Schulte; Jean Bacon; Avigdor Gal; Martin Ugarte; Stijn Vansummeren,The discussion about the nature of process and event distribution yielded a two-dimensionaltable: Events can come from either a centralised source (eg; a single patient monitor device)or distributed sources (eg; surveillance cameras). Process management may be centralised(eg; performed on a single machine or performed by a single organisational unit) ordistributed; which may be done top-down; where processes are distributed for the purposeof efficiency; security; etc.; or bottom-up. This classification leads to four combinations;namely centralised events-centralised processes (CECP); centralised events-distributedprocesses (CEDP); distributed events-centralised processes (DECP) and distributed events-distributed processes (DEDP). An example that illustrates the four combinations involves ahospital that discharges patients to home monitoring. There is a process for each patient …,Integrating Process-Oriented and Event-Based Systems,*,*
3 Working groups 3.1 Event Models for BPM: Semantics of Events and Patterns and Formal Methods for Reasoning on Events in the BPM Context,Anne Baumgraß; Alexander Artikis; Annika M Hinze; Ken Moody; Wolfgang Reisig; Stefanie Rinderle-Ma; Stijn Vansummeren; Matthias Weidlich,Event models are well known in the complex event processing (CEP) area; while processmodels are well known in the business process management (BPM) area. The combinationof both is beneficial and promising but it is facing several challenges. The benefits can beshown along three examples. First; in the field of logistics; phenomena such as missedconnections; congestions; technical problems or strikes may impact on the timely arrival oftrucks at a destination. Transportation itself is thus dealing with much uncertainty.Uncertainties are broadly investigated in the area of event processing; however not inprocess models or process instance definitions. A second example is that of discoveringevent patterns in order to predict hazardous situations (eg; in forestry or mining)[1]. If noevent logs exist that can be mined for event pattern discovery; patterns may have to be …,Integrating Process-Oriented and Event-Based Systems,*,*
Incremental evaluation of updates in factorized in-memory databases,Muhammad Idris; Martin Ugarte; Stijn Vansummeren,1 Abstract Incremental view maintenance (IVM) is an established research area in thedatabase and data-warehousing communities. In conventional IVM practices; query resultsare incrementally maintained to compute the delta of the query result; which is cheaper thanfull recomputation. A recent work in the DBToaster project [1; 4; 3] presents higher order IVMto maintain in-memory views under dynamic updates. It is based on the observation thatwhen existing database D is modified with update u; the delta of the result Q (D+ u)− Q (D)can itself be expressed as a query∆ Q; whose results itself can be maintained. Updates tothe result of∆ Q can be computed in a second order delta of Q; denoted∆ 2Q; which againcan be maintained and so on untill a finite kth order delta. Instead of evaluating Q on thenew database D+ u; we are interested in computing only the∆ nQ for 1≤ n≤ k. However …,*,*,*
Indexing Triples with SAINT DB,Yongming Luo; François Picalausa; George HL Fletcher; Jan Hidders; Stijn Vansummeren; Paul De Bra,In this talk; we introduce a native RDF database system that we have been developing latelycalled SAINT DB. Resource Description Framework (RDF) is becoming the de factostandard data model for publishing and exchanging information on the web. As an essentialpart of the W3C's semantic web stack and linked data initiative; RDF data managementsystems (also known as triplestores) have drawn a lot of attention from the databaseresearch community. Various systems have been developed; accompanied by a growingliterature. The majority of these systems use value-based indexes (eg; B-Tree) as theirstorage back ends; without considering many of the structural aspects of RDF datasets.Structural indexes have been successfully applied in XML data management. In theseapproaches; nodes in a graph are indexed based on some equivalence criteria; for …,*,*,*
Meta-SQL: Towards Practical Meta-Querying,Jan Bussche; Stijn Vansummeren; Gottfried Vossen,Enterprise databases often contain not only ordinary data; but also queries. Examples areview definitions in the system catalog; usage logs or workloads; and stored procedures as inSQL/PSM or Postgres. Unfortunately; these queries are typically stored as long strings;which makes it hard to use standard SQL to express meta-queries: queries about queries.Meta-querying is an important activity in situations such as advanced databaseadministration; database usage monitoring; and workload analysis. Here are someexamples of meta-queries to a usage log.(i)“Which queries in the log do the mostjoins?”(ii)“Which queries in the log return an empty answer on the current instance of thedatabase?”(iii) View expansion:“Replace; in each query in the log; each view name by itsdefinition as given in the system catalog.”(iv) Given a list of new view definitions (under …,*,*,*
