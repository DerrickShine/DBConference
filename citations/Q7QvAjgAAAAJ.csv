I/O efficient: computing SCCs in massive graphs,Zhiwei Zhang; Jeffrey Xu Yu; Lu Qin; Lijun Chang; Xuemin Lin,Abstract A strongly connected component (SCC SCC) is a maximal subgraph of a directedgraph GG in which every pair of nodes is reachable from each other in the SCC SCC. Withsuch a property; a general directed graph can be represented by a directed acyclic graph(DAG) by contracting every SCC SCC of GG to a node in DAG. In many real applications thatneed graph pattern matching; topological sorting; or reachability query processing; the bestway to deal with a general directed graph is to deal with its DAG representation. Therefore;finding all SCC SCC s in a directed graph GG is a critical operation. The existing in-memoryalgorithms based on depth first search (DFS) can find all SCC SCC s in linear time withrespect to the size of a graph. However; when a graph cannot reside entirely in the mainmemory; the existing external or semi-external algorithms to find all SCC SCC s have …,The VLDB Journal,2015,13
I/O efficient: computing SCCs in massive graphs,Xuemin Lin Zhiwei Zhang; Jeffrey Xu Yu; Lu Qin; Lijun Chang,*,Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data,2013,13
I/O cost minimization: reachability queries processing over massive graphs,Zhiwei Zhang; Jeffrey Xu Yu; Lu Qin; Qing Zhu; Xiaofang Zhou,Abstract Given a directed graph G; a reachability query (u; v) asks whether there exists apath from a node u to a node v in G. The existing studies support reachability queries usingindexing techniques; where both the graph and the index are required to reside in mainmemory. However; they cannot handle reachability queries on massive graphs; when thegraph and the index cannot be entirely held in memory because of the high I/O cost. In thispaper; we focus on how to minimize the I/O cost when answering reachability queries onmassive graphs that cannot reside entirely in memory. First; we propose a new Yes-Labelscheme; as a complement of the No-Label used in GRAIL [23]; to reduce the number ofintermediate results generated. Second; we show how to minimize the number of I/Os usinga heap-on-disk data structure when traversing a graph. We also propose new methods to …,Proceedings of the 15th International Conference on Extending Database Technology,2012,12
Graph analytics through fine-grained parallelism,Zechao Shang; Feifei Li; Jeffrey Xu Yu; Zhiwei Zhang; Hong Cheng,Abstract Large graphs are getting increasingly popular and even indispensable in manyapplications; for example; in social media data; large networks; and knowledge bases.Efficient graph analytics thus becomes an important subject of study. To increase efficiencyand scalability; in-memory computation and parallelism have been explored extensively tospeed up various graph analytical workloads. In many graph analytical engines (eg; Pregel;Neo4j; GraphLab); parallelism is achieved via one of the three concurrency control models;namely; bulk synchronization processing (BSP); asynchronous processing; andsynchronous processing. Among them; synchronous processing has the potential to achievethe best performance due to fine-grained parallelism; while ensuring the correctness and theconvergence of the computation; if an effective concurrency control scheme is used. This …,Proceedings of the 2016 International Conference on Management of Data,2016,6
Divide & conquer: I/O efficient depth-first search,Zhiwei Zhang; Jeffrey Xu Yu; Lu Qin; Zechao Shang,Abstract Depth-First Search (DFS); which traverses a graph in the depth-first order; is one ofthe fundamental graph operations; and the result of DFS over all nodes in G is a spanningtree known as a DFS-Tree. There are many graph algorithms that need DFS such asconnected component computation; topological sort; community detection; eulerian pathcomputation; graph bipartiteness testing; planar graph testing; etc; because the in-memoryDFS algorithm shows it can be done in linear time wrt the size of G. However; given the factthat real-world graphs grow rapidly in the big data era; the in-memory DFS algorithm cannotbe used to handle a large graph that cannot be entirely held in main memory. In this paper;we focus on I/O efficiency and study semi-external algorithms to DFS a graph G which is ondisk. Here; like the existing semi-external algorithms; we assume that a spanning tree of …,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,6
Contract & expand: I/O efficient sccs computing,Zhiwei Zhang; Lu Qin; Jeffrey Xu Yu,As an important branch of big data processing; big graph processing is becomingincreasingly popular in recent years. Strongly connected component (SCC) computation is afundamental graph operation on directed graphs; where an SCC is a maximal subgraph S ofa directed graph G in which every pair of nodes is reachable from each other in S. Bycontracting each SCC into a node; a large general directed graph can be represented by asmall directed acyclic graph (DAG). In the literature; there are I/O efficient semi-externalalgorithms to compute all SCCs of a graph G; by assuming that all nodes of a graph G can fitin the main memory. However; many real graphs are large and even the nodes cannotreside entirely in the main memory. In this paper; we study new I/O efficient externalalgorithms to find all SCCs for a directed graph G whose nodes cannot fit entirely in the …,2014 IEEE 30th International Conference on Data Engineering (ICDE),2014,4
Privacy-preserving reachability query services for massive networks,Jiaxin Jiang; Peipei Yi; Byron Choi; Zhiwei Zhang; Xiaohui Yu,Abstract This paper studies privacy-preserving reachability query services under theparadigm of data outsourcing. Specifically; graph data have been outsourced to a third-partyservice provider (SP); query clients submit their queries to the (SP); and the (SP) returns thequery answers to the clients. However; the (SP) may not always be trustworthy. Hence; thispaper investigates protecting the structural information of the graph data and the queryanswers from the (SP). Existing techniques are either insecure or not scalable. This paperproposes a privacy-preserving labeling; called ppTopo. To our knowledge; ppTopo is thefirst work that can produce reachability index on massive networks and is secure againstknown plaintext attacks (KPA). Specifically; we propose a scalable index constructionalgorithm by employing the idea of topological folding; recently proposed by Cheng et al …,Proceedings of the 25th ACM International on Conference on Information and Knowledge Management,2016,1
