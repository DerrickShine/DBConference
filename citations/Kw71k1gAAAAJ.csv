Large-scale distributed graph computing systems: An experimental evaluation,Yi Lu; James Cheng; Da Yan; Huanhuan Wu,Abstract With the prevalence of graph data in real-world applications (eg; social networks;mobile phone networks; web graphs; etc.) and their ever-increasing size; many distributedgraph computing systems have been developed in recent years to process and analyzemassive graphs. Most of these systems adopt Pregel's vertex-centric computing model; whilevarious techniques have been proposed to address the limitations in the Pregel framework.However; there is a lack of comprehensive comparative analysis to evaluate theperformance of various systems and their techniques; making it difficult for users to choosethe best system for their applications. We conduct extensive experiments to evaluate theperformance of existing systems on graphs with different characteristics and on algorithmswith different design logic. We also study the effectiveness of various techniques adopted …,Proceedings of the VLDB Endowment,2014,99
Blogel: A block-centric framework for distributed computation on real-world graphs,Da Yan; James Cheng; Yi Lu; Wilfred Ng,Abstract The rapid growth in the volume of many real-world graphs (eg; social networks; webgraphs; and spatial networks) has led to the development of various vertex-centricdistributed graph computing systems in recent years. However; real-world graphs fromdifferent domains have very different characteristics; which often create bottlenecks in vertex-centric parallel graph computation. We identify three such important characteristics from awide spectrum of real-world graphs; namely (1) skewed degree distribution;(2) largediameter; and (3)(relatively) high density. Among them; only (1) has been studied by existingsystems; but many real-world power-law graphs also exhibit the characteristics of (2) and(3). In this paper; we propose a block-centric framework; called Blogel; which naturallyhandles all the three adverse graph characteristics. Blogel programmers may think like a …,Proceedings of the VLDB Endowment,2014,94
Effective techniques for message reduction and load balancing in distributed graph computation,Da Yan; James Cheng; Yi Lu; Wilfred Ng,Abstract Massive graphs; such as online social networks and communication networks; havebecome common today. To efficiently analyze such large graphs; many distributed graphcomputing systems have been developed. These systems employ the" think like a vertex"programming paradigm; where a program proceeds in iterations and at each iteration;vertices exchange messages with each other. However; using Pregel's simple messagepassing mechanism; some vertices may send/receive significantly more messages thanothers due to either the high degree of these vertices or the logic of the algorithm used. Thisforms the communication bottleneck and leads to imbalanced workload among machines inthe cluster. In this paper; we propose two effective message reduction techniques:(1) vertexmirroring with message combining; and (2) an additional request-respond API. These …,Proceedings of the 24th International Conference on World Wide Web,2015,50
Pregel algorithms for graph connectivity problems with performance guarantees,Da Yan; James Cheng; Kai Xing; Yi Lu; Wilfred Ng; Yingyi Bu,Abstract Graphs in real life applications are often huge; such as the Web graph and varioussocial networks. These massive graphs are often stored and processed in distributed sites.In this paper; we study graph algorithms that adopt Google's Pregel; an iterative vertex-centric framework for graph processing in the Cloud. We first identify a set of desirableproperties of an efficient Pregel algorithm; such as linear space; communication andcomputation cost per iteration; and logarithmic number of iterations. We define such analgorithm as a practical Pregel algorithm (PPA). We then propose PPAs for computingconnected components (CCs); biconnected components (BCCs) and strongly connectedcomponents (SCCs). The PPAs for computing BCCs and SCCs use the PPAs of manyfundamental graph problems as building blocks; which are of interest by themselves …,Proceedings of the VLDB Endowment,2014,39
Mining probabilistically frequent sequential patterns in uncertain databases,Zhou Zhao; Da Yan; Wilfred Ng,Abstract Data uncertainty is inherent in many real-world applications such as environmentalsurveillance and mobile tracking. As a result; mining sequential patterns from inaccuratedata; such as sensor readings and GPS trajectories; is important for discovering hiddenknowledge in such applications. Previous work uses expected support as the measurementof pattern frequentness; which has inherent weaknesses with respect to the underlyingprobability model; and is therefore ineffective for mining high-quality sequential patternsfrom uncertain sequence databases. In this paper; we propose to measure patternfrequentness based on the possible world semantics. We establish two uncertain sequencedata models abstracted from many real-life applications involving uncertain sequence data;and formulate the problem of mining probabilistically frequent sequential patterns (or p …,Proceedings of the 15th international conference on extending database technology,2012,34
Mining probabilistically frequent sequential patterns in uncertain databases,Zhou Zhao; Da Yan; Wilfred Ng,Abstract Data uncertainty is inherent in many real-world applications such as environmentalsurveillance and mobile tracking. As a result; mining sequential patterns from inaccuratedata; such as sensor readings and GPS trajectories; is important for discovering hiddenknowledge in such applications. Previous work uses expected support as the measurementof pattern frequentness; which has inherent weaknesses with respect to the underlyingprobability model; and is therefore ineffective for mining high-quality sequential patternsfrom uncertain sequence databases. In this paper; we propose to measure patternfrequentness based on the possible world semantics. We establish two uncertain sequencedata models abstracted from many real-life applications involving uncertain sequence data;and formulate the problem of mining probabilistically frequent sequential patterns (or p …,Proceedings of the 15th international conference on extending database technology,2012,34
Efficient algorithms for finding optimal meeting point on road networks,Da Yan; Zhou Zhao; Wilfred Ng,ABSTRACT Given a set of points Q on a road network; an optimal meeting point (OMP)query returns the point on a road network G=(V; E) with the smallest sum of networkdistances to all the points in Q. This problem has many real world applications; such asminimizing the total travel cost for a group of people who want to find a location forgathering. While this problem has been well studied in the Euclidean space; the recentlyproposed state-of-the-art algorithm for solving this problem in the context of road networks isstill not efficient. In this paper; we propose a new baseline algorithm for the OMP query;which reduces the search space from| Q|·| E| to| V|+| Q|. We also present two effectivepruning techniques that further accelerate the baseline algorithm. Finally; in order to supportspatial applications that involve large flow of queries and require fast response; an …,Proceedings of the VLDB Endowment,2011,27
Mining probabilistically frequent sequential patterns in large uncertain databases,Zhou Zhao; Da Yan; Wilfred Ng,Data uncertainty is inherent in many real-world applications such as environmentalsurveillance and mobile tracking. Mining sequential patterns from inaccurate data; such asthose data arising from sensor readings and GPS trajectories; is important for discoveringhidden knowledge in such applications. In this paper; we propose to measure patternfrequentness based on the possible world semantics. We establish two uncertain sequencedata models abstracted from many real-life applications involving uncertain sequence data;and formulate the problem of mining probabilistically frequent sequential patterns (or p-FSPs) from data that conform to our models. However; the number of possible worlds isextremely large; which makes the mining prohibitively expensive. Inspired by the famousPrefixSpan algorithm; we develop two new algorithms; collectively called U-PrefixSpan …,IEEE transactions on knowledge and data engineering,2014,26
Efficient methods for finding influential locations with adaptive grids,Da Yan; Raymond Chi-Wing Wong; Wilfred Ng,Abstract Given a set S of servers and a set C of clients; an optimal-location query returns alocation where a new server can attract the greatest number of clients. Optimal-locationqueries are important in a lot of real-life applications; such as mobile service planning orresource distribution in an area. Previous studies assume that a client always visits itsnearest server; which is too strict to be true in reality. In this paper; we relax this assumptionand propose a new model to tackle this problem. We further generalize the problem tofinding top-k optimal locations. The main challenge is that; even the fastest approach inexisting studies needs to take hours to answer an optimal-location query on a typical realworld dataset; which significantly limits the applications of the query. Using our relaxedmodel; we design an efficient grid-based approximation algorithm called FILM (Fast …,Proceedings of the 20th ACM international conference on Information and knowledge management,2011,24
A general-purpose query-centric framework for querying big graphs,Da Yan; James Cheng; M Tamer Özsu; Fan Yang; Yi Lu; John Lui; Qizhen Zhang; Wilfred Ng,Abstract Pioneered by Google's Pregel; many distributed systems have been developed forlarge-scale graph analytics. These systems employ a user-friendly" think like a vertex"programming model; and exhibit good scalability for tasks where the majority of graphvertices participate in computation. However; the design of these systems can seriouslyunder-utilize the resources in a cluster for processing light-workload graph queries; whereonly a small fraction of vertices need to be accessed. In this work; we develop a new open-source system; called Quegel; for querying big graphs. Quegel treats queries as first-classcitizens in its design: users only need to specify the Pregel-like algorithm for a generic query;and Quegel processes light-workload graph queries on demand; using a novel superstep-sharing execution model to effectively utilize the cluster resources. Quegel further …,Proceedings of the VLDB Endowment,2016,18
A transfer learning based framework of crowd-selection on twitter,Zhou Zhao; Da Yan; Wilfred Ng; Shi Gao,Abstract Crowd selection is essential to crowd sourcing applications; since choosing theright workers with particular expertise to carry out crowdsourced tasks is extremelyimportant. The central problem is simple but tricky: given a crowdsourced task; who are themost knowledgable users to ask? In this demo; we show our framework that tackles theproblem of crowdsourced task assignment on Twitter according to the social activities of itsusers. Since user profiles on Twitter do not reveal user interests and skills; we transfer theknowledge from categorized Yahoo! Answers datasets for learning user expertise. Then; weselect the right crowd for certain tasks based on user expertise. We study the effectiveness ofour system using extensive user evaluation. We further engage the attendees to participatea game called--Whom to Ask on Twitter?. This helps understand our ideas in an …,Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining,2013,18
Core decomposition in large temporal graphs,Huanhuan Wu; James Cheng; Yi Lu; Yiping Ke; Yuzhen Huang; Da Yan; Hejun Wu,Core decomposition has been applied widely in the visualization and analysis of massivenetworks. However; existing studies of core decomposition were only limited to non-temporal graphs; while many real-world graphs can be naturally modeled as temporalgraphs (eg; the interaction between users at different time in online social networks; thephone call or messaging records between friends over time; etc.). In this paper; we definethe problem of core decomposition in a temporal graph; propose efficient distributedalgorithms to compute the cores in massive temporal graphs; and discuss how the techniquecan be used in temporal graph analysis.,Big Data (Big Data); 2015 IEEE International Conference on,2015,13
Big graph analytics systems,Da Yan; Yingyi Bu; Yuanyuan Tian; Amol Deshpande; James Cheng,Abstract In recent years we have witnessed a surging interest in developing Big Graphprocessing systems. To date; tens of Big Graph systems have been proposed. This tutorialprovides a timely and comprehensive review of existing Big Graph systems; andsummarizes their pros and cons from various perspectives. We start from the existing vertex-centric systems; which which a programmer thinks intuitively like a vertex when developingparallel graph algorithms. We then introduce systems that adopt other computationparadigms and execution settings. The topics covered in this tutorial include programmingmodels and algorithm design; computation models; communication mechanisms; out-of-coresupport; fault tolerance; dynamic graph support; and so on. We also highlight future researchopportunities on Big Graph analytics.,Proceedings of the 2016 International Conference on Management of Data,2016,11
Efficient processing of optimal meeting point queries in Euclidean space and road networks,Da Yan; Zhou Zhao; Wilfred Ng,Abstract Finding an optimal meeting point (OMP) for a group of people (or a set of objects) atdifferent locations is an important problem in spatial query processing. There are many real-life applications related to this problem; such as determining the location of a conferencevenue; deciding the pick-up location of a tourist bus; and planing tactics of artificialintelligence in real-time strategy games. Formally; given a set QQ of query points in a spatialsetting PP; an OMP query fetches the point o ∈ P o∈ P that minimizes a cost functiondefined over the distances from oo to all points in Q Q. Since there are infinitely manylocations in a given space setting; it is infeasible to examine all of them to find the OMP; andthus; the problem is challenging. In this paper; we study OMP queries in the following twospatial settings which are common in real-life applications: Euclidean space and road …,Knowledge and Information Systems,2015,11
Monochromatic and bichromatic reverse nearest neighbor queries on land surfaces,Da Yan; Zhou Zhao; Wilfred Ng,Abstract Finding reverse nearest neighbors (RNNs) is an important operation in spatialdatabases. The problem of evaluating RNN queries has already received considerableattention due to its importance in many real-world applications; such as resource allocationand disaster response. While RNN query processing has been extensively studied inEuclidean space; no work ever studies this problem on land surfaces. However; practicalapplications of RNN queries involve terrain surfaces that constrain object movements; whichrendering the existing algorithms inapplicable. In this paper; we investigate the evaluation oftwo types of RNN queries on land surfaces: monochromatic RNN (MRNN) queries andbichromatic RNN (BRNN) queries. On a land surface; the distance between two points iscalculated as the length of the shortest path along the surface. However; the …,Proceedings of the 21st ACM international conference on Information and knowledge management,2012,11
Robust ranking of uncertain data,Da Yan; Wilfred Ng,Abstract Numerous real-life applications are continually generating huge amounts ofuncertain data (eg; sensor or RFID readings). As a result; top-k queries that return only the kmost promising probabilistic tuples become an important means to monitor and analyzesuch data. These “top” tuples should have both high scores in term of some ranking function;and high occurrence probability. The previous works on ranking semantics are not entirelysatisfactory in the following sense: they either require user-specified parameters other thank; or cannot be evaluated efficiently in real-time scale; or even generating results violatingthe underlying probability model. In order to overcome all these deficiencies; we propose anew semantics called U-Pop k based on a simpler but more fundamental property inherentin the underlying probability model. We then develop an efficient algorithm to evaluate U …,International Conference on Database Systems for Advanced Applications,2011,11
Finding distance-preserving subgraphs in large road networks,Da Yan; James Cheng; Wilfred Ng; Steven Liu,Given two sets of points; S and T; in a road network; G; a distance-preserving subgraph(DPS) query returns a subgraph of G that preserves the shortest path from any point in S toany point in T. DPS queries are important in many real world applications; such as routerecommendation systems; logistics planning; and all kinds of shortest-path-relatedapplications that run on resource-limited mobile devices. In this paper; we study efficientalgorithms for processing DPS queries in large road networks. Four algorithms are proposedwith different tradeoffs in terms of DPS quality and query processing time; and the best oneis a graph-partitioning based index; called RoadPart; that finds a high quality DPS with shortresponse time. Extensive experiments on large road networks demonstrate the merits of ouralgorithms; and verify the efficiency of RoadPart for finding a high-quality DPS.,Data Engineering (ICDE); 2013 IEEE 29th International Conference on,2013,9
Diversified temporal subgraph pattern mining,Yi Yang; Da Yan; Huanhuan Wu; James Cheng; Shuigeng Zhou; John Lui,Abstract Many graphs in real-world applications; such as telecommunications networks;social-interaction graphs and co-authorship graphs; contain temporal information. However;existing graph mining algorithms fail to exploit these temporal information and the resultingsubgraph patterns do not contain any temporal attribute. In this paper; we study the problemof mining a set of diversified temporal subgraph patterns from a temporal graph; where eachsubgraph is associated with the time interval that the pattern spans. This problem motivatesimportant applications such as finding social trends in social networks; or detecting temporalhotspots in telecommunications networks. We propose a divide-and-conquer algorithmalong with effective pruning techniques; and our approach runs 2 to 3 orders of magnitudefaster than a baseline algorithm and obtains high-quality temporal subgraph patterns in …,Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,2016,7
Efficient processing of very large graphs in a small cluster,Da Yan; Yuzhen Huang; James Cheng; Huanhuan Wu,Abstract: Inspired by the success of Google's Pregel; many systems have been developedrecently for iterative computation over big graphs. These systems provide a user-friendlyvertex-centric programming interface; where a programmer only needs to specify thebehavior of one generic vertex when developing a parallel graph algorithm. However; mostexisting systems require the input graph to reside in memories of the machines in a cluster;and the few out-of-core systems suffer from problems such as poor efficiency for sparsecomputation workload; high demand on network bandwidth; and expensive cost incurred byexternal-memory join and group-by. In this paper; we introduce the GraphD system for auser to process very large graphs with ordinary computing resources. GraphD fully overlapscomputation with communication; by streaming edges and messages on local disks …,arXiv preprint arXiv:1601.05590,2016,7
Big graph analytics platforms,Da Yan; Yingyi Bu; Yuanyuan Tian; Amol Deshpande,Abstract Due to the growing need to process large graph and network datasets created bymodern applications; recent years have witnessed a surging interest in developing biggraph platforms. Tens of such big graph systems have already been developed; but therelacks a systematic categorization and comparison of these systems. This article provides atimely and comprehensive survey of existing big graph systems; and summarizes their keyideas and technical contributions from various aspects. In addition to the popular vertex-centric systems which espouse a think-like-a-vertex paradigm for developing parallel graphapplications; this survey also covers other programming and computation models; contraststhose against each other; and provides a vision for the future research on big graphanalytics platforms. This survey aims to help readers get a systematic picture of the …,Foundations and Trends® in Databases,2017,5
Lightweight fault tolerance in large-scale distributed graph processing,Da Yan; James Cheng; Fan Yang,Abstract: The success of Google's Pregel framework in distributed graph processing hasinspired a surging interest in developing Pregel-like platforms featuring a user-friendly" thinklike a vertex" programming model. Existing Pregel-like systems support a fault tolerancemechanism called checkpointing; which periodically saves computation states ascheckpoints to HDFS; so that when a failure happens; computation rolls back to the latestcheckpoint. However; a checkpoint in existing systems stores a huge amount of data;including vertex states; edges; and messages sent by vertices; which significantly degradesthe failure-free performance. Moreover; the high checkpointing cost prevents frequentcheckpointing; and thus recovery has to replay all the computations from a statecheckpointed some time ago. In this paper; we propose a novel checkpointing approach …,arXiv preprint arXiv:1601.06496,2016,4
Probabilistic convex hull queries over uncertain data,Da Yan; Zhou Zhao; Wilfred Ng; Steven Liu,The convex hull of a set of two-dimensional points; P; is the minimal convex polygon thatcontains all the points in P. Convex hull is important in many applications such as GIS;statistical analysis and data mining. Due to the ubiquity of data uncertainty such as locationuncertainty in real-world applications; we study the concept of convex hull over uncertaindata in 2D space. We propose the Probabilistic Convex Hull (PCH) query and demonstrateits applications; such as Flickr landscape photo extraction and activity region visualization;where location uncertainty is incurred by GPS devices or sensors. To tackle the problem ofpossible world explosion; we develop an O (N 3) algorithm based on geometric properties;where N is the data size. We further improve this algorithm with spatial indices and effectivepruning techniques; which prune the majority of data instances. To achieve better time …,IEEE Transactions on Knowledge and Data Engineering,2015,4
Leveraging read rates of passive RFID tags for real-time indoor location tracking,Da Yan; Zhou Zhao; Wilfred Ng,Abstract RFID (radio frequency identification) technology has been widely used for objecttracking in many real-life applications; such as inventory monitoring and product flowtracking. These applications usually rely on passive RFID technologies rather than activeones; since passive RFID tags are more attractive than active ones in many aspects; such aslower tag cost and simpler maintenance. RFID technology is also important for indoorlocation tracking systems that require high degree of accuracy. However; most existingsystems estimate object locations by using active RFID tags; which usually incur localizationerror of more than one meter. Although recent studies begin to investigate the application ofpassive tags for indoor location tracking; these methods are far from deployable andresearch of this application is still in its infancy.,Proceedings of the 21st ACM international conference on Information and knowledge management,2012,4
A probabilistic convex hull query tool,Zhou Zhao; Da Yan; Wilfred Ng,Abstract Uncertain data is inherently important in a lot of real-world applications; such asenvironmental surveillance and mobile tracking. Probabilistic convex hull is very useful fordiscovering the territory of imprecise data in such applications with a high confidence. Inorder to deal with this; we propose and study probabilistic convex hull queries based on thepossible world semantics; which are able to retrieve the objects whose probability of beingon the convex hull is at least α. The demonstration is based on animal tracking whose GPScoordinate is no longer considered to be precise due to device limitation or privacy issues.We demonstrate two interesting results from studying the migration habit of one specificspecies and the correlation between species through probabilistic convex hull queries.,Proceedings of the 15th International Conference on Extending Database Technology,2012,4
Quegel: A general-purpose system for querying big graphs,Qizhen Zhang; Da Yan; James Cheng,Abstract Inspired by Google's Pregel; many distributed graph processing systems have beendeveloped recently to process big graphs. These systems expose a vertex-centricprogramming interface to users; where a programmer thinks like a vertex when designingparallel graph algorithms. However; existing systems are designed for tasks where mostvertices in a graph participate in the computation; and they are not suitable for processinglight-workload graph queries which only access a small portion of vertices. This is becausetheir programming model can seriously under-utilize the resources in a cluster forprocessing graph queries. In this demonstration; we introduce a general-purpose system forquerying big graphs; called Quegel; which treats queries as first-class citizens in the designof its computing model. Quegel adopts a novel superstep-sharing execution model to …,Proceedings of the 2016 International Conference on Management of Data,2016,2
Efficient location-based search of trajectories with location importance,Da Yan; James Cheng; Zhou Zhao; Wilfred Ng,Abstract Given a database of trajectories and a set of query locations; location-basedtrajectory search finds trajectories in the database that are close to all the query locations.Location-based trajectory search has many applications such as providing reference routesfor travelers who are planning a trip to multiple places of interest. However; previous studiesonly consider the spatial aspect of trajectories; which is inadequate for real applications. Forexample; one may obtain the reference route of a tourist who just passed by a place ofinterest without paying a visit. We propose the kk Important Connected Trajectories (k-ICT)query by associating trajectories with location importance. For any query location; the resulttrajectories should contain an important point close to it. We describe an effective method toinfer the importance of trajectory points from the temporal information. We also propose …,Knowledge and Information Systems,2015,2
Scalable De Novo Genome Assembly Using Pregel,Da Yan; Hongzhi Chen; James Cheng; Zhenkun Cai; Bin Shao,Abstract: De novo genome assembly is the process of stitching short DNA sequences togenerate longer DNA sequences; without using any reference sequence for alignment. Itenables high-throughput genome sequencing and thus accelerates the discovery of newgenomes. In this paper; we present a toolkit; called PPA-assembler; for de novo genomeassembly in a distributed setting. The operations in our toolkit provide strong performanceguarantees; and can be assembled to implement various sequencing strategies. PPA-assembler adopts the popular {\em de Bruijn graph} based approach for sequencing; andeach operation is implemented as a program in Google's Pregel framework for big graphprocessing. Experiments on large real and simulated datasets demonstrate that PPA-assembler is much more efficient than the state-of-the-arts and provides good sequencing …,arXiv preprint arXiv:1801.04453,2018,*
GraphD: Distributed Vertex-Centric Graph Processing Beyond the Memory Limit,Da Yan; Yuzhen Huang; Miao Liu; Hongzhi Chen; James Cheng; Huanhuan Wu; Chengcui Zhang,We propose GraphD; an out-of-core Pregel-like system targeting efficient big graphprocessing with a small cluster of commodity PCs connected by Gigabit Ethernet; anenvironment affordable to most users. This is in contrast to some recent efforts for out-of-coregraph computation with specialized hardware. In our setting; a vertex-centric program isoften data-intensive; since the CPU cost of calculating a message value is negligiblecompared with the network cost of transmitting that message. As a result; network bandwidthis usually the bottleneck; and out-of-core execution would not sacrifice performance if disk IOoverhead can be hidden by message transmission; which is achieved by GraphD throughthe parallelism of computation and communication. GraphD streams edge and messagedata on local disks; and thus consumes negligible memory space. For a broad class of …,IEEE Transactions on Parallel and Distributed Systems,2018,*
Fuzzy Double Trace Norm Minimization for Recommendation Systems,Fanhua Shang; Yuanyuan Liu; James Cheng; Da Yan,Recovering low-rank matrices from incomplete observations is a fundamental problem withmany applications; especially in recommender systems. In theory; under certain conditions;this problem can be solved by convex or non-convex relaxation. However; most existingprovable algorithms suffer from superlinear per-iteration cost; which severely limits theirapplicability to large-scale problems. In this paper; we propose a novel fuzzy double tracenorm minimization (DTNM) method for recommender systems. We first present a tractableDTNM model; in which we can integrate both the user social relationship and the userreputation information using a fuzzy weighting way and coupling fuzzy matrix factorization. Inessence; our model is a Schatten-1/2 quasi-norm minimization problem. Moreover; wedevelop two efficient augmented Lagrangian algorithms to solve the proposed problems …,IEEE Transactions on Fuzzy Systems,2017,*
Architectural implications on the performance and cost of graph analytics systems,Qizhen Zhang; Hongzhi Chen; Da Yan; James Cheng; Boon Thau Loo; Purushotham Bangalore,Abstract Graph analytics systems have gained significant popularity due to the prevalence ofgraph data. Many of these systems are designed to run in a shared-nothing architecturewhereby a cluster of machines can process a large graph in parallel. In more recentproposals; others have argued that a single-machine system can achieve betterperformance and/or is more cost-effective. There is however no clear consensus whichapproach is better. In this paper; we classify existing graph analytics systems into fourcategories based on the architectural differences; ie; processing infrastructure (centralizedvs distributed); and memory consumption (in-memory vs out-of-core). We select eight open-source systems to cover all categories; and perform a comparative measurement study tocompare their performance and cost characteristics across a spectrum of input data …,Proceedings of the 2017 Symposium on Cloud Computing,2017,*
G-thinker: Big Graph Mining Made Easier and Faster,Da Yan; Hongzhi Chen; James Cheng; M Tamer Özsu; Qizhen Zhang; John Lui,Abstract: This paper proposes a general system for compute-intensive graph mining tasksthat find from a big graph all subgraphs that satisfy certain requirements (eg; graph matchingand community detection). Due to the broad range of applications of such tasks; many single-threaded algorithms have been proposed. However; graphs such as online social networksand knowledge graphs often have billions of vertices and edges; which require distributedprocessing in order to scale. Unfortunately; existing distributed graph processing systemssuch as Pregel and GraphLab are designed for data-intensive analytics; and are inefficientfor compute-intensive graph mining tasks since computation over any data is coupled withthe data's access that involves network transmission. We propose a distributed graph miningframework; called G-thinker; which is designed for compute-intensive graph mining …,arXiv preprint arXiv:1709.03110,2017,*
Systems for Big Graph Analytics,Da Yan; Yuanyuan Tian; James Cheng,Due to the growing need of processing big graph datasets (eg; online social networks;knowledge graphs) created by modern applications; recent years have witnessed a surginginterest in developing big graph analytics systems. Tens of systems have been developedfor processing big graphs. Although they enrich the tools available for users to analyze biggraphs; it is difficult for beginners of this field to gather up the threads of various systemfeatures and optimization techniques; and to choose the right system for their problems athand. As an effort to help readers obtain a comprehensive idea of big graph systemsresearch; we have presented a tutorial in SIGMOD 2016; 1 and published a survey [1] thatsummarizes the novel ideas and technical contributions of various systems. This bookserves slightly different purposes from the above works:• Instead of a comprehensive …,*,2017,*
Efficient Processing of Growing Temporal Graphs,Huanhuan Wu; Yunjian Zhao; James Cheng; Da Yan,Abstract Temporal graphs are useful in modeling real-world networks. For example; in aphone call network; people may communicate with each other in multiple time periods;which can be modeled as multiple temporal edges. However; the size of real-world temporalgraphs keeps increasing rapidly (eg; considering the number of phone calls recorded eachday); which makes it difficult to efficiently store and analyze the complete temporal graphs.We propose a new model; called equal-weight damped time window model; to efficientlymanage temporal graphs. In this model; each time window is assigned a unified weight. Thismodel is flexible as it allows users to control the tradeoff between the required storage spaceand the information loss. It also supports efficient maintenance of the windows as new datacome in. We then discuss applications that use the model for analyzing temporal graphs …,International Conference on Database Systems for Advanced Applications,2017,*
Hands-On Experiences,Da Yan; Yuanyuan Tian; James Cheng,Abstract Based on the background knowledge obtained from the previous chapter; we areready to get some hands-on experience in using a Pregel-like system. We focus onintroducing how to use BigGraph@ CUHK; our C++ implementation of Pregel and itsimprovements/extensions that is highly efficient; and very suitable for educational purposesdue to its neat design. Readers only interested in surveying existing big graph analyticssystems may safely skip this chapter; while researchers and practitioners who are interestedin using Pregel-like system and building their own Big Data systems could benefit fromreading this chapter.,*,2017,*
Pregel-Like Systems,Da Yan; Yuanyuan Tian; James Cheng,Abstract We first introduce Google's Pregel; a framework for distributed graph computationthat pioneered the idea of vertex-centric programming. In the vertex-centric model; a userwrites a distributed graph algorithm simply by specifying the behavior of a generic vertex. Inrecent years; many Pregel-like systems have been developed; and we will investigate howthese systems improve on the basic framework of Pregel. The background knowledge to beintroduced in this chapter lays the foundation of hands-on experiencing (in the next chapter)of our Pregel-like system implementation; BigGraph@ CUHK; that is both highly efficient;and very suitable for educational and research purposes due to its neat design.,*,2017,*
Subgraph-Centric Graph Mining,Da Yan; Yuanyuan Tian; James Cheng,Abstract The computation models we see so far are all data-intensive; where the cost ofmessage transmission is often much higher than that of message processing; rendering thedistributed execution communication-intensive. However; graph mining tasks are oftencomputation-intensive; and cannot be efficiently executed with a data-intensive system. Thevertex-centric API is also unsuitable for writing a graph mining algorithm that often checkssubgraphs rather than individual vertices. This chapter introduces a couple of subgraph-centric systems for graph mining; among which only G-thinker is able to handle computation-intensive workloads. G-thinker targets at problems that find from a big graph all subgraphsthat satisfy certain requirements (eg; graph matching and community detection). It providesan intuitive subgraph-centric API for graph exploration; which can be used to conveniently …,*,2017,*
Shared Memory Abstraction,Da Yan; Yuanyuan Tian; James Cheng,Abstract The systems we have presented so far all adopt the Bulk Synchronous Parallel(BSP) execution model; and expose a message passing API to end users. In this chapter; wereview another important type of vertex-centric systems that adopt a shared memoryprogramming abstraction; and support asynchronous execution. We remark that althoughthe programming interface of these systems simulates a shared memory environment; theunderlying execution engine is not shared memory. We focus on introducing the variousmodels implementing shared memory abstraction; and leave readers to explore the systemusage by following their respective system websites.,*,2017,*
Block-Centric Computation,Da Yan; Yuanyuan Tian; James Cheng,Abstract Vertex-centric computation introduced in Part I has two weaknesses.(1) The modelmay suffer from poor performance in some real graphs; such as those with a large diameter.This chapter describes a novel block-centric computation model that overcomes theweaknesses of vertex-centric computation; and that significantly speeds up iterative graphcomputation. We also include a hands-on tutorial on how to get started with Blogel; a state-of-the-art block-centric system; which may be skipped if you are only interested in surveyingexisting big graph analytics systems.(2) Vertex-centric (and even block-centric) API is notsuitable for some important graph mining problems such as mining subgraphs. The nextchapter will describe a novel subgraph-centric computation model that makes it easy to writeprograms for efficient large-scale subgraph mining.,*,2017,*
Matrix-Based Graph Systems,Da Yan; Yuanyuan Tian; James Cheng,Abstract Graphs and matrices are related inherently; so it is not surprising that a number ofbig graph systems expose a matrix-based interface for users. In this chapter; we introducethe matrix-based systems for big graph processing. In particular; we review three suchsystems; PEGASUS; GBASE; and SystemML. All three systems allow users to express graphalgorithms using operations on matrices; and rely on a general purpose data processingsystem; such as MapReduce or Spark; for distributed execution. Among the three systems;SystemML is the only one that is an active and well-maintained open-source project. Thus;for interested readers; we highly recommend SystemML for trying out the matrix-basedgraph processing.,*,2017,*
SGraph: A Distributed Streaming System for Processing Big Graphs,Cheng Chen; Hejun Wu; Dyce Jing Zhao; Da Yan; James Cheng,Abstract Big graph processing has been widely used in various computational domains;ranging from language modeling to social networks. Graph-parallel systems have beenproposed to process such big graphs on clusters with up to hundreds of nodes. However;the size of a big graph often exceeds the available main memories in a small cluster. As aconsequence; task failures happen frequently. To address this problem; we proposeSGraph; a distributed streaming graph processing system built on top of Spark. SGraphintroduces a streaming data model to avoid loading all of the graph data which may exceedthe available RAM space. In addition; SGraph leverages an edge-centric scatter-gathercomputing model that can be used to conveniently implement graph algorithms.Experiments demonstrate that SGraph can process graphs with up to 1.5 billion edges on …,International Conference on Big Data Computing and Communications,2016,*
Query processing over large spatial networks,Da Yan,Abstract Spatial networks are ubiquitous in various real world applications. For example;GPS navigation systems maintain and query road networks to guide car-driversto theirdestinations; while rescue centers maintain the terrain informationfor the purpose of disasterresponse.,*,2014,*
