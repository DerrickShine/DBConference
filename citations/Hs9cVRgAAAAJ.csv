Making snapshot isolation serializable,Alan Fekete; Dimitrios Liarokapis; Elizabeth O'Neil; Patrick O'Neil; Dennis Shasha,Abstract Snapshot Isolation (SI) is a multiversion concurrency control algorithm; firstdescribed in Berenson et al.[1995]. SI is attractive because it provides an isolation level thatavoids many of the common concurrency anomalies; and has been implemented by Oracleand Microsoft SQL Server (with certain minor variations). SI does not guaranteeserializability in all cases; but the TPC-C benchmark application [TPC-C]; for example;executes under SI without serialization anomalies. All major database system products aredelivered with default nonserializable isolation levels; often ones that encounter serializationanomalies more commonly than SI; and we suspect that numerous isolation errors occureach day at many large sites because of this; leading to corrupt data sometimes noted indata warehouse applications. The classical justification for lower isolation levels is that …,ACM Transactions on Database Systems (TODS),2005,310
Specifying and using a partitionable group communication service,Alan Fekete; Nancy Lynch; Alex Shvartsman,Abstract Group communication services are becoming accepted as effective building blocksfor the construction of fault-tolerant distributed applications. Many specifications for groupcommunication services have been proposed. However; there is still no agreement aboutwhat these specifications should say; especially in cases where the services arepartitionable; ie; where communication failures may lead to simultaneous creation of groupswith disjoint memberships; such that each group is unware of the existence of any othergroup. In this paper; we present a new; succinct specification for a view-orientedpartitionable group communication service. The service associates each message with aparticular view of the group membership. All send and receive events for a message occurwithin the associated view. The service provides a total order on the messages within …,ACM Transactions on Computer Systems (TOCS),2001,247
Serializable isolation for snapshot databases,Michael J Cahill; Uwe Röhm; Alan D Fekete,Abstract Many popular database management systems implement a multiversionconcurrency control algorithm called snapshot isolation rather than providing fullserializability based on locking. There are well-known anomalies permitted by snapshotisolation that can lead to violations of data consistency by interleaving transactions thatwould maintain consistency if run serially. Until now; the only way to prevent theseanomalies was to modify the applications by introducing explicit locking or artificial updateconflicts; following careful analysis of conflicts between all pairs of transactions. This articledescribes a modification to the concurrency control algorithm of a database managementsystem that automatically detects and prevents snapshot isolation anomalies at runtime forarbitrary applications; thus providing serializable isolation. The new algorithm preserves …,ACM Transactions on Database Systems (TODS),2009,199
Problem-based learning for foundation computer science courses,Judy Kay; Michael Barg; Alan Fekete; Tony Greening; Owen Hollands; Jeffrey H Kingston; Kate Crawford,The foundation courses in computer science pose particular challenges for teacher andlearner alike. This paper describes some of these challenges and how we have designedproblem-based learning (PBL) courses to address them. We discuss the particular problemswe were keen to overcome: the purely technical focus of many courses; the problems ofindividual learning and the need to establish foundations in a range of areas which areimportant for computer science graduates. We then outline our course design; showing howwe have created problem-based learning courses. The paper reports our evaluation of theapproach. This has two parts: assessment of a trial; with a three-year longitudinal follow-upof the students; reports of student learning improve-ment after we had become experiencedin full implementation of PBL. We conclude with a summary of our experience over three …,Computer Science Education,2000,191
Data Consistency Properties and the Trade-offs in Commercial Cloud Storage: the Consumers' Perspective.,Hiroshi Wada; Alan Fekete; Liang Zhao; Kevin Lee; Anna Liu,ABSTRACT A new class of data storage systems; called NoSQL (Not Only SQL); haveemerged to complement traditional database systems; with rejection of general ACIDtransactions as one common feature. Different platforms; and indeed different primitiveswithin one NoSQL platform; can offer various consistency properties; from EventualConsistency to single-entity ACID. For the platform provider; weaker consistency shouldallow better availability; lower latency; and other benefits. This paper investigates whatconsumers observe of the consistency and performance properties of various offerings. Wefind that many platforms seem in practice to offer more consistency than they promise; wealso find cases where the platform offers consumers a choice between stronger and weakerconsistency; but there is no observed benefit from accepting weaker consistency …,CIDR,2011,173
MDCC: Multi-data center consistency,Tim Kraska; Gene Pang; Michael J Franklin; Samuel Madden; Alan Fekete,Abstract Replicating data across multiple data centers allows using data closer to the client;reducing latency for applications; and increases the availability in the event of a data centerfailure. MDCC (Multi-Data Center Consistency) is an optimistic commit protocol for geo-replicated transactions; that does not require a master or static partitioning; and is stronglyconsistent at a cost similar to eventually consistent protocols. MDCC takes advantage ofGeneralized Paxos for transaction processing and exploits commutative updates with valueconstraints in a quorum-based system. Our experiments show that MDCC outperformsexisting synchronous transactional replication protocols; such as Megastore; by requiringonly a single message round-trip in the normal operational case independent of the master-location and by scaling linearly with the number of machines as long as transaction …,Proceedings of the 8th ACM European Conference on Computer Systems,2013,169
How A Consumer Can Measure Elasticity for Cloud Platforms,Sadeka Islam; Kevin Lee; Alan Fekete; Anna Liu,Abstract One major benefit claimed for cloud computing is elasticity: the cost to a consumerof computation can grow or shrink with the workload. This paper offers improved ways toquantify the elasticity concept; using data available to the consumer. We define a measurethat reflects the financial penalty to a particular consumer; from under-provisioning (leadingto unacceptable latency or unmet demand) or over-provisioning (paying more thannecessary for the resources needed to support a workload). We have applied severalworkloads to a public cloud; from our experiments we extract insights into the characteristicsof a platform that influence its elasticity. We explore the impact of the rules used to increaseor decrease capacity.,Proceedings of International Conference on Performance Engineering (ICPE'12),2011,121
Eventually-serializable data services,Alan Fekete; David Gupta; Victor Luchangco; Nancy Lynch; Alex Shvartsman,Abstract Data replication is used in distributed systems to improve availability; increasethroughput and eliminate single points of failures. The cost of replication is that significantcare and communication is required to maintain consistency among replicas. In somesettings; such as distributed directory services; it is acceptable to have transientinconsistencies; in exhange for better performance; as long as a consistent view of the datais eventually established. For such services to be usable; it is important that the consistencyguarantees are specified clearly. We present a new specification for distributed dataservices that trades off immediate consistency guarantees for improved system availabilityand efficiency; while ensuring the long-term consistency of the data. An eventually-serializable data service maintains the requested operations in a partial order that …,Theoretical Computer Science,1999,115
Highly Available Transactions: Virtues and Limitations,Peter Bailis; Aaron Davidson; Alan Fekete; Ali Ghodsi; Joseph M Hellerstein; Ion Stoica,Abstract To minimize network latency and remain online during server failures and networkpartitions; many modern distributed data storage systems eschew transactional functionality;which provides strong semantic guarantees for groups of multiple operations over multipledata items. In this work; we consider the problem of providing Highly Available Transactions(HATs): transactional guarantees that do not suffer unavailability during system partitions orincur high network latency. We introduce a taxonomy of highly available systems andanalyze existing ACID isolation and distributed data consistency guarantees to identifywhich can and cannot be achieved in HAT systems. This unifies the literature on weaktransactional isolation; replica consistency; and highly available systems. We analyticallyand experimentally quantify the availability and performance benefits of HATs---often two …,Proceedings of the VLDB Endowment,2013,107
Design-level performance prediction of component-based applications,Y Liu; I Gorton; A Fekete,Server-side component technologies such as Enterprise JavaBeans (EJBs);. NET; andCORBA are commonly used in enterprise applications that have requirements for highperformance and scalability. When designing such applications; architects must selectsuitable component technology platform and application architecture to provide the requiredperformance. This is challenging as no methods or tools exist to predict applicationperformance without building a significant prototype version for subsequent benchmarking.In this paper; we present an approach to predict the performance of component-basedserver-side applications during the design phase of software development. The approachconstructs a quantitative performance model for a proposed application. The model requiresinputs from an application-independent performance profile of the underlying component …,Software Engineering; IEEE Transactions on,2005,105
Compensation is not enough,Paul Greenfield; Alan Fekete; Julian Jang; Dean Kuo,An important problem in designing infrastructure to support business-to-business integration(B2Bi) is how to cancel a long-running interaction (either because the user has changedtheir mind; or in response to an unrecoverable failure). We review the fault-handling andcompensation mechanism that is now used in most workflow products and business processmodeling standards. We then use an e-procurement case-study to extract a set ofrequirements for an effective cancellation mechanism; and we show that the standardapproach using fault-handling; and compensation transactions is not adequate to meetthese requirements.,Enterprise Distributed Object Computing Conference; 2003. Proceedings. Seventh IEEE International,2003,103
Unbundling transaction services in the cloud,David Lomet; Alan Fekete; Gerhard Weikum; Mike Zwilling,Abstract: The traditional architecture for a DBMS engine has the recovery; concurrencycontrol and access method code tightly bound together in a storage engine for records. Wepropose a different approach; where the storage engine is factored into two layers (each ofwhich might have multiple heterogeneous instances). A Transactional Component (TC)works at a logical level only: it knows about transactions and their" logical" concurrencycontrol and undo/redo recovery; but it does not know about page layout; B-trees etc. A DataComponent (DC) knows about the physical storage structure. It supports a record orientedinterface that provides atomic operations; but it does not know about transactions. Providingatomic record operations may itself involve DC-local concurrency control and recovery;which can be implemented using system transactions. The interaction of the mechanisms …,Arxiv preprint arXiv:0909.1768 (also in Proc CIDR'2009),2009,99
Coordination Avoidance in Database Systems,Peter Bailis; Alan Fekete; Michael J Franklin; Ali Ghodsi; Joseph M Hellerstein; Ion Stoica,Abstract Minimizing coordination; or blocking communication between concurrentlyexecuting operations; is key to maximizing scalability; availability; and high performance indatabase systems. However; uninhibited coordination-free execution can compromiseapplication correctness; or consistency. When is coordination necessary for correctness?The classic use of serializable transactions is sufficient to maintain correctness but is notnecessary for all applications; sacrificing potential scalability. In this paper; we develop aformal framework; invariant confluence; that determines whether an application requirescoordination for correct execution. By operating on application-level invariants overdatabase states (eg; integrity constraints); invariant confluence analysis provides anecessary and sufficient condition for safe; coordination-free execution. When …,Proceedings of the VLDB Endowment,2014,96
Making sense of business process descriptions: An experimental comparison of graphical and textual notations,Avner Ottensooser; Alan Fekete; Hajo A Reijers; Jan Mendling; Con Menictas,Abstract How effective is a notation in conveying the writer's intent correctly? This paperidentifies understandability of design notations as an important aspect which calls for anexperimental comparison. We compare the success of university students in interpretingbusiness process descriptions; for an established graphical notation (BPMN) and for analternative textual notation (based on written use-cases). Because a design must be read bydiverse communities; including technically trained professionals such as developers andbusiness analysts; as well as end-users and stakeholders from a wider business setting; weused different types of participants in our experiment. Specifically; we included those whohad formal training in process description; and others who had not. Our experiments showedsignificant increases by both groups in their understanding of the process from reading …,Journal of Systems and Software,2012,96
Reliable communication over unreliable channels,Yehuda Afek; Hagit Attiya; Alan Fekete; Michael Fischer; Nancy Lynch; Yishay Mansour; Dai-Wei Wang; Lenore Zuck,Abstract. Layered communication protocols frequently implement a FIFO message fiacilitycm top of an unrehable non-FIFO serwce such as that provided hy a packet-swltchmgnetwork. This paper investigates the possibdity of Implementing a reliable message layer ontop of an underlying layer that can low packets and deliver them out of order; with theaddltlonzd restriction that the implementatmn uses only a fixed fimte number of differentpackets. A new formalism is presented to spcclfy communication layers and their properties;the notion of their implementation by 1/0 automata. and the properties of suchimplementations. An 1/0 automaton that Implements a rellable layer over an unreliable layeris presented In this implementation; tbe number ot packets needed to deliver eachsucceeding message increases permanently as additional packet-loss and reordering …,Journal of the ACM (JACM),1994,95
Commutativity-based locking for nested transactions,Alan Fekete; Nancy Lynch; Michael Merritt; William Weihl,Abstract We present a new model for describing and reasoning about transaction-processing algorithms. The model provides a comprehensive; uniform framework forrigorous correctness proofs. The model generalizes previous work on concurrency control toencompass nested transactions and type-specific concurrency control algorithms. Using ourmodel; we describe general conditions for a concurrency control algorithm to be correct-ie;to ensure that transactions appear to be atomic. We also present a new concurrency controlalgorithm for abstract data types in a nested transaction system. The algorithm usescommutativity properties of operations to allow high levels of concurrency. The results ofoperations; in addition to their names and arguments; can be used in checking for conflicts;further increasing concurrency. We show; using our general model; that the new …,Journal of Computer and System Sciences,1990,90
Automating the detection of snapshot isolation anomalies,Sudhir Jorwekar; Alan Fekete; Krithi Ramamritham; S Sudarshan,Abstract Snapshot isolation (SI) provides significantly improved concurrency over 2PL;allowing reads to be non-blocking. Unfortunately; it can also lead to non-serializableexecutions in general. Despite this; it is widely used; supported in many commercialdatabases; and is in fact the highest available level of consistency in Oracle and Post-greSQL. Sufficient conditions for detecting whether SI anomalies could occur in a given setof transactions were presented recently; and extended to necessary conditions fortransactions without predicate reads. In this paper we address several issues in extendingthe earlier theory to practical detection/correction of anomalies. We first show how tomechanically find a set of programs which is large enough so that we ensure that allexecutions will be free of SI anomalies; by modifying these programs appropriately. We …,Proceedings of the 33rd international conference on Very large data bases,2007,84
Atomic transactions,Nancy Ann Lynch; Michael Merritt; William Weihl; Alan Fekete,*,*,1994,79
Asymptotically optimal algorithms for approximate agreement,Alan David  Fekete,Abstract This paper introduces some algorithms to solve crash-failure; failure-by-omissionand Byzantine failure versions of the Byzantine Generals or consensus problem; where non-faulty processors need only arrive at values that are close together rather than identical. Foreach failure model and each value of S; we give at-resilient algorithm using S rounds ofcommunication. If S= t+ 1; exact agreement is obtained. In the algorithms for the failure-by-omission and Byzantine failure models; each processor attempts to identify the faultyprocessors and corrects values transmited by them to reduce the amount of disagreement.We also prove lower bounds for each model; to show that each of our algorithms has aconvergence rate that is asymptotic to the best possible in that model as the number ofprocessors increases.,Distributed Computing,1990,74
Scalable Atomic Visibility with RAMP Transactions,Peter Bailis; Alan Fekete; Ali Ghodsi; Joseph M Hellerstein; Ion Stoica,Abstract Databases can provide scalability by partitioning data across several servers.However; multipartition; multioperation transactional access is often expensive; employingcoordination-intensive locking; validation; or scheduling mechanisms. Accordingly; manyreal-world systems avoid mechanisms that provide useful semantics for multipartitionoperations. This leads to incorrect behavior for a large class of applications includingsecondary indexing; foreign key enforcement; and materialized view maintenance. In thiswork; we identify a new isolation model—Read Atomic (RA) isolation—that matches therequirements of these use cases by ensuring atomic visibility: either all or none of eachtransaction's updates are observed by other transactions. We present algorithms for ReadAtomic Multipartition (RAMP) transactions that enforce atomic visibility while offering …,Proceedings of the 2014 ACM SIGMOD international conference on Management of Data,2014,72
Application migration to cloud: a taxonomy of critical factors,Van Tran; Jacky Keung; Anna Liu; Alan Fekete,Abstract Cloud computing has attracted attention as an important platform for softwaredeployment; with perceived benefits such as elasticity to fluctuating load; and reducedoperational costs compared to running in enterprise data centers. While some software iswritten from scratch specially for the cloud; many organizations also wish to migrate existingapplications to a cloud platform. Such a migration exercise to a cloud platform is not easy:some changes need to be made to deal with differences in software environment; such asprogramming model and data storage APIs; as well as varying performance qualities. Wereport here on experiences in doing a number of sample migrations. We propose ataxonomy of the migration tasks involved; and we show the breakdown of costs amongcategories of task; for a case-study which migrated a .NET n-tier application to run on …,Proceeding of the 2nd international workshop on Software engineering for cloud computing,2011,67
A read-only transaction anomaly under snapshot isolation,Alan Fekete; Elizabeth O'Neil; Patrick O'Neil,Abstract Snapshot Isolation (SI); is a multi-version concurrency control algorithm introducedin [BBGMOO95] and later implemented by Oracle. SI avoids many concurrency errors; and itnever delays read-only transactions. However it does not guarantee serializability. It hasbeen widely assumed that; under SI; read-only transactions always execute serializablyprovided the concurrent update transactions are serializable. The reason for this is that all SIreads return values from a single instant of time when all committed transactions havecompleted their writes and no writes of non-committed transactions are visible. This seemsto imply that read-only transactions will not read anomalous results so long as the updatetransactions with which they execute do not write such results. In the current note; however;we exhibit an example contradicting these assumptions: it is possible for an SI history to …,ACM SIGMOD Record,2004,65
Relaxed-currency serializability for middle-tier caching and replication,Philip A Bernstein; Alan Fekete; Hongfei Guo; Raghu Ramakrishnan; Pradeep Tamma,Abstract Many applications; such as e-commerce; routinely use copies of data that are not insync with the database due to heuristic caching strategies used to enhance performance.We study concurrency control for a transactional model that allows update transactions toread out-of-date copies. Each read operation carries a" freshness constraint" that specifieshow fresh a copy must be in order to be read. We offer a definition of correctness for thismodel and present algorithms to ensure several of the most interesting freshnessconstraints. We outline a serializability-theoretic correctness proof and present the results ofa detailed performance study.,Proceedings of the 2006 ACM SIGMOD international conference on Management of data,2006,62
Allocating isolation levels to transactions,Alan Fekete,Abstract Serializability is a key property for executions of OLTP systems; without this;integrity constraints on the data can be violated due to concurrent activity. Serializability canbe guaranteed regardless of application logic; by using a serializable concurrency controlmechanism such as strict two-phase locking (S2PL); however the reduction in concurrencyfrom this is often too great; and so a DBMS offers the DBA the opportunity to use differentconcurrency control mechanisms for some transactions; if it is safe to do so. However; littletheory has existed to decide when it is safe! In this paper; we discuss the problem of taking acollection of transactions; and allocating each to run at an appropriate isolation level (andthus use a particular concurrency control mechanism); while still ensuring that everyexecution will be conflict serializable. When each transaction can use either S2PL; or …,Proceedings of the twenty-fourth ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems,2005,62
The potential dangers of causal consistency and an explicit solution,Peter Bailis; Alan Fekete; Ali Ghodsi; Joseph M Hellerstein; Ion Stoica,Abstract Causal consistency is the strongest consistency model that is available in thepresence of partitions and provides useful semantics for human-facing distributed services.Here; we expose its serious and inherent scalability limitations due to write propagationrequirements and traditional dependency tracking mechanisms. As an alternative to classicpotential causality; we advocate the use of explicit causality; or application-defined happens-before relations. Explicit causality; a subset of potential causality; tracks only relevantdependencies and reduces several of the potential dangers of causal consistency.,Proceedings of the Third ACM Symposium on Cloud Computing,2012,61
The impossibility of implementing reliable communication in the face of crashes,Alan Fekete; Nancy Lynch; Yishay Mansour; John Spinelli,Abstract. An important function of communication networks is to implement reliable datatransfer over an unreliable underlying network. Formal specifications are given for reliableand unreliable communication layers; in terms of 1/0 automata. Based on thesespecifications; it is proved that no reliable communication protocol can tolerate crashes ofthe processors on which the protocol runs.,Journal of the ACM (JACM),1993,58
A dynamic view-oriented group communication service,Roberto De Prisco; Alan Fekete; Nancy Lynch; Alex Shvartsman,Abstract View-oriented group communication services are widely used for fault-tolerantdistributed computing. For applications involving coherent data; it is importaut to know whena process has a primary view of the current group membership; usually defined as a viewcontaining a majority out of a static universe of processes. For high availability in a systemwhere processes can join and leave routinely; some researchers have suggested def?. ningprimary views dynamically; depending on having enough members in common with recentviews. We present a new formal automaton specification; DVS; for the safety guaranteesmade by a practical group communication service providing a dynamic notion of primaryview. We demonstrate the value of DVS by showing both how it can be implemented andhow it can be used in an application. First; we present a distributed algorithm based on a …,Proceedings of the seventeenth annual ACM symposium on Principles of distributed computing,1998,56
Implementing sequentially consistent shared objects using broadcast and point-to-point communication,Alan Fekete; M Frans Kaashoek; Nancy Lynch,Abstract This paper presents and proves correct a distributed algorithm that implements asequentially consistent collection of shared read/update objects. This algorithm is ageneralization of one used in the Orca shared object system. The algorithm caches objectsin the local memory of processors according to application needs; each read operationaccesses a single copy of the object; while each update accesses all copies. The algorithmuses broadcast communication when it sends messages to replicated copies of an object;and it uses point-to-point communication when a message is sent to a single copy; andwhen a reply is returned. Copies of all objects are kept consistent using a strategy based onsequence numbers for broadcasts. The algorithm is presented in two layers. The lower layeruses the given broadcast and point-to-point communication services; plus sequence …,Journal of the ACM (JACM),1998,53
Supporting reflection in introductory computer science,Alan Fekete; Judy Kay; Jeff Kingston; Kapila Wimalaratne,Abstract Educational theory suggests that student learning is enhanced when students payattention to their own learning. In this paper; we describe a range of innovative techniquesthat we use to encourage students to reflect on the state of their knowledge; and on theprocess by which they acquire it. Examples include providing web-based arrangements forstudents to practice assessing material based on the criteria we use in marking; andallocating marks in assessment for reflective writing.,ACM SIGCSE Bulletin,2000,49
Data link layer: Two impossibility results,Nancy A Lynch; Yishay Mansour; Alan Fekete,Abstract: The data link layer in a layered communication network is designed to ensurereliable data transfer over a noisy physical channel. Formal specifications are given forphysical channels and data links; in terms of I/O automata. Based on these specifications;two impossibility results are proved. First; no data link protocol can tolerate crashes of thehost processors on which the protocol runs. Second; any data link protocol constructed touse an arbitrary non-FIFO physical channel requires unbounded headers.,Proceedings of the seventh annual ACM Symposium on Principles of distributed computing,1988,49
A dynamic primary configuration group communication service,Roberto De Prisco; Alan Fekete; Nancy Lynch; Alex Shvartsman,Abstract Quorum-based methods for managing replicated data are popular because theyprovide availability of both reads and writes in the presence of faulty behavior by some sitesor communication links. Over a very long time; it may become necessary to alter the quorumsystem; perhaps because some sites have failed permanently and oth-ers have joined thesystem; or perhaps because users want a different trade-off between read-availability andwrite-availability. There are sub-tle issues that arise in managing the change of quorums;including how to make sure that any operation using the new quorum system is aware of allinformation from operations that used an old quorum system; and how to allow concurrentattempts to alter the quorum system. In this paper we use ideas from group managementservices; especially those providing a dynamic notion of primary view; with this we define …,International Symposium on Distributed Computing,1999,45
Consistency for web services applications,Paul Greenfield; Dean Kuo; Surya Nepal; Alan Fekete,Abstract A key challenge facing the designers of service-oriented applications is ensuringthat the autonomous services that make up these distributed applications always finish inconsistent states despite application-level failures and other exceptional events. This paperaddresses this problem by first describing the relationship between internal service states;messages and application protocols and then shows how this relationship transforms theproblem of ensuring consistent outcomes into a correctness problem that can be addressedwith established protocol verification tools.,Proceedings of the 31st international conference on Very large data bases,2005,43
A theory of timestamp-based concurrency control for nested transactions,James Aspnes; Alan Fekete; Nancy A Lynch; Michael Merritt; William E Weihl,Note: OCR errors may be found in this Reference List extracted from the full text article. ACMhas opted to expose the complete List rather than only correct and linked references … {6}Lynch; NA; Merritt; M.; Weihl; WE; and Fekete; A. Atomic Transactions. In preparation … {7}Moss; JEB Nested transactions: an approach to reliable distributed computing. PhD thesis; MassachusettsInstitute of Technology; 1981. Available as Technical Report MIT/LCS/TR-260 … {9}Spector; A.; and Swedlow; K. (eds). Guide to the Camelot distributed transaction facility: release1. Technical Report; Carnegie-Mellon University; 1988 … {10} Weihl; WE Specification andimplementation of atomic data types. PhD thesis; Massachusetts Institute of Technology;1984. Available as Technical Report MIT/LCS/TR-314.,Proceedings of the 14th International Conference on Very Large Data Bases,1988,43
A scalable lock manager for multicores,Hyungsoo Jung; Hyuck Han; Alan Fekete; Gernot Heiser; Heon Y Yeom,Abstract Modern implementations of DBMS software are intended to take advantage of highcore counts that are becoming common in high-end servers. However; we have observedthat several database platforms; including MySQL; Shore-MT; and a commercial system;exhibit throughput collapse as load increases into oversaturation (where there are morerequest threads than cores); even for a workload with little or no logical contention for locks;such as a read-only workload. Our analysis of MySQL identifies latch contention within thelock manager as the bottleneck responsible for this collapse. We design a lock manager withreduced latching; implement it in MySQL; and show that it avoids the collapse and generallyimproves performance. Our efficient implementation of a lock manager is enabled by astaged allocation and deallocation of locks. Locks are preallocated in bulk; so that the …,ACM Transactions on Database Systems (TODS),2014,42
Multi-version Concurrency via Timestamp Range Conflict Management,David Lomet; Alan Fekete; Rui Wang; Peter Ward,A database supporting multiple versions of records may use the versions to support queriesof the past or to increase concurrency by enabling reads and writes to be concurrent. Weintroduce a new concurrency control approach that enables all SQL isolation levelsincluding serializability to utilize multiple versions to increase concurrency while alsosupporting transaction time database functionality. The key insight is to manage a range ofpossible timestamps for each transaction that captures the impact of conflicts that haveoccurred. Using these ranges as constraints often permits concurrent access where lockbased concurrency control would block. This can also allow blocking instead of some abortsthat are common in earlier multi-version concurrency techniques. Also; timestamp rangescan be used to conservatively find deadlocks without graph based cycle detection. Thus …,Data Engineering (ICDE); 2012 IEEE 28th International Conference on,2012,42
Serializable snapshot isolation for replicated databases in high-update scenarios,Hyungsoo Jung; Hyuck Han; Alan Fekete; Uwe Röhm,ABSTRACT Many proposals for managing replicated data use sites running the SnapshotIsolation (SI) concurrency control mechanism; and provide 1-copy SI or something similar;as the global isolation level. This allows good scalability; since only ww-conflicts need to bemanaged globally. However; 1-copy SI can lead to data corruption and violation of integrityconstraints [5]. 1-copy serializability is the global correctness condition that prevents datacorruption. We propose a new algorithm Replicated Serializable Snapshot Isolation (RSSI)that uses SI at each site; and combines this with a certification algorithm to guarantee 1-copyserializable global execution. Management of ww-conflicts is similar to what is done in 1-copy SI. But unlike previous designs for 1-copy serializable systems; we do not need toprevent all rw-conflicts among concurrent transactions. We formalize this in a theorem that …,Proceedings of the VLDB Endowment,2011,41
Multicast group communication as a base for a load-balancing replicated data service,Roger Khazan; Alan Fekete; Nancy Lynch,Abstract We give a rigorous account of an algorithm that provides sequentially consistentreplicated data on top of the view synchronous group communication service previouslyspecified by Fekete; Lynch and Shvartsman. The algorithm performs updates at all membersof a majority view; but rotates the work of queries among the members to equalize the load.The algorithm is presented and verified using I/O automata.,International Symposium on Distributed Computing,1998,41
One-copy serializability with snapshot isolation under the hood,Mihaela A Bornea; Orion Hodson; Sameh Elnikety; Alan Fekete,This paper presents a method that allows a replicated database system to provide a globalisolation level stronger than the isolation level provided on each individual database replica.We propose a new multi-version concurrency control algorithm called; serializablegeneralized snapshot isolation (SGSI); that targets middleware replicated database systems.Each replica runs snapshot isolation locally and the replication middleware guaranteesglobal one-copy serializability. We introduce novel techniques to provide a stronger globalisolation level; namely readset extraction and enhanced certification that prevents read-writeand write-write conflicts in a replicated setting. We prove the correctness of the proposedalgorithm; and build a prototype replicated database system to evaluate SGSI performanceexperimentally. Extensive experiments with an 8 replica database system under the TPC …,Data Engineering (ICDE); 2011 IEEE 27th International Conference on,2011,40
Nested transactions and read-write locking,Alan Fekete; Nancy Lynch; M Merrit; William Weihl,A malor part of database 1 eseal ch over several years has been the dealgn and analysis ofslgollthms to mamtam consistent data m the tace of mte~ leaved accesses; abolts ofoperations; rephcatlon of mfool mntmn and fadures of system components The most popularand simple protocol 1s tao phase locbmg with separate read and~ llte lochs; other methodsInclude arbltraly confhct-based lockmg; tlmestsmp-based techmques; and lockmg that usesspecial structure of the data (ega luerarchlcal arrangement)[Gr; T; I< S; I< o; We] A powerfultheory has been developed to prove the correctnes of these algorithms; based on the ideathat a protocol 1s correct If It ensures that all executions are equivalent to serial executions(EGLT; P; BG] This theory proves serlahzabdlty by showing that a precedence graphcontams no cycles Recently; some Ideas m database system design and mole general …,Proceedings of the sixth ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems,1987,38
Unbundled storage transaction services,*,Systems (and corresponding methods) that unbundle the kernel or storage engine of adatabase system are provided. The unbundling separates transactional aspects fromstorage aspects. The two components of the storage engine resulting from the unbundlingare a transaction component (TC) and a data component (DC). Data storage accessmethods are implemented in the DC without the added complexity of dealing withtransactions; which are handled separately in the TC. The interface supported by the DC is alogical interface; eg; record oriented; in which the way that records are mapped to diskpages (or flash memory blocks; etc.) need not be exposed. The TC then deals with logicallocking and logging; meaning that it need know nothing about the way pages are used in theDC.,*,2012,35
A teaching system for SQL,R Kearns; S Shead; A Fekete,Abstract Skill in writing SQL queries is a fundamental outcome expected by industry fromany university course in Database Systems. Students often have difficulty with fundamentalSQL concepts such as multitable joins; aggregation and grouping. This paper describesteaching software; which supports students learning these concepts. The system; calledesql; is similar to a normal query interface; except that the response to a SELECT statementis not merely to show the result; but instead to show a sequence of images; giving a step-by-step account of how the query result is determined.,Proceedings of the 2nd Australasian conference on Computer science education,1997,35
Predicting the performance of middleware-based applications at the design level,Yan Liu; Alan Fekete; Ian Gorton,Abstract In this paper; we present an approach to predict the performance of middleware-based applications at the design level. We develop a quantitative performance model for aproposed system design. The inputs needed to produce this performance prediction are astate diagram showing the main waiting and resource usage aspects of the proposedsystem architecture; and measurements taken on the middleware infrastructure using asimple benchmark application which is much cheaper to implement than the full system. Theperformance model allows the system designer to evaluate the architecture andimplementation approaches in term of their ability to achieve required performance. Weshow our method in action using a J2EE application; Stock-Online; and validate thepredictions by implementing the design and measuring its performance. The modeling …,ACM SIGSOFT Software Engineering Notes (from Proceedings of the 4th international workshop on Software and performance; WOSP'04),2004,34
Size Estimation of Cloud Migration Projects with Cloud Migration Point (CMP),Van TK Tran; Kevin Lee; Alan Fekete; Anna Liu; Jacky Keung,One major obstacle to enterprise adoption of cloud technologies has been the lack ofvisibility into migration effort and cost. In this paper; we present a methodology; called CloudMigration Point (CMP); for estimating the size of cloud migration projects; by recasting a well-known software size estimation model called Function Point (FP) into the context of cloudmigration. We empirically evaluate our CMP model by performing a cross-validation on sixdifferent small-scale cloud migration projects and show that our size estimation model canbe used as a reliable predictor for effort estimation. Furthermore; we prove that our CMPmodel satisfies the fundamental properties of a software size measure.,2011 International Symposium on Empirical Software Engineering and Measurement (ESEM'11),2011,32
Serialisability and Snapshot Isolation.,Alan David Fekete,*,Australasian Database Conference,1999,32
Feral Concurrency Control: An Empirical Investigation of Modern Application Integrity,Peter Bailis; Alan Fekete; Michael J Franklin; Ali Ghodsi; Joseph M Hellerstein; Ion Stoica,Abstract The rise of data-intensive" Web 2.0" Internet services has led to a range of popularnew programming frameworks that collectively embody the latest incarnation of the vision ofObject-Relational Mapping (ORM) systems; albeit at unprecedented scale. In this work; weempirically investigate modern ORM-backed applications' use and disuse of databaseconcurrency control mechanisms. Specifically; we focus our study on the common use offeral; or application-level; mechanisms for maintaining database integrity; which; across arange of ORM systems; often take the form of declarative correctness criteria; or invariants.We quantitatively analyze the use of these mechanisms in a range of open sourceapplications written using the Ruby on Rails ORM and find that feral invariants are the mostpopular means of ensuring integrity (and; by usage; are over 37 times more popular than …,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,31
YCSB+T: Benchmarking web-scale transactional databases,Akon Dey; Alan Fekete; Raghunath Nambiar; Uwe Röhm,Database system benchmarks like TPC-C and TPC-E focus on emulating databaseapplications to compare different DBMS implementations. These benchmarks use carefullyconstructed queries executed within the context of transactions to exercise specific RDBMSfeatures; and measure the throughput achieved. Cloud services benchmark frameworks likeYCSB; on the other hand; are designed for performance evaluation of distributed NoSQL key-value stores; early examples of which did not support transactions; and so the benchmarksuse single operations that are not inside transactions. Recent implementations of web-scaledistributed NoSQL systems like Spanner and Percolator; offer transaction features to cater tonew web-scale applications. This has exposed a gap in standard benchmarks. We identifythe issues that need to be addressed when evaluating transaction support in NoSQL …,Data Engineering Workshops (ICDEW); 2014 IEEE 30th International Conference on,2014,31
Consistency models for replicated data,Alan Fekete; Krithi Ramamritham,Query processing algorithms are designed to efficiently exploit the available cache units inthe memory hierarchy. Cache-conscious algorithms typically employ knowledge ofarchitectural parameters such as cache size and latency. This knowledge can be used toensure that the algorithms have good temporal and/or spatial locality on the target platform.,Replication,2010,31
Consistency Models For Replicated Data,Alan Fekete,Query processing algorithms are designed to efficiently exploit the available cache units inthe memory hierarchy. Cache-conscious algorithms typically employ knowledge ofarchitectural parameters such as cache size and latency. This knowledge can be used toensure that the algorithms have good temporal and/or spatial locality on the target platform.,Encyclopedia of Database Systems,2009,31
Lightweight analysis of object interactions,Daniel Jackson; Alan Fekete,Abstract The state of the practice in object-oriented software development has movedbeyond reuse of code to reuse of conceptual structures such as design patterns. This paperdraws attention to some difficulties that need to be solved if this style of development is to besupported by formal methods. In particular; the centrality of object interactions in manydesigns makes traditional reasoning less useful; since classes cannot be treated fruitfully inisolation from one another. We propose some ideas towards dealing with these issues: arelational model of heap structure capable of expressing sharing and mutual influencebetween objects; a declarative specification style that works in the presence of collaboration;and a tool-supported constraint analysis to expose problems in a diagram that captures; at adesign level; a pattern of interaction. We illustrate these ideas with an example taken from …,International Symposium on Theoretical Aspects of Computer Software,2001,31
A modular proof of correctness for a network synchronizer,Alan Fekete; Nancy Lynch; Luiba Shrira,Abstract In this paper we offer a formal; rigorous proof of the correctness of Awerbuch'salgorithm for network synchronization. We specify both the algorithm and the correctnesscondition using the I/O automaton model; which has previously been used to describe andverify algorithms for concurrency control and resource allocation. We show that the model isalso a powerful tool for reasoning about distributed graph algorithms. Our proof ofcorrectness follows closely the intuitive arguments made by the designer of the algorithm byexploiting the model's natural support for such important design techniques as stepwiserefinement and modularity. In particular; since the algorithm uses simpler algorithms forsynchronization within and between 'clusters' of nodes; our proof can import as lemmas thecorrectness of these simpler algorithms.,Distributed Algorithms,1988,31
The cost of serializability on platforms that use snapshot isolation,Mohammad Alomari; Michael Cahill; Alan Fekete; Uwe Rohm,Several common DBMS engines use the multiversion concurrency control mechanismcalled Snapshot Isolation; even though application programs can experience non-serializable executions when run concurrently on such a platform. Several proposals existfor modifying the application programs; without changing their semantics; so that they arecertain to execute serializably even on an engine that uses SI. We evaluate the performanceimpact of these proposals; and find that some have limited impact (only a few percent drop inthroughput at a given multi-programming level) while others lead to much greater reductionin throughput of up-to 60% in high contention scenarios. We present experimental results forboth an open-source and a commercial engine. We relate these to the theory; givingguidelines on which conflicts to introduce so as to ensure correctness with little impact on …,Data Engineering; 2008. ICDE 2008. IEEE 24th International Conference on,2008,29
Quantifying isolation anomalies,Alan Fekete; Shirley N Goldrei; Jorge Pérez Asenjo,Abstract Choosing a weak isolation level such as Read Committed is understood as a trade-off; where less isolation means that higher performance is gained but there is an increasedpossibility that data integrity will be lost. Previously; one side of this trade-off has beencarefully studied quantitatively--there are well-known metrics for performance such astransactions per minute; standardized benchmarks that measure these in a controlled way;and analytic models that can predict how performance is influenced by system parameterslike multiprogramming level. This paper contributes to quantifying the other aspect of thetrade-off. We define a novel microbenchmark that measures how rapidly integrity violationsare produced at different isolation levels; for a simple set of transactions. We explore howthis rate is impacted by configuration factors such as multiprogramming level; or …,Proceedings of the VLDB Endowment,2009,26
Formal models of communication services: A case study,Alan Fekete,Formal methods can play an important role in exploring new communication systemsservices. The telecommunications and data communications communities have longaccepted the need for formally describing protocols; but only recently have they consideredformally describing a service by abstracting specifications from a particular protocol thatprovides that service. Specifying a service at an abstract level meets two important needs:standardization and customization. The author presents a simplified atomic multicast as anexample service and input/output automata for the formal model. He shows how to representthe service specification; a protocol; and implementations of that protocol. He also sketcheshow to prove the correctness of the protocol and implementation; that is; how to show thatthe specified service is actually provided.,Computer,1993,26
Learner reflection in student self-assessment,Judy Kay; Lichao Li; Alan Fekete,Abstract Learner reflection is critical to effective; deep; transferable learning; especially incognitively demanding areas; such as learning programming. This paper presents Reflect; aprogramming education system; which aims to facilitate student self-assessment andpromote learner reflection through scrutable learner models. Reflect sets tasks and presentsa set of example answers to read and assess. We report students' use of the system overone semester. Overall Reflect appears to help students understand the teacher's goals forthe tasks set and to refine their own work in relation to these goals.,Proceedings of the ninth Australasian conference on Computing education-Volume 66,2007,25
A serialization graph construction for nested transactions,Alan Fekete; Nancy Lynch; William E Weihl,Abstract This paper makes three contributions. First; we present a proof technique that offerssystem designers the same ease of reasoning about nested transaction systems as is givenby the classical theory for systems without nesting; and yet can be used to verify that asystem satisfies the robust “user view” definition of correctness of [10]. Second; asapplications of the technique; we verify the correctness of Moss' read/write locking algorithmfor nested transactions; and of an undo logging algorithm that has not previously beenpresented or proved for nested transaction systems. Third; we make explicit the assumptionsused for this proof technique; assumptions that are usually made implicitly in the classicaltheory; and therefore we clarify the type of system for which the classical theory itself canreliably be used.,Proceedings of the ninth ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems,1990,25
A theory of atomic transactions,Nancy Lynch; Michael Merritt; William Weihl; Alan Fekete,Abstract This paper describes some results of a recent project to develop a theory forreasoning about atomic transactions. This theory allows careful statement of the correctnessconditions to be satisfied by transaction-processing algorithms; as well as clear and concisedescription of such algorithms. It also serves as a framework for rigorous correctness proofs.,International Conference on Database Theory,1988,24
Expressing and reasoning about service contracts in service-oriented computing,Dean Kuo; Alan Fekete; Paul Greenfield; Surya Nepal; John Zic; Savas Parastatidis; Jim Webber,The Web services and service-oriented architectures (SOA) vision by Helland; P.(2005) isabout building large-scale distributed applications by composing coarse-grainedautonomous services in a flexible architecture that can adapt to changing businessrequirements. These services interact by exchanging one-way messages throughstandardized message processing and transport protocols. This vision is being driven byeconomic imperatives for integration and automation across administrative andorganizational boundaries. This paper presents a concise yet expressive model for servicecontracts to describe messaging behavior. The idea is simple: we use Boolean conditions tospecify when a message can be sent and received; where the conditions refer only to othermessages in the service contract-that is; conditions only refer to a service's externalized …,Web Services; 2006. ICWS'06. International Conference on,2006,21
A new dynamic architecture for an active network,Amila Fernando; Bob Kummerfeld; Alan Fekete; Michael Hitchens,Existing active network architectures depend on using statically typed languages forprotection and performance. Unfortunately; this limits some of the more dynamic features ofan active network. In this paper; we present PANTS (Python Active Node Transfer System)-adynamically extensible active network architecture. We describe a new architecture for anactive node which does not depend on language-based security but provides the flexibilityto perform dynamic changes to the node and to the capsules. An implementation conformingto this architecture is described and compared with existing active network architectures.,Open Architectures and Network Programming; 2000. Proceedings. OPENARCH 2000. 2000 IEEE Third Conference on,2000,21
HAT; not CAP: towards highly available transactions,Peter Bailis; Alan Fekete; Ali Ghodsi; Joseph M Hellerstein; Ion Stoica,Abstract While the CAP Theorem is often interpreted to preclude the availability oftransactions in a partition-prone environment; we show that highly available systems canprovide useful transactional semantics; often matching those of today's ACID databases. Wepropose Highly Available Transactions (HATs) that are available in the presence ofpartitions. HATs support many desirable ACID guarantees for arbitrary transactionalsequences of read and write operations and permit low-latency operation.,Proceedings of the 14th USENIX conference on Hot Topics in Operating Systems,2013,19
Isolation support for service-based applications: A position paper,Paul Greenfield; Alan Fekete; Julian Jang; Dean Kuo; Surya Nepal,Abstract: In this paper; we propose an approach to providing the benefits of isolation inservice-oriented applications where it is not feasible to hold traditional locks for ACIDtransactions. Our technique; called" Promises"; provides an uniform view for clients whichcovers a wide range of implementation techniques on the service side; all allowing the clientto check a condition and then later rely on that condition still holding. Comments: This articleis published under a Creative Commons License Agreement (this http URL) You may copy;distribute; display; and perform the work; make derivative works and make commercial useof the work; but; you must attribute the work to the author and CIDR 2007. 3rd BiennialConference on Innovative Data Systems Research (CIDR) January 710; 2007; Asilomar;California; USA Subjects: Databases (cs. DB) Cite as: arXiv: cs/0612113 [cs. DB](or arXiv …,Arxiv preprint cs/0612113 (also in Proc CIDR'2007 pp 314-323),2006,18
A service-oriented workflow language for robust interacting applications,Surya Nepal; Alan Fekete; Paul Greenfield; Julian Jang; Dean Kuo; Tony Shi,Abstract In a service-oriented world; a long-running business process can be implementedas a set of stateful services that represent the individual but coordinated steps that make upthe overall business activity. These service-based business processes can then becombined to form loosely-coupled distributed applications where the participants interact bycalling on each other's services. A key concern is to ensure that these interacting service-based processes work correctly in all cases; including maintaining consistency of both theirstored data and the status of the joint activities. We propose a new model and notation forexpressing such business processes which helps the designer avoid many commonsources of errors; including inconsistency. Unlike most existing orchestration or workflow aThis work was completed while the author was working at CSIRO. languages used for …,On the Move to Meaningful Internet Systems 2005: CoopIS; DOA; and ODBASE (paper is part of Proc CoopIS'05),2005,18
Conveying technical content in a curriculum using problem based learning,Alan Fekete; Tony Greening; Jeffrey Kingston,Abstract Problem Based Learnin g (PBL) is a radically different way to organise a course.Instead of an ins.% ructorwho transnu 'ts information to students who then apply-what theylearnt in tightly-d&ned tasks for assessment; in PBL the students work in groups on authenticill-defined tasks; us-mgresources (iiclmli. ng manuals; examples; mentors) when they findthat help is needed. The PBL style of education is particularly suited to develop-mgstudents'skill in software engineering and programming; as well as generic Skius incommunication;cooperation andproblem solving. For these reasons the University of Sydney has revised theiirst year Computer Science subjects to use PBL. This paper analyses the implications forthe technical content covered in these courses. In particular; we show that PBL need notlead to the neglect of topics such as analysis of algorithms; recursion; computer …,Proceedings of the 3rd Australasian conference on Computer science education,1998,18
Asynchronous approximate agreement,Alan D Fekete,Abstract This paper examines the Approximate Agreement Problem in an asynchronousfailure-by-omission system with deterministic protocols. We give a simple algorithm; andprove that the algorithm is optimal by considering the power of the" adversary" scheduler todisrupt processors′ views. We show that the adversary need not cause any omissions toachieve its purpose; and therefore no algorithm can do better than simply to operate round-by-round; as our does. We extend these results to asynchronous crash-failure systems. Theresulting understanding of the adversary should be applicable to other problems inasynchronous failure-by-omission or crash-failure-systems.,Information and Computation,1994,18
A robust technique to ensure serializable executions with snapshot isolation dbms,Mohammad Alomari; Alan Fekete; U Rohm,Snapshot Isolation (SI) is a popular concurrency control mechanism that has beenimplemented by many commercial and open-source platforms (eg Oracle; Postgre SQL; andMS SQL Server 2005). Unfortunately; SI can result in nonserializable execution; in whichdatabase integrity constraints can be violated. The literature reports some techniques toensure that all executions are serializable when run in an engine that uses SI forconcurrency control. These modify the application by introducing conflicting SQL statements.However; with each of these techniques the DBA has to make a choice among possibletransactions to modify—and as we previously showed; making a bad choice of whichtransactions to modify can come with a hefty performance reduction. In this paper wepropose a novel technique called ELM to introduce conflicts in a separate lock-manager …,Data Engineering; 2009. ICDE'09. IEEE 25th International Conference on,2009,17
Asynchronous approximate agreement,Alan David  Fekete,ABSTRACT: This paper introduces an algorithm to solve the Approximate AgreementProblem in an asynchronous failure-by-omission (or crash-failure) system; and proves thatthe algorithm is optimal by considering the power of the “adversary” scheduler to disruptprocessors' views. We show that the adversary need not cause any crashes or omissions toachieve its purpose; and therefore no algorithm can do better than simply to operate round-by-round; as ours does. The resulting understanding of the adversary should be applicableto other problems in asynchronous failure-by-omission or crash-failure systems.,Proceedings of the sixth annual ACM Symposium on Principles of distributed computing,1987,17
Multi-granularity locking for nested transaction systems,J Lee; Alan Fekete,Several research groups have proposed extending the traditional" transaction" model forconcurrent access to shared data; so as to make possible concurrent activity and recoveryfrom failure with user-provided transaction code. Prototype implementations exist for'~nested transaction systems" such a~ Argus [7] and Camelot [10]. A major research effort hasrecently been undertaken aimed at developing an understanding algorithms and prooftechniques for concurrency control in these systems. The results of this research can befound in papers such as [3; 1; 6; 4; 8]. In this paper we extend the work of [3] to analyse analgorithm for multigranularity locking. In conventional database management systems; thereare significant trade-offs involved in choosing the appropriate size of granule within thedatabase for which locks should be obtained. A large granularity (for example; setting …,MFDBS 91,1991,16
Event aware workload prediction: A study using auction events,Matthew Sladescu; Alan Fekete; Kevin Lee; Anna Liu,Abstract Workload bursts have become notorious for rendering numerous web informationsystems unavailable. While cloud computing has the potential to alleviate this problem byoffering computing resources on an on-demand basis; important challenges remain infinding the right resource control strategies to scale resources cost-effectively and toovercome the initialization lag associated with resource acquisition. An effective strategyinvolves predicting workload demand in advance so that resources can be provisioned in atimely manner; but not all prediction approaches are made equal. We argue that while mostexisting approaches show promising results in predicting average workload; they fail topredict workload bursts that are inherently irregular. This paper formulates a new event-aware strategy to more effectively predict workload bursts by exploiting prior knowledge …,International Conference on Web Information Systems Engineering,2012,15
An event-driven workflow engine for service-based business systems,Julian Jang; Alan Fekete; Paul Greenfield; Surya Nepal,This paper discusses a novel implementation of a workflow engine that supports service-based applications. The applications are defined according to the GAT model; which is anevent-based programming model using conditional guards to determine when both normaland exception-handling activities are to be executed. We propose implementationtechniques for key features of GAT. These include implementing control flow based on theevaluation of guards; the management and distribution of events; and enforcing atomicityacross the evaluation of guards and the execution of the corresponding activities. We havebuilt an engine following this approach which uses available technologies to supporttranslating GAT models into executable applications,Enterprise Distributed Object Computing Conference; 2006. EDOC'06. 10th IEEE International,2006,15
Designing closed laboratories for a computer science course,Alan Fekete; Antony Greening,Abstract A recent trend has been to accompany Computer Science courses by" closedlaboratories" where students carried out tasks with supervision and guidance. This paperpresents a methodology for designing a complete sequence of laboratories to support theinstruction in a course. The design considers both the technical concepts to be conveyedand the learning experiences through which students learn. We demonstrate the way themethodology has been used to design the lab sequence for a Pascal-based CS1 course.,ACM SIGCSE Bulletin,1996,15
Automatic undo for cloud management via AI planning,Ingo Weber; Hiroshi Wada; Alan Fekete; Anna Liu; Len Bass,The facility to rollback a collection of changes; ie; reverting to a previous acceptable state; acheckpoint; is widely recognised as valuable support for dependability [3; 5; 10]. This paperconsiders the particular needs of users of cloud computing resources; wishing to managethe resources. Cloud computing provides infrastructure programmatically managed througha fixed set of simple system administration commands. For instance; creating andconfiguring a virtualized Web server on Amazon Web services (AWS) can be done with afew calls to operations that are offered through the AWS management API. This improves theefficiency of system operations; but having simple powerful system operations may increasethe chances of human-induced faults; which play a large role in overall dependability [24;25]. Catastrophic errors; like deleting a disk volume in a production environment; can …,Proceedings Usenix Workshop on Hot Topics in System Dependability,2012,14
Delivering Promises for Web Services Applications,Julian Jang; Alan Fekete; Paul Greenfield,Among the problems facing designers of complex multi-participant Web services-basedapplications is dealing with the consequences of the lack of suitable isolation mechanisms.This deficiency means that concurrent applications can interfere with each other; resulting inrace conditions and lost updates. This paper considers a proposed solution to this problembased on'promises' and shows that this model can be implemented in practice. We considerimplementation issues that need to be handled in promise-based systems and discuss aproof of concept prototype that supports promise-based isolation without requiring changesto existing applications and resources.,Web Services; 2007. ICWS 2007. IEEE International Conference on,2007,14
Towards a framework for capturing transactional requirements of real workflows,Dean Kuo; Alan Fekete; Paul Greenfield; Julian Jang,Abstract One fundamental issue that has yet to be adequately addressed in loosely coupledistributed systems is long duration transactions—maintaining integrity of the system in thepresense of both failures and concurrent activities for processes that last from seconds toyears. This issue is of particular importance to both business to business integration (B2Bi)and enterprise application integration (EAI) applications such as e-procurement. Numeroustransaction models have been proposed in the past to address this issue. They includetransactions with ACID (Atomicity; Consistency; Isolation and Durability) properties designedfor short duration transactions—milli-seconds in duration—compensation transactions andother advanced/extended transaction models. For varying reasons such as performances;expressiveness and appropriateness; existing transaction models do not meet general …,Second International Workshop on Cooperative Internet Computing (CIC 2002,2002,14
Hierarchical network routing,P Lauder; RJ Kummerfeld; A Fekete,A disadvantage of Link State routing schemes is that exact shortest path calculations requirea complete topology; which can overload the capacity of small nodes in a large network.Area routing schemes (when destination names are structured corresponding to the networktopology) allow nodes to reduce the size of routing tables; by recording only one entry for anentire region rather than one for each node in the region. A description is presented of ageneral hierarchical routing scheme that allows all nodes to participate in a distributedrouting network; using close to optimal paths; with short routing tables; and a reduction oftopology information for minor nodes.,Communications Software; 1991;'Communications for Distributed Applications and Systems'; Proceedings of TRICOMM'91.; IEEE Conference on,1991,14
The need for headers: An impossibility result for communication over unreliable channels,Alan Fekete; Nancy Lynch,Abstract It is proved that any protocol that constructs a reliable data link service using anunreliable physical channel service necessarily includes in the packets some headerinformation that enables the protocol to treat different packets differently. The physicalchannel considered is permitted to lose; but not reorder or duplicate packets. The formalframework used for the proof is the I/O automaton model.,International Conference on Concurrency Theory,1990,14
Four-Fold Auto-Scaling on a Contemporary Deployment Platform Using Docker Containers,Philipp Hoenisch; Ingo Weber; Stefan Schulte; Liming Zhu; Alan Fekete,Abstract With the advent of Docker; it becomes popular to bundle Web applications (apps)and their libraries into lightweight linux containers and offer them to a wide public bydeploying them in the cloud. Compared to previous approaches; like deploying apps incloud-provided virtual machines (VMs); the use of containers allows faster start-up and lessoverhead. However; having containers inside VMs makes the decision about elastic scalingmore flexible but also more complex. In this contemporary approach to service provisioning;four dimensions of scaling have to be considered: VMs and containers can be adjustedhorizontally (changes in the number of instances) and vertically (changes in thecomputational resources available to instances). In this paper; we address this four-fold auto-scaling by formulating the scaling decision as a multi-objective optimization problem. We …,International Conference on Service-Oriented Computing,2015,13
Adaptive multiple-workflow scheduling with task rearrangement,Wei Chen; Young Choon Lee; Alan Fekete; Albert Y Zomaya,Abstract Large-scale distributed computing systems like grids and more recently clouds area platform of choice for many resource-intensive applications. Workflow applications accountfor the majority of these applications; particularly in science and engineering. A workflowapplication consists of multiple precedence-constrained tasks with data dependencies.Since resources in those systems are shared by many users and applications deployedthere are very diverse; scheduling is complicated. Often; the actual execution of applicationsdiffers from the original schedule following delays such as those caused by resourcecontention and other issues in performance prediction. These delays have further impactwhen running multiple workflow applications due to inter-task dependencies. In this paper;we investigate the problem of scheduling multiple workflow applications concurrently …,The Journal of Supercomputing,2015,13
Application-Managed Database Replication on Virtualized Cloud Environments,Liang Zhao; Sherif Sakr; Alan Fekete; Hiroshi Wada; Anna Liu,One among several patterns that are common for applications being deployed in cloudplatforms is to take an existing application designed for a conventional data center; and thenport it to the cloud with minimal changes. When this is done; the application tier can easilytake advantage of the elasticity and scale provided by the cloud; but the data managementlayer; being stateful; faces more issues. In this paper; we explore experimentally the limits toscaling for an application that itself manages database replicas each placed in a virtualmachine in the cloud (exactly following the design used when the application would bedeployed on an in-house cluster). We characterize important limits in the load on the mastercopy; the workload imposed on each slave copy when processing updates from the master;and also from the increasing staleness of replicas.,Data Engineering Workshops (ICDEW); 2012 IEEE 28th International Conference on,2012,13
Relaxed currency constraints,*,The subject invention pertains to transaction processing systems and methodologies thatallows update transactions to read stale data copies and update a data store therewith. Eachtransactional operation; including a read; can carry or be associated with one or morefreshness constraints or tests that specify how fresh a data copy must be in order to be read.More specifically; the subject invention provides systems and methods that extendtransactions and serializability to account for out-of-date reads that are justified by freshnessrequirements.,*,2010,13
An active network bandwidth reservation scheme,Darren Williams; Chi Nguyen; Alan Fekete; Michael Hitchens; Bob Kummerfeld,This paper describes a novel scheme for ensuring quality of service in a dynamicallyextensible active network. Applications can reserve bandwidth on each link; and the nodeprovides the guaranteed amount by manipulating weights in a fair-sharing scheme. Thereservations are represented as objects in the soft state at each node of the network. Wedemonstrate the versatility of this scheme by showing how to design an active protocol thatseeks to reserve end-to-end bandwidth even when no single path can provide enough for itsneeds.,Open Architectures and Network Programming Proceedings; 1999. OPENARCH'99. 1999 IEEE Second Conference on,1999,13
Supporting Undoability in Systems Operations,Ingo Weber; Hiroshi Wada; Alan Fekete; Anna Liu; Len Bass,Abstract When managing cloud resources; many administrators operate without a safety net.For instance; inadvertently deleting a virtual disk results in the complete loss of thecontained data. The facility to undo a collection of changes; reverting to a previousacceptable state; is widely recognized as valuable support for dependability. In this paper;we consider the particular needs of the system administrators managing API-controlledresources; such as cloud resources on the IaaS level. In particular; we propose an approachwhich is based on an abstract model of the effects of each available operation. Using thismodel; we check to which degree each operation is undoable. A positive outcome of thischeck means a formal guarantee that any sequence of calls to such operations can beundone. A negative outcome contains information on the properties preventing …,27th Large Installation System Administration Conference,2013,11
Serializable executions with snapshot isolation: Modifying application code or mixing isolation levels?,Mohammad Alomari; Michael Cahill; Alan Fekete; Uwe Röhm,Abstract Snapshot Isolation concurrency control (SI) allows substantial performance gainscompared to holding commit-duration readlocks; while still avoiding many anomalies suchas lost updates or inconsistent reads. However; for some sets of application programs; SIcan result in non-serializable execution; in which database integrity constraints can beviolated. The literature reports two different approaches to ensuring all executions areserializable while still using SI for concurrency control. In one approach; the applicationprograms are modified (without changing their stand-alone semantics) by introducing extraconflicts. In the other approach; the application programs are not changed; but a smallsubset of them must be run using standard two-phase locking rather than SI. We comparethe performance impact of these two approaches. Our conclusion is that the convenience …,International Conference on Database Systems for Advanced Applications,2008,10
An empirical study of commutativity in application code,Paul Wu; Alan Fekete,A typical object database manages concurrency control by instance locking; based on theidentification of instance operations as" read" or" write". An alternative theory shows thatadditional concurrency can be obtained based on operation commutativity. Undercommutativity theory; activities can be allowed concurrently as long as they commute; that is;the effect is the same in either order. In this paper; we study an extensive commercialapplication from a telecommunications domain; and determine how much concurrency isactually present for commutativity theory to use. Our study extends to identify not only theoperations that commute; but the reasons for their commutativity as well. We separated thecommutative operations into three categories: those that commute because both are readoperations; those that commute because different fields are accessed; and those that …,Database Engineering and Applications Symposium; 2003. Proceedings. Seventh International,2003,10
Dynamic network service installation in an active network,Amila Fernando; Darren Williams; Alan Fekete; Bob Kummerfeld,Abstract The ability to quickly deploy new protocols; and provide flexibility to bothapplications and network administrators has been an oft-cited reason for active networks tobe seriously examined. This paper describes an architecture and implementation thatprovides dynamic installation of network services and flexibility to active code. An exampleof weighted fair queuing being installed dynamically into a running network is examined.,Computer Networks,2001,10
PLANET: making progress with commit processing in unpredictable environments,Gene Pang; Tim Kraska; Michael J Franklin; Alan Fekete,Abstract Latency unpredictability in a database system can come from many factors; such asload spikes in the workload; inter-query interactions from consolidation; or communicationcosts in cloud computing or geo-replication. High variance and high latency environmentsmake developing interactive applications difficult; because transactions may take too long tocomplete; or fail unexpectedly. We propose Predictive Latency-Aware NEtworkedTransactions (PLANET); a new transaction programming model and underlying systemsupport to address this issue. The model exposes the internal progress of the transaction;provides opportunities for application callbacks; and incorporates commit likelihoodprediction to enable good user experience even in the presence of significant transactiondelays. The mechanisms underlying PLANET can be used for admission control; thus …,Proceedings of the 2014 ACM SIGMOD international conference on Management of data,2014,9
The Efficacy of Commutativity-Based Semantic Locking in a Real-World Application,Paul Wu; Alan Fekete; Uwe Rohm,While the dominant approach to persistent storage in practice is to use a relational DBMS;there are some specialist applications that rely on object stores. The performance of theseapplications depends on the efficiency of the object store's concurrency control mechanism.Today's predominant concurrency control mechanism is strict two-phase object locking. Inthe 1980s; an interesting alternative was developed: commutativity-based semantic locking.In theory; it can outperform traditional locking schemes in certain scenarios with appropriatecommutativity potential. In this paper; we study the real-world performance of differentlocking strategies in a particular industrial application from the telecommunications sector.We compare object-based locking and commutativity-based semantic locking. We foundthat; in this application; semantic locking performs equally to; but no better than; object …,Knowledge and Data Engineering; IEEE Transactions on,2008,9
Preparation for research: instruction in interpreting and evaluating research,Alan Fekete,Abstract Traditional curricula have concentrated on teaching students the content of asubject; however; it has recently become apparent that effective education needs to includeexplicit instruction in many of the auxiliary skills and attitudes needed for the content to beuseful. This applies just as much at advanced levels as at introductory ones; though theimpact on teaching practice is not yet widespread. This paper describes an innovativemodule taught to students who are about to commence research; in which these studentsare given explicit guidance on how to judge the work of others (or their own work). Themodule is provided to undergraduates intending to perform an" Honours" research project intheir final year; however; the material would also be relevant to students in a graduateprogram or senior seminar.,ACM SIGCSE Bulletin,1996,9
The Serial Safety Net: Efficient Concurrency Control on Modern Hardware,Tianzheng Wang; Ryan Johnson; Alan Fekete; Ippokratis Pandis,Abstract Concurrency control (CC) algorithms must trade off strictness for performance; withserializable schemes generally paying high cost---both in runtime overhead such ascontention on lock tables; and in wasted efforts by aborting transactions---to preventanomalies. We propose the serial safety net (SSN); a serializability-enforcing certifier formodern hardware with substantial core count and large main memory. SSN can be appliedwith minimal overhead on top of various CC schemes that offer higher performance butadmit anomalies; eg; snapshot isolation and read committed.,Proceedings of the 11th International Workshop on Data Management on New Hardware,2015,8
Curracurrong: a stream programming environment for wireless sensor networks,Vasvi Kakkad; Saeed Attar; Andrew E Santosa; Alan Fekete; Bernhard Scholz,SUMMARY The technological advances in wireless sensor network (WSN) enable thedevelopment of complex applications including health monitoring; environmental sampling;and disaster area monitoring. WSN applications deploy battery-powered sensors at remotelocations for long periods. The development of energy-efficient and complex WSNapplications therefore requires in-depth embedded systems programming skills that arenormally not found in domain experts. So that this challenge can be overcome; programmingenvironments for WSN need to offer a high degree of productivity; flexibility; and efficiency atthe same time. In this work; we present Curracurrong; a development environment for WSNsthat is based on expressing queries with stream programming. A query is represented as astream graph consisting of stream operators and communication channels. Curracurrong …,Software: Practice and Experience,2014,8
The atomic manifesto: a story in four quarks,Cliff Jones; David Lomet; Alexander Romanovsky; Gerhard Weikum; Alan Fekete; Marie-Claude Gaudel; Henry F Korth; Rogério De Lemos; Eliot Moss; Ravi Rajwar; Krithi Ramamritham; Brian Randell; Luis Rodrigues,Abstract This paper is based on a five-day workshop on" Atomicity in System Design andExecution" that took place in Schloss Dagstuhl in Germany [5] in April 2004 and wasattended by 32 people from different scientific communities. The participants includedresearchers from the four areas of• database and transaction processing systems;• faulttolerance and dependable systems;• formal methods for system design and correctnessreasoning; and• to a smaller extent; hardware architecture and programming languages.,ACM SIGMOD Record,2005,8
Providing view synchrony for group communication services,N Lesley; A Fekete,Abstract. Building applications in a distributed computing environment is a complex processinvolving reasoning about message ordering; system failures; link failures etc. Groupcommunication services attempt to make this task easier by providing building blocks to beused in assembling such systems and by defining properties that are guaranteed by theseservices. One such property is VS (view synchrony) which imposes restrictions on whenmessages can be delivered; guaranteeing that processors who share the same view of thedistributed environment receive either the same set of messages or prefixes of the setreceived by one processor. This paper provides a precise description of an algorithm (basedon ideas of Cristian and Schmuck) and a proof that this algorithm provides VS. Thecontributions of this paper are to show that VS is implementable and to provide an actual …,Acta informatica,2003,8
Just what could possibly go wrong in B2B integration?,Dean Kuo; Alan Fekete; Paul Greenfield; Julian Jang; Doug Palmer,One important trend in enterprise-scale IT has been the increasing use of business-businessintegration (B2Bi) technologies to automate business processes that cross organizationalboundaries; such as the interactions between partner companies along a supply chain. It isrelatively easy to describe a pattern of interaction; or choreography; in the case whereeverything proceeds smoothly. However; the abnormal cases; such as where a process failsor a message is lost; are much more complicated; and risk introducing data and processinconsistencies into computer-based systems. Current B2Bi technologies do not supply aninfrastructure that can provide reliability without considerable sophistication from thearchitects and developers. As a first step towards guiding architects to the design of B2Bisystems that maintain consistency despite failures; this paper describes a variety of types …,Workshop on Architectures for Complex Application Integration (WACAI2003). Published in Computer Software and Applications Conference; 2003. COMPSAC 2003. Proceedings. 27th Annual International,2003,7
What are the consistency requirements for B2B systems?,Paul Greenfield; Alan Fekete; Julian Jang; Dean Kuo,One important trend in enterprise-scale IT has been the increasing use of business-to-business integration (B2Bi) technologies to automate business processes that crossorganisational boundaries. Tools such as BizTalk Server [1] and WebSphere MQ Workflow[4]; and standards such as WSCI [3] and BPEL4WS [2]; make it fairly easy to design andconstruct this kind of integrated system. Current technology does not; however; make it easyto design reliable applications: ones that can deal with events that cause deviations fromnormal processing paths; such as failures and concurrent activities; while still maintainingoverall; cross-organisational consistency. The industry has accepted a de facto standardapproach to the problems of failure and consistency by offering a common collection ofprimitives based on ACID transactions for small steps and on application-provided fault …,Proceedings of the High Performance Transaction Systems Workshop,2003,7
Using counter-examples in the data structures course,Alan Fekete,Abstract In many computer science courses; students face a sequence of activities that isquite monotonous in style: most assignments and labs ask the student to write a programthat does something; to follow a procedure; or else to prove something. We advocate varyingthe pattern by including different types of activity which bring students to reflect on their ideasand especially to confront directly common misconceptions. We use the traditional" datastructures" subject as the domain in which to present this approach to teaching. We givedetailed accounts of several activities that include debugging wrong code and explainingthe misconception in an argument.,Proceedings of the fifth Australasian conference on Computing education-Volume 20,2003,7
Design of a major in software development,Alan Fekete; Bob Kummerfeld,Abstract This paper presents a curriculum consisting of a collection of subjects to preparestudents for a career in" software development" while remaining within the scope normal fora major in a broad liberal arts degree. We describe the principles behind the construction ofthe curriculum; and contrast it with the more extensive" Software Engineering Body ofKnowledge" appropriate in a professional Engineering degree.,ACM SIGCSE Bulletin,2002,7
What do exam results really measure?,Kathryn Crawford; Alan Fekete,Abstract Students are evaluated using examinations; but how do we evaluate whether theexamination is correctly measuring the students' knowledge or skill? This paper presents amethodology which we have used in an experiment: students' exam results were analysedto reveal which different cognitive skills were used in answering different questions. Theanalysis revealed that students were approaching several questions in ways that theinstructor had not anticipated. Sometimes questions the instructor consideredstraightforward actually tested students' conceptual understanding; on other questions whichwere intended to require problem-solving; many students never identified the conceptsinvolved; so that grades measured primarily the ability to avoid distraction. In other cases;we demonstrated that questions did assess deep understanding of the fundamental …,Proceedings of the 2nd Australasian conference on Computer science education,1997,7
Rollup: Non-Disruptive Rolling Upgrade with Fast Consensus-Based Dynamic Reconfigurations,Vincent Gramoli; Len Bass; Alan Fekete; Daniel Sun,Rolling upgrade consists of upgrading progressively the servers of a distributed system toreduce service downtime. Upgrading a subset of servers requires a well-engineered clustermembership protocol to maintain; in the meantime; the availability of the system state.Existing cluster membership reconfigurations; like CoreOS etcd; rely on a primary not onlyfor reconfiguration but also for storing information. At any moment; there can be at most oneprimary; whose replacement induces disruption. We propose Rollup; a non-disruptive rollingupgrade protocol with a fast consensus-based reconfiguration. Rollup relies on a candidateleader only for the reconfiguration and scalable biquorums for service requests. WhileRollup implements a non-disruptive cluster membership protocol; it does not offer a full-fledged coordination service. We analyzed Rollup theoretically and experimentally on an …,IEEE Transactions on Parallel and Distributed Systems,2016,6
REST+ T: Scalable Transactions over HTTP,Akon Dey; Alan Fekete; Uwe Röhm,Restful APIs are widely adopted in designing components that are combined to form webinformation systems. The use of REST is growing with the inclusion of smart devices and theInternet of Things; within the scope of web information systems; along with large-scaledistributed NoSQL data stores and other web-based and cloud-hosted services. There is animportant subclass of web information systems and distributed applications which wouldbenefit from stronger transactional support; as typically found in traditional enterprisesystems. In this paper; we propose REST+ T (REST with Transactions); a transactionalRestful data access protocol and API that extends HTTP to provide multi-item transactionalaccess to data and state information across heterogeneous systems. We describe a casestudy called Tora; where we provide access through REST+ T to an existing key-value …,Cloud Engineering (IC2E); 2015 IEEE International Conference on,2015,6
Logarithmic data structures for multicores,Ian Dick; Alan Fekete; Vincent Gramoli,*,*,2014,6
Scalable serializable snapshot isolation for multicore systems,Hyuck Han; Seongjae Park; Hyungsoo Jung; Alan Fekete; Uwe Rohm; Heon Y Yeom,Since 1990's; Snapshot Isolation (SI) has been widely studied; and it was successfullydeployed in commercial and open-source database engines. Berenson et al. showed thatdata consistency can be violated under SI. Recently; a new class of Serializable SIalgorithms (SSI) has been proposed to achieve serializable execution while still allowingconcurrency between reads and updates.,2014 IEEE 30th International Conference on Data Engineering (ICDE),2014,6
Performance of serializable snapshot isolation on multicore servers,Hyungsoo Jung; Hyuck Han; Alan Fekete; Uwe Röhm; Heon Y Yeom,Abstract Snapshot isolation (SI) is a widely studied concurrency control approach; with greatimpact in practice within platforms such as Oracle or SQL Server. Berenson et al. showedthough that SI does not guarantee serializable execution; in certain situations; dataconsistency can be violated through concurrency between correct applications. Recently;variants of SI have been proposed; that keep the key properties such as (often) allowingconcurrency between reads and updates; and that also guarantee that every execution willbe serializable. We have had the opportunity to use three implementations of two differentalgorithms of this type; all based on the InnoDB open source infrastructure. We measure theperformance attained by these implementations; on high-end hardware with a substantialnumber of cores. We explore the impact of the differences in algorithm; and also of the …,International Conference on Database Systems for Advanced Applications,2013,6
Exploiting deadline flexibility in Grid workflow rescheduling,Wei Chen; Alan Fekete; Young Choon Lee,We propose a novel deadline-based strategy in scheduling and rescheduling workflowapplications on a heterogeneous Grid system. Instead of minimizing the makespan of a jobby a greedy algorithm; our approach schedules tasks so that the overall job meets itsdeadline. The key innovation is how we allow some tasks to be rescheduled; in light of laterjob requests; to a different time slot or another resource instance; this can leave enoughresource availability for more urgent tasks. In our rescheduling; tasks are rearrangedindividually within certain time slot boundaries so that the temporal constraints of eachworkflow are kept without needing to totally reconsider the schedules of other tasks. Aperformance study shows that more jobs can be finished before their deadlines and theoverall resource utilization is improved. The rescheduling algorithm is efficient and …,Grid Computing (GRID); 2010 11th IEEE/ACM International Conference on,2010,6
Teaching about threading: where and what?,Alan D Fekete,Abstract Trends in hardware and software are increasing the importance of concurrentprogramming; in the skill set expected of graduates. The curriculum is fairly full already; soteachers face complicated trade-offs in deciding how to incorporate additional materialrelated to concurrency. In this paper we discuss some of the different ways to cover threadprogramming; we also survey the literature on this topic from the Computing Educationcommunity.,ACM SIGACT News,2009,6
Approximate agreement with mixed mode faults: Algorithm and lower bound,Richard Plunkett; Alan Fekete,Abstract Approximate agreement is a building block for fault-tolerant distributed systems. It isa formalisation for the basic operation of choosing a single real value (representing sayspeed) for use in later computation; reflecting the different approximations to this valuereported from a number of possibly-faulty processors or sensors. We study the approximateagreement problem in distributed systems where processor failures are characteriseddepending on their severity. We develope a new algorithm that can tolerate up to bbyzantine faults; s symmetric ones; and o send-omission faults. We analyse theconvergence attained by this algorithm; and also give a universal bound on theconvergence available to any algorithm no matter how complicated.,International Symposium on Distributed Computing,1998,6
Multi-granularity locking for nested transactions,John Lee; Alan Fekete,Abstract The choice of granularity for locking items in a database involves performance trade-offs. In order to provide a choice between different locking granularities within a singlesystem; the two-phase locking algorithm needs to be modified to include intention locks. Thispaper extends the well-known multigranularity locking algorithm of Gray et al. to deal withnested transactions; and verifies the correctness of the extended algorithm; using apossibilities mapping to abstract commutativity-based locking.,Acta informatica,1996,6
Enhancing generic skills in the computer organization course,Alan Fekete,Abstract Universities have always claimed that as well as educating students in particularcontent; they have “developed the students' minds”. A current trend is asking instructors tojustify this claim; by ensuring that students have “generic skills” that are useful in all fields.Examples include communication skills; flexibility to apply their understanding to newsituations as they arise; problem-solving skills; ability to transfer concepts between domains;and capacity to evaluate alternatives and provide reasoned explanations for their choices.This paper describes a course which covers most of the material from a typical computerorganization or systems programming course; but uses closed laboratories in ways thatenhance the students' generic skills as well as their expertise in the technical material.,ACM SIGCSE Bulletin,1995,6
Metadata-as-a-Service,Akon Dey; Gajanan Chinchwadkar; Alan Fekete; Krishna Ramachandran,We present a vision of a technology and domain agnostic service that will store metadatathat describes properties of the diverse data sets in an enterprise (or across severalenterprises); and spread among heterogenous stores; such as relational databases; datawarehouses; NoSQL or NewSQL cloud storage platforms; etc. The Metadata-as-a-Servicewill allow search over the metadata; so users and applications can find useful data sets;whether those are raw data or derived data. We make a preliminary proposal for the high-level architecture and API of such a service.,Data Engineering Workshops (ICDEW); 2015 31st IEEE International Conference on,2015,5
Snapshot Isolation,Alan Fekete,The values in the relations of a relational database are elements of one or more underlyingsets called domains. In practical applications; a domain may be infinite; eg; the set of naturalnumbers. In this case; the value of a relational calculus query when applied to such adatabase may be infinite; eg;{njn! 10}. A query Q is called finite if the value of Q whenapplied to any database is finite. Even when the database domains are finite; all that isnormally known about them is that they are some finite superset of the values that occur inthe database. In this case; the value of a relational calculus query may depend on such anunknown domain; eg;{xj 8yR (x; y)}. A query Q is called domain independent if the value of Qwhen applied to any database is the same for any two domains containing the databasevalues or; equivalently; if the value of Q when applied to a database contains only values …,*,2009,5
Teaching students to develop thread-safe java classes,Alan D Fekete,Abstract Concurrent programming was once the preserve of experts writing systemsinternals; but recently the growing importance of application servers; and the excellentsupport in Java and C# for thread handling; has brought threads and locking as topics thatevery software developer might experience; and therefore every computer science graduateought to know. In this paper we report on several years of experience teaching this materialin the early years of the curriculum. We focus on one aspect of multi-threaded code; namelyhow to write sensible thread-safe classes. We identify the learning outcomes we aim todeliver; and we discuss the main pedagogic difficulties students find. We present someexamples that can help students avoid common erroneous views.,ACM SIGCSE Bulletin,2008,5
Transactions in loosely coupled distributed systems,Alan Fekete; Paul Greenfield; Dean Kuo; Julian Jang,Abstract An exciting trend in enterprise computing lies in the integration of applicationsacross an organisation and even between organisations. This allows the provision ofservices by automated business processes that coordinate activity among severalcollaborating companies. The best successes in this type of distributed system come throughuse of Web Services technologies; which allow interoperation between applications andworkflows; through open standards based on XML and SOAP. In this talk we discuss someunresolved issues which confront a designer who wants to ensure the consistency of dataacross several collaborating workflows or applications.,Proceedings of the 14th Australasian database conference-Volume 17,2003,5
Expressiveness of Workflow Description Languages.,Julian Jang; Alan Fekete; Paul Greenfield; Dean Kuo,Abstract—This paper defines and classifies a set of expressive properties that we considerto be important for adequately specifying the behaviour of one of the parties in acollaborative procurement process. These properties are derived from an eprocurementcase study and can be regarded as requirements for any workflow language intended forEAI or B2Bi application integration. These required properties can be used to evaluate theexpressive power of any workflow language that is used to model business processes. Weevaluate the recent BPEL4WS proposal as an example and find that while BPEL4WS canexpress many of the required properties quite naturally; there are others that are difficult orawkward to express in BPEL4WS.,ICWS,2003,5
Optimal approximate agreement with omission faults,Richard Plunkett; Alan Fekete,Abstract Approximate agreement is a building block for fault-tolerant distributed systems. It isa formalisation for the basic operation of choosing a single real value (representing sayspeed) for use in later computation; refleecting the different approximations to this valuereported from a number of possibly-faulty processors or sensors. We develope a newalgorithm that can tolerate up to o send-omission faults. We analyse the convergenceattained by this algorithm; and also give a matching universal bound on the convergenceavailable to any algorithm no matter how complicated.,International Symposium on Algorithms and Computation,1998,5
Hybrid atomicity for nested transactions,Alan Fekete; Nancy Lynch; William E Weihl,Abstract This paper defines the notion of hybrid atomicity for nested transaction systems; andpresents and verifies an algorithm providing this property. Hybrid atomicity is a modularproperty; it allows the correctness of a system to be deduced from the fact that each object isimplemented to have the property. It allows more concurrency than dynamic atomicity; byassigning timestamps to transactions at commit. The Avalon system provides exactly thisfacility.,*,1992,5
A skip list for multicore,Ian Dick; Alan Fekete; Vincent Gramoli,Summary In this paper; we introduce the Rotating skip list; the fastest concurrent skip list todate. Existing concurrent data structures experience limited scalability with the growing corecount for two main reasons: threads contend while accessing the same shared data; andthey require off-chip communication to synchronize. Our solution combines the rotation of atree to maintain logarithmic complexity deterministically; a skip list structure to avoid the treeroot bottleneck; and no locks to limit cache line bouncing. This combination requires us totrade usual skip list towers for wheels; a novel algorithmic design that favors spatial localityand allows for a constant-time restructuring operation. We evaluate the performance of ourskip list on AMD Opteron and Intel Xeon multicores; show that its rotations guarantee itsbalance and compare its performance against seven state-of-the-art skip lists and trees …,Concurrency and Computation: Practice and Experience,2017,4
Multi-objective Optimisation of Rolling Upgrade Allowing for Failures in Clouds,Daniel Sun; Daniel Guimarans; Alan Fekete; Vincent Gramoli; Liming Zhu,Rolling upgrade is a practical industry technique for online updating of software indistributed systems. This paper focuses on rolling upgrade of software versions in virtualmachine instances on cloud computing platforms; when various failures may occur. Anoperator can choose the number of instances that are updated in one round and systemenvironments to minimise completion time; availability degradation; and monetary cost forentire rolling upgrade; and hence this is a multi-objective optimisation problem. To predictcompletion time in the presence of failures; we offer a stochastic model that represents thedynamics of rolling upgrade. To reduce the computational effort of decision making for largescale complex systems; we propose a technique that can find a Pareto set quickly via anupper bound of the expected completion time. Then an optimum of the original problem …,Reliable Distributed Systems (SRDS); 2015 IEEE 34th Symposium on,2015,4
Scalable distributed transactions across heterogeneous stores,Akon Dey; Alan Fekete; Uwe Röhm,Typical cloud computing systems provide highly scalable and fault-tolerant data stores thatmay sacrifice other features like general multi-item transaction support. Recently techniquesto implement multi-item transactions in these types of systems have focused on transactionsacross homogeneous data stores. Since applications access data in heterogeneous storagesystems for legacy or interoperability reasons; we propose an approach that enables multi-item transactions with snapshot isolation across multiple heterogeneous data stores usingonly a minimal set of commonly implemented features such as single item consistency;conditional updates; and the ability to store additional meta-data. We define an client-coordinated transaction commitment protocol that does not rely on a central coordinatinginfrastructure. The application can take advantage of the scalability and fault-tolerance …,2015 IEEE 31st International Conference on Data Engineering,2015,4
Curracurrong cloud: Stream processing in the cloud,Vasvi Kakkad; Akon Dey; Alan Fekete; Bernhard Scholz,The dominant model for computing with large-scale data in cloud environments has beenfounded on batch processing including the Map-Reduce model. Important use-cases suchas monitoring and alerting in the cloud require instead the incremental and continualhandling of new data. Thus recent systems such as Storm; Samza and S4 have adoptedideas from stream processing to the cloud environment. We describe a novel system;Curracurrong Cloud; that; for the first time; allows the computation and data origins to sharea cloud-hosted cluster; offers a lightweight algebraic-style description of the processingpipeline; and supports automated placement of computation among compute resources.,Data Engineering Workshops (ICDEW); 2014 IEEE 30th International Conference on,2014,4
Comparing Readability of Graphical and Sentential Process Design Notations: Data Analysis Report,Avner Ottensooser; Alan David Fekete,*,*,2010,4
Consistency for Service-Oriented Systems,D Kuo; A Fekete; P Greenfield; S Nepal,Kuo; D.; Fekete; A.; Greenfield; P.; Nepal; S … Kuo; D.; Fekete; A.; Greenfield; P.; Nepal; S …Kuo; D.; Fekete; A.; Greenfield; P.; Nepal; S. Consistency for service-oriented systems. CSIROICT Centre; 2005. procite:7de7cb33-f335-41e4-8cb9-1f894e108821.,*,2005,4
Teaching data structures with multiple collection class libraries,Alan Fekete,Abstract In recent years; the teaching of data structures has been revolutionised by object-oriented languages; especially Java; in which the concept of each Abstract Data Type ismade explicit as an Interface. The existing texts; though; each use a single set of classes:sometimes a standard library such as Sun's SDK; but in other cases these form a libraryunique to the text. In contrast; this paper advocates an approach which seeks to preparestudents for the common situation for software developers; who are asked to regularly adjustto a library they are unfamiliar with. The teaching we describe openly acknowledges theexistence of many libraries. A single concept such as Stack is expressed in subtly differentways in each library; these differences are made explicit for the student. We also showexamples of assessment tasks that can accompany the teaching.,ACM SIGCSE Bulletin,2002,4
A framework for highly available services based on group communication,Alan Fekete; Idit Keidar,We present a framework for building highly available services. The framework uses groupcommunication to coordinate a collection of servers. Our framework is configurable; in thatone can adjust parameters such as the number of servers and the extent to which they aresynchronized. We analyze the scenarios that can lead to the service availability beingtemporarily compromised; and we discuss the tradeoffs that govern the choice ofparameters.,Distributed Computing Systems Workshop; 2001 International Conference on,2001,4
Modular reasoning about open systems: a case study of distributed commit,Ranjan Das; Alan Fekete,We show how to reason about distributed database management systems; in which acommit protocol is used to coordinate activity of several resource managers. This is aninteresting case study of an open system; in which each component is developedindependently to operate with many possible environments. We give specifications for eachresource manager; and a specification for the commit protocol; and show that the wholesystem is correct as long as each component has the properties required of it. We then showhow to prove that specific examples have these properties.,Software Specification and Design; 1993.; Proceedings of the Seventh International Workshop on,1993,4
Reasoning about programs: integrating verification and analysis of algorithms into the introductory programming course,Alan Fekete,Abstract: Therecent development incomputingcurricula (ACM Curriculum91) has proposedthat theory should be a fundamental part of every student's computing education; instead ofbeing segregated into optional courses. In particular; introductory programming courses arenow likely to contain some theory. Most of the available books; however; perpetuate adivision between topics covering verification (such as assertions; pre-and post-conditions;and loop invariants) and topics covering analysis of algorithms(such as asymptotic worst-case complexity). This paper argues that this division is misguided. We propose thatstudents learn to evaluate the correctness and performance of programs like those they arewriting. In order to do this for the typical exercises in a first course (eg array-processing; withuse of subroutines); they must learn more of the theory than is usually presented …,ACM SIGCSE Bulletin,1993,4
Efficiently making (almost) any concurrency control mechanism serializable,Tianzheng Wang; Ryan Johnson; Alan Fekete; Ippokratis Pandis,Abstract Concurrency control (CC) algorithms must trade off strictness for performance. Inparticular; serializable CC schemes generally pay higher cost to prevent anomalies; both inruntime overhead such as the maintenance of lock tables and in efforts wasted by abortingtransactions. We propose the serial safety net (SSN); a serializability-enforcing certifierwhich can be applied on top of various CC schemes that offer higher performance but admitanomalies; such as snapshot isolation and read committed. The underlying CC mechanismretains control of scheduling and transactional accesses; while SSN tracks the resultingdependencies. At commit time; SSN performs a validation test by examining only directdependencies of the committing transaction to determine whether it can commit safely ormust abort to avoid a potential dependency cycle. SSN performs robustly for a variety of …,The VLDB Journal,2017,3
Managing information for personal goals (vision),Alan Fekete; Judy Kay; Michael Franklin; Debjanee Barua; Bob Kummerfeld,I. PERSONAL GOAL SYSTEMS: THE CONTEXT Emerging pervasive and ubiquitous computingtechnologies are creating new ways to help people achieve a diversity of their most importantlong-term goals; and new businesses are arising to exploit these technologies. A user can nowcapture large amounts of relevant personal information with modest effort: a sensor on a wristband can measure heart rate; an application might track from keystrokes how often one is sittingat the computer; and another might ask you after every meal to indicate how many serves of vegetablesyou ate. The recently announced Apple Watch and Microsoft Band show that major vendors arefocused on this trend; with forthcoming products that will collect diverse measurements and communicatethem to applications. Products such as Fitbit Tracker (a step counter); or Withings (internet-enabledbathroom scales); already have many users. This information can be the foundation for …,Data Engineering Workshops (ICDEW); 2015 31st IEEE International Conference on,2015,3
A Polymorphic Model for Event Associated Workload Bursts,Matthew Sladescu; Alan Fekete; Kevin Lee; Anna Liu,How many cloud resources does an application provider require to manage workload burststhat often accompany events of public interest;(like product announcements or sportingevents); and when will these resources be required? The availability and performancequalities of systems from numerous domains have often been compromised by such bursts;highlighting the importance of these questions. Earlier work begins to address theseconcerns by presenting burst models; which are parameterized by a single set of burstfeature types; to describe bursts that can be associated with different event types fromdifferent domains. In this paper we argue that the profile of a burst can differ for differentevent types; and will depend on a variable number of feature types that describe the burst'sassociated event. We contribute a method for creating a workload model that is …,First International Workshop on Resource Management of Cloud Computing (CCRM 2013) (in ICDCS Workshops),2013,3
Weak consistency models for replicated data,Alan Fekete,W3C was founded in 1994 by the inventor of the World Wide Web Tim Berners-Lee as avendor-neutral forum for building consensus around Web technologies. The consortiumconsists of member organization and dedicated staff of technical experts. Membership isopen to any organization or individual whose application is reviewed and approved by theW3C. Usually W3C members invest significant resources into the Web technologies. W3Cfulfils its mission by creation of recommendations enjoying status of international standards.In the first 10 years of existence; it produced over eighty W3C recommendations. W3C isresponsible for such technologies as HTML; XHTML; XML; XML Schema; CSS; SOAP;WSDL and others. W3C members play a leading role in the development of therecommendations. W3C initiatives involve international; national; and regional …,*,2009,3
An enactment-engine based on use-cases,Avner Ottensooser; Alan Fekete,Abstract We show how one can control a workflow enactment engine based on theinformation which is available in written use cases (as produced by requirements elicitation).We give details of how different aspects of the engine can be configured; including theprocess definition; workflow participant profiles; user interface; audit data; etc. Thesetechniques have been carried out in an industrial setting; with considerable success. Ourmethods are applicable to engines for business process management; web serviceorchestration; and traditional workflow.,International Conference on Business Process Management,2007,3
Clustering provenance facilitating provenance exploration through data abstraction,Linus Karsai; Alan Fekete; Judy Kay; Paolo Missier,Abstract As digital objects become increasingly important in people's lives; people may needto understand the provenance; or lineage and history; of an important digital object; tounderstand how it was produced. This is particularly important for objects created from large;multi-source collections of personal data. As the metadata describing provenance;Provenance Data; is commonly represented as a labelled directed acyclic graph; thechallenge is to create effective interfaces onto such graphs so that people can understandthe provenance of key digital objects. This unsolved problem is especially challenging forthe case of novice and intermittent users and complex provenance graphs. We tackle this bycreating an interface based on a clustering approach. This was designed to enable users toview provenance graphs; and to simplify complex graphs by combining several nodes …,Proceedings of the Workshop on Human-In-the-Loop Data Analytics,2016,2
Quantifying Failure Risk of Version Switch for Rolling Upgrade on Clouds,Daniel Sun; Len Bass; Alan Fekete; Vincent Gramoli; An Binh Tran; Sherry Xu; Liming Zhu,Rolling upgrade is an industry technique for online dynamic software update. A rollingupgrade updates a small number of instances in an old version to a new version at a timeand the operation is repeated in a wave rolling until all of the instances have beenupgraded. In many cases; the software needs to avoid interactions between differentversions. One common simple approach is to make instances version aware; and then aversion switch point can be chosen to deactivate the old service and activate the newservice. On a Cloud platform; upgrades can be implemented simply through replacing oldvirtual machine instances with ones in new versions; and during the process of rollingupgrade various failures may present. If an instance fails; a new instance has to be launchedfrom the backup images; which in most software systems are in an old version and cannot …,Big Data and Cloud Computing (BdCloud); 2014 IEEE Fourth International Conference on,2014,2
Scalable Distributed Transactions across Heterogeneous Stores,Akon Dey; Alan Fekete; Uwe Röhm,Abstract Modern cloud computing systems usually provide a highly scalable and fault-tolerant data store that sacrifices other features. Often; these systems may not supporttransactions at all or else restrict transactions to one data item each. Recently techniques tosupport multi-item transactions in these types of systems have been successfully developedbut have focused on transactions across homogeneous data stores. However; applicationsoften need to store different data in different storage systems perhaps for legacy orinteroperability reasons. We propose an approach that enables multi-item transactionsacross multiple heterogeneous data stores using only a minimal set of commonlyimplemented features such as single item consistency; conditional updates; and the ability tostore additional meta-data. We define an client-coordinate transaction commitment …,IEEE 31th International Conference on Data Engineering; Seoul; ICDE,2014,2
Performance of program modification techniques that ensure serializable executions with snapshot isolation DBMS,Mohammad Alomari; Alan Fekete; Uwe Röhm,Abstract Snapshot Isolation (SI) is a multiversion concurrency control that has beenimplemented by several open source and commercial database systems (Oracle; MicrosoftSQL Server; and previous releases of PostgreSQL). The main feature of SI is that a readoperation does not block a write operation and vice versa; which allows higher degree ofconcurrency than traditional two-phase locking. SI prevents many anomalies that appear inother isolation levels; but it still can result in non-serializable executions; in which databaseintegrity constraints can be violated. Several techniques are known to modify the applicationcode based on preanalysis; in order to ensure that every execution is serializable onengines running SI. We introduce a new technique called External Lock Manager (ELM). Inusing a technique; there is a choice to make; of which pairs of transactions need to have …,Information Systems,2014,2
Workflow Patterns Represented in Use-Cases,Avner Ottensooser; Alan Fekete,Abstract. While workflow enactment is often configured through a workflow descriptionlanguage based on graphs or rules; an alternative approach takes written Use-Cases todescribe a workflow. In this paper we give evidence for the expressive richness of thisapproach. We show that written Use-Cases can describe each of the 43 workflow patternsidentified by the Workflow Patterns Initiative.,*,2007,2
A methodology for predicting the performance of component based systems,Yan Liu; Shiping Chen; Ian Gorton; Alan Fekete,*,Poster session of ACM ICSE,2004,2
Verification of a recovery algorithm using WAL,Dean Kuo; Alan Fekete,*,*,1994,2
Proof of a Concurrency Control Algorithm Using a Possibilities Mapping,JK Lee; A Fekete,Proof of a Concurrency Control Algorithm Using a Possibilities Mapping JK Lee and A. FeketeBasser Department of Computer Science; University of Sydney 185 Abstract: This paper exploresconcurrency control in nested transaction systems. An algorithm is presented based on Moss'sread· update locking; and verified by pro- viding a possibilities map to a similar but more abstractalgorithm previously proved correct. 1 Introduction Several systems for distributed programming(for example; Argus [5) and Camelot [7]) are based on the notion of nested transactions; whichallow the programmer to write distributed applications which contain internal concurrency andlocalized recovery from failure without needing to deal explicitly with synchronizing access toshared data or rolling back failed activity. Of course; relieving the application programmer ofthese worries is only possible because the system itself provides the locking and logging …,Proceedings of Australian Database Research Conference (ADC'90),1990,2
R2C: Robust Rolling-Upgrade in Clouds,Daniel Sun; Alan Fekete; Vincent Gramoli; Guoqiang Li; Xiwei Xu; Liming Zhu,Rolling upgrade is a widely-used industry technique for updating software while a service;that is provided by multiple instances of the software; remains available. In clouddeployments of software; it is usual to implement the update step for rolling upgrade byreplacing entire virtual machine instances. During the process of rolling upgrade; variousfailures may occur due to the complexity of software stack and the uncertainties of the cloudplatform. Instance health checking and replacement are standard functionalities in mostcloud infrastructures; though these create uncertainty in the duration of the whole upgradeprocedure. In contrast; software and configuration errors are not usually detected byinfrastructure functionalities; and if these happen; the entire rolling upgrade normally isunsuccessful and the system is left in an unsuitable state. In this paper; we propose an …,IEEE Transactions on Dependable and Secure Computing,2016,1
HILDA 2016 Workshop: A Report,Arnab Nandi; Alan Fekete; Carsten Binnig,Abstract The first annual workshop “Human-in-the-Loop Data Analytics”(HILDA) was held onJune 26; 2016 in association with ACM SIGMOD in San Francisco. The workshop sparkedsome excellent conversations between speakers and attendees from many disciplinesspanning both industry and academia; and covered a variety of sub-themes related tohuman-in-the-loop data challenges.,*,2016,1
GEAP: A Generic Approach to Predicting Workload Bursts for Web Hosted Events,Matthew Sladescu; Alan Fekete; Kevin Lee; Anna Liu,Abstract A number of recent research contributions in workload forecasting aim to confrontthe challenge facing many web applications of maintaining QoS in the face of fluctuatingworkload. Many of these demonstrate good prediction accuracy for periodic and long-termworkload trends; but they exhibit poor accuracy when faced with predicting the magnitude;profile; and time of non-periodic bursts. It is such workload bursts that have been known tobring down numerous e-commerce and other web-based systems during events like onlinesales; as well as product; and result announcements. In this paper; we leverage the implicitlink that often exists between such events and workload bursts; and we contribute: a genericapproach that can make use of a given event's definition to forecast the time; magnitude andprofile of the event's associated workload burst; a burst prediction accuracy metric for …,International Conference on Web Information Systems Engineering,2014,1
Performance of Program Modification Techniques that Ensure Serializable Executions with Snapshot Isolation DBMS,Mohammad Alomari; Alan Fekete; Uwe Röhm,Abstract. Snapshot Isolation (SI) is a multiversion concurrency control that has beenimplemented by several open source and commercial database systems (Oracle;PostgreSQL; Microsoft SQL Server). The main feature of SI is that a read operation does notblock a write operation and vice versa; which allows higher degree of concurrency thantraditional two-phase locking. SI prevents many anomalies that appear in other isolationlevels; but it still can result in non-serializable executions; in which database integrityconstraints can be violated. Several techniques are known to modify the application code inorder to ensure that every execution is serializable on engines running SI. Each modificationtechnique introduces some conflicts; and so prevents certain interleavings; without alteringthe functionality of each application program. In following one of the possible techniques …,*,2011,1
Implementing isolation for service-based applications,Wei Chen; Alan Fekete; Paul Greenfield; Julian Jang,Abstract Loosely-coupled distributed systems can be difficult to design and implementcorrectly; with time-of-check-to-time-of-use flaws arising from the lack of isolation being ofparticular concern. It is not feasible to use traditional distributed ACID transactions to solvesuch problems because the business activities being integrated are typically long-runningand the interacting participants have incomplete mutual trust.'Promises' were recentlyproposed as a solution to this problem. This paper discusses how promise-based isolationcan be implemented when resources are described by predicates over properties; ratherthan being identified explicitly.,OTM Confederated International Conferences" On the Move to Meaningful Internet Systems",2009,1
When serializability comes without cost,Mohammad Alomari; Michael Cahill; Alan Fekete; Uwe Rohm,It is usually expected that performance is reduced by using stricter concurrency control;which reduces the risk of anomalies that can lead to data corruption. For example; the weakisolation level Read Committed allows anomalies that are prevented by Two-Phase Locking(abbreviated 2PL); and because 2PL holds locks for longer than RC; it has lower throughput.We show that sometimes; guaranteed correctness can be obtained along with betterthroughput than RC; by use of the multiversion Snapshot Isolation mechanism along withmodifications to application programs as proposed by Fekete et al. We investigate theconditions under which this effect occurs.,Computer Systems and Applications; 2008. AICCSA 2008. IEEE/ACS International Conference on,2008,1
The New Software Engineering Program at the University of Sydney,David Levy; R Kummerfeld; S Chawla; RA Calvo; A Fekete,The new Software Engineering degree program implemented in 2008 at the University ofSydney has been designed as a collaborative effort between the School of Electrical andInformation Engineering and the School of IT. The design of the new curriculum is based onthe ACS; ACM and IEEE curriculum recommendations and the Software Engineering Bodyof Knowledge (SWEBOK); as well as the results of a detailed industry review. Close attentionwas paid to Computing Curriculum 2001 (CC2001) and to Software Engineering 2004(SE2004). The curriculum design had to meet the above constraints; a 25% reduction inunits of study offered due to falling enrolments; accommodate a flexible first year program;integrate with the programs of both Schools; strongly focus on active and project-basedlearning and on graduate attributes to ensure the new program incorporates the full set of …,19th Annual Conference of the Australasian Association for Engineering Education: To Industry and Beyond; Proceedings of the,2008,1
Teaching transaction management with SQL examples,Alan Fekete,Abstract Transaction management is an important topic in the database course. Thisremains true whether the subject has an application focus or a systems internals focus. Allthe standard textbooks use" toy" examples of transactions; expressed as sequences ofsimple operations such as reading or writing data items. In this paper we argue that theteacher should choose examples which are closer to the students' experiences in othertopics of the course; that is; the transactions should be like programs with SQL statements.We discuss the requirements that must be considered in choosing useful examples; and wegive a set of examples that we have constructed to meet many of these requirements.,ACM SIGCSE Bulletin,2005,1
Abstractions in the Development of Distributed Applications,Alan Fekete; John M Potter,*,IEEE Concurrency,1997,1
Cerberus-a tool for debugging distributed algorithms,Fred Carter; Alan David  Fekete,Abstract Distributed applications are hard to program. They are particularly prone to subtlerace conditions; deadlocks; or similar errors in the underlying distributed algorithm. Thispaper describes a tool which can assist the designer in debugging a distributed algorithmearly in the software lifecycle. The tool takes a high-level abstract description of thealgorithm; and an even more abstract requirements specification; it simulates an executionuntil a discrepancy arises between algorithm and specification; it then assist the developerto explore backwards and forwards through the execution till the error is understood.,Proceedings of the First IFIP TC10 International Workshop on Software Engineering for Parallel and Distributed Systems,1996,1
Hybrid atomicity for nested transactions,Alan Fekete; Nancy Lynch; William E Weihl,Abstract This paper defines the notion of hybrid atomicity for nested transaction systems; andpresents and verifies an algorithm providing this property. Hybrid atomicity is a modularproperty; it allows the correctness of a system to be deduced from the fact that each object isimplemented to have the property. It allows more concurrency than dynamic atomicity; byassigning timestamps to transactions at commit. The Avalon system provides exactly thisfacility. The results in this paper extend earlier work using the same model for locking andtimestamp-based algorithms; providing further evidence for the generality of the approach.However; there are some subtle differences with the definitions used in earlier work;showing the difficulties of developing precise general models for nested transactionsystems.,Theoretical computer science,1995,1
Self-sufficiency and critical thinking in the programming languages course,Bard Bloom; Alan Fekete,Abstract We describe a project in a standard course in Programming Languages. Thisproject forces students to display self-sufficiency and critical thinking skills. The students aregiven the documentation and interpreter for smeagol; a small invented language whichresembles the control language for many text-processors; spreadsheets; and so forth. Theyare expected to learn (within two days) enough to write working non-trivial programs. Theythen must write an evaluation of the language; documentation; and system. In this paper; weexplain many specific features of the project; and discuss its effectiveness.,ACM SIGCSE Bulletin,1994,1
A correctness proof for a network synchronizer,Harish Devarajan; Alan Fekete; Nancy Lynch; Liuba Shrira,Abstract In this paper we offer a formal; rigorous proof of the correctness of Awerbuch'salgorithm for network synchronization [1]. We specify both the algorithm and the correctnesscondition using the I/O automaton model. Our proof of correctness follows Awerbuch'sintuitive arguments closely by exploiting the model's natural support for techniques ofstepwise refinement and modularity. We demonstrate that the model is a powerful tool forreasoning about distributed algorithms.,*,1993,1
BenchFoundry: A Benchmarking Framework for Cloud Storage Services,David Bermbach; Jörn Kuhlenkamp; Akon Dey; Arunmoezhi Ramachandran; Alan Fekete; Stefan Tai,Abstract Understanding quality of services in general; and of cloud storage services inparticular; is often crucial. Previous proposals to benchmark storage services are toorestricted to cover the full variety of NoSQL stores; or else too simplistic to capture propertiesof use by realistic applications; they also typically measure only one facet of the complextradeoffs between different qualities of service. In this paper; we present BenchFoundrywhich is not a benchmark itself but rather is a benchmarking framework that can executearbitrary application-driven benchmark workloads in a distributed deployment whilemeasuring multiple qualities at the same time. BenchFoundry can be used or extended forevery kind of storage service. Specifically; BenchFoundry is the first system where workloadspecifications become mere configuration files instead of code. In our design; we have …,International Conference on Service-Oriented Computing,2017,*
Serializable use of Read Committed isolation level,Mohammad Alomari; Alan Fekete,Several DBMS engines use Read Committed (RC) as a default isolation level; risking theloss of data integrity but allowing more concurrency. We propose ways to preanalyse (andthen modify) the code of a set of applications; that will allow us to run at RC isolation and stillguarantee that all executions are serializable. Our experiments show performance that issignificantly higher than from traditional ways that ensure correctness by directly usingstronger isolation mechanisms (two-phase locking or snapshot isolation) that might beavailable in the engine. The overhead of our approach compared to RC on unmodifiedapplication programs is typically only about 5-10%.,2015 IEEE/ACS 12th International Conference of Computer Systems and Applications (AICCSA),2015,*
Computing end-to-end delays in stream query processing,Vasvi Kakkad; Andrew E Santosa; Alan Fekete; Bernhard Scholz,Abstract Real-time data processing is essential in many stream-based applications includingdisaster area monitoring; health monitoring; and intrusion detection. In this work; we proposean approach that measures time delays in stream query processing. We represent a streamquery as a graph consisting of operators that process data and channels that transport datatokens between operators. Our model establishes a causality relationship betweenconsumed and produced data tokens at each operator and their corresponding occurrencetimes. The total time taken for the computation from the input to the output of a query; ie; end-to-end delay; is computed by the causality relationships and periodic schedules for streamqueries. Experiments are conducted to validate the proposed technique.,Science of Computer Programming,2015,*
Consumer Monitoring of Infrastructure Performance in a Public Cloud,Rabia Chaudry; Adnene Guabtni; Alan Fekete; Len Bass; Anna Liu,Abstract Many web information systems and applications are now run as cloud-hostedsystems. The organization that owns the information system or application is thus aconsumer of cloud services; and often relies on the cloud provider to monitor the virtualinfrastructure and alert them of any disruption of the offered services. For example; AmazonWeb Services' cloud disruptions are announced by the cloud provider on a dedicated RSSfeed so that the consumers can watch and act quickly. In this paper; we report on a long-running experiment for the monitoring and continuous benchmarking of a number of cloudresources on Amazon Cloud from a consumer's perspective; aiming to check whether theservice disruptions announced by the cloud provider are consistent with what we observe.We evaluate the performance of cloud resources over several months. We find that the …,International Conference on Web Information Systems Engineering,2014,*
Supporting Undoability in Systems Operations,Alan Fekete; Len Bass; Anna Liu; Hiroshi Wada; Ingo Weber,*,*,2013,*
Robust Snapshot Replication,Uwe Röhm; Michael J Cahill; Seung Woo Baek; Alan Fekete; Mathew Rodley; Hyungsoo Jung,Abstract An important technique to ensure the scalability and availability of clusteredcomputer systems is data replication. This paper describes a new approach to datareplication management called Robust Snapshot Replication. It combines an updateanywhere approach (so updates can be evaluated on any replica; spreading their load) withlazy update propagation and snapshot isolation concurrency control. The innovation is howwe employ snapshot isolation in the replicas to provide consistency; fail safety; and also toachieve high scalability for both readers and up-daters; by a system design withoutmiddleware or group communication infrastructure. We implemented our approach using thePostgreSQL database system and conducted an extensive experimental evaluation with asmall database cluster of 8 nodes. Our results demonstrate the scalability of our algorithm …,Australasian Database Conference (ADC'13) [published as CRPIT vol 137],2013,*
Strong Consistency Models for Replicated Data,Alan Fekete,The values in the relations of a relational database are elements of one or more underlyingsets called domains. In practical applications; a domain may be infinite; eg; the set of naturalnumbers. In this case; the value of a relational calculus query when applied to such adatabase may be infinite; eg;{njn! 10}. A query Q is called finite if the value of Q whenapplied to any database is finite. Even when the database domains are finite; all that isnormally known about them is that they are some finite superset of the values that occur inthe database. In this case; the value of a relational calculus query may depend on such anunknown domain; eg;{xj 8yR (x; y)}. A query Q is called domain independent if the value of Qwhen applied to any database is the same for any two domains containing the databasevalues or; equivalently; if the value of Q when applied to a database contains only values …,*,2009,*
Replica Freshness,Alan Fekete,Many organizations; eg; government statistical offices and search engine companies; collectpotentially sensitive information regarding individuals either to publish this data for research;or in return for useful services. While some data collection organizations; like the census; arelegally required not to breach the privacy of the individuals; other data collectionorganizations may not be trusted to uphold privacy. Hence; if U denotes the original datacontaining sensitive information about a set of individuals; then an untrusted data collectoror researcher should only have access to an anonymized version of the data; U*; that doesnot disclose the sensitive information about the individuals. A randomized anonymizationalgorithm R is said to be a privacy preserving randomization method if for every table T; andfor every output T*= R (T); the privacy of all the sensitive information of each individual in …,*,2009,*
DELIVERING PROMISES FOR WEB SERVICES APPLICATIONS TECHNICAL REPORT 605,JULIAN JANG; ALAN FEKETE; PAUL GREENFIELD,ABSTRACT One of the many problems facing the designer of complex multi-participant Webservices-based applications is dealing with the consequences of the lack of suitableisolation mechanisms. This deficiency means that concurrent applications can interfere witheach other; resulting in race conditions and lost updates. This paper briefly discusses aproposed solution to this problem based on 'promises' and show that this promises modelcan be implemented in practice. We discuss some of the implementation issues that need tobe resolved in promise-based systems and discuss how we built a proof-of-conceptprototype of a Promise Manager that supported promise-based isolation without requiringchanges to existing applications and resources.,*,2006,*
Towards a Transactional Framework Derived From Real Workflows,D Kuo; A Fekete; P Greenfield; J Jang,Abstract One fundamental issue that has yet to he adequately addressed in loosely coupleddistributed systems is long duration transactions—maintaining integrity of the system in thepresence of both failures and concurrent activities for processes that last from seconds toyears. This issue is of particular importance to both business-to-business integration (B2Bi)and enterprise application integration (EAI) applications such as e-procurement. Numeroustransaction models have been proposed in the past to address this issue. They includetransactions with ACID (Atomicity; Consistency; Isolation and Durability) properties designedfor short duration transactions (lasting milliseconds); compensation transactions and otheradvanced/extended transaction models. For varying reasons such as performances;expressiveness and appropriateness; existing transaction models do not meet general …,Proceedings of The Second International Workshop on Cooperative Internet Computing in KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE,2003,*
An Introduction to Computer Programming with Java,Alan Fekete; Judy Kay; Tony Greening; Joseph Thurbon; Kapila Wimalaratne,This book is an introduction to computer programming using the Java programminglanguage. No prior knowledge of computers or programming is assumed; but the readermust be confident with high school algebra. This book does not claim to completely covereither the Java language or its standard libraries. We have confined the use of the statickeyword to testing classes and enumeration classes; to help students avoid non-object-oriented programming; and we have omitted coverage of Java's features for reflection;packages; multithreading; networking; applets; and graphical user interfaces. Instead; ouremphasis is placed on writing programs of high quality using the best techniques; withextensive coverage of design; collection classes; code cliches; verification; testing; generalsoftware engineering; scalability; ethics; and recursion (including an application to …,*,2002,*
Reconfigurable algorithms in view synchrony,Nicole Lesley; A Fekete,A common approach to designing fault-tolerant distributed systems is to use a view-orientedprocess group communication service as a building block. An application that uses such aservice often operates by a simple algorithm (such as a replicated state machine) for theduration of a view; but whenever the view changes; a complicated calculation is used toreconfigure the system. This reconfiguration typically involves exchange of state andmerging of information from previously partitioned views. In this paper; we show how toautomate the design of the reconfiguration mechanism in certain simple cases; where thereconfiguration treats all previous views symmetrically.,Network Computing and Applications; 2001. NCA 2001. IEEE International Symposium on,2001,*
A General Framework for Highly Available Services,Alan Fekete; Idit Keidar,*,*,2000,*
TECHNICAL REPORT NUMBER 523 DECEMBER 1999,Mike Barg; Alan Fekete; Tony Greening; Owen Hollands; Judy Kay; Jeffrey H Kingston; Kathryn Crawford,Abstract The foundation courses in Computer Science pose particular challenges for teacherand¡ earner alike. This paper describes some of these challenges and how we havedesigned Problem-Based Learning (PBL) courses to address them. We discuss theparticular problems we were keen to overcome: the pure technical focus of many courses;the problems of individual learning and the need to establish foundations in a range of theareas which are important for computer science graduates. We then outline our coursedesign; showing how we have created Problem Based Learning courses.,*,1999,*
Synchronous Executions and View Synchrony,Nicole Lesley; Alan Fekete,*,OPODIS,1999,*
Dynamically Configurable Concurrency Control for a Persistent Store,Michael Flanagan; Alan Fekete; Frans Henskens; John Rosenberg,*,Persistent Object Systems; Principles and Practice. Proceedings of Seventh International Workshop on Persistent Object Systems (POS'96),1996,*
Liveness conditions in model-based service specifications: a case study,Alan Fekete,Abstract Many different formal methods provide mathematical models of reactivesystems(those that interact with an environment to provide a service). There is disagreementon many details; but many methods use the transition system as the fundamentalrepresentation of a single component; there is also broad agreement that one should specifya service as a whole by presenting a single system that reflects the functional requirementsat a high level of abstraction(that is; one gives a global model as specification for a service;even though the actual implementation may be distributed). Many researchers haveconcentrated on capturing the finite behavior of the specification; but for reasoning about awhole application one needs liveness guarantees on each service. Temporal logic is oftensuggested as a language for expressing liveness properties; but some formal methods …,ACM SIGSOFT Software Engineering Notes,1995,*
A testbed for experiments with concurrency control primitives in persistent systems,Michael Flanagan; Alan Fekete; Frans Henskens; John Rosenberg,In current research operating systems; support for objects and the persistence of theseobjects has been recognised as an important consideration. Research systems providesupport for these concepts in the kernel. In these systems a great deal of effort has gone intointegrating persistence and object structures with the other low level functions of theoperating system. The low level nature of the support ensures that these concepts are inevery respect a seamless part of the operating system which interacts sensibly with othercomponents of the system. There has been a tendency in such systems to ignore the issuesof concurrency control and resilience; with the attitude that these concepts are wellunderstood by the database community; and as such; can be easily added on top of thesystem at a later date. A research project is described which aims to investigate the …,Object Orientation in Operating Systems; 1993.; Proceedings of the Third International Workshop on,1993,*
Recent Advances in Transaction Management.,Alan Fekete,Any database provides a variety of operations that users can perform on the storedinformation. For example; an SQL system provides queries that can update one relation; orretrieve information from several relations. Similarly; an objectbase may provide the ability toinvoke one method of one object specified by OID. For many applications; this repertoire ofprovided operations is insufficient; and therefore almost all systems allow users to embeddatabase operations in a more powerful programming language. Using the controlstructures of the programming language; one can write an application that updates severalrelations; or perhaps invokes a method only if some other method returns a particular result.An execution of an application thus involves the performance of a sequence of operationseach provided by the database. It is well-known that unexpected results can be produced …,Australian Database Conference,1993,*
Teaching Exceptionally Able Students in a Mass CS1 Course,Alan Fekete; Judy Kay; Jeffrey H Kingston,*,*,1992,*
Topics in distributed algorithms (PhD thesis),Alan David Fekete,Abstract This thesis consists of three chapters; each of which studies a topic in the theory ofdistributed systems. The first chapter studies the problem of Approximate Agreement. This isa generalization of Byzantine Agreement; where processors are only required to obtainvalues that are close together; rather than identical. We offer new multi-round algorithms inseveral different models of computation; distinguished by the degree of synchrony in thesystem and the malevolence allowed to faulty processors. For each model we also examinethe theoretical limits on attainable performance; and show that our algorithm isasymptotically optimal with increasing ratio of non-faulty processors to faulty ones.,*,1987,*
Relaxed Currency Serializability for Middle-Tier Caching and Replication (extended version).,Philip A Bernstein; Alan Fekete; Hongfei Guo; Raghu Ramakrishnan; Pradeep Tamma,Abstract Many applications; such as e-commerce; routinely use copies of data that are not insync with the database due to heuristic caching strategies used to enhance performance.We study concurrency control for a transactional model that allows update transactions toread out-of-date copies. Each read operation carries a “freshness constraint” that specifieshow fresh a copy must be in order to be read. We offer a definition of correctness for thismodel and present algorithms to ensure several of the most interesting freshnessconstraints. We outline a serializability-theoretic correctness proof and present the results ofa detailed performance study. This is an extended version of a paper with the same title thatappeared in SIGMOD 2006.,*,*,*
Diverse Student Activities For Learning Outcomes,Alan Fekete,Page 1. Diversity of Student Activities (Fekete) MCEC December 2005 Diverse Student ActivitiesFor Learning Outcomes Alan Fekete (Uni of Sydney) Page 2. Diversity of Student Activities(Fekete) MCEC December 2005 Acknowledgement • Much of this talk is based on work overmany years with wonderful colleagues; including especially Kate Crawford; Tony Greening;Judy Kay; Jeff Kingston; Kap Wimalaratne Page 3. Diversity of Student Activities (Fekete) MCECDecember 2005 Overview • Motivation – Lack of diversity in many subjects • Introducing diversity:some examples • Activities for soft skills/graduate attributes • Activities that attack misconceptions •Workshop: identify activities for a 1st year subject (intro programming?) Page 4. Diversity ofStudent Activities (Fekete) MCEC December 2005 Traditional Monoculture • Intro programming –Write a program to do X • Systems analysis …,*,*,*
Action abstraction for symbolic processes under trace equivalence,D Streader; A Fekete,*,*,*,*
Data abstraction of symbolic labeled transition systems,D Streader; A Fekete,*,*,*,*
