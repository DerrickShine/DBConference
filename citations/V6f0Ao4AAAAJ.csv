AMADA: web data repositories in the amazon cloud,Andrés Aranda-Andújar; Francesca Bugiotti; Jesús Camacho-Rodríguez; Dario Colazzo; François Goasdoué; Zoi Kaoudi; Ioana Manolescu,Abstract We present AMADA; a platform for storing Web data (in particular; XML documentsand RDF graphs) based on the Amazon Web Services (AWS) cloud infrastructure. AMADAoperates in a Software as a Service (SaaS) approach; allowing users to upload; index; store;and query large volumes of Web data. The demonstration shows (i) the step-by-stepprocedure for building and exploiting the warehouse (storing; indexing; querying) and (ii) themonitoring tools enabling one to control the expenses (monetary costs) charged by AWS forthe operations involved while running AMADA.,Proceedings of the 21st ACM international conference on Information and knowledge management,2012,26
Building large XML stores in the Amazon cloud,Jesús Camacho-Rodríguez; Dario Colazzo; Ioana Manolescu,It has been by now widely accepted that an increasing part of the world's interesting data iseither shared through the Web or directly produced through and for Web platforms usingformats like XML (structured documents). We present a scalable store for managing a largecorpora of XML documents built on top of off-the-shelf cloud infrastructure. We implementdifferent indexing strategies to evaluate a query workload over the stored documents in thecloud. Moreover; each strategy presents different trade-offs between efficiency in queryanswering and cost for storing the index.,Data Engineering Workshops (ICDEW); 2012 IEEE 28th International Conference on,2012,20
Web data indexing in the cloud: efficiency and cost reductions,Jesús Camacho-Rodríguez; Dario Colazzo; Ioana Manolescu,Abstract An increasing part of the world's data is either shared through the Web or directlyproduced through and for Web platforms; in particular using structured formats like XML orJSON. Cloud platforms are interesting candidates to handle large data repositories; due totheir elastic scaling properties. Popular commercial clouds provide a variety of sub-systemsand primitives for storing data in specific formats (files; key-value pairs etc.) as well asdedicated sub-systems for running and coordinating execution within the cloud. We proposean architecture for warehousing large-scale Web data; in particular XML; in a commercialcloud platform; specifically; Amazon Web Services. Since cloud users support monetarycosts directly connected to their consumption of cloud resources; we focus on indexingcontent in the cloud. We study the applicability of several indexing strategies; and show …,Proceedings of the 16th International Conference on Extending Database Technology,2013,11
Paxquery: Efficient parallel processing of complex xquery,Jesús Camacho-Rodríguez; Dario Colazzo; Ioana Manolescu,Increasing volumes of data are being produced and exchanged over the Web; in particularin tree-structured formats such as XML or JSON. This leads to a need of highly scalablealgorithms and tools for processing such data; capable to take advantage of massivelyparallel processing platforms. This work considers the problem of efficiently parallelizing theexecution of complex nested data processing; expressed in XQuery. We provide novelalgorithms showing how to translate such queries into PACT; a recent frameworkgeneralizing MapReduce in particular by supporting many-input tasks. We present the firstformal translation of complex XQuery algebraic expressions into PACT plans; anddemonstrate experimentally the efficiency and scalability of our approach.,IEEE Transactions on Knowledge and Data Engineering,2015,8
PAXQuery: a massively parallel XQuery processor,Jesús Camacho-Rodríguez; Dario Colazzo; Ioana Manolescu,Abstract We present a novel approach for parallelizing the execution of queries over XMLdocuments; implemented within our system PAXQuery. We compile a rich subset of XQueryinto plans expressed in the PArallelization ConTracts (PACT) programming model. Theseplans are then optimized and executed in parallel by the Stratosphere system. Wedemonstrate the efficiency and scalability of our approach through experiments on hundredsof GB of XML data.,Proceedings of Workshop on Data analytics in the Cloud,2014,7
SPARQL Query Processing in the Cloud.,Francesca Bugiotti; Jesús Camacho-Rodríguez; François Goasdoué; Zoi Kaoudi; Ioana Manolescu; Stamatis Zampetakis,Since its emergence; cloud computing has been massively adopted due to the scalability;fault-tolerance and elasticity features it offers. Cloud-based platforms free the applicationdeveloper from the burden of administering the hardware and provide resilience to failures;as well as elastic scaling up and down of resources according to the demand. The recentdevelopment of such environments has a significant impact on the data managementresearch community; in which the cloud provides a distributed; shared-nothing infrastructurefor scalable data storage and processing. Many recent works have focused on theperformance and cost analysis of cloud platforms; and on the extension of the services thatthey provide. For instance;[9] focuses on extending public cloud services with basicdatabase primitives; while extensions for the MapReduce paradigm [14] are proposed in …,*,2014,5
LiquidXML: Adaptive XML Content Redistribution,Jesús Camacho-Rodríguez; Asterios Katsifodimos; Ioana Manolescu; Alexandra Roatis,Abstract We propose to demonstrate LiquidXML; a platform for managing large corpora ofXML documents in large-scale P2P networks. All LiquidXML peers may publish XMLdocuments to be shared with all the network peers. The challenge then is to efficiently (re-)distribute the published content in the network; possibly in overlapping; redundantfragments; to support efficient processing of queries at each peer. The novelty of LiquidXMLrelies in its adaptive method of choosing which data fragments are stored where; to improveperformance. The" liquid" aspect of XML management is twofold: XML data flows from manysources towards many consumers; and its distribution in the network continuously adapts toimprove query performance.,Proceedings of the 19th ACM international conference on Information and knowledge management,2010,4
Reuse-based Optimization for Pig Latin,Jesús Camacho-Rodríguez; Dario Colazzo; Melanie Herschel; Ioana Manolescu; Soudip Roy Chowdhury,Abstract Pig Latin is a popular language which is widely used for parallel processing ofmassive data sets. Currently; subexpressions occurring repeatedly in Pig Latin scripts areexecuted as many times as they appear; and the current Pig Latin optimizer does not identifyreuse opportunities. We present a novel optimization approach aiming at identifying andreusing repeated subexpressions in Pig Latin scripts. Our optimization algorithm; namedPigReuse; identifies subexpression merging opportunities; selects the best ones to executebased on a cost function; and reuses their results as needed in order to compute exactly thesame output as the original scripts. Our experiments demonstrate the effectiveness of ourapproach.,Proceedings of the 25th ACM International on Conference on Information and Knowledge Management,2016,3
Viewing a world of annotations through AnnoVIP,Jesús Camacho-Rodríguez; Konstantinos Karanasos; Ioana Manolescu; Alin Tilea; Spyros Zoupanos,Le développement de contenus en format numériques a conduit à l'apparition de corpus dedocuments structurés interconnectés (tels que les pages HTML ou XML) et d'annotationssémantiques; typiquement exprimées en RDF; qui rajoutent des informations sur cesdocuments. Les annotations sont souvent produites indépendamment des documents. Nousprésentons AnnoVIP; une plateforme pair-à-pair capable d'exploiter de manière efficace uncorpus de documents annotés; s' appuyant sur un nouveau modèle de vues matérialiséesXML; déployées en pair-à-pair.,Bases de Données Avancées,2010,3
PigReuse: A Reuse-based Optimizer for Pig Latin,Jesús Camacho-Rodríguez; Dario Colazzo; Melanie Herschel; Ioana Manolescu; Soudip Roy Chowdhury,Pig Latin is a popular language which is widely used for parallel processing of massive datasets. Currently; subexpressions occurring repeatedly in Pig Latin scripts are executed asmany times as they appear; and the current Pig Latin optimizer does not identify reuseopportunities. We present a novel optimization approach aiming at identifying and reusingrepeated subexpressions in Pig Latin scripts. Our optimization algorithm; named PigReuse;operates on a particular algebraic representation of Pig Latin scripts. PigReuse identifiessubexpression merging opportunities; selects the best ones to execute based on a costfunction; and reuses their results as needed in order to compute exactly the same output asthe original scripts. Our experiments demonstrate the effectiveness of our approach.,*,2016,2
Paxquery: Parallel analytical XML processing,Jesús Camacho-Rodríguez; Dario Colazzo; Ioana Manolescu; Juan AM Naranjo,Abstract XQuery is a general-purpose programming language for processing semi-structured data; and as such; it is very expressive. As a consequence; optimizing andparallelizing complex analytics XQuery queries is still an open; challenging problem. Wedemonstrate PAXQuery; a novel system that parallelizes the execution of XQuery queriesover large collections of XML documents. PAXQuery compiles a rich subset of XQuery intoplans expressed in the PArallelization ConTracts (PACT) programming model. Thanks tothis translation; the resulting plans are optimized and executed in a massively parallelfashion by the Apache Flink system. The result is a scalable system capable of queryingmassive amounts of XML data very efficiently; as proved by the experimental results weoutline.,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,1
Efficient techniques for large-scale Web data management,Jesus Camacho Rodriguez,Résumé Le développement récent des offres commerciales autour du cloud computing afortement influé sur la recherche et le développement des plateformes de distributionnumérique. Les fournisseurs du cloud offrent une infrastructure de distribution extensible quipeut être utilisée pour le stockage et le traitement des données. En parallèle avec ledéveloppement des plates-formes de cloud computing; les modèles de programmation quiparallélisent de manière transparente l'exécution des tâches gourmandes en données surdes machines standards ont suscité un intérêt considérable; à commencer par le modèleMapReduce très connu aujourd'hui puis par d'autres frameworks plus récents et complets.Puisque ces modèles sont de plus en plus utilisés pour exprimer les tâches de traitement dedonnées analytiques; la nécessité se fait ressentir dans l'utilisation des langages de haut …,*,2014,*
