Timber: A native xml database,Hosagrahar V Jagadish; Shurug Al-Khalifa; Adriane Chapman; Laks VS Lakshmanan; Andrew Nierman; Stelios Paparizos; Jignesh M Patel; Divesh Srivastava; Nuwee Wiwatwattana; Yuqing Wu; Cong Yu,Abstract This paper describes the overall design and architecture of the Timber XMLdatabase system currently being implemented at the University of Michigan. The system isbased upon a bulk algebra for manipulating trees; and natively stores XML. New accessmethods have been developed to evaluate queries in the XML context; and new costestimation and query optimization techniques have also been developed. We presentperformance numbers to support some of our design decisions. We believe that the keyintellectual contribution of this system is a comprehensive set-at-a-time query processingability in a native XML store; with all the standard components of relational queryprocessing; including algebraic rewriting and a cost-based optimizer.,The VLDB Journal—The International Journal on Very Large Data Bases,2002,568
-From Tree Patterns to Generalized Tree Patterns: On Efficient Evaluation of XQuery,Zhimin Chen; HV Jagadish; Laks VS Lakshmanan; Stelios Paparizos,This chapter discusses the efficient evaluation of XQuery. XQuery is the current de factostandard XML query language. A core operation in the evaluation of XQuery is the finding ofmatches for specified tree patterns; and there has been much work towards algorithms forfinding such matches efficiently. Multiple XPath expressions can be evaluated by computingone or more tree pattern matches. Several XQuery implementation efforts have beenreported around the world. A key construct in most XML query models is the so-called treepattern (query)(TP (Q)); which is a tree T with nodes labeled by variables; together with aBoolean formula F specifying constraints on the nodes and their properties; including theirtags; attributes; and contents. The chapter proposes a structure called generalized treepattern (GTP) for concise representation of a whole XQuery expression. Evaluating the …,*,2003,170
Tree logical classes for efficient evaluation of XQuery,Stelios Paparizos; Yuqing Wu; Laks VS Lakshmanan; HV Jagadish,Abstract XML is widely praised for its flexibility in allowing repeated and missing sub-elements. However; this flexibility makes it challenging to develop a bulk algebra; whichtypically manipulates sets of objects with identical structure. A set of XML elements; say oftype book; may have members that vary greatly in structure; eg in the number of author sub-elements. This kind of heterogeneity may permeate the entire document in a recursivefashion: eg; different authors of the same or different book may in turn greatly vary instructure. Even when the document conforms to a schema; the flexible nature of schemas forXML still allows such significant variations in structure among elements in a collection. Bulkprocessing of such heterogeneous sets is problematic. In this paper; we introduce the notionof logical classes (LC) of pattern tree nodes; and generalize the notion of pattern tree …,Proceedings of the 2004 ACM SIGMOD international conference on Management of data,2004,117
Structured annotations of web queries,Nikos Sarkas; Stelios Paparizos; Panayiotis Tsaparas,Abstract Queries asked on web search engines often target structured data; such ascommercial products; movie showtimes; or airline schedules. However; surfacing relevantresults from such data is a highly challenging problem; due to the unstructured language ofthe web queries; and the imposing scalability and speed requirements of web search. In thispaper; we discover latent structured semantics in web queries and produce StructuredAnnotations for them. We consider an annotation as a mapping of a query to a table ofstructured data and attributes of this table. Given a collection of structured tables; we presenta fast and scalable tagging mechanism for obtaining all possible annotations of a query overthese tables. However; we observe that for a given query only few are sensible for the userneeds. We thus propose a principled probabilistic scoring mechanism; using a generative …,Proceedings of the 2010 ACM SIGMOD International Conference on Management of data,2010,93
Grouping in XML,Stelios Paparizos; Shurug Al-Khalifa; HV Jagadish; Laks Lakshmanan; Andrew Nierman; Divesh Srivastava; Yuqing Wu,Abstract XML permits repeated and missing sub-elements; and missing attributes. Wediscuss the consequent implications on grouping; both with respect to specification and withrespect to implementation. The techniques described here have been implemented in theTIMBER native XML database system being developed at the University of Michigan.,International Conference on Extending Database Technology,2002,89
Facet discovery for structured web search: a query-log mining approach,Jeffrey Pound; Stelios Paparizos; Panayiotis Tsaparas,Abstract In recent years; there has been a strong trend of incorporating results fromstructured data sources into keyword-based web search systems such as Bing or Amazon.When presenting structured data; facets are a powerful tool for navigating; refining; andgrouping the results. For a given structured data source; a fundamental problem insupporting faceted search is finding an ordered selection of attributes and values that willpopulate the facets. This creates two sets of challenges. First; because of the limited screenreal-estate; it is important that the top facets best match the anticipated user intent. Second;the huge scale of available data to such engines demands an automated unsupervisedsolution. In this paper; we model the user faceted-search behavior using the intersection ofweb query-logs with existing structured data. Since web queries are formulated as free …,Proceedings of the 2011 ACM SIGMOD International Conference on Management of data,2011,47
TIMBER: A native system for querying XML,Stelios Paparizos; Shurug Al-Khalifa; Adriane Chapman; HV Jagadish; Laks VS Lakshmanan; Andrew Nierman; Jignesh M Patel; Divesh Srivastava; Nuwee Wiwatwattana; Yuqing Wu; Cong Yu,Abstract XML has become ubiquitous; and XML data has to be managed in databases. Thecurrent industry standard is to map XML data into relational tables and store this informationin a relational database. Such mappings create both expressive power problems andperformance problems. In the T IMBER [7] project we are exploring the issues involved instoring XML in native format. We believe that the key intellectual contribution of this system isa comprehensive set-at-a-time query processing ability in a native XML store; with all thestandard components of relational query processing; including algebraic rewriting and acost-based optimizer.,Proceedings of the 2003 ACM SIGMOD international conference on Management of data,2003,43
Entity synonyms for structured web search,Tao Cheng; Hady W Lauw; Stelios Paparizos,Nowadays; there are many queries issued to search engines targeting at finding values fromstructured data (eg; movie showtime of a specific location). In such scenarios; there is often amismatch between the values of structured data (how content creators describe entities) andthe web queries (how different users try to retrieve them). Therefore; recognizing thealternative ways people use to reference an entity; is crucial for structured web search. Inthis paper; we study the problem of automatic generation of entity synonyms over structureddata toward closing the gap between users and structured data. We propose an offline; data-driven approach that mines query logs for instances where content creators and web usersapply a variety of strings to refer to the same webpages. This way; given a set of strings thatreference entities; we generate an expanded set of equivalent strings (entity synonyms) …,IEEE transactions on knowledge and data engineering,2012,39
Pattern tree algebras: sets or sequences?,Stelios Paparizos; HV Jagadish,Abstract XML and XQuery semantics are very sensitive to the order of the produced output.Although pattern-tree based algebraic approaches are becoming more and more popular forevaluating XML; there is no universally accepted technique which can guarantee both acorrect output order and a choice of efficient alternative plans. We address the problemusing hybrid collections of trees that can be either sets or sequences or something inbetween. Each such collection is coupled with an Ordering Specification that describes howthe trees are sorted (full; partial or no order). This provides us with a formal basis fordeveloping a query plan having parts that maintain no order and parts with partial or fullorder. It turns out that duplicate elimination introduces some of the same issues as ordermaintenance: it is expensive and a single collection type does not always provide all the …,Proceedings of the 31st international conference on Very large data bases,2005,34
Persistent applications via automatic recovery,Roger Barga; David Lomet; Stelios Paparizos; Haifeng Yu; Sirish Chandrasekaran,Building highly available enterprise applications using Web-oriented middleware is hard.Runtime implementations frequently do not address the problems of application statepersistence and fault-tolerance; placing the burden of managing session state and; inparticular; handling system failures on application programmers. This paper describesPhoenix/APP; a runtime service based on the notion of recovery guarantees. Phoenix/APPtransparently masks failures and automatically recovers component-based applications.This both increases application availability and simplifies application development. Wedemonstrate the feasibility of this approach by describing the design and implementation ofPhoenix/APP in Microsoft's. NET runtime and present results on the cost of persisting andrecovering component-based applications.,Database Engineering and Applications Symposium; 2003. Proceedings. Seventh International,2003,28
Fuzzy matching of web queries to structured data,Tao Cheng; Hady W Lauw; Stelios Paparizos,Recognizing the alternative ways people use to reference an entity; is important for manyWeb applications that query structured data. In such applications; there is often a mismatchbetween how content creators describe entities and how different users try to retrieve them.In this paper; we consider the problem of determining whether a candidate queryapproximately matches with an entity. We propose an off-line; data-driven; bottom-upapproach that mines query logs for instances where Web content creators and Web usersapply a variety of strings to refer to the same Web pages. This way; given a set of strings thatreference entities; we generate an expanded set of equivalent strings for each entity. Theproposed method is verified with experiments on real-life data sets showing that we candramatically increase the queries that can be matched.,Data Engineering (ICDE); 2010 IEEE 26th International Conference on,2010,27
Synthesizing products for online catalogs,Hoa Nguyen; Ariel Fuxman; Stelios Paparizos; Juliana Freire; Rakesh Agrawal,Abstract A comprehensive product catalog is essential to the success of Product Searchengines and shopping sites such as Yahoo! Shopping; Google Product Search; and BingShopping. Given the large number of products and the speed at which they are released tothe market; keeping catalogs up-to-date becomes a challenging task; calling for the need ofautomated techniques. In this paper; we introduce the problem of product synthesis; a keycomponent of catalog creation and maintenance. Given a set of offers advertised bymerchants; the goal is to identify new products and add them to the catalog; together withtheir (structured) attributes. A fundamental challenge in product synthesis is the scale of theproblem. A Product Search engine receives data from thousands of merchants aboutmillions of products; the product taxonomy contains thousands of categories; where each …,Proceedings of the VLDB Endowment,2011,26
Virtual identity manager,*,A computing system and method for managing an identity of a user are provided. A servermay be configured to communicate with each of a plurality of client devices in correspondingrequest and response streams. An inference engine is configured to monitor the request andresponse streams for identifying factors that distinguish each of the plurality of client devicesfrom other of the plurality of client devices. Upon detecting one or more of the identifyingfactors for each of the two or more client devices that match within a threshold probability;the inference engine makes an inference that two or more of the plurality of client devicesare used by the user. Based upon the inference; the inference engine creates a virtualidentity record at the server linking the two or more client devices.,*,2014,21
Answering web queries using structured data sources,Stelios Paparizos; Alexandros Ntoulas; John Shafer; Rakesh Agrawal,Abstract In web search today; a user types a few keywords which are then matched againsta large collection of unstructured web pages. This leaves a lot to be desired for when thebest answer to a query is contained in structured data stores and/or when the user includessome structural semantics in the query. In our work; we include information from structureddata sources into web results. Such sources can vary from fully relational DBs; to flat tablesand XML files. In addition; we take advantage of information in such sources to automaticallyextract corresponding semantics from the query and use them appropriately in improving theoverall relevance of results.,Proceedings of the 2009 ACM SIGMOD International Conference on Management of data,2009,21
Context-Aware Query Recommendations,*,Described is a search-related technology in which context information regarding a user'sprior search actions is used in making query recommendations for a current user action;such as a query or click. To determine whether each set or subset of context information isrelevant to the user action; data obtained from a query log is evaluated. More particularly; aquery transition (query-query) graph and a query click (query-URL) graph are extracted fromthe query log; vectors are computed for the current action and each context/sub-context andevaluated against vectors in the graphs to determine current action-to-context similarity. Alsodescribed is using similar context to provide the query recommendations; using parametersto control the similarity strictness; and/or whether more recent context information is morerelevant than less recent context information; and using context information to distinguish …,*,2010,20
A physical algebra for XML,Stelios Paparizos; Shurug Al-Khalifa; HV Jagadish; Andrew Nierman; Yuqing Wu,Abstract We present a physical algebra for the manipulation of XML in a database. We showhow to map logical algebra operators to this physical algebra. We also present severalphysical algebra identities that are useful for query optimization. This physical algebra is thebasis for the implementation of the TIMBER native XML database system at the University ofMichigan.,*,2002,19
User computing device with personal agent program for recommending meeting a friend at a service location based on current location; travel direction; and calenda...,*,A long-term personal agent program; executable as network service and/or on one or moreuser computing devices and related method for identifying opportunities and makingrecommendations on behalf of one or more users; are disclosed herein. In one example; thepersonal agent program includes a monitoring engine configured to monitor and interpret auser's activities over time with a plurality of sensing and logging methodologies according touser authorization; the use of statistical methods for learning to understand a user's goalsand behavioral patterns from data; and the use of procedures for computing the expectedvalue of information guiding sensing and logging in different contexts. The personal agentfurther may include a recommendation methodology configured to make suggestions and totake actions on behalf of the user; in the present moment as well as for future times …,*,2016,18
Boot-strapping language identifiers for short colloquial postings,Moises Goldszmidt; Marc Najork; Stelios Paparizos,Abstract There is tremendous interest in mining the abundant user generated content on theweb. Many analysis techniques are language dependent and rely on accurate languageidentification as a building block. Even though there is already research on languageidentification; it focused on very 'clean'editorially managed corpora; on a limited number oflanguages; and on relatively large-sized documents. These are not the characteristics of thecontent to be found in say; Twitter or Facebook postings; which are short and riddled withvernacular. In this paper; we propose an automated; unsupervised; scalable solution basedon publicly available data. To this end we thoroughly evaluate the use of Wikipedia to buildlanguage identifiers for a large number of languages (52) and a large corpus and conduct alarge scale study of the best-known algorithms for automated language identification …,Joint European Conference on Machine Learning and Knowledge Discovery in Databases,2013,18
SIGOPT: Using schema to optimize XML query processing,Stelios Paparizos; Jignesh M Patel; HV Jagadish,There has been a great deal of work in recent years on processing and optimizing queriesagainst XML data. Typically in these previous works; schema information is not considered;so that evaluation techniques can continue to be used even in the absence of one. However;schema information is often available and; in this paper; we show that when available it canbe exploited to great advantage in ways that complement" traditional" XML queryoptimization. To be usable in practice; we require that aspects of schema; essential for ourpurposes; be captured in a schema information graph (SIG). We exploit such meta-dataknowledge with a preprocessing enumeration phase that detects potentiallyinterchangeable evaluation units-we call such units alternate paths. We show; within analgebraic framework; methods that can break down a pattern tree into elementary paths …,Data Engineering; 2007. ICDE 2007. IEEE 23rd International Conference on,2007,15
Annotating queries over structured data,*,A query may be received at a computing device and may include one or more terms. Foreach set of structured data tuples; a set of tokens may be determined from the terms of thequery by the computing device based on attribute values of attributes associated with thestructured data tuples in the set of structured data tuples. An annotated query may bedetermined from each of the sets of tokens. A probability score may be determined for eachof the determined annotated queries. The annotated query having the highest determinedprobability score may be selected; and one or more structured data tuples may be identifiedfrom the structured data tuples that have attributes with attribute values that match one ormore tokens of the selected annotated query.,*,2011,14
Providing query suggestions,*,Methods and computer-readable media are provided for determining suggested queries. Auser enters a search website; and the user is identified based on a user identification.Suggested queries are determined based on a group associated with the user. Thisassociation is created by extracting queries from data logs; categorizing the queries intogroups based on their respective subject matter; associating the user with one or moregroups; and determining suggested queries for each group. The suggested queries arecommunicated for display.,*,2014,13
Efficient query rewrite for structured web queries,Sreenivas Gollapudi; Samuel Ieong; Alexandros Ntoulas; Stelios Paparizos,Abstract Web search engines incorporate results from structured data sources to answersemantically rich user queries; ie Samsung 50 inch led tv can be answered from a table oftelevision data. However; users are not domain experts and quite often enter values that donot match precisely the underlying data; so a literal execution will return zero results. Asearch engine would prefer to return at least a minimum number of results as close to theoriginal query as possible while providing a time-bound execution guarantee. In this paper;we formalize these requirements; show the problem is NP-Hard and present approximationalgorithms that produce rewrites that work in practice. We empirically validate our algorithmson large-scale data from a major search engine.,Proceedings of the 20th ACM international conference on Information and knowledge management,2011,12
Computing system for managing data,*,Various embodiments are described for systems and methods for managing data. Thesystem may include a device group configured for peer-to-peer communications; the devicegroup including a computing device and one or more peer computing devices. The systemincludes a cross device application programming interface (API) that is implemented as adevice group API client executed on the computing device and each of the peer computingdevices. Each device group API client includes a permissions module that is configured todetermine whether a request satisfies a device-group-specific permission for access to datastored on any device associated with the device group. Upon authorization of the request; afile storage module is configured to retrieve and output the requested file.,*,2015,10
TIMBER: A native XML database,Stelios Paparizos; Shurug Al-Khalifa; Y Wu; N Wiwatwattana; HV Jagadish; Andrew Nierman; C Yu; LVS Lakshmanan; D Srivastava; A Chapman; Jignesh M Patel,This paper describes the overall design and architecture of the Timber XML databasesystem currently being implemented at the University of Michigan. The system is based upona bulk algebra for manipulating trees; and natively stores XML. New access methods havebeen developed to evaluate queries in the XML context; and new cost estimation and queryoptimization techniques have also been developed. We present performance numbers tosupport some of our design decisions. We believe that the key intellectual contribution of thissystem is a comprehensive set-at-a-time query processing ability in a native XML store; withall the standard components of relational query processing; including algebraic rewritingand a cost-based optimizer.,*,2002,10
Online marketplace with shipping incentives,*,A marketplace server and method for facilitating purchase transactions are provided. Amarketplace server may include a routing engine configured to receive an order for goodsfrom a first computing device associated with a first customer; with the order including a firstdelivery address of the customer. The routing engine also calculates a delivery route to thefirst delivery address. An offer engine is configured to create an offer for other goods. Theoffer includes a shipping incentive associated with a second delivery address of a secondcustomer. The offer may be targeted to the second customer based on a proximity of thesecond delivery address to the delivery route. The offer engine sends the offer to a secondcomputing device associated with the second customer. Upon receiving an acceptance ofthe offer from the computing device; the offer engine processes a purchase transaction for …,*,2014,8
Product synthesis from multiple sources,*,Methods and systems for automatically synthesizing product information from multiple datasources into an on-line catalog are disclosed; and in particular; for automaticallysynthesizing the product information based on attribute-value pairs. Information for a productmay be obtained; via entity extraction; feed ingestion; and other mechanisms; from a pluralityof structured and unstructured data sources having different taxonomies and schemas.Product information may additionally or alternatively be obtained or derived based onpopularity data. The product information may be cleansed; segmented and normalized. Theproduct information may be clustered so closest products; attribute names and attributevalues are associated. A representative value for an attribute name may be determined; andthe on-line catalog may be updated so that entries are comprehensive; meaningful and …,*,2013,8
Automatically Creating Training Data For Language Identifiers,*,Example apparatus and methods concern automatically creating labeled training data forautomatic language identifiers. One embodiment includes logic to produce a predictedlanguage classification for a post from geographic data associated with the post. The postmay be associated with a micro-blog; a social media site; or other electronic communicationservice that traffics in short messages having frequent colloquialisms; non-standard spelling;emoticons; and unique usages of characters to convey meaning. The embodiment includeslogic to produce an actual language classification for the post using a base languageclassifier. The embodiment includes logic to selectively add the post and a language labelfor the post to an automatically generated labeled training data upon determining that thepredicted language classification matches the actual language classification. The …,*,2015,7
With a little help from my friends,Arnab Nandi; Stelios Paparizos; John C Shafer; Rakesh Agrawal,A typical person has numerous online friends that; according to studies; the person oftenconsults for opinions and advice. However; public broadcasting a question to all friends riskssocial capital when repeated too often; is not tolerant to topic sensitivity; and can result in noresponse; as the message is lost in a myriad of status updates. Direct messaging is morepersonal and avoids these pitfalls; but requires manual selection of friends to contact; whichcan be time consuming and challenging. A user may have difficulty guessing which of theirnumerous online friends can provide a high quality and timely response. We demonstrate aworking system that addresses these issues by returning an ordered subset of friendspredicting (a) near-term availability;(b) willingness to respond and (c) topical knowledge;given a query. The combination of these three aspects are unique to our solution; and all …,Data Engineering (ICDE); 2013 IEEE 29th International Conference on,2013,7
Online marketplace with offer/bid pooling,*,Systems and methods for facilitating purchase transactions through real-time dynamicmarketplace sessions are provided. A method may include pooling offers for goods/servicesto form a pooled offer; and pooling bids to form a pooled bid. The pooled offer and thepooled bid may be matched to form a pooled offer/bid pair. Methods for inducing and usingpredictive models for successful configuration of properties and participants with machinelearning procedures that operate on data about successful and unsuccessful offers may beemployed. A real-time dynamic marketplace session may be established between offeragents associated with the pooled offers and bid agents associated with the pooled bids.Upon a successful conclusion to the negotiation; a purchase transaction for the pooledoffer/bid pair may be processed.,*,2013,7
Providing query completions based on data tuples,*,Data; such as product data or airline flight data; is represented using structured data tuples;tables; or as data with related metadata and tags; and stored by a search engine. Partialqueries are received by the search engine from a user and are used to generate a dialogbetween the search engine and the user. The dialog may include suggested querycompletions for the partial queries that correspond to a schema associated with the datatuples. The suggested query completions may be determined using attribute combinations ofattributes and attribute values; or metadata and tags associated with the data tuples;including known synonyms and misspellings. The user may interact with the querycompletions in the dialog; and the search engine may revise the dialog and the querycompletions according to the interactions. A user may query data tuples without knowing …,*,2012,7
The importance of algebra for XML query processing,Stelios Paparizos; HV Jagadish,Abstract Relational algebra has been a crucial foundation for relational database systems;and has played a large role in enabling their success. A corresponding XML algebra forXML query processing has been more elusive; due to the comparative complexity of XML;and its history. We argue that having a sound algebraic basis remains importantnonetheless. In this paper; we show how the complexity of XML can be modeled effectivelyin a simple algebra; and how the conceptual clarity attained thereby can lead to significantbenefits.,International Conference on Extending Database Technology,2006,7
Bringing achievements to an offline world,*,An achievement system tracks users' offline activities and awards achievements to users forparticipation in particular offline activities. The achievements that are awarded for particularactivities and/or to particular users may be sponsored by merchants; who may compensatean achievement system provider for the opportunity to sponsor the achievements. To awardusers achievements; the users' offline activities are tracked. When a user participates in anoffline activity for which achievements are available; the user is awarded an achievement.The achievement may be stored in an achievement profile for the user. In someembodiments; achievements earned by users may be converted into other benefits andalternative awards.,*,2015,6
Facet determination using query logs,*,Previously received queries from a search log are analyzed to determine a category ofstructured data associated with each query. For example; the categories may correspond toconsumer product categories such as televisions; digital cameras; etc. For each category;the terms of the queries associated with the category are correlated with the attributes andattribute values of the structured data tuples associated with the category. The attributes maybe ranked based on the correlation. When a subsequent query is received; the category ofthe query is determined and the ranked attributes associated with the category are used toselect facets that are displayed to the user along with the search results.,*,2012,6
Identifying modifiers in web queries over structured data,*,Described is using modifiers in online search queries for queries that map to a databasetable. A modifier (eg; an adjective or a preposition) specifies the intended meaning of atarget; in which the target maps to a column in that table. The modifier thus corresponds toone or more functions that determine which rows of data in the column match the query;eg;“cameras under $400” maps to a camera (or product) table; and “under” is the modifierthat represents a function (less than) that is used to evaluate a “price” target/data column.Also described are different classes of modifiers; and generating the dictionaries for adomain (corresponding to a table) via query log mining.,*,2010,6
Determining preferences from user queries,*,A query may be received at a computing device through a network. One or more attributevalues that are preferences for a subset of the one or more terms of the query may beidentified by the computing device. One or more products or services having associatedattributes that have values that match a subset of the identified attribute values may beidentified by the computing device; and a subset of the identified products or services maybe presented by the computing device through the network. Implementations may alsoidentify latent preferences; that is; preferences that are found for a query even where such apreference is not explicitly part of a term or token of the query.,*,2013,5
Marketing inventory based on spoilage,*,An inventory marketing system operates to identify and market inventory items that are likelyto spoil. Initially; inventory items that have a particular likelihood of spoilage may beidentified. Customers to target with offers for the inventory items may be identified based onthe customers' current location or expected location near a spoilage time for the inventoryitems. Offers for the inventory items may be provided to the targeted customers; andpurchases of the inventory items by customers may be facilitated.,*,2012,5
Pattern generation,*,Generation of patterns used to facilitate search queries is provided herein. A patternincludes a sequence of token classes and new token classes. A sample query is parsed toidentify tokens within the sample query that match a token associated with a referenced setof token classes. New token classes are generated for unidentified tokens within the samplequery. A pattern is generated by substituting the identified tokens of the sample query withcorresponding token classes and substituting the unidentified tokens of the sample querywith corresponding new token classes.,*,2009,4
Online marketplace with dynamic pricing,*,Systems and methods for dynamic pricing in real-time marketplace transactions areprovided. A method may include receiving a request from a bid agent associated with alocation-aware user device; and an offer for goods/services from an offer agent that isassociated with a merchant device. The offer may include an inventory and one or morelocations of the goods/services. The method includes determining a location of the location-aware user device; and determining whether the inventory and the one or more locations ofthe goods/services are sufficient to satisfy the request. If so; then the method includesestablishing a real-time dynamic marketplace session between the offer agent and the bidagent to facilitate a negotiation for the goods/services. Upon receiving an acceptance fromthe offer agent for a bid from the bid agent; the method includes processing a purchase …,*,2012,3
Querying XML in Timber.,Yuqing Wu; Stelios Paparizos; HV Jagadish,Abstract In this paper; we describe the TIMBER XML database system implemented atUniversity of Michigan. TIMBER was one of the first native XML database systems; designedfrom the ground up to store and query semi-structured data. A distinctive principle of TIMBERis its algebraic underpinning. Central contributions of the TIMBER project include:(1) treealgebras that capture the structural nature of XML queries;(2) the stack-based family ofalgorithms to evaluate structural joins;(3) new rule-based query optimization techniques thattake care of the heterogeneous nature of the intermediate results and take the schemainformation into consideration;(4) cost-based query optimization techniques and summarystructures for result cardinality estimation; and (5) a family of structural indices for moreefficient query evaluation. In this paper; we describe not only the architecture of TIMBER …,IEEE Data Eng. Bull.,2008,3
Persistent Applications via Automatic Recovery,Roger Barga David; David Lomet; Stelios Paparizos; Haifeng Yu,*,7th International Database Engineering and Applications Symposium (IDEAS 2002),2002,3
Computing system for managing data,*,Various embodiments are described for systems and methods for managing data. Thesystem may include a device group configured for peer-to-peer communications; the devicegroup including a computing device and one or more peer computing devices. The systemincludes a cross device application programming interface (API) that is implemented as adevice group API client executed on the computing device and each of the peer computingdevices. Each device group API client includes a permissions module that is configured todetermine whether a request satisfies a device-group-specific permission for access to datastored on any device associated with the device group. Upon authorization of the request; afile storage module is configured to retrieve and output the requested file.,*,2016,1
Relaxation for structured queries,*,A structured query may specify attribute values for attributes. An estimate of the number ofitems that will match the structured query if it is applied to a structured database isdetermined. If the estimated number of items is below a threshold; the structured query maybe relaxed to form new candidate structured queries. The number of candidate queries maybe determined based on a desired running time. Each of the candidate structured queriesmay be determined by changing one or more attribute values of the attributes of thestructured query. Estimates of the number of items each of the candidate structured querieswill match is determined; and the candidate structured query that has the highest matchingestimation is used to query the database. The matching results may be output.,*,2015,1
Entwining structure into web search,Stelios Paparizos,Abstract Keyword based retrieval has dominated web search with its simplicity andeffectiveness. However; given the abundance of structured and semi-structured data; thereis an opportunity for an improved user experience. In this paper; we present an overview ofour past work on analyzing keyword queries and extracting latent structured semantics;mapping them to corresponding data sources and enriching the user experience with theinclusion of structured content.,Proceedings of the 7th International Workshop on Ranking in Databases,2013,1
Most valuable player gamer status and applications,*,A gaming environment is provided by an MVP gaming system provider in which “mostvaluable player”(MVP) gamers may compete. MVP gamers may be identified usingachievements; gamer scores; game play during sanctioned gaming events; or other indiciaof game skills. The MVP gamers may be sponsored by advertisers; and the MVP gamers'avatars may be branded based on sponsorship during gaming events. The sponsorshipsmay be brokered by the MVP gaming system provider. Some gaming events may besanctioned gaming events that are coordinated by the MVP gaming system provider and“televised” to allow viewers to watch the gaming events. Tutorials from MVP gamers mayalso be provided to gamers for viewing to assist in their game play. Further; gamers may beable to rent the avatars of MVP gamers for use during their game play.,*,2012,1
Grammar compression,*,Compression of extensive; rule-based grammars used to facilitate search queries isprovided herein. Rule-based grammars includes a list of rules that each comprise asequence of token classes. Each token class is a logical grouping of tokens; and each tokenis a string of characters. A grammar is parsed to identify rules and token classes.Unimportant token classes are identified and sets of unimportant token classes are mergedto generated merged token classes. A compressed grammar is generated by substituting themerged token classes into the grammar for corresponding unimportant token classes usedto generate the merged token classes.,*,2011,1
Providing recommendation to user computing device based on current location of friend computing device,*,A server computing device and related method for providing recommendations to a usercomputing device are disclosed. In one example; user activity of a user device and friendactivity of a friend device are received. A request for a recommendation is received from theuser device. Based at least in part on the current location of the friend device; arecommendation is sent to the user device including a recommended service offered at aservice location within a threshold distance along the user device's direction of travel; therecommendation being displayed on a display associated with the user device.,*,2017,*
Server computing device for recommending meeting a friend at a service location based on current location; travel direction; and calendar activity,*,A server computing device and related method for providing recommendations to a usercomputing device are disclosed. In one example; user activity of the user of a usercomputing device and friend activity of a friend using a friend computing device arereceived. A request for a recommendation is received from the user device. Based on theuser and friend activities; it is estimated that the user and friend will approach an intersectinglocation within a window of time; and the user and friend are available to meet in thatwindow. A recommendation of a service offered within a distance of the location is sent; withthe recommendation displayed on the user computing device.,*,2017,*
Computing system for managing data,*,Various embodiments are described for systems and methods for managing data. Thesystem may include a device group configured for peer-to-peer communications; the devicegroup including a computing device and one or more peer computing devices. The systemincludes a cross device application programming interface (API) that is implemented as adevice group API client executed on the computing device and each of the peer computingdevices. Each device group API client includes a permissions module that is configured todetermine whether a request satisfies a device-group-specific permission for access to datastored on any device associated with the device group. Upon authorization of the request; afile storage module is configured to retrieve and output the requested file.,*,2017,*
Product synthesis from multiple sources,*,Methods and systems for automatically synthesizing product information from multiple datasources into an on-line catalog are disclosed; and in particular; for automaticallysynthesizing the product information based on attribute-value pairs. Information for a productmay be obtained; via entity extraction; feed ingestion; and other mechanisms; from a pluralityof structured and unstructured data sources having different taxonomies and schemas.Product information may additionally or alternatively be obtained or derived based onpopularity data. The product information may be cleansed; segmented and normalized. Theproduct information may be clustered so closest products; attribute names and attributevalues are associated. A representative value for an attribute name may be determined; andthe on-line catalog may be updated so that entries are comprehensive; meaningful and …,*,2016,*
Generating synonyms based on query log data,*,An approach is described for generating synonyms to supplement at least one informationitem; such as; in one case; a set of related items. The approach can involve an expansionphase; a clean-up phase; and a reduction phase. In the expansion phase; the approachidentifies; for each related item; a set of initial synonym candidates. In the clean-up phase;the approach removes noise from the set of initial synonym candidates (if such noise exists);to provide a set of filtered synonym candidate items. In the reduction phase; the approachranks and applies a threshold (or thresholds) to the set of filtered synonym candidate items;to generate; for each information item; a set of selected synonyms. The approach uses querylog data at various points in its operation. The selected synonyms can be used to improvethe effectiveness of user searches.,*,2015,*
Selecting user accounts in social network to answer question,*,Messages generated by user accounts in a social networking application over a period oftime are processed to determine the subjects and topic associated with the messages; aswell as the geographical locations of the users associated with the user accounts; and thetimes when the users associated with the accounts are most active. The determined; subject;time; and location information is used to create a model that may be used to predict whethera user in the social networking application is willing; available; and has the knowledge ortopical affinity to answer a question proposed by another user in the social networkingapplication based on a subject; time; and/or location associated with the question. When auser enters a question; the user may be presented with a list of their friends or contactsranked according to the probabilities generated by the model.,*,2014,*
Answering web queries using structured data sources,*,Described is answering online web queries from a structured data store; such as a productsdatabase. An online web search query is modified into an evaluation expression foraccessing a structured data store (eg; a database; XML file; a flat table) to find searchresults. A query is matched to a pattern; which is used to generate the expression; as well asdetermine to which structured data store the query is routed. Tokens (eg; words) in the queryare processed against a dictionary of token classes (sets of tokens) and patterns (sets oftoken classes) to annotate the query to map the query to the matching pattern. A translationprocess generates the expression based on translation hints that correspond to thematching pattern. Also described is offline mining of query logs to generate the dictionaries.,*,2014,*
Online marketplace with shipping incentives,*,A marketplace server and method for facilitating purchase transactions are provided. Amarketplace server may include a routing engine configured to receive an order for goodsfrom a first computing device associated with a first customer; with the order including a firstdelivery address of the customer. The routing engine also calculates a delivery route to thefirst delivery address. An offer engine is configured to create an offer for other goods. Theoffer includes a shipping incentive associated with a second delivery address of a secondcustomer. The offer may be targeted to the second customer based on a proximity of thesecond delivery address to the delivery route. The offer engine sends the offer to a secondcomputing device associated with the second customer. Upon receiving an acceptance ofthe offer from the computing device; the offer engine processes a purchase transaction for …,*,2014,*
Grammar compression,*,Compression of extensive; rule-based grammars used to facilitate search queries isprovided herein. Rule-based grammars include a list of rules that each comprise asequence of token classes. Each token class is a logical grouping of tokens; and each tokenis a string of characters. A grammar is parsed to identify rules and token classes.Unimportant token classes are identified and sets of unimportant token classes are mergedto generated merged token classes. A compressed grammar is generated by substituting themerged token classes into the grammar for corresponding unimportant token classes usedto generate the merged token classes.,*,2013,*
Programme Chairs,Raoul-Sam Daruwala; Cong Yu; Gustavo Alonso; Srikanta Bedathur; Kevin Chang; Isabel Drost; Ariel Fuxman; Lee Giles; Sharad Goel; Richard Hankins; Jeffrey Korn; Chris Mattmann; Charles McCathieNevile; Peter Mika; Stelios Paparizos; Eugene Shekita; Jimeng Sun; Jian Shuo Wang; Ding Zhou; Aoying Zhou,Table of Contents Creating Your Own Web-Deployed Street Map Using Open Source Softwareand Free Data............................................ 1 Christopher Adams; Tony Abou-Assaleh QueryPortals.................................................... 4 Sanjay Agrawal; Kaushik Chakrabarti; SurajitChaudhuri; Venkatesh Ganti; Arnd Konig; Dong Xin A Semantic Web Ready Service Languagefor Large-Scale Earth Science Archives … A Virtual OceanographicData Center............................... 38 Sean McCleese; Chris Mattmann; Rob Raskin; DanCrichton; Sean Hardman A new tool to improve the filtering options in advancedsearching....... 40 Fernando Moreno-Torres Towards a Semantic Web Environment forXBRL..................... 43 Sheila MAndez NA Aez; Jose Emilio Labra Gayo; Javier De Andr AsPorqpine: a Distributed Social Search Engine......................... 46 Josep M. Pujol; Pablo …,*,*,*
