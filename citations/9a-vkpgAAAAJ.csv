A log buffer-based flash translation layer using fully-associative sector translation,Sang-Won Lee; Dong-Joo Park; Tae-Sun Chung; Dong-Ho Lee; Sangwon Park; Ha-Joo Song,Abstract Flash memory is being rapidly deployed as data storage for mobile devices such asPDAs; MP3 players; mobile phones; and digital cameras; mainly because of its lowelectronic power; nonvolatile storage; high performance; physical stability; and portability.One disadvantage of flash memory is that prewritten data cannot be dynamically overwritten.Before overwriting prewritten data; a time-consuming erase operation on the used blocksmust precede; which significantly degrades the overall write performance of flash memory. Inorder to solve this “erase-before-write” problem; the flash memory controller can beintegrated with a software module; called “flash translation layer (FTL).” Among many FTLschemes available; the log block buffer scheme is considered to be optimum. With thisscheme; a small number of log blocks; a kind of write buffer; can improve the performance …,ACM Transactions on Embedded Computing Systems (TECS),2007,829
On social Web sites,Won Kim; Ok-Ran Jeong; Sang-Won Lee,Abstract Today hundreds of millions of Internet users are using thousands of social Websites to stay connected with their friends; discover new “friends;” and to share user-createdcontents; such as photos; videos; social bookmarks; and blogs. There are so many socialWeb sites; and their features are evolving rapidly. There is controversy about the benefits ofthese sites; and there are social issues these sites have given rise to. There are lots of pressarticles; Wikipedia articles; and blogs—in varying degrees of authoritativeness; clarity andaccuracy—about some of the social Web sites; uses of the sites; and some social problems;and business challenges faced by the sites. In this paper; we attempt to organize the status;uses; and issues of social Web sites into a comprehensive framework for discussing;understanding; using; building; and forecasting the future of social Web sites.,Information systems,2010,560
Design of flash-based DBMS: an in-page logging approach,Sang-Won Lee; Bongki Moon,Abstract The popularity of high-density flash memory as data storage media has increasedsteadily for a wide spectrum of computing devices such as PDA's; MP3 players; mobilephones and digital cameras. More recently; computer manufacturers started launching newlines of mobile or portable computers that did away with magnetic disk drives altogether;replacing them with tens of gigabytes of NAND flash memory. Like EEPROM and magneticdisk drives; flash memory is non-volatile and retains its contents even when the power isturned off. As its capacity increases and price drops; flash memory will compete moresuccessfully with lower-end; lower-capacity disk drives. It is thus not inconceivable toconsider running a full database system on the flash-only computing platforms or running anembedded database system on the lightweight computing devices. In this paper; we …,Proceedings of the 2007 ACM SIGMOD international conference on Management of data,2007,428
A case for flash memory ssd in enterprise database applications,Sang-Won Lee; Bongki Moon; Chanik Park; Jae-Myung Kim; Sang-Woo Kim,Abstract Due to its superiority such as low access latency; low energy consumption; lightweight; and shock resistance; the success of flash memory as a storage alternative formobile computing devices has been steadily expanded into personal computer andenterprise server markets with ever increasing capacity of its storage. However; since flashmemory exhibits poor performance for small-to-moderate sized writes requested in arandom order; existing database systems may not be able to take full advantage of flashmemory without elaborate flash-aware data structures and algorithms. The objective of thiswork is to understand the applicability and potential impact that flash memory SSD (SolidState Drive) has for certain type of storage spaces of a database server where sequentialwrites and random reads are prevalent. We show empirically that up to more than an …,Proceedings of the 2008 ACM SIGMOD international conference on Management of data,2008,354
A survey of flash translation layer,Tae-Sun Chung; Dong-Joo Park; Sangwon Park; Dong-Ho Lee; Sang-Won Lee; Ha-Joo Song,Abstract Recently; flash memory is widely adopted in embedded applications as it hasseveral strong points; including its non-volatility; fast access speed; shock resistance; andlow power consumption. However; due to its hardware characteristics; specifically its “erase-before-write” feature; it requires a software layer known as FTL (Flash Translation Layer).This paper surveys the state-of-the-art FTL software for flash memory. It defines theproblems; addresses algorithms to solve them; and discusses related research issues. Inaddition; the paper provides performance results based on our implementation of each FTLalgorithm.,Journal of Systems Architecture,2009,245
System software for flash memory: a survey,Tae-Sun Chung; Dong-Joo Park; Sangwon Park; Dong-Ho Lee; Sang-Won Lee; Ha-Joo Song,Abstract Recently; flash memory is widely adopted in embedded applications since it hasseveral strong points: non-volatility; fast access speed; shock resistance; and low powerconsumption. However; due to its hardware characteristic; namely “erase before write”; itrequires a software layer called FTL (Flash Translation Layer). This paper surveys the state-of-the-art FTL software for flash memory. This paper also describes problem definitions;several algorithms proposed to solve them; and related research issues. In addition; thispaper provides performance results based on our implementation of each of FTL algorithms.,International Conference on Embedded and Ubiquitous Computing,2006,164
Advances in flash memory SSD technology for enterprise database applications,Sang-Won Lee; Bongki Moon; Chanik Park,Abstract The past few decades have witnessed a chronic and widening imbalance amongprocessor bandwidth; disk capacity; and access speed of disk. According to Amdhal's law;the performance enhancement possible with a given improvement is limited by the amountthat the improved feature is used. This implies that the performance enhancement of anOLTP system would be seriously limited without a considerable improvement in I/Othroughput. Since the market debut of flash memory SSD a few years ago; we have made acontinued effort to overcome its poor random write performance and to provide stable andsufficient I/O bandwidth. In this paper; we present three different flash memory SSD modelsprototyped recently by Samsung Electronics. We then show how the flash memory SSDtechnology has advanced to reverse the widening trend of performance gap between …,Proceedings of the 2009 ACM SIGMOD International Conference on Management of data,2009,160
SFS: random write considered harmful in solid state drives.,Changwoo Min; Kangnyeon Kim; Hyunjin Cho; Sang-Won Lee; Young Ik Eom,Abstract Over the last decade we have witnessed the relentless technological improvementin flash-based solidstate drives (SSDs) and they have many advantages over hard diskdrives (HDDs) as a secondary storage such as performance and power consumption.However; the random write performance in SSDs still remains as a concern. Even in modernSSDs; the disparity between random and sequential write bandwidth is more than tenfold.Moreover; random writes can shorten the limited lifespan of SSDs because they incur moreNAND block erases per write. In order to overcome these problems due to random writes; inthis paper; we propose a new file system for SSDs; SFS. First; SFS exploits the maximumwrite bandwidth of SSD by taking a log-structured approach. SFS transforms all randomwrites at file system level to sequential ones at SSD level. Second; SFS takes a new data …,FAST,2012,153
FAST: An efficient flash translation layer for flash memory,Sang-Won Lee; Won-Kyoung Choi; Dong-Joo Park,Abstract Flash memory is used at high speed as storage of personal information utilities;ubiquitous computing environments; mobile phones; electronic goods; etc. This is becauseflash memory has the characteristics of low electronic power; non-volatile storage; highperformance; physical stability; portability; and so on. However; differently from hard disks; ithas a weak point that overwrites on already written block of flash memory is impossible to bedone. In order to make it possible; an erase operation on the written block should beperformed before the overwrite; which lowers the performance of flash memory highly. Inorder to solve this problem; the flash memory controller maintains a system software modulecalled the flash translation layer (FTL). In this paper; we propose an enhanced log blockbuffer FTL scheme; FAST (Fully Associative Sector Translation); which improves the page …,International Conference on Embedded and Ubiquitous Computing,2006,78
B+-tree index optimization by exploiting internal parallelism of flash-based solid state drives,Hongchan Roh; Sanghyun Park; Sungho Kim; Mincheol Shin; Sang-Won Lee,Abstract Previous research addressed the potential problems of the hard-disk orienteddesign of DBMSs of flashSSDs. In this paper; we focus on exploiting potential benefits offlashSSDs. First; we examine the internal parallelism issues of flashSSDs by conductingbenchmarks to various flashSSDs. Then; we suggest algorithm-design principles in order tobest benefit from the internal parallelism. We present a new I/O request concept; calledpsync I/O that can exploit the internal parallelism of flashSSDs in a single process. Based onthese ideas; we introduce B+-tree optimization methods in order to utilize internalparallelism. By integrating the results of these methods; we present a B+-tree variant; PIO B-tree. We confirmed that each optimization method substantially enhances the indexperformance. Consequently; PIO B-tree enhanced B+-tree's insert performance by a …,Proceedings of the VLDB Endowment,2011,70
An efficient inverted index technique for XML documents using RDBMS,Chiyoung Seo; Sang-Won Lee; Hyoung-Joo Kim,Abstract The inverted index is widely used in the existing information retrieval field. In orderto support containment queries for structured documents such as XML; it needs to beextended. Previous work suggested an extension in storing the inverted index for XMLdocuments and processing containment queries; and compared two implementationoptions: using an RDBMS and using an Information Retrieval (IR) engine. However; theprevious work has two drawbacks in extending the inverted index. One is that the RDBMSimplementation is generally much worse in the performance than the IR engineimplementation. The other is that when a containment query is processed in an RDBMS; thenumber of join operations increases in proportion to the number of containmentrelationships in the query and a join operation always occurs between large relations. In …,Information and Software Technology,2003,58
X-FTL: transactional FTL for SQLite databases,Woon-Hak Kang; Sang-Won Lee; Bongki Moon; Gi-Hwan Oh; Changwoo Min,Abstract In the era of smartphones and mobile computing; many popular applications suchas Facebook; twitter; Gmail; and even Angry birds game manage their data using SQLite.This is mainly due to the development productivity and solid transactional support. Fortransactional atomicity; however; SQLite relies on less sophisticated but costlier page-oriented journaling mechanisms. Hence; this is often cited as the main cause of tardyresponses in mobile applications. Flash memory does not allow data to be updated in place;and the copy-on-write strategy is adopted by most flash storage devices. In this paper; wepropose X-FTL; a transactional flash translation layer (FTL) for SQLite databases. Byoffloading the burden of guaranteeing the transactional atomicity from a host system to flashstorage and by taking advantage of the copy-on-write strategy used in modern FTLs; X …,Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data,2013,54
FASTer FTL for enterprise-class flash memory SSDs,Sang-Phil Lim; Sang-Won Lee; Bongki Moon,For the past decade; numerous methods have been proposed for the design of a flashtranslation layer (FTL); which is the core engine of flash memory drives that criticallydetermines the performance of the drives. In this paper; we revisit one of the popular FTLschemes called FAST; and augment it with new optimization techniques aiming particularlyat online transaction processing (OLTP) workloads. As flash memory solid state drives(SSDs) are increasingly adopted for large-scale enterprise-class storage systems; it isimportant to develop an FTL that can deal with OLTP workloads in a scalable manner; whichare characterized by a large number of small; random and skewed IO operations. With theproposed optimization methods such as giving a second chance to valid pages and isolatingcold ones; the enhanced FTL; called FASTer; outperforms FAST considerably. In our …,Storage Network Architecture and Parallel I/Os (SNAPI); 2010 International Workshop on,2010,43
Flash-based extended cache for higher throughput and faster recovery,Woon-Hak Kang; Sang-Won Lee; Bongki Moon,Abstract Considering the current price gap between disk and flash memory drives; forapplications dealing with large scale data; it will be economically more sensible to use flashmemory drives to supplement disk drives rather than to replace them. This paper presentsFaCE; which is a new low-overhead caching strategy that uses flash memory as anextension to the DRAM buffer. FaCE aims at improving the transaction throughput as well asshortening the recovery time from a system failure. To achieve the goals; we propose twonovel algorithms for flash cache management; namely; Multi-Version FIFO replacement andGroup Second Chance. One striking result from FaCE is that using a small flash memorydrive as a caching device could deliver even higher throughput than using a large flashmemory drive to store the entire database tables. This was possible due to flash write …,Proceedings of the VLDB Endowment,2012,42
Fast; energy efficient scan inside flash memory SSDs,Sungchan Kim; Hyunok Oh; Chanik Park; Sangyeun Cho; Sang-Won Lee,ABSTRACT Today; an SSD (Solid State Drive) is essentially a block device attached to alegacy host interface. As a result; the system I/O bus remains a bottleneck; and the abundantflash memory bandwidth as well as the computing capabilities inside SSD is largelyuntapped. In this paper; we motivate an efficient in-storage computing approach where (partof) data-intensive processing is moved from the host CPU to inside flash SSDs; close to thedata source itself (“in-storage processing”). Especially; we focus on accelerating a keydatabase operation; scan. To realize the idea in a cost-effective manner; we deploy special-purpose computing modules using the System-on-Chip technology. While data from flashmemory are transferred; a target database operation is applied to the data stream on the flywithout any delay. This reduces the amount of data to transfer to the host drastically; and …,Proceeedings of the International Workshop on Accelerating Data Management Systems (ADMS),2011,41
Hand gesture recognition system using fuzzy algorithm and RDBMS for post PC,Jung-Hyun Kim; Dong-Gyu Kim; Jeong-Hoon Shin; Sang-Won Lee; Kwang-Seok Hong,Abstract In this paper; we implement hand gesture recognition system using union of fuzzyalgorithm and Relational Database Management System (hereafter; RDBMS) module forPost PC (the embedded-ubiquitous environment using blue-tooth module; embedded i.MX21 board and note-book computer for smart gate). The learning and recognition modeldue to the RDBMS is used with input variable of fuzzy algorithm (fuzzy max-mincomposition); and recognize user's dynamic gesture through efficient and rational fuzzyreasoning process. The proposed gesture recognition interface consists of three modules: 1)gesture input module that processes motion of dynamic hand to input data; 2) RDBMSmodule to segment significant gestures from inputted data; and 3) fuzzy max-min recognitionmodule to recognize significant gesture of continuous; dynamic gestures and extensity of …,International Conference on Fuzzy Systems and Knowledge Discovery,2005,37
Durable write cache in flash memory SSD for relational and NoSQL databases,Woon-Hak Kang; Sang-Won Lee; Bongki Moon; Yang-Suk Kee; Moonwook Oh,Abstract In order to meet the stringent requirements of low latency as well as highthroughput; web service providers with large data centers have been replacing magneticdisk drives with flash memory solid-state drives (SSDs). They commonly use relational andNoSQL database engines to manage OLTP workloads in the warehouse-scale computingenvironments. These modern database engines rely heavily on redundant writes andfrequent cache flushes to guarantee the atomicity and durability of transactional updates.This has become a serious bottleneck of performance in both relational and NoSQLdatabase engines. This paper presents a new SSD prototype called DuraSSD equippedwith tantalum capacitors. The tantalum capacitors make the device cache inside DuraSSDdurable; and additional firmware features of DuraSSD take advantage of the durable …,Proceedings of the 2014 ACM SIGMOD international conference on Management of data,2014,33
A case for flash memory ssd in hadoop applications,Seok-Hoon Kang; Dong-Hyun Koo; Woon-Hak Kang; Sang-Won Lee,Abstract As the access speed gap between DRAM and storage devices such as hard diskdrives is ever widening; the I/O module dominantly becomes the system bottleneck.Meanwhile; the map-reduce parallel programming model has been actively studied for thelast few years. In this paper; we will show empirically show that flash memory based SSD(Solid State Drive) is very beneficial when used as local storage devices in IO-intensive map-reduce applications (eg sorting) using Hadoop open source platform. Specifically; wepresent that external sorting algorithm in Hadoop with SSD can outperform the algorithm runwith hard disk by more than 3. In addition; we also demonstrate that the power consumptioncan be drastically reduced when SSDs are used.,International Journal of Control and Automation,2013,31
Sqlite optimization with phase change memory for mobile applications,Gihwan Oh; Sangchul Kim; Sang-Won Lee; Bongki Moon,Abstract Given its pervasive use in smart mobile platforms; there is a compelling need tooptimize the performance of sluggish SQLite databases. Popular mobile applications suchas messenger; email and social network services rely on SQLite for their data managementneed. Those mobile applications tend to execute relatively short transactions in theautocommit mode for transactional consistency in databases. This often has adverse effecton the flash memory storage in mobile devices because the small random updates causehigh write amplification and high write latency. In order to address this problem; we proposea new optimization strategy; called per-page logging (PPL); for mobile data management;and have implemented the key functions in SQLite/PPL. The hardware component ofSQLite/PPL includes phase change memory (PCM) with a byte-addressable; persistent …,Proceedings of the VLDB Endowment,2015,23
A version management framework for RDF triple stores,Dong-Hyuk Im; Sang-Won Lee; Hyoung-Joo Kim,RDF is widely used as an ontology language for representing the metadata in SemanticWeb; knowledge management system and E-commerce. Since ontologies model theknowledge in a particular domain; they may change over time. Furthermore; ontologies areusually developed and controlled in a distributed and collaborative way. Thus; it is veryimportant to be able to manage multiple versions for RDF data. Earlier studies on RDFversions have focused on providing the accesses to different versions (ie snapshots) andcomputing the differences between those two versions. However; the existing approachessuffer from the space overhead for large scale data; since all snapshots should beredundantly kept in a repository. Moreover; it is very time consuming to compute the deltabetween two specific versions; which is very common in RDF applications. In this paper …,International Journal of Software Engineering and Knowledge Engineering,2012,23
Lightweight Application-Level Crash Consistency on Transactional Flash Storage.,Changwoo Min; Woon-Hak Kang; Taesoo Kim; Sang-Won Lee; Young Ik Eom,Abstract Applications implement their own update protocols to ensure consistency of data onthe file system. However; since current file systems provide only a preliminary orderingguarantee; notably fsync (); these update protocols become complex; slow; and error-prone.We present a new file system; CFS; that supports a native interface for applications tomaintain crash consistency of their data. Using CFS; applications can achieve crashconsistency of data by declaring code regions that must operate atomically. By utilizingtransactional flash storage (SSD/X-FTL); CFS implement a lightweight mechanism for crashconsistency. Without using any heavyweight mechanisms based on redundant writes andordering; CFS can atomically write multiple data pages and their relevant metadata tostorage. We made three technical contributions to develop a crash consistency interface …,USENIX Annual Technical Conference,2015,21
On Flash-Based DBMSs: Issues for Architectural Re-Examination.,Sang-Won Lee; Won Kim,Abstract Flash memory is being rapidly deployed as data storage for mobile devices. Flashmemory offers many advantages over hard disk; and considering its rapid technicalimprovement both in capacity and speed; it will have competitive advantage over mini-driveunder 100 Gbytes within a few years. As the applications in hand held devices becomelarge; complex; and more data-intensive; they require database technology. However; flashmemory has three distinct characteristics that make today's disk-based database technologyunsuitable. In this article; we first review the characteristics of the flash memory. Then weidentify several key issues in the architecture of a flash-based database system that requirecareful re-examinations.,Journal of object Technology,2007,19
Changwoo Min; X-FTL: transactional FTL for SQLite databases,Woon-Hak Kang; Sang-Won Lee; Bongki Moon; Gi-Hwan Oh,*,Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data,2013,15
A schema version model for complex objects in object-oriented databases,Sang-Won Lee; Jung-Ho Ahn; Hyoung-Joo Kim,Abstract In this paper; we propose a schema version model which allows to restructurecomplex object hierarchy in object-oriented databases. This model extends a schemaversion model; called RiBS; which is based on the concept of Rich Base Schema. In theRiBS model; each schema version is in the form of updatable class hierarchy view over onebase schema; called the RiBS layer; which has richer schema information than any existingschema version in the database. In this paper; we introduce new operations for restructuringcomposite object hierarchy in schema versions; and explain their semantics. We also touchupon the ways to transform queries posed against a restructured composite object hierarchyinto one against the base schema. In addition; we identify several types of conflicts duringschema version merging which result from the restructuring operations; and provide a …,Journal of Systems Architecture,2006,15
VSkyline: Vectorization for efficient skyline computation,Sung-Ryoung Cho; Jongwuk Lee; Seung-Won Hwang; Hwansoo Han; Sang-Won Lee,Abstract A dominance test; which decides the dominance relationship between tuples; is acore operation in skyline computation. Optimizing dominance tests can thus improve theperformance of all existing skyline algorithms. Towards this goal; this paper proposes avectorization of dominance tests in SIMD architectures. Specifically; our vectorization canperform the dominance test of multiple consecutive dimensions in parallel; therebyachieving a speedup of SIMD parallelism degree in theory. However; achieving suchperformance gain is non-trivial due to complex control dependencies within the dominancetest. To address this problem; we devise an efficient vectorization; called VSkyline; whichperforms the dominance test with SIMD instructions by determining incomparability in ablock of four dimensional values. Experimental results using a performance monitor show …,ACM SIGMOD Record,2010,14
Accelerating In-Page Logging with Non-Volatile Memory.,Sang-Won Lee; Bongki Moon; Chanik Park; Joo Young Hwang; Kangnyeon Kim,Abstract A great deal of research has been done on solid-state storage media such as flashmemory and non-volatile memory in the past few years. While NAND-type flash memory isnow being considered a top alternative to magnetic disk drives; non-volatile memory (alsoknown as storage class memory) has begun to appear in the market recently. Althoughsome advocates of non-volatile memory predict that flash memory will give way to non-volatile memory soon; we believe that they will co-exist; complementing each other; for awhile until the hurdles in its manufacturing process are lifted and non-volatile memorybecomes commercially competitive in both capacity and price. In this paper; we present animproved design of In-Page Logging (IPL) by augmenting it with phase change RAM(PCRAM) in its log area. IPL is a buffer and storage management strategy that has been …,IEEE Data Eng. Bull.,2010,14
Dynamic in-page logging for flash-aware B-tree index,Gap-Joo Na; Sang-Won Lee; Bongki Moon,Abstract This paper presents Dynamic IPL B+-tree (d-IPL in short) as a B+-tree index variantfor flash-based storage systems. The d-IPL B+-tree adopts a dynamic In-Page Logging (IPL)scheme in order to address a few new problems that are caused by the uniquecharacteristics of B+-tree indexes The d-IPL B+-tree avoids the frequent log overflowproblem by allocating a log area in a flash block dynamically. It also addresses elegantly theproblem of page evaporation; imposed by the contemporary NAND flash chips; byintroducing ghost nodes within the context of the dynamic IPL scheme. This simple butelegant design of the d-IPL B+-tree improves the performance significantly. For a randominsertion workload; the d-IPL B+-tree index outperformed a B+-tree with a plain IPL schemeby more than a factor of two in terms of page write and block erase operations.,Proceedings of the 18th ACM conference on Information and knowledge management,2009,14
SHARE interface in flash storage for relational and NoSQL databases,Gihwan Oh; Chiyoung Seo; Ravi Mayuram; Yang-Suk Kee; Sang-Won Lee,Abstract Database consistency and recoverability require guaranteeing write atomicity forone or more pages. However; contemporary database systems consider write operationsnon-atomic. Thus; many database storage engines have traditionally relied on eitherjournaling or copy-on-write approaches for atomic propagation of updated pages to thestorage. This reliance achieves write atomicity at the cost of various write amplifications suchas redundant writes; tree-wandering; and compaction. This write amplification results inreduced performance and; for flash storage; accelerates device wear-out. In this paper; wepropose a flash storage interface; SHARE. Being able to explicitly remap the addressmapping inside flash storage using SHARE interface enables host-side database storageengines to achieve write atomicity without causing write amplification. We have …,Proceedings of the 2016 International Conference on Management of Data,2016,13
Research issues in next generation DBMS for mobile platforms,Sang-Won Lee; Gap-Joo Na; Jae-Myung Kim; Joo-Hyung Oh; Sang-Woo Kim,Abstract Recently; flash memory (in particular; NAND) is being rapidly deployed as datastorage for mobile platforms such as PDAs; MP3 players; mobile phones and digitalcameras; mainly because of its many advantages over its competitor; hard disk; including itslow electronic power; non-volatile storage; high performance; physical stability; smaller size;light weight; and portability. Considering its rapid technical improvement both in capacityand speed; it will have a competitive advantage over its rivalry minidrive (ie a small size harddisk) under 100 Gbytes within a few years; As the applications in next generation mobileplatforms become large; complex; and more data-oriented; they requires the databasetechnology; because the file interface is too complex to manage their complicated datarequirements. However; flash memory; compared to hard disk; has a few unique …,Proceedings of the 9th international conference on Human computer interaction with mobile devices and services,2007,13
In-page logging b-tree for flash memory,Gap-Joo Na; Bongki Moon; Sang-Won Lee,Abstract We demonstrate the IPL B+-tree prototype; which has been designed as a flash-aware index structure by adopting the in-page logging (IPL) scheme. The IPL scheme hasbeen proposed to improve the overall write performance of flash memory database systemsby avoiding costly erase operations that would be caused by small random write requestscommon in database workloads. The goal of this demonstration is to provide a proof-of-concept for IPL scheme as a viable and effective solution to flash memory database systems.,International Conference on Database Systems for Advanced Applications,2009,11
Backward inference and pruning for RDF change detection using RDBMS,Dong-Hyuk Im; Sang-Won Lee; Hyoung-Joo Kim,Recent studies on change detection for RDF data have focused on minimizing the delta sizeand; as a way to exploit the semantics of RDF models in reducing the delta size; the forward-chaining inferences have been widely employed. However; since the forward-chaininginferences should pre-compute the entire closure of the RDF model; the existing approachesare not scalable to large RDF data sets. In this paper; we propose a scalable changedetection scheme for RDF data; which is based on backward-chaining inference andpruning. Our scheme; instead of pre-computing the full closure; computes only thenecessary closure on the fly; thus achieving fast and scalable change detection. In addition;for any two RDF data input files to be compared; the delta obtained from our scheme isalways equivalent to the one from the existing forward-chaining inferences. In addition; in …,Journal of Information Science,2013,10
Dynamic In-Page Logging for B⁺-tree Index,Gap-Joo Na; Sang-Won Lee; Bongki Moon,Unlike database tables; B+-tree indexes are hierarchical and their structures change overtime by node splitting operations; which may propagate changes from one node to another.The node splitting operation is difficult for the basic In-Page Logging (IPL) scheme to dealwith; because it involves more than one node that may be stored separately in different flashblocks. In this paper; we propose Dynamic IPL B+-tree (d-IPL B+-tree in short) as a variant ofthe IPL scheme tailored for flash-based B+-tree indexes. The d-IPL B+-tree addresses theproblem of frequent log overflow by allocating a log area in a flash block dynamically. It alsoavoids a page evaporation problem; imposed by the contemporary NAND flash chips; byintroducing ghost nodes to d-IPL B+-tree. This simple but elegant design of the d-IPL B+-treeprovides significant performance improvement over existing approaches. For a random …,IEEE Transactions on Knowledge and Data Engineering,2012,10
IPL-P: In-page logging with PCRAM,Kangnyeon Kim; Sang-Won Lee; Bongki Moon; Chanik Park; Joo-Young Hwang,ABSTRACT A great deal of research has been done on solid-state storage media such asflash memory and non-volatile memory in the past few years. While NAND-type flashmemory is now considered a top alternative to magnetic disk drives; different types of non-volatile memory have also begun to appear in the market recently. Although someadvocates of storage class memory (SCM) predicted that flash memory would give way toSCM in the very near future; we believe that they will co-exist; complementing each other; fora while until the hurdles in its manufacturing process are lifted and storage class memorybecomes commercially competitive in both capacity and price. This demo presents animproved design of In-Page Logging (IPL) by augmenting it with Phase Change RAM(PCRAM) in its log area. IPL is a buffer and storage management strategy that has been …,Proceedings of the VLDB Endowment,2011,10
Transactional In-Page Logging for multiversion read consistency and recovery,Sang-Won Lee; Bongki Moon,Recently; a new buffer and storage management strategy called In-Page Logging (IPL) hasbeen proposed for database systems based on flash memory. Its main objective is toovercome the limitations of flash memory such as erase-before-write and asymmetricread/write speeds by storing changes made to a data page in a form of log records withoutoverwriting the data page itself. Since it maintains a series of changes made to a data pageseparately from the original data page until they are merged; the IPL scheme providesunique opportunities to design light-weight transactional support for database systems. Inthis paper; we propose the transactional IPL (TIPL) scheme that takes advantage of the IPLlog records to support multiversion read consistency and light-weight database recovery.Due to the dual use of IPL log records; namely; for snapshot isolation and fast recovery as …,Data Engineering (ICDE); 2011 IEEE 27th International Conference on,2011,9
Optimizing index scans on flash memory SSDs,Eun-Mi Lee; Sang-Won Lee; Sangwon Park,Abstract Unlike harddisks; flash memory SSDs have very fast latency in random reads andthus the relative bandwidth gap between sequential and random read is quite small; thoughnot negligible. For this reason; it has been believed that index scan would become moreattractive access method in flash memory storage devices. In reality; however; the existingindex scan can outperform the full table scan only in very selective predicates. In this paper;we investigate how to optimize the index scan on flash memory SSDs. First; we empiricallyshow that the index scan underperforms the full table scan even when the selectivity ofselection predicate is less than 5% and explain its reason. Second; we revisit the idea ofsorted index scan and demonstrate that it can outperform the full table scan even when theselectivity is larger than 30%. However; one drawback of the sorted index scan is that it …,ACM SIGMOD Record,2012,8
IPL B-tree for Flash Memory Database Systems,GAPJOO NA; BONGKI MOON; SANG-WON LEE,Recently; the in-page logging (IPL) scheme has been proposed to improve the overall writeperformance of flash memory by avoiding costly erase operations that would be caused bysmall random write requests common in database applications. In this paper; we identify theproblems inherent in the existing design of disk-based B+-tree index; and present the designand implementation of the IPL B+-tree. In this paper; in order to prove the concept of IPL tobe a viable and effective solution for flash memory; we show the superior performance of theIPL B+-tree index by running it on a real hardware prototype. We then show the IPL B+-treeindex outperforms traditional B+-tree index running on top of an FTL by a factor of two tofifteen. In addition; we introduce the concept of FTL dependency: many existing B+ treeschemes for flash memory could not control FTL so that their performance might be …,Journal of information science and engineering,2011,8
The semantics of an extended referential integrity for a multilevel secure relational data model,Sang-Won Lee; Yong-Han Kim; Hyoung-Joo Kim,Abstract To prevent information leakage in multilevel secure data models; the concept ofpolyinstantiation was inevitably introduced. Unfortunately; when it comes to referencesthrough foreign key in multilevel relational data models; the polyinstantiation causesreferential ambiguities. To resolve this problem; this paper proposes an extended referentialintegrity semantics for a multilevel relational data model; Multilevel Secure ReferentialIntegrity Semantics (MLS-RIS). The MLS-RIS distinguishes foreign key into two types ofreferences; ie value-based and entity-based reference. For each type; it defines thereferential integrity to be held between two multilevel relations; and provides resolution rulesfor the referential ambiguities. In addition; the MLS-RIS specifies the semantics of referentialactions of the SQL update operations so as to preserve the referential integrity.,Data & Knowledge Engineering,2004,8
Crash recovery in FAST FTL,Sungup Moon; Sang-Phil Lim; Dong-Joo Park; Sang-Won Lee,Abstract NAND flash memory is one of the non-volatile memories and has been replacinghard disk in various storage markets from mobile devices; PC/Laptop computers; even toenterprise servers. However; flash memory does not allow in-place-update; and thus a blockshould be erased before overwriting the existing data in it. In order to overcome theperformance problem from this intrinsic deficiency; flash storage devices are equipped withthe software module; called FTL (Flash Translation Layer). Meanwhile; flash storage devicesare subject to failure and thus should be able to recover metadata (including addressmapping information) as well as data from the crash. In general; the FTL layer is responsiblefor the crash recovery. In this paper; we propose a novel crash recovery scheme for FAST; ahybrid address mapping FTL. It writes periodically newly generated address mapping …,Software Technologies for Embedded and Ubiquitous Systems,2011,7
In-storage processing of database scans and joins,Sungchan Kim; Hyunok Oh; Chanik Park; Sangyeun Cho; Sang-Won Lee; Bongki Moon,Abstract Flash memory-based SSD is becoming popular because of its outstandingperformance compared to conventional magnetic disk drives. Today; SSDs are essentially ablock device attached to a legacy host interface. As a result; the system I/O bus remains abottleneck; and the abundant flash memory bandwidth and the computing capabilities ofSSD are largely untapped. In this paper; we propose to accelerate key database operations;scan and join; for large-scale data analysis by moving data-intensive processing from thehost CPU to inside flash SSDs (“in-storage processing”); close to the data source itself. Torealize the idea of in-storage processing in a cost-effective manner; we deploy special-purpose compute modules using the System-on-Chip technology. While data from flashmemory are transferred; a target database operation is applied to the data stream on the …,Information Sciences,2016,6
Cosmos openSSD: A PCIe-based open source SSD platform,Yong Ho Song; Sanghyuk Jung; Sang-Won Lee; Jin-Soo Kim,Page 1. Cosmos OpenSSD: A PCIe-based Open Source SSD Platform Yong Ho Song1; SanghyukJung1; Sang-Won Lee2; Jin-Soo Kim2 Hanyang University1; Sungkyunkwan University2; KoreaFlash Memory Summit 2014 Santa Clara; CA 1 Page 2. OpenSSD Introduction Flash MemorySummit 2014 Santa Clara; CA 2 Page 3. What's the OpenSSD Project ▪ Open-source SSD platformfor research and education on the SSD technology since 2011 ▪ New “OpenSSD platform” fordeveloping SSD firmware; controller hardware; and host software ▪ Contribution • Indilinx (Mergedto OCZ in 2012) • HYU (Hanyang University); Korea • SKKU (Sungkyunkwan University); KoreaFlash Memory Summit 2014 Santa Clara; CA 3 Page 4. Why OpenSSD? ▪ Solve your problemin a real system ▪ Share your solution with people in society ▪ Design your own SSD controller;if possible ▪ Contribute to “open” community …,Proc. Flash Memory Summit,2014,6
A hybrid flash memory SSD scheme for enterprise database applications,Byung-Woo Nam; Gap-Joo Na; Sang-Won Lee,Flash memory has many advantages such as high performance; low electronic power; non-volatile storage and physical stability; over hard-disks. For this reason; flash memory hasbeen deployed as data storage for mobile devices; including PDAs; MP3 players; laptop-computers and database systems. According to the cell type; flash memory can be dividedinto SLC (Single Level Chip) and MLC (Multi Level Chip). In general; SLC is known to havehigh performance and longer lifetime (ie more than 100K wear-leveling) while MLC is tooffer larger capacity and with low price but have wear leveling of not longer than 10K. In thispaper; we show that it is possible to design a fast and cost-efficient storage by combiningtwo types of flash memories in a hybrid fashion. Specifically; we propose a hybrid flashmemory solid state disk (SSD) scheme using FAST FTL for enterprise applications; where …,Web Conference (APWEB); 2010 12th International Asia-Pacific,2010,6
Object versioning in an odmg-compliant object database system,Sang-Won Lee; Hyoung-Joo Kim,SUMMARY In this paper; we describe the design and implementation of the SOP ObjectVersion System which is built upon an object database system; called SOP (SNU ODBMSPlatform). SOP is fully compliant with ODMG-93; a standard for object databases proposedby the Object Database Management Group (ODMG). To support object versioning in anODMG C++ OML (Object Manipulation Language) environment; the SOP Object VersionSystem provides a set of APIs (Application Programming Interfaces) as a class library. Oneimportant design goal of the SOP Object Version System was to achieve full compliance withODMG-93 standard. That is; in designing the class library; we tried to utilize the ODMG-93C++ OML interface as much as possible; while preserving its semantics as defined in ODMG-93. Our object version model follows the basic functionalities of mainstream object …,Softw.; Pract. Exper.,1999,6
A model of schema versions for object-oriented databases based on the concept of rich base schema,Sang-Won Lee; Hyoung-Joo Kim,Abstract In this paper; we propose a model of schema versions for object-orienteddatabases called RiBS. At the heart of this model is the concept of the rich base schemacalled (RiBS). In our model; each schema version is in the form of a class hierarchy viewover one base schema; called RiBS; which has richer schema information than any existingschema version in the database. Users are supposed to be concerned only with schemaversions. Direct schema updates on schema versions are allowed; and their effects are; ifnecessary; automatically propagated to RiBS. We first describe the structural part of themodel and then introduce a set of invariants that should always be satisfied by structuralparts. As the third element of our model; we give a set of schema update operations; thesemantics of which are defined; so as to preserve all the invariants. Another contribution …,Information and Software Technology,1998,6
Zombie chasing: Efficient flash management considering dirty data in the buffer cache,Youngjae Lee; Jin-Soo Kim; Sang-Won Lee; Seungryoul Maeng,This paper presents a novel technique; called Zombie Chasing; for efficient flashmanagement in solid state drives (SSDs). Due to the unique characteristics of NAND flashmemory; SSDs need to accurately understand the liveness of the data stored in themselves.Recently; the TRIM command has been introduced to notify SSDs of dead data caused byfile deletions; which otherwise could not be tracked by SSDs. This paper goes one stepfurther and proposes a new liveness state; called the zombie state; to denote live data thatwill be dead shortly due to the corresponding dirty data in the buffer cache. We also devisenew zombie-aware garbage collection algorithms which utilize the information about suchzombie data inside SSDs. To evaluate Zombie Chasing; we implement zombie-awaregarbage collection algorithms in the prototype SSD and modify the Linux kernel and the …,IEEE Transactions on Computers,2015,5
Extent mapping scheme for flash memory devices,Young-Kyoon Suh; Bongki Moon; Alon Efrat; Jin-Soo Kim; Sang-Won Lee,Flash memory devices commonly rely on traditional address mapping schemes such aspage mapping; block mapping or a hybrid of the two. Page mapping is more flexible thanblock mapping or hybrid mapping without being restricted by block boundaries. However; itsmapping table tends to grow large quickly as the capacity of flash memory devices does. Toovercome this limitation; we propose a novel mapping scheme that is fundamentally differentfrom the existing mapping strategies. We call this new scheme Virtual Extent Trie (VET); as itmanages mapping information by treating each I/O request as an extent and by usingextents as basic mapping units rather than pages or blocks. By storing extents instead ofindividual addresses; VET consumes much less memory to store mapping information andstill remains as flexible as page mapping. We observed in our experiments that VET …,Modeling; Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS); 2012 IEEE 20th International Symposium on,2012,5
Understanding SSDs with the OpenSSD platform,Sang-Won Lee; Jin-Soo Kim,Page 1. Sang-Won Lee & Jin-Soo Kim Sungkyunkwan University {swlee; jinsookim}@skku.eduhttp://www.openssd-project.org Understanding SSDs with the OpenSSD Platform Page 2. KCCTutorial @ Kyeongju; Korea (June 30; 2011) – Sang-Won Lee & Jin-Soo Kim – {swlee;jinsookim}@skku.edu 2 Outline ▪ Introduction to flash memory & SSD ▪ The OpenSSD project ▪Jasmine Hardware ▪ Jasmine Firmware Page 3. Introduction to Flash Memory and SSD Page4. KCC Tutorial @ Kyeongju; Korea (June 30; 2011) – Sang-Won Lee & Jin-Soo Kim – {swlee;jinsookim}@skku.edu 4 Storage Device Metrics ▪ Capacity ($/GB) : Harddisk >> Flash SSD ▪Bandwidth (MB/sec): Harddisk < Flash SSD ▪ Latency (IOPS): Harddisk << Flash SSD ▪Weight/energy/shock resistance/heat & cooling …. • Harddisk << Flash SSD ▪ eg Harddisk •7.2K HDD: 50$ / 1TB /100MB/s /100 IOPS • 15K HDD: 250$/ 72GB /200MB/s /500 IOPS …,Flash Summit; USA,2011,5
Hash join in commercial database with flash memory SSD,Sang-Shin Park; Sang-Won Lee,Hash join is one of important operations in database system; and its performance may slowdown because of disk I/O in hash table overflow phenomenon. In that phenomenon; themore overflow of hash table occurs; the more disk I/O arise; so join performance go from badto worse. Dominant disk I/O patterns of hash join are sequential writes and random reads;then flash memory SSD is in a more advantageous position than magnetic disk on those I/Opatterns. Therefore; using a flash memory SSD instead of magnetic disk as a temporarystorage of database will prevent existing performance degradation. In this paper; we showcalculated costs by query optimizer in some test cases first. And then; we also showempirically hash join performance in these test cases on temporary table space created onmagnetic disk and flash memory SSD. Consequently; the average response time with …,Computer Science and Information Technology (ICCSIT); 2010 3rd IEEE International Conference on,2010,5
A relational nested interval encoding scheme for XML data,Gap-Joo Na; Sang-Won Lee,Abstract As XML is rapidly becoming the de-facto standard for data representation andexchange in the Internet age; there has been a lot of research on how to store and retrieveXML data in relational databases. However; even though the XML data is mostly tree-structured; the XML research community has shown little attention to the traditional RDBMS-based encoding scheme for tree data. In this paper; we investigate one of the encodingschemes; called Nested Interval; for the storage and retrieval of XML data. In particular; ourapproach is very robust in updating XML data; including insertion of new node. In fact; theexisting RDBMS-based XML storage and indexing techniques work very poorly against XMLdata update because the XML data should be re-encoded from the scratch for virtually anyupdate in XML data. In contract; Nested Interval scheme does not require re-encoding all …,International Conference on Database and Expert Systems Applications,2006,5
A relational nested interval encoding scheme for XML storage and retrieval,Gap-Joo Na; Sang-Won Lee,Abstract The XML data is a typical kind of tree-data. However; the XML research communityhas given little attention to the traditional Relational database Management System(RDBMS) based encoding schemes for tree-data. In this paper; we will investigate one of thetraditional RDBMS-based encoding schemes; called Nested Interval; for storage andretrieval of XML data. Especially; our approach is very robust for updating XML data;including insertion of new nodes. In fact; the existing RDBMS-based XML storage andindexing techniques work very poorly against XML data updates because they should berebuilt from the scratch when any update occurs in XML data. In contract; our scheme doesnot require re-encoding. In this respect; our approach is a viable option for storing andquerying update-intensive XML applications.,Asia Information Retrieval Symposium,2005,5
Enhanced dual Bloom filter based on SSD for efficient directory parsing in cloud storage system,Manyun Kim; Kyung Hwan Oh; Hee Yong Youn; Sang Won Lee,In a file system used for big data analytics; hundreds of thousands of files exist. In such hugestorage system; getting the metadata of a file takes long time. In this paper we propose anenhanced Bloom filter to accelerate the directory parsing process in large-scale file systems.Here a cache implemented on SSD keeps the metadata of directories and files accessedfrequently or recently. When a file is requested; the system attempts to get the metadata fromthe SSD. If the metadata is not found; the access to the SSD becomes a waste of time. Toavoid unnecessary SSD accesses; the flag-augmented Bloom filter (FABF) is proposed withwhich the existence of metadata of the requested file in the cache is predicted. Analyticalmodeling demonstrates that the false positive rate and false negative rate are reducedcompared to the existing scheme. In addition; the implementation overhead of the …,Computing; Networking and Communications (ICNC); 2015 International Conference on,2015,4
mBAR: a materialized bitmap based association rule algorithm,Woon-Hak Kang; Dong-Hyun Kim; Sang-Won Lee,With the rapid progress in information technology; the data mining technique has beenexploited in various applications. The association rule (hereafter; AR) mining; one of themost popular data mining techniques; is to find the frequent itemsets which occur commonlyin transaction database. Of the various AR algorithms; the Apriori is most popular; and it hasbeen continuously improved during the past decade. Even with recent version; however; it isvery time consuming for the Apriori-based algorithms to count frequent itemset since;basically for each k-size item set; we need to compute its support on-the-fly.,Data Engineering Workshops; 2005. 21st International Conference on,2005,4
Rich base schema (RiBS): a unified framework for OODB schema version,SW Lee; HJ Kim,*,Journal of Database Management (January),2000,4
Flash SSD 상의 RAID 구성의 고찰,문성업， 김상우， 이상원,기존의 엔터프라이즈 환경에 있어서 RAID5 는 공간효율이나 안정성; 유지비용면에서 우수한성능을 보여주지만 패리티를 기반으로 사용하는 RAID5 구성의 특성상 소규모 임의 쓰기에대해서는 매우 낮은 성능을 보여주기 때문에; 동일한 안정성 측면에서 2 배에 가까운유지비용이 필요하더라도 RAID+ 0 을 선호하는 경향이 있다. 이 논문은 비대칭 읽기/쓰기속도를 갖는 SSD 의 경우 소규모 임의 쓰기에 대한 RAID5 와 RAID1+ 0 의 성능이하드디스크와는 다르게 크지 않음을 보이고; 엔터프라이즈 상에서 RAID 구성 시 저장장치의성능을 바탕으로 한 구성에 대해 재고가 필요함을 주장한다.,한국인터넷정보학회 학술발표대회 논문집,2008,3
InnoDB DoubleWrite Buffer as Read Cache using SSDs,Woon-Hak Kang; Gi-Tae Yun; Sang-Phil Lim; Dong-In Shin; Yang-Hun Park; Sang-Won Lee; Bongki Moon,*,*,*,3
Design and implementation of a log-structured file system for flash-based solid state drives,Changwoo Min; Sang-Won Lee; Young Ik Eom,Even in modern SSDs; the disparity between random and sequential write bandwidth ismore than 10-fold. Moreover; random writes can shorten the limited lifespan of SSDsbecause they incur more NAND block erases per write. To overcome the problems ofrandom writes; we propose a new file system; SFS; for SSDs. SFS is similar to the traditionallog-structured file system (LFS) in that it transforms all random writes at the file system levelto sequential ones at the SSD level; as a way to exploit the maximum write bandwidth of theSSD. But; unlike the traditional LFS; which performs hot/cold data separation on segmentcleaning; SFS takes a new on writing data grouping strategy. When data blocks are to bewritten; SFS puts those with similar update likelihood into the same segment for sharperbimodal distribution of segment utilization; and thus aims at minimizing the inevitable …,IEEE Transactions on Computers,2014,2
Memory efficient and scalable address mapping for flash storage devices,Young-Kyoon Suh; Bongki Moon; Alon Efrat; Jin-Soo Kim; Sang-Won Lee,Abstract Flash memory devices commonly rely upon traditional address mapping schemessuch as page mapping; block mapping or a hybrid of the two. Page mapping is more flexiblethan block or hybrid mapping without being restricted by block boundaries. However; itsmapping table tends to grow large quickly as the capacity of flash memory devices does. Toovercome this limitation; we propose novel mapping schemes that are fundamentallydifferent from the existing mapping strategies. We call these new schemes Virtual Extent Trie(VET) and Extent Mapping Tree (EMT); as they manage mapping information by treatingeach I/O request as an extent and by using extents as basic mapping units rather than pagesor blocks. By storing extents instead of individual addresses; our extent mapping schemesconsume much less memory to store mapping information and still remain as flexible as …,Journal of Systems Architecture,2014,2
Hardware-assisted intrusion detection by preserving reference information integrity,Junghee Lee; Chrysostomos Nicopoulos; Gi Hwan Oh; Sang-Won Lee; Jongman Kim,Abstract Malware detectors and integrity checkers detect malicious activities by comparingagainst reference data. To ensure their trustworthy operation; it is crucial to protect thereference data from unauthorized modification. This paper proposes the Soteria SecurityCard (SSC); an append-only storage. To the best of our knowledge; this work is the first tointroduce the concept of an append-only storage and its application to information security.The SSC framework allows only read and append operations; and forbids over-write anderase operations. By exploiting this trait; we can protect the reference data that must beupdated constantly. It is demonstrated how SSC facilitates log protection and file integritychecking.,International Conference on Algorithms and Architectures for Parallel Processing,2013,2
Extended Buffer Management with Flash Memory SSDs,Do-Yoon Sim; Jang-Woo Park; Sung-Tan Kim; Sang-Won Lee; Bong-Ki Moon,Abstract As the price of flash memory continues to drop and the technology of flash SSDcontroller innovates; high performance flash SSDs with affordable prices flourish in thestorage market. Nevertheless; it is hard to expect that flash SSDs will replace harddiskscompletely as database storage. Instead; the approach to use flash SSD as a cache forharddisks would be more practical; and; in fact; several hybrid storage architectures for flashmemory and harddisk have been suggested in the literature. In this paper; we propose anew approach to use flash SSD as an extended buffer for main buffer in database systems;which stores the pages replaced out from main buffer and returns the pages which are re-referenced in the upper buffer layer; improving the system performance drastically. Incontrast to the existing approaches to use flash SSD as a cache in the lower storage layer …,Journal of KIISE: Databases,2010,2
An efficient clustering framework for relevant web information,Ok-Ran Jeong; Sang-Won Lee,Abstract As the amount of available information on the Internet grows; it is becomingincreasingly difficult for users to find information that is relevant to their needs. Against thisbackdrop; a need for an automated tool that can find information quickly and easily hassurfaced. In this paper; we propose a Clustering Framework for crawling and clustering thenecessary information from Web pages. The proposed clustering framework consists ofthree modules: a preprocessing module; clustering module and community module. Usingthis framework; we are able to automatically cluster Web pages according to topic and rankthem in terms of relevance. We describe this framework; and show the results of ourpreliminary validation work.,Proceedings of the 3rd International Conference on Ubiquitous Information Management and Communication,2009,2
Applying In-Page Logging to SQLite DBMS,Gap-Joo Na; Sang-Woo Kim; Jae-Myung Kim; Sang-Won Lee,Abstract Flash memory has been widely used in mobile devices; such as mobile phone anddigital camera. Recently flash SSD (Solid State Disk); having same interface of the diskdrive; is replacing the hard disk of some laptop computers. However; flash memory stillcannot be considered as the storage of database systems. The FTL (Flash TranslationLayer) of commercial flash SSD; making flash memory operate exactly same as a hard disk;shows poor performance on the workload of databases with many random overwrites.Recently In-Page Logging (IPL) approach was proposed to solve this problem. In this paper;we implement IPL approach on SQLite; a popular open source embedded DBMS; andevaluate its performance. It improves the performance by up to 30 factors for update queries.,Journal of KIISE: Databases,2008,2
Implementation of bitmap based incognito and performance evaluation,Hyun-Ho Kang; Jae-Myung Kim; Gap-Joo Na; Sang-Won Lee,Abstract In the era of the Internet; more and more privacy-sensitive data is published online.Even though this kind of data are published with sensitive attributes such as name andsocial security number removed; the privacy can be revealed by joining those data withsome other external data. This technique is called joining attack. Among many techniquesdeveloped against the joining attack; the k-anonymization generalizes and/or suppressessome portions of the released microdata so that no individual can be uniquely distinguishedfrom a group of size k. Incognito is one of the most efficient k-anonymization algorithms.However; Incognito requires many repeating sorts against large volume data. In this paper;we propose a bitmap based Incognito algorithm. Using the bitmap technique; we cancompletely eliminate the expensive sort operations; and can even prune some steps in …,International Conference on Database Systems for Advanced Applications,2007,2
Design and implementation of an extended relationship semantics in an ODMG-compliant OODBMS,Hyun-Joo Lee; Sang-Won Lee; Hyoung-Joo Kim,Abstract Relationships; in addition to entities; are important in real-world database modeling.In particular; many object oriented database applications including CAD/CAM; CASE andmulti-media need to model various and complex relationships; especially thepart–whole'relationship. Without the built-in relationship supports from DBMSs; there is a hugeoverhead in managing relationships from application development to maintenance; sincethe relationships should be hard-coded within the application program itself. In this paper;we propose a powerfulpart–whole'relationship model; which naturally extends the ODMG-3.0 object database standard. The proposed relationship model can support almost all of therelationship functionalities existing in the contemporary relational database model and theobject oriented data model. In order to design and implement this relationship model; we …,Journal of Systems and Software,2005,2
I/O characteristics of MongoDB and trim-based optimization in flash SSDs,Trong-Dat Nguyen; Sang-Won Lee,Abstract NoSQL solutions become emerging for large scaled; high performance; schema-flexible applications. WiredTiger is cost effective; non-locking; no-overwrite storage used asdefault storage engine in MongoDB. Understanding I/O characteristics of storage engine isimportant not only for choosing suitable solution with an application but also openingopportunities for researchers optimizing current working system; especially building moreflash-awareness NoSQL DBMS. This paper explores background of MongoDB internalsthen analyze I/O characteristics of WiredTiger storage engine in detail. We also exploitspace management mechanism in WiredTiger by using TRIM command.,Proceedings of the Sixth International Conference on Emerging Databases: Technologies; Applications; and Theory,2016,1
h-Hash: a hash index structure for flash-based solid state drives,Bo-Kyeong Kim; Sang-Won Lee; Dong-Ho Lee,Flash-based solid state drives (SSDs) have been widely used as storage medium becauseof their fast access speed; high reliability and low power consumption. In spite of theseadvantages; they inherit distinct characteristics such as no in-place updates; asymmetricoperation speed and unit because they consist of NAND flash memories. Therefore; a disk-based hash index structure may result in severe performance degradation if it is directlydeployed on a NAND flash memory-based storage system. In this paper; we propose a newhybrid hash index structure for flash-based SSDs. It delays and reduces the split operationswhich cause slow block erasure and additional read and write operations by exploitingoverflow buckets according to the ratio of updates and deletions. Through variousperformance evaluations; we show the superiority of our proposed index structure by …,Journal of Circuits; Systems and Computers,2015,1
BAR: bitmap-based association rule: an implementation and its optimizations,Sung-Tan Kim; Jae-Myung Kim; Sang-Won Lee,Abstract The association rule mining; one of the most popular data mining techniques; is tofind the frequent itemsets which occur commonly in transaction database. Of the variousassociation algorithms; the Apriori is the most popular one; and its implementation techniqueto improve the performance has been continuously developed during the past decade. Inthis paper; we propose a bitmap-based association rule technique; called BAR; in order todrastically improve the performance of the Apriori algorithm. Compared to the latest Aprioriimplementation; our approach can improve the performance by nearly up to two orders ofmagnitude. This gain comes mainly from the following characteristics of BAR: 1) bitmapbased implementation paradigm; 2) reduction of redundant bitmap-AND operations; and 3)an efficient implementation of bitmap-AND and bit-counting operation by exploiting the …,Proceedings of the 7th International Conference on Advances in Mobile Computing and Multimedia,2009,1
Report on workshop on operating systems support for next generation large scale NVRAM (NVRAMOS 2009),Sang-Won Lee; Sooyong Kang Youjip Won; Jongmoo Choi,NAND Flash memory solid state disk (hereafter SSD) technology is advancing rapidly incapacity and speed. Also; we envision that byte-addressable NVRAM devices; which isbeing thought as the future replacement of Flash memory technology will be commerciallyviable for storage within the next 3–7 years. Modern computer system takes hierarchicalorganization. It consists of CPU; Main Memory and Storage. This hierarchical organization isnatural outcome of economic concern. Modern Operating System is designed to effectivelyexploit the physical characteristics of the device in each system hierarchy. Processmanagement; memory management; and storage management subsystems are alldesigned to fill the gaps (speed and space) among the layers in different hierarchies whilemaximizing cost performance ratio. Current operating system paradigm draws clear line …,SIGMOD record,2009,1
On Web Search: Some Activities and Challenges.,Won Kim; Ok-Ran Jeong; Hyungsuk Ji; Sangwon Lee,Abstract Internet search engines have become an indispensable part of everyday living andbusiness today. Although the capabilities of Internet search engines are incrementallyimproving steadily; it may be time for us to explore a few new directions that can take thesearch engines to the next level. In this article; we will summarize the current activities inadvancing the state of Internet search engines; and explore a few directions of research anddevelopment.,Journal of Object Technology,2008,1
Optimizing MongoDB Using Multi-streamed SSD,Trong-Dat Nguyen; Sang-Won Lee,Abstract Data fragmentation in flash SSDs is a common problem that leads to performancedegradation; especially when the underlying storage devices become aged by heavilyupdating workloads. This paper addresses that problem in MongoDB; a popular documentstorage in the current market; by introducing a novel stream mapping scheme that based onunique characteristics of MongoDB. The proposal method has low overhead andindependent with data models and workloads. We use YCSB and Linkbench with variouscache sizes and workloads to evaluate our proposal approaches. Empirical results shownthat in YCSB and Linkbench; our methods improved the throughput by more than 44% and43.73% respectively; reduced 99th-percentile latency by up to 29% and 24.67% in YCSBand Linkbench respectively. In addition; by tuning the leaf page size in B+ Tree of …,*,2018,*
SQL statement logging for making SQLite truly lite,Jong-Hyeok Park; Gihwan Oh; Sang-Won Lee,Abstract The lightweight codebase of SQLite was helpful in making it become the de-factostandard database in most mobile devices; but; at the same time; forced it to take less-complicated transactional schemes; such as physical page logging; journaling; and forcecommit; which in turn cause excessive write amplification. Thus; the write IO cost in SQLite isnot lightweight at all. In this paper; to make SQLite truly lite in terms of IO efficiency for thetransactional support; we propose SQLite/SSL; a per-transaction SQL statement loggingscheme: when a transaction commits; SQLite/SSL ensures its durability by storing only SQLstatements of small size; thus writing less and performing faster at no compromise oftransactional solidity. Our main contribution is to show that; based on the observation thatmobile transactions tend to be short and exhibit strong update locality; logical logging can …,Proceedings of the VLDB Endowment,2017,*
Memory storage apparatus; method of supporting transaction function for database; and memory system,*,A memory storage apparatus interworking with a database management system and a filesystem includes a flash translation layer (FTL) configured to guarantee atomicity of atransaction for the database management system by utilizing a copy-on-write (CoW)mechanism.,*,2017,*
Performance improvement plan for MySQL insert buffer,Hwanggyo Lee; Sang-Won Lee,Abstract Using non-clustered secondary index in MySQL database can cause additional andrandom disk accesses; degrades the performance of storage device. MySQL's storageengine eases that with Insert Buffer; which is used to avoid additional disk accesses. Weverified the improvement effect of using Insert buffer in MySQL by Sysbench benchmark.Furthermore; we suggest an idea for improving Insert buffer's performance; and show simpleimplementation and its experimental result.,Proceedings of the Sixth International Conference on Emerging Databases: Technologies; Applications; and Theory,2016,*
Performance Analysis of Flash Memory SSD with Non-volatile Cache for Log Storage,Dae-Yong Hong; Gi-Hwan Oh; Woon-Hak Kang; Sang-Won Lee,Abstract In a database system; updates on pages that are made by a transaction should bestored in a secondary storage before the commit is complete. Generic secondary storageshave volatile DRAM caches to hide long latency for non-volatile media. However; as logsthat are only written to the volatile DRAM cache don't ensure durability; logging latencycannot be hidden. Recently; a flash SSD with capacitor-backed DRAM cache wasdeveloped to overcome the shortcoming. Storage devices; like those with a non-volatilecache; will increase transaction throughput because transactions can commit as soon as thelogs reach the cache. In this paper; we analyzed performance in terms of transactionthroughput when the SSD with capacitor-backed DRAM cache was used as log storage. Thetransaction throughput can be improved over three times; by committing right after storing …,Journal of KIISE,2015,*
Supporting Transactional Atomicity in Flash Storage Devices.,Woon-Hak Kang; Sang-Won Lee; Bongki Moon; Gi-Hwan Oh; Changwoo Min,Abstract Flash memory does not allow data to be updated in place; and the copy-on-writestrategy is adopted by most flash storage devices. The copy-on-write strategy in modernFTLs provides an excellent opportunity for offloading the burden of guaranteeing thetransactional atomicity from a host system to flash storage and for supporting atomic updatepropagation. This paper presents X-FTL as a model case of exploiting the opportunity inflash storage to achieve the transactional atomicity in a simple and efficient way. X-FTLdrastically improves the transactional throughput almost for free without resorting to costlyjournaling schemes. We have implemented X-FTL on an SSD development board calledOpenSSD; and modified SQLite and ext4 file system minimally to make them compatiblewith the extended abstractions provided by X-FTL. We demonstrate the effectiveness of X …,IEEE Data Eng. Bull.,2014,*
Reducing cache misses in hash join probing phase by pre-sorting strategy,Gi-Hwan Oh; Jae-Myung Kim; Woon-Hak Kang; Sang-Won Lee,Abstract Recently; several studies on multi-core cache-aware hash join have been carriedout [Kim09VLDB; Blanas11SIGMOD]. In particular; the work of Blanas has shown that rathersimple no-partitioning hash join can outperform the work of Kim. Meanwhile; the simple butbest performing hash join of Blanas still experiences severe cache misses in probing phase.Because the key values of tuples in outer relation are not sorted or clustered; each outerrecord has different hashed key value and thus accesses the different hash bucket. Sincethe size of hash table of inner table is usually much larger than that of the CPU cache; it ishighly probable that the reference to hash bucket of inner table by each outer record wouldencounter cache miss. To reduce the cache misses in hash join probing phase; we proposea new join algorithm; Sorted Probing (in short; SP); which pre-sorts the hashed key values …,Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data,2012,*
On Extending InnoDB Double Write Buffer as Flash Memory SSD based Caches,Gi-Tae Yun; Woon-Hak Kang; Sang-Won Lee,Abstract The read/write performance of flash memory SSD has greatly increased throughintrinsic parallel architecture; it shows higher random access performance compared withtraditional storage device. By these trends; a few studies proposed that to use flash memorySSD as a cache buffer between main memory buffer pool in database and HDD. However;they don't fully exploit the write performance of SSD; because they only focused on randomaccess to the f1ash memory SSD. This paper proposes a cache buffer architecture based onflash memory SSD; by divided and extended double write buffer of InnoDB; one of popularstorage engines for MySQL. All evicted buffer pages from main memory buffer by bufferreplacement algorithm are sequentially written to the double write area. If a page found indouble write area when it requested by buffer manager; the found page read from SSD …,Journal of KIISE: Databases,2012,*
플래시 메모리 SSD 를 이용한 알티베이스 확장 캐시의 구현,구동현， 오기환， 구슬기， 강운학， 이상원,DB 에서 일반적인 연산 중 가장 큰 시간을 소모하는 부분은 I/O 시간이다. 이를 줄이기 위하여여러 가지 연구가 진행되었는데; 최근 플래시 메모리 SSD 가 상용화 되면서 SSD 를 이용하여I/O 시간을 줄이기위한 연구가 진척 되었다. 본 논문에서는; 메모리와 디스크로 구성된 기존계층구조에; 플래시 메모리 SSD 를 추가해서 메모리 버퍼의 확장 캐시로 사용하는 기법을 국산DBMS 인 알티베이스에서 설계; 구현방안을 설명한다. 성능평가 수행 결과 DB 사이즈 대비10% 의 SSD 를 사용하여 최대 220% 의 성능향상을보였다.,한국정보과학회 학술발표논문집,2011,*
Altibase DSM: CTable for pull-based processing in SPE,Jaemyung Kim; Vladimir Verjovkin; Sergey A Fedorov; Younghun Kim; Dae-Il Kim; Sungjin Kim; Sang-Won Lee,Abstract We demonstrate streaming applications of the Altibase Data Stream Middleware(DSM); the distributed Stream Processing Engine using the Publish/SubscribeCommunication Model. Altibase DSM has the Cached Table that is a key-value storesupporting not only insert but also update and delete operations. The demos include the Sex-offender Tracking and Bus Arrival Information Systems.,Proceedings of the 5th ACM international conference on Distributed event-based system,2011,*
Some research directions in flashDB,Sang-Won Lee,Abstract Flash memory based SSDs (flash SSDs) are becoming popular as an alternativestorage to harddisk; and it is not unrealistic to witness in the foreseeable future that flashSSDs replace harddisks as the main secondary storage in enterprise databases. In fact;Oracle has already started to use flash SSDs as its main storage in performing TPC-Cbenchmark [1]. In this talk; we will outline some personal research directions in flash memorydatabase (in short; FlashDB) under way. First of all; we will show the multipurpose uses ofthe log in flash memory; which has been mainly regarded as a write performance booster inflash memory [2][3]. As one of specific examples; we will explain how the concept of log inthe in-page logging scheme can be extended to support multiversions and fast recovery inflash memory in a very effective way with a modest overhead. Second; we are …,Proceedings of the 16th international conference on Database systems for advanced applications,2011,*
Memory Leak Detection Using Adaptive Cyclic Memory Allocation,Woo-Sup Lim; Hwan-Soo Han; Sang-Won Lee,Abstract There are many memory leak detection tools. However; programmers; who developvery large programs; tend to avoid testing their programs with memory leak detection toolssince these tools require runtime and space overheads. Thus; we present a memory leakdetection technique which enables programmers to test their modules in their unit test phasewith low overheads. To achieve this goal; we extend the existing cyclic memory allocationtechnique and evaluate our memory leak detection technique on a tiny DBMS. In ourexperiments; we find our tool has reasonably low runtime and space overheads and itreports only a small number of false positives.,Journal of KIISE: Software and Applications,2010,*
A User-Defined Index for Containment Queries in XML,Gap-Joo Na; Sang-Won Lee,Abstract Containment queries for XML documents is one of the most important query types;and thus the efficient support for this type of query is crucial for XML databases. Recently;object-relational database management system (ORDBMS) vendors try to store and retrieveXML data in their products. In this paper; we propose an extensible index to supportcontainment queries over the XML data stored as BLOB type in ORDBMSs. That is; wedescribe how to implement an index using the extensibility feature of an ORDBMS; anddescribe its usage. The main advantage of this index is user's productivity in handling XMLdata in SQL language.,International Conference on Computational Science and Its Applications,2009,*
DATABASE MANAGEMENT SYSTEM BASED ON IN-PAGE LOGGING AND METHOD USING THE SYSTEM,*,*,*,2008,*
DATABASE MANAGEMENT SYSTEM BASED ON IN-PAGE LOGGING AND METHOD USING THE SYSTEM,*,*,*,2008,*
Towards Flash-based Enterprise Databases,Sang-Won Lee,Page 1. Towards Flash-based Enterprise Databases Sep. 22nd; 2008 Sang-Won LeeSungkyunkwan University Korea Sungkyunkwan University; Korea 1 SKKU VLDB Lab. TowardFlash-based Enterprise Databases Page 2. SKKU VLDB Lab. ▪ Research Directions − Vision:“Flash is disk; disk is tape; and tape is dead.”(by Jim Gray) − Strategy: “Do only what only youcan do.”(by EW Dijkstra) − Research Goal: “Database systems on flash memory” pioneer ▪ RecentAchievements − FAST: One of the most efficient FTL mechanisms (ACM Transactions onEmbedded Computing Systems; 2007) − IPL: An innovative database storage scheme on flashmemory − IPL: An innovative database storage scheme on flash memory (ACM SIGMOD 2007) −A Case for Flash Memory SSD in Enterprise Database 2 SKKU VLDB Lab. Toward Flash-basedEnterprise Databases Applications (ACM SIGMOD 2008) Page 3 …,電子情報通信学会技術研究報告. DE; データ工学,2008,*
Redo Log 저장장치로서의 Flash SSD 성능 평가,김상우， 이상원,플래시 메모리는 기계적인 요소를 포함하는 하드디스크와 달리 전자적으로 동작하기 때문에아주 빠른 접근 속도 (Access Latency) 를 제공한다. 최근에 PC 나 Enterprise 환경에서하드디스크를 대체할 목적으로; 표준 인터페이스를 제공하는 32GB; 64GB 급의 NAND 플래시메모리 기반의 Solid State Disk (SSD) 가 50 만원대 가격으로 출시되기 시작되었다. 한편; Log기반의 Recovery 를 제공하는 현재의 DBMS Architecture 는 Log Write 속도가 데이터베이스전체성능에 아주 큰 영향을 미친다. 이런 상황에서; 본 논문에서는 Flash SSD 의 빠른 접근속도로 인해서 Log Device 만을 하드디스크에서 Flash SSD 로 대체함으로써 상당한 양의성능향상이 있음을 보인다.,한국인터넷정보학회 학술발표대회 논문집,2007,*
Research Issues in Next Generation DBMS for Mobile Platforms,Sang-Won Lee Gap-Joo Na; Jae-Myung Kim; Joo-Hyung Oh Sang-Woo Kim,ABSTRACT Recently; flash memory (in particular; NAND) is being rapidly deployed as datastorage for mobile platforms such as PDAs; MP3 players; mobile phones and digitalcameras; mainly because of its many advantages over its competitor; hard disk; including itslow electronic power; non-volatile storage; high performance; physical stability; smaller size;light weight; and portability. Considering its rapid technical improvement both in capacityand speed; it will have a competitive advantage over its rivalry minidrive (ie a small size harddisk) under 100 Gbytes within a few years; As the applications in next generation mobileplatforms become large; complex; and more data-oriented; they requires the databasetechnology; because the file interface is too complex to manage their complicated datarequirements. However; flash memory; compared to hard disk; has a few unique …,*,2007,*
Schema change operations for versioning complex objects hierarchy in OODBs,Sang-Won Lee,Abstract In this paper; we propose a set of schema change operations which allows torestructure complex object hierarchy in object-oriented databases. This model extends aschema version model; called RiBS; which is based on the concept of Rich Base Schema. Inthe RiBS model; each schema version is in the form of updatable class hierarchy view overone base schema; called the RiBS layer; which has richer schema information than anyexisting schema version in the database. In this paper; we introduce new operations forrestructuring composite object hierarchy in schema versions; and explain their semantics.The originality of this paper lies in that 1) we introduce several new operations to restructurecomposite object hierarchy; and 2) this extended RiBS model operations raise the conceptof data independence in OODBs upto the schema level.,Advances in Conceptual Modeling-Theory and Practice,2006,*
FAST: A log-buffer based ftl scheme with fully associative sector translation,SW Lee; DJ Park; TS Chung; DH Lee; SW Park; HJ Songe,*,The UKC; August,2005,*
임베디드 시스템 기반의 유비쿼터스 환경에서 Fuzzy Algorithm 을 이용한 실시간 손 제스처 인식 시스템의 설계 및 구현,김정현， 김동규， 이상원， 홍광석,· 분야내 활용도: 최근 24 개월간 DBpia 이용수를 기준으로 산출/0% 에 가까울 수록 활용도가높고; 100% 에 가까울 수록 활용도가 낮음,한국통신학회 학술대회 및 강연회,2005,*
A Join Processing Technique using Sorted Index Scan,Jong-Baek Lee; Woon-Hak Kang; Sang-Won Lee,*,Proceedings of the Korean Information Science Society Conference,*,*
Event-driven 방식의 튜닝 방법론,Si-Yeon Kim; Sang-Won Lee,*,*,*,*
Performance Evaluation of Flash Memory Management Schemes on Android Platform,Yun-A Kim; Gi-Hwan Oh; Kang-Nyeon Kim; Woon-Hak Kang; Sang-Won Lee,*,Proceedings of the Korea Information Processing Society Conference,*,*
SQLite,Sang-Won Lee; Bongki Moon,*,*,*,*
SQLite optimization with phase change memory for mobile applications,*,*,*,*,*
SQLite optimization with phase change memory for mobile applications,*,*,*,*,*
PPL phase,*,*,*,*,*
