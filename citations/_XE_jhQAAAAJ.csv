A comparison of join algorithms for log processing in mapreduce,Spyros Blanas; Jignesh M Patel; Vuk Ercegovac; Jun Rao; Eugene J Shekita; Yuanyuan Tian,Abstract The MapReduce framework is increasingly being used to analyze large volumes ofdata. One important type of data analysis done with MapReduce is log processing; in whicha click-stream or an event log is filtered; aggregated; or mined for patterns. As part of thisanalysis; the log often needs to be joined with reference data such as information aboutusers. Although there have been many studies examining join algorithms in parallel anddistributed DBMSs; the MapReduce framework is cumbersome for joins. MapReduceprogrammers often use simple but inefficient algorithms to perform joins. In this paper; wedescribe crucial implementation details of a number of well-known join strategies inMapReduce; and present a comprehensive experimental comparison of these jointechniques on a 100-node Hadoop cluster. Our results provide insights that are unique to …,Proceedings of the 2010 ACM SIGMOD International Conference on Management of data,2010,465
Efficient aggregation for graph summarization,Yuanyuan Tian; Richard A Hankins; Jignesh M Patel,Abstract Graphs are widely used to model real world objects and their relationships; andlarge graph datasets are common in many application domains. To understand theunderlying characteristics of large graphs; graph summarization techniques are critical.However; existing graph summarization methods are mostly statistical (studying statisticssuch as degree distributions; hop-plots and clustering coefficients). These statisticalmethods are very useful; but the resolutions of the summaries are hard to control. In thispaper; we introduce two database-style operations to summarize graphs. Like the OLAP-style aggregation methods that allow users to drill-down or roll-up to control the resolution ofsummarization; our methods provide an analogous functionality for large graph datasets.The first operation; called SNAP; produces a summary graph by grouping nodes based …,Proceedings of the 2008 ACM SIGMOD international conference on Management of data,2008,375
Tale: A tool for approximate large graph matching,Yuanyuan Tian; Jignesh M Patel,Large graph datasets are common in many emerging database applications; and mostnotably in large-scale scientific applications. To fully exploit the wealth of informationencoded in graphs; effective and efficient graph matching tools are critical. Due to the noisyand incomplete nature of real graph datasets; approximate; rather than exact; graphmatching is required. Furthermore; many modern applications need to query large graphs;each of which has hundreds to thousands of nodes and edges. This paper presents a noveltechnique for approximate matching of large graph queries. We propose a novel indexingmethod that incorporates graph structural information in a hybrid index structure. Thisindexing technique achieves high pruning power and the index size scales linearly with thedatabase size. In addition; we propose an innovative matching paradigm to query large …,Data Engineering; 2008. ICDE 2008. IEEE 24th International Conference on,2008,265
SystemML: Declarative machine learning on MapReduce,Amol Ghoting; Rajasekar Krishnamurthy; Edwin Pednault; Berthold Reinwald; Vikas Sindhwani; Shirish Tatikonda; Yuanyuan Tian; Shivakumar Vaithyanathan,MapReduce is emerging as a generic parallel programming paradigm for large clusters ofmachines. This trend combined with the growing need to run machine learning (ML)algorithms on massive datasets has led to an increased interest in implementing MLalgorithms on MapReduce. However; the cost of implementing a large class of MLalgorithms as low-level MapReduce jobs on varying data and machine cluster sizes can beprohibitive. In this paper; we propose SystemML in which ML algorithms are expressed in ahigher-level language and are compiled and executed in a MapReduce environment. Thishigher-level language exposes several constructs including linear algebra primitives thatconstitute key building blocks for a broad class of supervised and unsupervised MLalgorithms. The algorithms expressed in SystemML are compiled and optimized into a set …,Data Engineering (ICDE); 2011 IEEE 27th International Conference on,2011,248
CoHadoop: flexible data placement and its exploitation in Hadoop,Mohamed Y Eltabakh; Yuanyuan Tian; Fatma Özcan; Rainer Gemulla; Aljoscha Krettek; John McPherson,Abstract Hadoop has become an attractive platform for large-scale data analytics. In thispaper; we identify a major performance bottleneck of Hadoop: its lack of ability to colocaterelated data on the same set of nodes. To overcome this bottleneck; we introduceCoHadoop; a lightweight extension of Hadoop that allows applications to control where dataare stored. In contrast to previous approaches; CoHadoop retains the flexibility of Hadoop inthat it does not require users to convert their data to a certain format (eg; a relationaldatabase or a specific file format). Instead; applications give hints to CoHadoop that someset of files are related and may be processed jointly; CoHadoop then tries to colocate thesefiles for improved efficiency. Our approach is designed such that the strong fault toleranceproperties of Hadoop are retained. Colocation can be used to improve the efficiency of …,Proceedings of the VLDB Endowment,2011,216
SAGA: a subgraph matching tool for biological graphs,Yuanyuan Tian; Richard C Mceachin; Carlos Santos; DJ States; JM Patel,Abstract Motivation: With the rapid increase in the availability of biological graph datasets;there is a growing need for effective and efficient graph querying methods. Due to the noisyand incomplete characteristics of these datasets; exact graph matching methods havelimited use and approximate graph matching methods are required. Unfortunately; existinggraph matching methods are too restrictive as they only allow exact or near exact graphmatching. This paper presents a novel approximate graph matching technique called SAGA.This technique employs a flexible model for computing graph similarity; which allows fornode gaps; node mismatches and graph structural differences. SAGA employs an indexingtechnique that allows it to efficiently evaluate queries even against large graph datasets.Results: SAGA has been used to query biological pathways and literature datasets; which …,Bioinformatics,2007,205
From" Think Like a Vertex" to "Think Like a Graph",Yuanyuan Tian; Andrey Balmin; Severin Andreas Corsten; Shirish Tatikonda; John McPherson,Abstract To meet the challenge of processing rapidly growing graph and network datacreated by modern applications; a number of distributed graph processing systems haveemerged; such as Pregel and GraphLab. All these systems divide input graphs intopartitions; and employ a" think like a vertex" programming model to support iterative graphcomputation. This vertex-centric model is easy to program and has been proved useful formany graph algorithms. However; this model hides the partitioning information from theusers; thus prevents many algorithm-specific optimizations. This often results in longerexecution time due to excessive network messages (eg in Pregel) or heavy schedulingoverhead to ensure data consistency (eg in GraphLab). To address this limitation; wepropose a new" think like a graph" programming paradigm. Under this graph-centric …,Proceedings of the VLDB Endowment,2013,193
Event-based social networks: linking the online and offline social worlds,Xingjie Liu; Qi He; Yuanyuan Tian; Wang-Chien Lee; John McPherson; Jiawei Han,Abstract Newly emerged event-based online social services; such as Meetup and Plancast;have experienced increased popularity and rapid growth. From these services; we observeda new type of social network-event-based social network (EBSN). An EBSN does not onlycontain online social interactions as in other conventional online social networks; but alsoincludes valuable offline social interactions captured in offline activities. By analyzing realdata collected from Meetup; we investigated EBSN properties and discovered many uniqueand interesting characteristics; such as heavy-tailed degree distributions and strong localityof social interactions. We subsequently studied the heterogeneous nature (co-existence ofboth online and offline social interactions) of EBSNs on two challenging problems:community detection and information flow. We found that communities detected in EBSNs …,Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining,2012,172
Discovery-driven graph summarization,Ning Zhang; Yuanyuan Tian; Jignesh M Patel,Large graph datasets are ubiquitous in many domains; including social networking andbiology. Graph summarization techniques are crucial in such domains as they can assist inuncovering useful insights about the patterns hidden in the underlying data. One importanttype of graph summarization is to produce small and informative summaries based on user-selected node attributes and relationships; and allowing users to interactively drill-down orroll-up to navigate through summaries with different resolutions. However; two keycomponents are missing from the previous work in this area that limit the use of this methodin practice. First; the previous work only deals with categorical node attributes.Consequently; users have to manually bucketize numerical attributes based on domainknowledge; which is not always possible. Moreover; users often have to manually iterate …,Data Engineering (ICDE); 2010 IEEE 26th International Conference on,2010,119
Practical methods for constructing suffix trees,Yuanyuan Tian; Sandeep Tata; Richard A Hankins; Jignesh M Patel,Abstract Sequence datasets are ubiquitous in modern life-science applications; andquerying sequences is a common and critical operation in many of these applications. Thesuffix tree is a versatile data structure that can be used to evaluate a wide variety of querieson sequence datasets; including evaluating exact and approximate string matches; andfinding repeat patterns. However; methods for constructing suffix trees are often very time-consuming; especially for suffix trees that are large and do not fit in the available mainmemory. Even when the suffix tree fits in memory; it turns out that the processor cachebehavior of theoretically optimal suffix tree construction methods is poor; resulting in poorperformance. Currently; there are a large number of algorithms for constructing suffix trees;but the practical tradeoffs in using these algorithms for different scenarios are not well …,The VLDB Journal,2005,105
Michigan molecular interactions r2: from interacting proteins to pathways,V Glenn Tarcea; Terry Weymouth; Alex Ade; Aaron Bookvich; Jing Gao; Vasudeva Mahavisno; Zach Wright; Adriane Chapman; Magesh Jayapandian; Arzucan Özgür; Yuanyuan Tian; Jim Cavalcoli; Barbara Mirel; Jignesh Patel; Dragomir Radev; Brian Athey; David States; HV Jagadish,Abstract Molecular interaction data exists in a number of repositories; each with its own dataformat; molecule identifier and information coverage. Michigan molecular interactions (MiMI)assists scientists searching through this profusion of molecular interaction data. The originalrelease of MiMI gathered data from well-known protein interaction databases; and deepmerged this information while keeping track of provenance. Based on the feedback receivedfrom users; MiMI has been completely redesigned. This article describes the resulting MiMIRelease 2 (MiMIr2). New functionality includes extension from proteins to genes and topathways; identification of highlighted sentences in source publications; seamless two-waylinkage with Cytoscape; query facilities based on MeSH/GO terms and other concepts;approximate graph matching to find relevant pathways; support for querying in bulk; and a …,Nucleic acids research,2008,102
Systems and methods for processing machine learning algorithms in a MapReduce environment,*,Systems and methods for processing Machine Learning (ML) algorithms in a MapReduceenvironment are described. In one embodiment of a method; the method includes receivinga ML algorithm to be executed in the MapReduce environment. The method further includesparsing the ML algorithm into a plurality of statement blocks in a sequence; wherein eachstatement block comprises a plurality of basic operations (hops). The method also includesautomatically determining an execution plan for each statement block; wherein at least oneof the execution plans comprises one or more low-level operations (lops). The methodfurther includes implementing the execution plans in the sequence of the plurality of thestatement blocks.,*,2013,66
Scalable topic-specific influence analysis on microblogs,Bin Bi; Yuanyuan Tian; Yannis Sismanis; Andrey Balmin; Junghoo Cho,Abstract Social influence analysis on microblog networks; such as Twitter; has been playinga crucial role in online advertising and brand management. While most previous influenceanalysis schemes rely only on the links between users to find key influencers; they omit theimportant text content created by the users. As a result; there is no way to differentiate thesocial influence in different aspects of life (topics). Although a few prior works do supporttopic-specific influence analysis; they either separate the analysis of content from theanalysis of network structure; or assume that content is the only cause of links; which isclearly an inappropriate assumption for microblog networks. To address the limitations of theprevious approaches; we propose a novel Followship-LDA (FLDA) model; which integratesboth content topic discovery and social influence analysis in the same generative process …,Proceedings of the 7th ACM international conference on Web search and data mining,2014,56
Hybrid Parallelization Strategies for LargeScale Machine Learning in SystemML,S. Vaithyanathan M. Boehm; S. Tatikonda; B. Reinwald; P. Sen; Y. Tian; D. R. Burdick,Abstract SystemML aims at declarative; large-scale machine learning (ML) on top ofMapReduce; where high-level ML scripts with R-like syntax are compiled to programs of MRjobs. The declarative specification of ML algorithms enables---in contrast to existing large-scale machine learning libraries---automatic optimization. SystemML's primary focus is ondata parallelism but many ML algorithms inherently exhibit opportunities for task parallelismas well. A major challenge is how to efficiently combine both types of parallelism for arbitraryML scripts and workloads. In this paper; we present a systematic approach for combiningtask and data parallelism for large-scale machine learning on top of MapReduce. Weemploy a generic Parallel FOR construct (ParFOR) as known from high performancecomputing (HPC). Our core contributions are (1) complementary parallelization strategies …,Proceedings of the VLDB Endowment,2014,46
Resource Elasticity for Large-Scale Machine Learning,Botong Huang; Matthias Boehm; Yuanyuan Tian; Berthold Reinwald; Shirish Tatikonda; Frederick R Reiss,Abstract Declarative large-scale machine learning (ML) aims at flexible specification of MLalgorithms and automatic generation of hybrid runtime plans ranging from single node; in-memory computations to distributed computations on MapReduce (MR) or similarframeworks. State-of-the-art compilers in this context are very sensitive to memoryconstraints of the master process and MR cluster configuration. Different memoryconfigurations can lead to significant performance differences. Interestingly; resourcenegotiation frameworks like YARN allow us to explicitly request preferred resourcesincluding memory. This capability enables automatic resource elasticity; which is not justimportant for performance but also removes the need for a static cluster configuration; whichis always a compromise in multi-tenancy environments. In this paper; we introduce a …,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,23
SystemML’s Optimizer: Plan Generation for Large-Scale Machine Learning Programs,Matthias Boehm; Douglas R Burdick; Alexandre V Evfimievski; Berthold Reinwald; Frederick R Reiss; Prithviraj Sen; Shirish Tatikonda; Yuanyuan Tian,Abstract SystemML enables declarative; large-scale machine learning (ML) via a high-levellanguage with R-like syntax. Data scientists use this language to express their MLalgorithms with full flexibility but without the need to hand-tune distributed runtime executionplans and system configurations. These ML programs are dynamically compiled andoptimized based on data and cluster characteristics using ruleand cost-based optimizationtechniques. The compiler automatically generates hybrid runtime execution plans rangingfrom in-memory; single node execution to distributed MapReduce (MR) computation anddata access. This paper describes the SystemML optimizer; its compilation chain; andselected optimization phases for generating efficient execution plans.,Bulletin of the IEEE Computer Society Technical Committee on Data Engineering,2014,22
Scalable and numerically stable descriptive statistics in systemml,Yuanyuan Tian; Shirish Tatikonda; Berthold Reinwald,With the exponential growth in the amount of data that is being generated in recent years;there is a pressing need for applying machine learning algorithms to large data sets.SystemML is a framework that employs a declarative approach for large scale data analytics.In SystemML; machine learning algorithms are expressed as scripts in a high-levellanguage; called DML; which is syntactically similar to R. DML scripts are compiled;optimized; and executed in the SystemML runtime that is built on top of MapReduce. As thebasis of virtually every quantitative analysis; descriptive statistics provide powerful tools toexplore data in SystemML. In this paper; we describe our experience in implementingdescriptive statistics in SystemML. In particular; we elaborate on how to overcome the twomajor challenges:(1) achieving numerical stability while operating on large data sets in a …,Data Engineering (ICDE); 2012 IEEE 28th International Conference on,2012,17
Periscope/gq: a graph querying toolkit,Yuanyuan Tian; Jignesh M Patel; Viji Nair; Sebastian Martini; Matthias Kretzler,Abstract Real life data can often be modeled as graphs; in which nodes represent objectsand edges between nodes indicate their relationships. Large graph datasets are common inmany emerging applications. Examples span from social networks; biological networks tocomputer networks. To fully exploit the wealth of information encoded in graphs; systems formanaging and analyzing graph data are critical. To address this need; we have designedand developed a graph querying toolkit; called Periscope/GQ. This toolkit is built on top of atraditional RDBMS. It provides a uniform schema for storing graphs in the database andsupports various graph query operations; especially sophisticated operations; such asapproximate graph matching; large graph alignment and graph summarization. Users caneasily combine several operations to perform complex analysis on graphs. In addition …,Proceedings of the VLDB Endowment,2008,16
Big Graph Analytics Systems,Da Yan; Yingyi Bu; Yuanyuan Tian; Amol Deshpande; James Cheng,Abstract In recent years we have witnessed a surging interest in developing Big Graphprocessing systems. To date; tens of Big Graph systems have been proposed. This tutorialprovides a timely and comprehensive review of existing Big Graph systems; andsummarizes their pros and cons from various perspectives. We start from the existing vertex-centric systems; which which a programmer thinks intuitively like a vertex when developingparallel graph algorithms. We then introduce systems that adopt other computationparadigms and execution settings. The topics covered in this tutorial include programmingmodels and algorithm design; computation models; communication mechanisms; out-of-coresupport; fault tolerance; dynamic graph support; and so on. We also highlight future researchopportunities on Big Graph analytics.,Proceedings of the 2016 International Conference on Management of Data,2016,11
Distributed Graph Summarization,Xingjie Liu; Yuanyuan Tian; Qi He; Wang-Chien Lee; John McPherson,Abstract Graph has been a ubiquitous and essential data representation to model real worldobjects and their relationships. Today; large amounts of graph data have been generated byvarious applications. Graph summarization techniques are crucial in uncovering usefulinsights about the patterns hidden in the underlying data. However; all existing works ingraph summarization are single-process solutions; and as a result cannot scale to largegraphs. In this paper; we introduce three distributed graph summarization algorithms toaddress this problem. Experimental results show that the proposed algorithms can producegood quality summaries and scale well with increasing data sizes. To the best of ourknowledge; this is the first work to study distributed graph summarization methods.,The 23rd ACM International Conference on Information and Knowledge Management (CIKM),2014,11
Joins for Hybrid Warehouses: Exploiting Massive Parallelism in Hadoop and Enterprise Data Warehouses,H. Pirahesh. Y. Tian; T. Zou; F. Ozcan; R. Goncalves,*,The 18th International Conference on Extending Database Technology (EDBT),2015,8
Dynamic Interaction Graphs with Probabilistic Edge Decay,Wenlei Xie; Yuanyuan Tian; Yannis Sismanis; Andrey Balmin; Peter J Haas,A large scale network of social interactions; such as mentions in Twitter; can often bemodeled as a “dynamic interaction graph” in which new interactions (edges) are continuallyadded over time. Existing systems for extracting timely insights from such graphs are basedon either a cumulative “snapshot” model or a “sliding window” model. The former modeldoes not sufficiently emphasize recent interactions. The latter model abruptly forgets pastinteractions; leading to discontinuities in which; eg; the graph analysis completely ignoreshistorically important influencers who have temporarily gone dormant. We introduce TIDE; adistributed system for analyzing dynamic graphs that employs a new “probabilistic edgedecay”(PED) model. In this model; the graph analysis algorithm of interest is applied at eachtime step to one or more graphs obtained as samples from the current “snapshot” graph …,The 31st International Conference on Data Engineering (ICDE),2015,8
Interactive Graph Summarization,Yuanyuan Tian; Jignesh M Patel,Abstract Graphs are widely used to model real-world objects and their relationships; andlarge graph data sets are common in many application domains. To understand theunderlying characteristics of large graphs; graph summarization techniques are critical.Existing graph summarization methods are mostly statistical (studying statistics such asdegree distributions; hop-plots; and clustering coefficients). These statistical methods arevery useful; but the resolutions of the summaries are hard to control. In this chapter; weintroduce database-style operations to summarize graphs. Like the OLAP-style aggregationmethods that allow users to interactively drill-down or roll-up to control the resolution ofsummarization; the methods described in this chapter provide an analogous functionality forlarge graph data sets.,Link Mining: Models; Algorithms; and Applications,2010,7
A platform for eXtreme Analytics,Andrey Balmin; Kevin Beyer; Vuk Ercegovac; John McPherson; Fatma Oezcan; Hamid Pirahesh; Eugene Shekita; Yannis Sismanis; Sandeep Tata; Yuanyuan Tian,With the rapid increase in the volume of data that enterprises are producing; enterprises areadopting large-scale data processing platforms such as Hadoop® to store; manage; and rundeep analytics to gain actionable insights from their “big data.” At IBM Research-Almaden;we have been helping enterprise customers build solutions exploiting data-intensiveanalytics. Our deep experience with actual users has led to an extensive understanding ofthe platform requirements needed to support these solutions; and our goal is to provide apowerful analytics platform; which we call eXtreme Analytics Platform (XAP); that can beused to create solutions for customer problems that have not been economically feasible tosolve until now. XAP provides Jaql [ie; JavaScript® Object Notation (JSON) query language;a scripting language to specify data flows; tools; and techniques to optimize the runtime …,IBM Journal of Research and Development,2013,6
Distributed reverse semantic index,*,Embodiments of the invention relate to building a distributed reverse semantic index. In onegeneral embodiment a plurality of documents are received with each document having atleast one defined rule and or semantic. The documents are distributed among a plurality ofnodes of a system. The documents are processed in a generally parallel fashion. Processingthe documents includes processing text data of each of the document and breaking eachdocument into fields to index the text data to create index data by deferring how tocategorize the text data based upon the defined rule and or semantics. The indexed data iscombined back together to create an indexer-agnostic semantic index including a plurality ofthe semantic index shards and to semantically classify the documents based on the indexshards into groups based on document type to create the distributed reverse semantic …,*,2012,6
Big Graph Analytics Platforms,Da Yan; Yingyi Bu; Yuanyuan Tian; Amol Deshpande,Abstract Due to the growing need to process large graph and network datasets created bymodern applications; recent years have witnessed a surging interest in developing biggraph platforms. Tens of such big graph systems have already been developed; but therelacks a systematic categorization and comparison of these systems. This article provides atimely and comprehensive survey of existing big graph systems; and summarizes their keyideas and technical contributions from various aspects. In addition to the popular vertex-centric systems which espouse a think-like-a-vertex paradigm for developing parallel graphapplications; this survey also covers other programming and computation models; contraststhose against each other; and provides a vision for the future research on big graphanalytics platforms. This survey aims to help readers get a systematic picture of the …,Foundations and Trends® in Databases,2017,5
Wildfire: Concurrent Blazing Data Ingest and Analytics,Ronald Barber; Matt Huras; Guy Lohman; C Mohan; Rene Mueller; Fatma Özcan; Hamid Pirahesh; Vijayshankar Raman; Richard Sidle; Oleg Sidorkin; Adam Storm; Yuanyuan Tian; Pinar Tözun,Abstract We demonstrate Hybrid Transactional and Analytics Processing (HTAP) on theSpark platform by the Wildfire prototype; which can ingest up to~ 6 million inserts per secondper node and simultaneously perform complex SQL analytics queries. Here; a simplifiedmobile application uses Wildfire to recommend advertising to mobile customers based upontheir distance from stores and their interest in products sold by these stores; whilecontinuously graphing analytics results as those customers move and respond to the adswith purchases.,Proceedings of the 2016 International Conference on Management of Data,2016,4
Vector throttling to control resource use in computer systems,*,Embodiments of the invention relate to building a distributed reverse semantic index. In onegeneral embodiment a plurality of documents are received with each document having atleast one defined rule and or semantic. The documents are distributed among a plurality ofnodes of a system. The documents are processed in a generally parallel fashion. Processingthe documents includes processing text data of each of the document and breaking eachdocument into fields to index the text data to create index data by deferring how tocategorize the text data based upon the defined rule and or semantics. The indexed data iscombined back together to create an indexer-agnostic semantic index including a plurality ofthe semantic index shards and to semantically classify the documents based on the indexshards into groups based on document type to create the distributed reverse semantic …,*,2012,4
Evolving Databases for New-Gen Big Data Applications.,Ronald Barber; Christian Garcia-Arellano; Ronen Grosman; Rene Mueller; Vijayshankar Raman; Richard Sidle; Matt Spilchen; Adam J Storm; Yuanyuan Tian; Pinar Tözün; Daniel C Zilio; Matt Huras; Guy M Lohman; Chandrasekaran Mohan; Fatma Özcan; Hamid Pirahesh,ABSTRACT The rising popularity of large-scale real-time analytics applications (real-timeinventory/pricing; mobile apps that give you suggestions; fraud detection; risk analysis; etc.)emphasize the need for distributed data management systems that can handle fasttransactions and analytics concurrently. Efficient processing of transactional and analyticalrequests; however; require different optimizations and architectural decisions in a system.This paper presents the Wildfire system; which targets Hybrid Transactional and AnalyticalProcessing (HTAP). Wildfire leverages the Spark ecosystem to enable large-scale dataprocessing with different types of complex analytical requests; and columnar dataprocessing to enable fast transactions and analytics concurrently.,CIDR,2017,3
Building a Hybrid Warehouse: Efficient Joins between Data Stored in HDFS and Enterprise Warehouse,Yuanyuan Tian; Fatma Özcan; Tao Zou; Romulo Goncalves; Hamid Pirahesh,Abstract The Hadoop Distributed File System (HDFS) has become an important datarepository in the enterprise as the center for all business analytics; from SQL queries andmachine learning to reporting. At the same time; enterprise data warehouses (EDWs)continue to support critical business analytics. This has created the need for a newgeneration of a special federation between Hadoop-like big data platforms and EDWs;which we call the hybrid warehouse. There are many applications that require correlatingdata stored in HDFS with EDW data; such as the analysis that associates click logs stored inHDFS with the sales data stored in the database. All existing solutions reach out to HDFSand read the data into the EDW to perform the joins; assuming that the Hadoop side doesnot have efficient SQL support. In this article; we show that it is actually better to do most …,ACM Transactions on Database Systems (TODS),2016,3
A Generic Solution to Integrate SQL and Analytics for Big Data,H. Pirahesh N. R. Katsipoulakis; Y. Tian; F. Ozcan; B. Reinwald,*,The 18th International Conference on Extending Database Technology (EDBT),2015,3
Compiling machine learning algorithms with SystemML,M Boehm; D Burdick; A Evfimievski; B Reinwald; P Sen; S Tatikonda; Y Tian,Abstract Analytics on big data range from passenger volume prediction in transportation tocustomer satisfaction in automotive diagnostic systems; and from correlation analysis insocial media data to log analysis in manufacturing. Expressing and running these analyticsfor varying data characteristics and at scale is challenging. To address these challenges;SystemML implements a declarative; high-level language using an R-like syntax extendedwith machine-learning-specific constructs; that is compiled to a MapReduce runtime [2]. Thelanguage is rich enough to express a wide class of statistical; predictive modeling andmachine learning algorithms (Fig. 1). We chose robust algorithms that scale to large; andpotentially sparse data with many features.,Proceedings of the 4th annual Symposium on Cloud Computing,2013,3
Querying graph databases,Yuanyuan Tian,Abstract Real life data can often be modeled as graphs; in which nodes represent objectsand edges indicate their relationships. Large graph datasets are common in many emergingapplications. To fully exploit the wealth of information encoded in graphs; systems formanaging and analyzing graph data are critical.,*,2008,3
Scalable Topic-Specific Influence Analysis on Microblogs,Yuanyuan Tian,*,*,2013,2
Hybrid Transactional/Analytical Processing: A Survey,Fatma Özcan; Yuanyuan Tian; Pinar Tözün,Abstract The popularity of large-scale real-time analytics applications (real-timeinventory/pricing; recommendations from mobile apps; fraud detection; risk analysis; IoT;etc.) keeps rising. These applications require distributed data management systems that canhandle fast concurrent transactions (OLTP) and analytics on the recent data. Some of themeven need running analytical queries (OLAP) as part of transactions. Efficient processing ofindividual transactional and analytical requests; however; leads to different optimizationsand architectural decisions while building a data management system. For the kind of dataprocessing that requires both analytics and transactions; Gartner recently coined the termHybrid Transactional/Analytical Processing (HTAP). Many HTAP solutions are emergingboth from the industry as well as academia that target these new applications. While …,Proceedings of the 2017 ACM International Conference on Management of Data,2017,1
Identifying influencers for topics in social media,*,A computer determines social media influencers in a specific topic. The computer receives adataset of information on a website; the information including a list of users of the websiteand a list of content that each user posts; wherein each user is associated with one or moreother users. The computer identifies a plurality of variables associated with the dataset;wherein the plurality of variables represent the information of the dataset on the website. Thecomputer executes a topic specific search based on the plurality of variables; the topicsearch providing at least another list of users representing influencers in a specific topic.,*,2016,1
Identifying influencers for topics in social media,*,Abstract A computer determines social media influencers in a specific topic by receiving adataset of information associated with a website; the information including a first list of usersof the website and a list of content that each user posts on the website; wherein each user isassociated with other users from the first list of users. The computer determines initial valuesrepresenting variables of the dataset of information on the website; wherein the variablesinclude one or more topics for the list of content that each user from the first list of users postson the website. The computer performs an iteration of Gibbs Sampling utilizing the initialvalues. The computer determines the one or more new values representing variables of thedataset represent a distribution of the one or more topics for the list of content that each userfrom the first list of users posts.,*,2018,*
Temporally-Biased Sampling for Online Model Management,Brian Hentschel; Peter J Haas; Yuanyuan Tian,To maintain the accuracy of supervised learning models in the presence of evolving datastreams; we provide temporally-biased sampling schemes that weigh recent data mostheavily; with inclusion probabilities for a given data item decaying exponentially over time.We then periodically retrain the models on the current sample. This approach speeds up thetraining process relative to training on all of the data. Moreover; time-biasing lets the modelsadapt to recent changes in the data while—unlike in a sliding-window approach—stillkeeping some old data to ensure robustness in the face of temporary fluctuations andperiodicities in the data values. In addition; the sampling-based approach allows existinganalytic algorithms for static data to be applied to dynamic streaming data essentially withoutchange. We provide and analyze both a simple sampling scheme (T-TBS) that …,*,2018,*
Systems for Big Graph Analytics,Da Yan; Yuanyuan Tian; James Cheng,Due to the growing need of processing big graph datasets (eg; online social networks;knowledge graphs) created by modern applications; recent years have witnessed a surginginterest in developing big graph analytics systems. Tens of systems have been developedfor processing big graphs. Although they enrich the tools available for users to analyze biggraphs; it is difficult for beginners of this field to gather up the threads of various systemfeatures and optimization techniques; and to choose the right system for their problems athand. As an effort to help readers obtain a comprehensive idea of big graph systemsresearch; we have presented a tutorial in SIGMOD 2016; 1 and published a survey [1] thatsummarizes the novel ideas and technical contributions of various systems. This bookserves slightly different purposes from the above works:• Instead of a comprehensive …,*,2017,*
Subgraph-based distributed graph processing,*,Embodiments relate to subgraph-based distributed graph processing. An aspect includesreceiving an input graph comprising a plurality of vertices. Another aspect includespartitioning the input graph into a plurality of subgraphs; each subgraph comprising internalvertices and boundary vertices. Another aspect includes assigning one or more respectivesubgraphs to each of a plurality of workers. Another aspect includes initiating processing ofthe plurality of subgraphs by performing a series of processing steps comprising: processingthe internal vertices and boundary vertices internally within each of the subgraphs; detectingthat a change was made to a boundary vertex of a first subgraph during the internalprocessing; and sending a message from a first worker to which the first subgraph isassigned to a second worker to which a second subgraph is assigned in response to …,*,2016,*
Sparsity-driven matrix representation to optimize operational and storage efficiency,*,Embodiments of the invention relate to sparsity-driven matrix representation. In oneembodiment; a sparsity of a matrix is determined and the sparsity is compared to athreshold. Computer memory is allocated to store the matrix in a first data structure formatbased on the sparsity being greater than the threshold. Computer memory is allocated tostore the matrix in a second data structure format based on the sparsity not being greaterthan the threshold.,*,2016,*
JOINING DATA ACROSS A PARALLEL DATABASE AND A DISTRIBUTED PROCESSING SYSTEM,*,Embodiments relate to joining data across a parallel database and a distributed processingsystem. Aspects include receiving a query on data stored in parallel database T and datastored in distributed processing system L; applying local query predicates and projection todata T to create T′; and applying local query predicates and projection to L to create L′.Based on determining that a size of L′ is less than a size of T′ and that the size of L′ isless than a first threshold; transmitting L′ to the parallel database and executing a joinbetween T′ and L′. Based on determining that a number of the nodes distributedprocessing system n multiplied by the size of T′ is less than the size of L′ and that the sizeof T′ is less than a second threshold; transmitting T′ to the distributed processing systemand executing a join between T′ and L′.,*,2016,*
Hybrid parallelization strategies for machine learning programs on top of MapReduce,*,Parallel execution of machine learning programs is provided. Program code is received. Theprogram code contains at least one parallel for statement having a plurality of iterations. Aparallel execution plan is determined for the program code. According to the parallelexecution plan; the plurality of iterations is partitioned into a plurality of tasks. Each taskcomprises at least one iteration. The iterations of each task are independent. Data requiredby the plurality of tasks is determined. An access pattern by the plurality of tasks of the datais determined. The data is partitioned based on the access pattern.,*,2016,*
Dynamic interaction graphs with probabilistic edge decay,*,In one general embodiment; a computer-implemented method is provided for analyzing adynamic graph. The computer-implemented method includes generating two or moresample graphs by sampling edges of a current snapshot of a dynamic graph. Additionally;the computer-implemented method includes generating two or more partial results byexecuting an algorithm on the sample graphs. Still yet; the computer-implemented methodincludes combining the partial results; from executing the algorithm on the sample graphs;into a final result.,*,2015,*
SYSTEMS AND METHODS FOR PROCESSING MACHINE LEARNING ALGORITHMS IN A MAPREDUCE ENVIRONMENT,*,*,*,2012,*
How to Be Competitive for Industrial Research Jobs,Yuanyuan Tian,Page 1. © 2011 IBM Corporation How to Be Competitive for Industrial Research Jobs YuanyuanTian IBM Almaden Research Center Page 2. © 2011 IBM Corporation 2 Application ❑ Whento start applying? • Industrial research labs do hire year around; but the bulk is in spring • Tryto send out your application before Feb; but the earlier the better ❑ Application materials •Resume/CV • References • Research Statement ❑ Where to send the application • Directly tothe researchers of the lab • Applying online is usually not useful – gets lost in the flood ❑ Whatgets you an interview? • Publications • Past internships or collaboration • References Page 3. ©2011 IBM Corporation 3 Interview Format ❑ Phone Interview • 30 minutes or 1 hour • About yourPhD work and intern experiences ❑ Onsite Interview • 1 or 2 days • 1 hour job talk on your PhDwork (expect questions during the talk) • 30 minutes dedicated Q&A (grill time) …,*,2011,*
Efficient Filtering and Routing in a Scalable XML-Based Publish-Subscribe System,Yuanyuan Tian; Jignesh M Patel; Farnam Jahanian,Abstract This paper introduces YAK–a scalable contentbased publish-subscribe system.YAK employs XML documents and expressive XPath queries as the publication andsubscription model. To achieve high scalability; it combines the advantages of contentrouting in existing publish-subscribe systems and the efficient query indexing technique inthe context of XML filtering. The filtering and routing strategy used in YAK exploits the localityof subscribers and therefore dramatically reduces the network communication overhead.Through performance tests; we conclude that our YAK publish-subscribe model is highlyscalable; especially when subscriptions exhibit high selectivity and regionalism.,*,2008,*
