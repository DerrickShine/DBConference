Estimating simple functions on the union of data streams,Phillip B Gibbons; Srikanta Tirthapura,Abstract Massive data sets often arise as physically distributed; parallel data streams. Wepresent algorithms for estimating simple functions on the union of such data streams; whileusing only logarithmic space per stream. Each processor observes only its own stream; andcommunicates with the other processors only after observing its entire stream. This modelsthe set-up in current network monitoring products. Our algorithms employ a novelcoordinated sampling technique to extract a sample of the union; this sample can be used toestimate aggregate functions on the union. The technique can also be used to estimateaggregate functions over the distinct “labels” in one or more data streams; eg; to determinethe zeroth frequency moment (ie; the number of distinct labels) in one or more data streams.Our space and time bounds are the best known for these problems; and our logarithmic …,Proceedings of the thirteenth annual ACM symposium on Parallel algorithms and architectures,2001,221
Distributed streams algorithms for sliding windows,Phillip B Gibbons; Srikanta Tirthapura,Abstract This paper presents algorithms for estimating aggregate functions over a" slidingwindow" of the N most recent data items in one or more streams. Our results include:< ol>For a single stream; we present the first &egr;-approximation scheme for the number of 1's ina sliding window that is optimal in both worst case time and space. We also present the first&egr; for the sum of integers in [0.. R] in a sliding window that is optimal in both worst casetime and space (assuming R is at most polynomial in N). Both algorithms are deterministicand use only logarithmic memory words.,Proceedings of the fourteenth annual ACM symposium on Parallel algorithms and architectures,2002,179
A tree-edit-distance algorithm for comparing simple; closed shapes,Philip Klein; Srikanta Tirthapura; Daniel Sharvit; Ben Kimia,Abstract We discuss a graph-algorithmic approach to comparing shapes. We focus in thispaper on comparing simple closed curves in the plane. Our approach is to (1) representsuch a shape by its skeleton; which is a tree embedded in the plane; and (2) compare twoshapes by comparing their skeletons via tree edit-distance.,Proceedings of the eleventh annual ACM-SIAM symposium on Discrete algorithms,2000,114
Counting and sampling triangles from a graph stream,Aduri Pavan; Kanat Tangwongsan; Srikanta Tirthapura; Kun-Lung Wu,Abstract This paper presents a new space-efficient algorithm for counting and samplingtriangles--and more generally; constant-sized cliques--in a massive graph whose edgesarrive as a stream. Compared to prior work; our algorithm yields significant improvements inthe space and time complexity for these fundamental problems. Our algorithm is simple toimplement and has very good practical performance on large graphs.,Proceedings of the VLDB Endowment,2013,86
Indexing based on edit-distance matching of shape graphs,Srikanta Tirthapura; Daniel Sharvit; Philip Klein; Benjamin B Kimia,We are investigating a graph matching approach for indexing into pictorial databases usingshock graphs; a symmetry-based representation of shape. Each shape (or a collection ofedge elements) is represented by a shock graph. Indexing of a query into a pictorialdatabase is accomplished by comparing the corresponding shock graph to the graphsrepresenting database elements and selecting the best match. This paper introduces a newmetric for comparing shock graphs.,Multimedia Storage and Archiving Systems III,1998,70
Analysis of link reversal routing algorithms for mobile ad hoc networks,Costas Busch; Srikanth Surapaneni; Srikanta Tirthapura,Abstract Link reversal algorithms provide a simple mechanism for routing in mobile ad hocnetworks. These algorithms maintain routes to any particular destination in the network;even when the network topology changes frequently. In link reversal; a node reverses itsincident links whenever it loses routes to the destination. Link reversal algorithms have beenstudied experimentally and have been used in practical routing algorithms; including [8].This paper presents the first formal performance analysis of link reversal algorithms. Westudy these algorithms in terms of work (number of node reversals) and the time neededuntil the network stabilizes to a state in which all the routes are reestablished. We focus onthe full reversal algorithm and the partial reversal algorithm; both due to Gafni and Berstekas[5]; the first algorithm is simpler; while the latter has been found to be more efficient for …,Proceedings of the fifteenth annual ACM symposium on Parallel algorithms and architectures,2003,62
Time-decaying aggregates in out-of-order streams,Graham Cormode; Flip Korn; Srikanta Tirthapura,Abstract Processing large data streams is now a major topic in data management. The datainvolved can be truly massive; and the required analyses complex. In a stream of sequentialevents such as stock feeds; sensor readings; or IP traffic measurements; data tuplespertaining to recent events are typically more important than older ones. This can beformalized via time-decay functions; which assign weights to data based on the age of data.Decay functions such as sliding windows and exponential decay have been studied underthe assumption of well-ordered arrivals; ie; data arrives in non-decreasing order of timestamps. However; data quality issues are prevalent in massive streams (due to networkasynchrony and delays etc.); and correct arrival order is not guaranteed. We focus on thecomputation of decayed aggregates such as range queries; quantiles; and heavy hitters …,Proceedings of the twenty-seventh ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems,2008,58
Sketching asynchronous streams over a sliding window,Srikanta Tirthapura; Bojian Xu; Costas Busch,Abstract We study the problem of maintaining sketches of recent elements of a data stream.Motivated by applications involving network data; we consider streams that areasynchronous; in which the observed order of data is not the same as the time order inwhich the data was generated. The notion of recent elements of a stream is modeled by thesliding timestamp window; which is the set of elements with timestamps that are close to thecurrent time. We design algorithms for maintaining sketches of all elements within the slidingtimestamp window that can give provably accurate estimates of two basic aggregates; thesum and the median; of a stream of numbers. The space taken by the sketches; the timeneeded for querying the sketch; and the time for inserting new elements into the sketch areall polylog with respect to the maximum window size and the values of the data items in …,Proceedings of the twenty-fifth annual ACM symposium on Principles of distributed computing,2006,41
Self stabilizing distributed queuing,Maurice Herlihy; Srikanta Tirthapura,Abstract Distributed queuing is a fundamental problem in distributed computing; arising in avariety ofapplications. In a distributed queuing protocol; each participating process informsits predecessor of its identity; and (when appropriate) learns the identity ofits successor. Thispaper presents a new; self-stabilizing distributed queuing protocol. This protocol adds self-stabilizing actions to the Arrow distributed queuing protocol; a simple path-reversal protocolthat runs on a network spanning tree. The protocol is structured as a layer that runs on topofan y selfstabilizing spanning tree protocol. This additional layer stabilizes in constant time;establishing that self-stabilizing distributed queuing is no more difficult than self-stabilizingspanning tree maintenance. The key idea is that the global predicate defining the legality ofaprotocol state can be written as the conjunction ofman y purely local predicates; one for …,International Symposium on Distributed Computing,2001,40
Competitive concurrent distributed queuing,Maurice Herlihy; Srikanta Tirthapura; Rogert Wattenhofer,Abstract Distributed queuing is a fundamental problem in distributed computing; arising in avariety of applications. The challenge in designing a distributed queuing algorithm is tominimize message traffic and delay. This paper gives a novel competitive analysis of theArrow distributed queuing protocol under concurrent access. We analyze the combinedlatency of r simultaneous requests; and derive a competitive ratio of s· log r; where s is thestretch of a preselected spanning tree in the network.,Proceedings of the twentieth annual ACM symposium on Principles of distributed computing,2001,40
A graph-based formulation for computational characterization of bulk heterojunction morphology,Olga Wodo; Srikanta Tirthapura; Sumit Chaudhary; Baskar Ganapathysubramanian,Abstract To improve the efficiency of organic solar cells; it is essential to understand the roleof morphology and to tailor fabrication process to get desired morphologies. In this context; acomprehensive set of computational tools to quantify and classify the 2D/3D heterogeneousinternal structure of thin films is invaluable. We present a graph-based framework toefficiently compute a broad suite of physically meaningful morphology descriptors. Thesemorphology descriptors are further classified according to the physical subprocesses withinOSCs–photon absorption; exciton diffusion; charge separation; and charge transport. Thisapproach is motivated by the equivalence between a discretized 2D/3D morphology and alabeled; weighted; undirected graph. We utilize this approach to pose six key questionsrelated to structure characterization. These questions are the basis for a comprehensive …,Organic Electronics,2012,39
Exponentially decayed aggregates on data streams,Graham Cormode; Flip Korn; Srikanta Tirthapura,In a massive stream of sequential events such as stock feeds; sensor readings; or IP trafficmeasurements; tuples pertaining to recent events are typically more important than olderones. It is important to compute various aggregates over such streams after applying adecay function which assigns weights to tuples based on their age. We focus on thecomputation of exponentially decayed aggregates in the form of quantiles and heavy hitters.Our techniques are based on extending existing data stream summaries; such as the q-digest [1] and the" space-saving" algorithm [2]. Our experiments confirm that our methodscan be applied in practice; and have similar space and time costs to the non-decayedaggregate computation.,Data Engineering; 2008. ICDE 2008. IEEE 24th International Conference on,2008,35
A deterministic algorithm for summarizing asynchronous streams over a sliding window,Costas Busch; Srikanta Tirthapura,Abstract We consider the problem of maintaining aggregates over recent elements of amassive data stream. Motivated by applications involving network data; we considerasynchronous data streams; where the observed order of data may be different from theorder in which the data was generated. The set of recent elements is modeled as a slidingtimestamp window of the stream; whose elements are changing continuously with time. Wepresent the first deterministic algorithms for maintaining a small space summary of elementsin a sliding timestamp window of an asynchronous data stream. The summary can returnapproximate answers for the following fundamental aggregates: basic count; the number ofelements within the sliding window; and sum; the sum of all element values within the slidingwindow. For basic counting; the space taken by our summary is O (log W· log B·(log W+ …,Annual Symposium on Theoretical Aspects of Computer Science,2007,33
Time-decaying sketches for sensor data aggregation,Graham Cormode; Srikanta Tirthapura; Bojian Xu,Abstract We present a new sketch for summarizing network data. The sketch has thefollowing properties which make it useful in communication-efficient aggregation indistributed streaming scenarios; such as sensor networks: the sketch is duplicate-insensitive; ie re-insertions of the same data will not affect the sketch; and hence theestimates of aggregates. Unlike previous duplicate-insensitive sketches for sensor dataaggregation [26; 12]; it is also time-decaying; so that the weight of a data item in the sketchcan decrease with time according to a user-specified decay function. The sketch can giveprovably approximate guarantees for various aggregates of data; including the sum; median;quantiles; and frequent elements. The size of the sketch and the time taken to update it areboth polylogarithmic in the size of the relevant data. Further; multiple sketches computed …,Proceedings of the twenty-sixth annual ACM symposium on Principles of distributed computing,2007,32
Analysis of link reversal routing algorithms,Costas Busch; Srikanta Tirthapura,Link reversal algorithms provide a simple mechanism for routing in communication networkswhose topology is frequently changing; such as in mobile ad hoc networks. A link reversalalgorithm routes by imposing a direction on each network link such that the resulting graphis a destination oriented DAG. Whenever a node loses routes to the destination; it reacts byreversing some (or all) of its incident links. Link reversal algorithms have been studiedexperimentally and have been used in practical routing algorithms; including TORA VD Parkand MS Corson; A highly adaptive distributed routing algorithm for mobile wireless networks;in Proc. INFOCOM; IEEE; Los Alamitos; CA; 1997; pp. 1405--1413. This paper presents thefirst formal performance analysis of link reversal algorithms. We study these algorithms interms of work (number of node reversals) and the time needed until the network stabilizes …,SIAM Journal on Computing,2005,31
Range-efficient counting of distinct elements in a massive data stream,A Pavan; Srikanta Tirthapura,Efficient one-pass estimation of F_0; the number of distinct elements in a data stream; is afundamental problem arising in various contexts in databases and networking. We considerrange-efficient estimation of F_0: estimation of the number of distinct elements in a datastream where each element of the stream is not just a single integer but an interval ofintegers. We present a randomized algorithm which yields an (ε; δ)-approximation of F_0;with the following time and space complexities (n is the size of the universe of the items):(1)The amortized processing time per interval is O(1δ\lognϵ).(2) The workspace used isO(1ϵ^21δ\logn) bits. Our algorithm improves upon a previous algorithm by Bar-Yossef;Kumar and Sivakumar Proceedings of the 13 th ACM–SIAM Symposium on DiscreteAlgorithms (SODA); 2002; pp. 623–632; which requires O(1ϵ^51δ\log^5n) processing …,SIAM Journal on Computing,2007,30
Indexing for Subscription Covering in Publish-Subscribe Systems.,Zhenhui Shen; Srinivas Aluru; Srikanta Tirthapura,*,ISCA PDCS,2005,30
A formal analysis of space filling curves for parallel domain decomposition,Srikanta Tirthapura; Sudip Seal; Srinivas Aluru,Spacefilling curves (SFCs) are widely used for parallel domain decomposition in scientificcomputing applications. The proximity preserving properties of SFCs are expected to keepmost accesses local in applications that require efficient access to spatial neighborhoods.While experimental results are used to confirm this behavior; a rigorous mathematicalanalysis of SFCs turns out to be rather hard and rarely attempted. In this paper; we analyzeSFC based parallel domain decomposition for a uniform random spatial distribution in threedimensions. Let n denote the expected number of points and P denote the number ofprocessors. We show that the expected distance along an SFC to a nearest neighbor is O (n2/3). We then consider the problem of answering nearest neighbor and spherical regionqueries for each point. For P= n alpha (0< alpha les 1) processors; we show that the total …,Parallel Processing; 2006. ICPP 2006. International Conference on,2006,28
Parallel triangle counting in massive streaming graphs,Kanat Tangwongsan; Aduri Pavan; Srikanta Tirthapura,Abstract The number of triangles in a graph is a fundamental metric widely used in socialnetwork analysis; link classification and recommendation; and more. In these applications;modern graphs of interest tend to both large and dynamic. This paper presents the designand implementation of a fast parallel algorithm for estimating the number of triangles in amassive undirected graph whose edges arrive as a stream. Our algorithm is designed forshared-memory multicore machines and can make efficient use of parallelism and thememory hierarchy. We provide theoretical guarantees on performance and accuracy; andour experiments on real-world datasets show accurate results and substantial speedupscompared to an optimized sequential implementation.,Proceedings of the 22nd ACM international conference on Information & Knowledge Management,2013,27
Optimal random sampling from distributed streams revisited,Srikanta Tirthapura; David P Woodruff,Abstract We give an improved algorithm for drawing a random sample from a large datastream when the input elements are distributed across multiple sites which communicate viaa central coordinator. At any point in time the set of elements held by the coordinatorrepresent a uniform random sample from the set of all the elements observed so far. Whencompared with prior work; our algorithms asymptotically improve the total number ofmessages sent in the system as well as the computation required of the coordinator. We alsopresent a matching lower bound; showing that our protocol sends the optimal number ofmessages up to a constant factor with large probability. As a byproduct; we obtain animproved algorithm for finding the heavy hitters across multiple distributed sites.,International Symposium on Distributed Computing,2011,27
Approximate Covering Detection among Content-Based Subscriptions Using Space Filling Curves.,Zhenhui Shen; Srikanta Tirthapura,Abstract We consider a problem that arises during the propagation of subscriptions in acontentbased publish-subscribe system. Subscription covering is a promising optimizationthat reduces the number of subscriptions propagated; and hence the size of routing tables ina contentbased publish-subscribe system. However; detecting covering relationships amongsubscriptions can be an expensive computational task that potentially reduces the utility ofcovering as an optimization. We introduce an alternate approach approximate subscriptioncovering; which provide much of the benefits of subscription covering at a fraction of its cost.By forgoing an exhaustive search for covering subscriptions in favor of an approximatesearch; it is shown that the time complexity of covering detection can be dramaticallyreduced. The trade off between efficiency of covering detection and the approximation …,ICDCS,2007,26
Wireless sensor deployment for 3D coverage with constraints,Tycho Andersen; Srikanta Tirthapura,We consider the problem of deploying wireless sensors in a three dimensional space toachieve a desired degree of coverage; while minimizing the number of sensors placed.Typical sensor deployment scenarios impose constraints on possible locations of thesensors; and on the desired coverage; but currently there is no unified way to handle theseconstraints in optimizing the number of sensors placed. We present a novel approach calleddiscretization which allows us to cast the sensor deployment problem as a discreteoptimization problem; and hence apply well-understood and flexible discrete optimizationtechniques for sensor deployment. Our results show that this approach yields solutions thatnearly minimize the number of sensors used; while providing a high degree of coverage.Further; unlike typical approaches to sensor deployment; where 3D coverage is …,Networked Sensing Systems (INSS); 2009 Sixth International Conference on,2009,24
Dynamic analysis of the arrow distributed protocol,Maurice Herlihy; Fabian Kuhn; Srikanta Tirthapura; Roger Wattenhofer,Abstract Distributed queuing is a fundamental coordination problem that arises in a variety ofapplications; including distributed directories; totally ordered multicast; and distributedmutual exclusion. The arrow protocol is a solution to distributed queuing that is based onpath reversal on a pre-selected spanning tree of the network. We present a novel andcomprehensive competitive analysis of the arrow protocol. We consider the total cost ofhandling a finite number of queuing requests; which may or may not be issued concurrently;and show that the arrow protocol is O(s⋅\logD)-competitive to the optimal queuing protocol;where s and D are the stretch and the diameter; respectively; of the spanning tree. Inaddition; we show that our analysis is almost tight by proving that for every spanning treechosen for execution; the arrow protocol is Ω(s⋅\log(D/s)/\log\log(D/s))-competitive to the …,Theory of Computing Systems,2006,24
Range-Efficient Computation of F₀ over Massive Data Streams,A Pavan; Srikanta Tirthapura,*,ICDE 2005,2005,24
A general method for estimating correlated aggregates over a data stream,Srikanta Tirthapura; David P Woodruff,Abstract On a stream SS of two dimensional data items (x; y)(x; y) where xx is an itemidentifier and yy is a numerical attribute; a correlated aggregate query C (σ; AGG; S) C (σ;AGG; S) asks to first apply a selection predicate σ σ along the yy dimension; followed by anaggregation AGG AGG along the xx dimension. For selection predicates of the form (y< c)(y<c) or (y> c)(y> c); where parameter cc is provided at query time; we present new streamingalgorithms and lower bounds for estimating correlated aggregates. Our main result is ageneral method that reduces the estimation of a correlated aggregate AGG AGG to thestreaming computation of AGG AGG over an entire stream; for an aggregate that satisfiescertain conditions. This results in the first sublinear space algorithms for the correlatedestimation of a large family of statistics; including frequency moments. Our experimental …,Algorithmica,2015,23
Self-stabilizing smoothing and balancing networks,Maurice Herlihy; Srikanta Tirthapura,Abstract A smoothing network is a distributed data structure that accepts tokens on inputwires and routes them to output wires. It ensures that however imbalanced the traffic on inputwires; the numbers of tokens emitted on output wires are approximately balanced. Prior workon smoothing networks always assumed that such networks were properly initialized. In areal distributed system; however; network switches may be rebooted or replaceddynamically; and it may not be practical to determine the correct initial state for the newswitch. Prior analyses do not work under these new assumptions. This paper makes thefollowing contributions. First; we show that some well-known 1-smoothing networks; knownas counting networks; when started in an arbitrary initial state (perhaps chosen by anadversary); remain remarkably smooth; degrading from 1-smooth to (log n)-smooth …,Distributed Computing,2006,22
Ordered multicast and distributed swap,Maurice Herlihy; Srikanta Tirthapura; Rogert Wattenhofer,Abstract A multicast protocol is ordered (or totally ordered) if it ensures that messagesmulticast to a group of nodes are delivered in the same order at each destination node; evenwhen those messages are generated concurrently from several sources. Ordered multicastis a natural foundation for push-based cache coherence and certain kinds of middleware.This paper shows how to reduce the complex problem of enforcing multicast ordering to asimpler distributed coordination problem we call distributed swap. Any distributed swapprotocol can transform an unordered reliable multicast into an ordered multicast in amodular way. We introduce two novel distributed swap protocols; and discuss theircorresponding ordered multicast protocols. These protocols have lower latency than moreobvious approaches based on distributed counting.,ACM SIGOPS Operating Systems Review,2001,22
Improved sparse covers for graphs excluding a fixed minor,Costas Busch; Ryan LaFortune; Srikanta Tirthapura,Abstract We consider the construction of sparse covers for planar graphs and other graphsthat exclude a fixed minor. We present an algorithm that gives a cover for the γ-neighborhood of each node. For planar graphs; the cover has radius no more than 24γ-8and degree (maximum cluster overlaps) no more than 18. For every n node graph thatexcludes a fixed minor; we present an algorithm that yields a cover with radius no more than4γ and degree O (log n). This is a significant improvement over previous results for planargraphs and for graphs excluding a fixed minor; in order to obtain clusters with radius of O (γ);it was required to have degree polynomial in n. Since sparse covers have many applicationsin distributed computing; including compact routing; distributed directories andsynchronizers; our improved cover construction results in improved algorithms for all …,Proceedings of the twenty-sixth annual ACM symposium on Principles of distributed computing,2007,21
Self-stabilizing routing in publish-subscribe systems,Zhenhui Shen; Srikanta Tirthapura,Publish-subscribe systems route events to interested subscribers through a distributednetwork of routing tables. We present a self-stabilizing algorithm that maintains these routingtables in a consistent distributed state; and recovers from faults in the network. Neighboringmessage routers (or brokers) periodically exchange their routing table state; and takecorrective actions if (and only when) necessary. We formally prove that the resultingalgorithm brings the system back to a legal global state if it starts out in a faulty state. Further;we show how to reduce the size of the periodic message exchanges by exchangingsketches of the routing tables which are much smaller than the routing tables themselves.We present a message size/accuracy tradeoff of using these sketches; which are based onBloom filters. We have simulated our algorithm; and present our results of studying the …,3rd International Workshop on Distributed Event-Based Systems (DEBS 2004); Edinburgh; Scotland; UK,2004,21
EvoMiner: frequent subtree mining in phylogenetic databases,Akshay Deepak; David Fernández-Baca; Srikanta Tirthapura; Michael J Sanderson; Michelle M McMahon,Abstract The problem of mining collections of trees to identify common patterns; calledfrequent subtrees (FSTs); arises often when trying to interpret the results of phylogeneticanalysis. FST mining generalizes the well-known maximum agreement subtree problem.Here we present EvoMiner; a new algorithm for mining frequent subtrees in collections ofphylogenetic trees. EvoMiner is an Apriori-like levelwise method; which uses a novelphylogeny-specific constant-time candidate generation scheme; an efficient fingerprinting-based technique for downward closure; and a lowest-common-ancestor-based supportcounting step that requires neither costly subtree operations nor database traversal. Ouralgorithm achieves speedups of up to 100 times or more over Phylominer; the current state-of-the-art algorithm for mining phylogenetic trees. EvoMiner can also work in depth-first …,Knowledge and information systems,2014,20
Sketching asynchronous data streams over sliding windows,Bojian Xu; Srikanta Tirthapura; Costas Busch,Abstract We study the problem of maintaining a sketch of recent elements of a data stream.Motivated by applications involving network data; we consider streams that areasynchronous; in which the observed order of data is not the same as the time order inwhich the data was generated. The notion of recent elements of a stream is modeled by thesliding timestamp window; which is the set of elements with timestamps that are close to thecurrent time. We design algorithms for maintaining sketches of all elements within the slidingtimestamp window that can give provably accurate estimates of two basic aggregates; thesum and the median; of a stream of numbers. The space taken by the sketches; the timeneeded for querying the sketch; and the time for inserting new elements into the sketch areall polylogarithmic with respect to the maximum window size. Our sketches can be easily …,Distributed Computing,2008,20
Optimality of clustering properties of space-filling curves,Pan Xu; Srikanta Tirthapura,Abstract Space-filling curves have been used in the design of data structures formultidimensional data for many decades. A fundamental quality metric of a space-fillingcurve is its “clustering number” with respect to a class of queries; which is the averagenumber of contiguous segments on the space-filling curve that a query region can bepartitioned into. We present a characterization of the clustering number of a general class ofspace-filling curves; as well as the first nontrivial lower bounds on the clustering number forany space-filling curve. Our results answer questions that have been open for more than 15years.,ACM Transactions on Database Systems (TODS),2014,19
Computational characterization of bulk heterojunction nanomorphology,Olga Wodo; Srikanta Tirthapura; Sumit Chaudhary; Baskar Ganapathysubramanian,The bulk heterojunction (BHJ) nanomorphology in organic solar cells strongly affects thefinal efficiency of the device. Progress in experimental techniques now allows visualizationof the complex 3D BHJ morphology. It is; therefore; important to characterize the topologicalproperties of the morphology in order to quantify the link between morphology features andperformance. Here; we introduce a suite of morphology descriptors which encode thecomplex nature of the multi-stage photovoltaic process in the BHJ. These morphologydescriptors are easily determined using an approach based on converting the morphologyinto an equivalent weighted; labeled; undirected graph. We show how these descriptors canbe used to interrogate BHJ morphologies; allow identification of bottlenecks in thephotovoltaic process; and conduct quantitative comparison between morphologies with …,Journal of Applied Physics,2012,19
Identifying frequent items in a network using gossip,Bibudh Lahiri; Srikanta Tirthapura,Abstract We present algorithms for identifying frequently occurring items in a largedistributed data set. Our algorithms use gossip as the underlying communicationmechanism; and do not rely on any central control; nor on an underlying network structure;such as a spanning tree. Instead; nodes repeatedly select a random partner and exchangedata with that partner. If this process continues for a (short) period of time; the desired resultsare computed; with probabilistic guarantees on the accuracy. Our algorithm for identifyingfrequent items is built by layering a novel small space “sketch” of data over a gossip-baseddata dissemination mechanism. We prove that the algorithm identifies the frequent itemswith high probability; and provides bounds on the time till convergence. To our knowledge;this is the first work on identifying frequent items using gossip.,Journal of Parallel and Distributed Computing,2010,18
Time-decaying sketches for robust aggregation of sensor data,Graham Cormode; Srikanta Tirthapura; Bojian Xu,We present a new sketch for summarizing network data. The sketch has the followingproperties which make it useful in communication-efficient aggregation in distributedstreaming scenarios; such as sensor networks: the sketch is duplicate insensitive; ie;reinsertions of the same data will not affect the sketch and hence the estimates ofaggregates. Unlike previous duplicate-insensitive sketches for sensor data aggregation [S.Nath et al.; Synposis diffusion for robust aggregation in sensor networks; in Proceedings ofthe 2nd International Conference on Embedded Network Sensor Systems;(2004); pp. 250–262];[J. Considine et al.; Approximate aggregation techniques for sensor databases; inProceedings of the 20th International Conference on Data Engineering (ICDE); 2004; pp.449–460]; it is also time decaying; so that the weight of a data item in the sketch can …,SIAM Journal on Computing,2009,17
Randomized smoothing networks,Maurice Herlihy; Srikanta Tirthapura,Abstract A smoothing network is a distributed data structure that accepts tokens on inputwires and routes them to output wires. It ensures that however imbalanced the traffic on inputwires; the numbers of tokens emitted on output wires are approximately balanced. We studyrandomized smoothing networks; whose initial states are chosen at random. Randomizedsmoothing networks require no global initialization; and also require no globalreconfiguration after faults. We show that the randomized version of the well-known blocksmoothing network is 2.36 log (w)-smooth with high probability; where w is the number ofinput or output wires. As a direct consequence; we prove that the randomized bitonic andperiodic networks are also O (log (w))-smooth with high probability. In contrast; it is knownthat these networks are (log w)-smooth in the worst case.,Journal of Parallel and Distributed Computing,2006,17
Mining maximal cliques from a large graph using mapreduce: Tackling highly uneven subproblem sizes,Michael Svendsen; Arko Provo Mukherjee; Srikanta Tirthapura,Abstract We consider Maximal Clique Enumeration (MCE) from a large graph. A maximalclique is perhaps the most fundamental dense substructure in a graph; and MCE is animportant tool to discover densely connected subgraphs; with numerous applications to datamining on web graphs; social networks; and biological networks. While effective sequentialmethods for MCE are known; scalable parallel methods for MCE are still lacking.,Journal of Parallel and distributed computing,2015,16
Space-efficient estimation of statistics over sub-sampled streams,Andrew McGregor; A Pavan; Srikanta Tirthapura; David Woodruff,Abstract In many stream monitoring situations; the data arrival rate is so high that it is noteven possible to observe each element of the stream. The most common solution is tosample a small fraction of the data stream and use the sample to infer properties andestimate aggregates of the original stream. However; the quantities that need to becomputed on the sampled stream are often different from the original quantities of interestand their estimation requires new algorithms. We present upper and lower bounds (oftenmatching) for estimating frequency moments; support size; entropy; and heavy hitters of theoriginal stream from the data observed in the sampled stream.,Proceedings of the 31st ACM SIGMOD-SIGACT-SIGAI symposium on Principles of Database Systems,2012,14
Time‐decayed correlated aggregates over data streams,Graham Cormode; Srikanta Tirthapura; Bojian Xu,Abstract Data stream analysis frequently relies on identifying correlations and posingconditional queries on the data after it has been seen. Correlated aggregates form animportant example of such queries; which ask for an aggregation over one dimension ofstream elements which satisfy a predicate on another dimension. Since recent events aretypically more important than older ones; time decay should also be applied to downweightless significant values. We present space-efficient algorithms as well as space lower boundsfor the time-decayed correlated sum; a problem at the heart of many related aggregations.By considering different fundamental classes of decay functions; we separate cases whereefficient approximations with relative error or additive error guarantees are possible; fromother cases where linear space is necessary to approximate. In particular; we show that …,Statistical Analysis and Data Mining: The ASA Data Science Journal,2009,14
Parallel streaming frequency-based aggregates,Kanat Tangwongsan; Srikanta Tirthapura; Kun-Lung Wu,Abstract We present efficient parallel streaming algorithms for fundamental frequency-basedaggregates in both the sliding window and the infinite window settings. In the sliding windowsetting; we give a parallel algorithm for maintaining a space-bounded block counter (SBBC).Using SBBC; we derive algorithms for basic counting; frequency estimation; and heavyhitters that perform no more work than their best sequential counterparts. In the infinitewindow setting; we present algorithms for frequency estimation; heavy hitters; and count-minsketch. For both the infinite window and sliding window settings; our parallel algorithmsprocess a" minibatch" of items using linear work and polylog parallel depth. We also prove alower bound showing that the work of the parallel algorithm is optimal in the case of heavyhitters and frequency estimation. To our knowledge; these are the first parallel algorithms …,Proceedings of the 26th acm symposium on parallelism in algorithms and architectures,2014,13
Dense subgraph maintenance under streaming edge weight updates for real-time story identification,Albert Angel; Nick Koudas; Nikos Sarkas; Divesh Srivastava; Michael Svendsen; Srikanta Tirthapura,Abstract Recent years have witnessed an unprecedented proliferation of social media.People around the globe author; everyday; millions of blog posts; social network statusupdates; etc. This rich stream of information can be used to identify; on an ongoing basis;emerging stories; and events that capture popular attention. Stories can be identified viagroups of tightly coupled real-world entities; namely the people; locations; products; etc; thatare involved in the story. The sheer scale and rapid evolution of the data involvednecessitate highly efficient techniques for identifying important stories at every point of time.The main challenge in real-time story identification is the maintenance of dense subgraphs(corresponding to groups of tightly coupled entities) under streaming edge weight updates(resulting from a stream of user-generated content). This is the first work to study the …,The VLDB Journal,2014,13
Faster event forwarding in a content-based publish-subscribe system through lookup reuseevent,Zhenhui Shen; Srikanta Tirthapura,Event forwarding in a content-based publish-subscribe system is an expensive task due tothe need to match an event's content against registered subscriptions at every router. Weintroduce lookup reuse; a novel approach to improve the efficiency of event forwarding.Lookup reuse enables faster event forwarding through reusing matching results computedby upstream routers in making forwarding decisions at downstream routers. In many cases;this lets downstream routers replace an expensive content-match with a much cheaper hash-table lookup. We investigate the integration of lookup reuse into existing content-basedevent forwarding algorithms. Our simulations show that lookup reuse reduces the eventprocessing overhead on average by 40 to 55 percent; when used with existing content-based event forwarding algorithms,Network Computing and Applications; 2006. NCA 2006. Fifth IEEE International Symposium on,2006,13
Mining maximal cliques from an uncertain graph,Arko Provo Mukherjee; Pan Xu; Srikanta Tirthapura,We consider mining dense substructures (maximal cliques) from an uncertain graph; whichis a probability distribution on a set of deterministic graphs. For parameter 0<; α<; 1; weconsider the notion of an α-maximal clique in an uncertain graph. We present matchingupper and lower bounds on the number of α-maximal cliques possible within a (uncertain)graph. We present an algorithm to enumerate α-maximal cliques whose worst-case runtimeis near-optimal; and an experimental evaluation showing the practical utility of the algorithm.,Data Engineering (ICDE); 2015 IEEE 31st International Conference on,2015,11
System and method for optimizing a code section by forcing a code section to be executed atomically,*,Systems and methods for optimizing code may use transactional memory to optimize onecode section by forcing another code section to execute atomically. Application source codemay be analyzed to identify instructions in one code section that only need to be executed ifthere exists the possibility that another code section (eg; a critical section) could be partiallyexecuted or that its results could be affected by interference. In response to identifying suchinstructions; alternate code may be generated that forces the critical section to be executedas an atomic transaction; eg; using best-effort hardware transactional memory. This alternatecode may replace the original code or may be included in an alternate execution path thatcan be conditionally selected for execution at runtime. The alternate code may elide theidentified instructions (which are rendered unnecessary by the transaction) by removing …,*,2013,10
Space-efficient tracking of persistent items in a massive data stream,Bibudh Lahiri; Jaideep Chandrashekar; Srikanta Tirthapura,Abstract Motivated by scenarios in network anomaly detection; we consider the problem ofdetecting persistent items in a data stream; which are items that occur" regularly" in thestream. In contrast with heavy-hitters; persistent items do not necessarily contributesignificantly to the volume of a stream; and may escape detection by traditional volume-based anomaly detectors. We first show that any online algorithm that tracks persistent itemsexactly must necessarily use a large workspace; and is infeasible to run on a trafficmonitoring node. In light of this lower bound; we introduce an approximate formulation of theproblem and present a small-space algorithm to approximately track persistent items over alarge data stream. Our experiments on a real traffic dataset shows that in typical cases; thealgorithm achieves a physical space compression of 5x-7x; while incurring very few false …,Proceedings of the 5th ACM international conference on Distributed event-based system,2011,10
Finding correlated heavy-hitters over data streams,Bibudh Lahiri; Srikanta Tirthapura,We consider online mining of correlated heavy-hitters (CHH) from network data streams.Given a multi-dimensional dataset; a correlated aggregate query first filters a subset byapplying a predicate along a primary dimension; and then computes aggregates along asecondary dimension of that subset data.,Performance Computing and Communications Conference (IPCCC); 2009 IEEE 28th International,2009,10
Stream sampling,Bibudh Lahiri; Srikanta Tirthapura,The values in the relations of a relational database are elements of one or more underlyingsets called domains. In practical applications; a domain may be infinite; eg; the set of naturalnumbers. In this case; the value of a relational calculus query when applied to such adatabase may be infinite; eg;{njn! 10}. A query Q is called finite if the value of Q whenapplied to any database is finite. Even when the database domains are finite; all that isnormally known about them is that they are some finite superset of the values that occur inthe database. In this case; the value of a relational calculus query may depend on such anunknown domain; eg;{xj 8yR (x; y)}. A query Q is called domain independent if the value of Qwhen applied to any database is the same for any two domains containing the databasevalues or; equivalently; if the value of Q when applied to a database contains only values …,*,2009,10
Enumerating maximal bicliques from a large graph using mapreduce,Arko Provo Mukherjee; Srikanta Tirthapura,We consider the enumeration of maximal bipartite cliques (bicliques) from a large graph; atask central to many data mining problems arising in social network analysis andbioinformatics. We present novel parallel algorithms for the MapReduce framework; and anexperimental evaluation using Hadoop MapReduce. Our algorithm is based on clusteringthe input graph into smaller subgraphs; followed by processing different subgraphs inparallel. Our algorithm uses two ideas that enable it to scale to large graphs:(1) theredundancy in work between different subgraph explorations is minimized through a carefulpruning of the search space; and (2) the load on different reducers is balanced through atask assignment that is based on an appropriate total order among the vertices. We showtheoretically that our algorithm is work optimal; ie; it performs the same total work as its …,IEEE Transactions on Services Computing,2017,9
Parallel and distributed triangle counting on graph streams,Aduri Pavan; Kanat Tangwongan; Srikanta Tirthapura,Abstract This paper studies the problem of approximating the number of triangles in a graphwhose edges arrive as a stream. The number of triangles in a graph is an important metric insocial network analysis; link classification and recommendation; and more. We presentefficient algorithms for both shared-memory parallel (multicore-like) processing of a singlestream where edges arrive in batches and processing of streams by multiple physicallydistributed processors. For the shared-memory setting; we give the first parallel cache-oblivious algorithm with good theoretical guarantees for accuracy; we also experimentallyverify that the algorithm obtains substantial speedups and accurate estimates. For thedistributed setting; we present a distributed algorithm with low message complexity;improving upon existing sketch-based algorithms in common settings.,Technical report; IBM; Tech. Rep.,2013,9
Rectangle-efficient aggregation in spatial data streams,Srikanta Tirthapura; David Woodruff,Abstract We consider the estimation of aggregates over a data stream of multidimensionalaxis-aligned rectangles. Rectangles are a basic primitive object in spatial databases; andefficient aggregation of rectangles is a fundamental task. The data stream model hasemerged as a de facto model for processing massive databases in which the data resides inexternal memory or the cloud and is streamed through main memory. For a point p; let n (p)denote the sum of the weights of all rectangles in the stream that contain p. We give near-optimal solutions for basic problems; including (1) the k-th frequency moment F k=∑ pointsp| n (p)| k;(2)~ the counting version of stabbing queries; which seeks an estimate of n (p)given p; and (3) identification of heavy-hitters; ie; points p for which n (p) is large. Animportant special case of F k is F 0; which corresponds to the volume of the union of the …,Proceedings of the 31st ACM SIGMOD-SIGACT-SIGAI symposium on Principles of Database Systems,2012,9
A novel graph-based formulation for characterizing morphology with application to organic solar cells,Olga Wodo; Srikanta Tirthapura; Sumit Chaudhary; Baskar Ganapathysubramanian,Abstract: Organic solar cells have the potential for widespread usage due to their promise oflow cost; roll-to-roll manufacturability; and mechanical flexibility. However; deployment isimpeded by their relatively low power conversion efficiencies. The last decade has seensignificant progress in enhancing the power conversion of these devices through variousstrategies. One such approach is based on morphology control. This is because morphologyaffects all phenomena involved in solar conversion: light absorption and electron-hole pair(exciton) generation; exciton diffusion and dissociation into free charges; and transport ofcharges to the electrodes. Progress in experimental characterization and computationalmodeling now allow reconstruction and imaging of the thin film morphology. This opens upthe possibility of rationally linking fabrication with morphology; as well as morphology with …,arXiv preprint arXiv:1106.3536,2011,8
Delay; cost and infrastructure tradeoff of epidemic routing in mobile sensor networks,Shan Zhou; Lei Ying; Srikanta Tirthapura,Abstract This paper studies the delay; cost and infrastructure tradeoff of epidemic routing inmobile sensor networks. We consider a mobile sensor network with M mobiles and B staticbase stations. The mobile sensors collect information when moving around and need toreport the information to the base stations. Three different epidemic routing schemes---targetepidemic routing; uncontrolled epidemic routing and controlled epidemic routing---areanalyzed in this paper. For each of the three schemes; we characterize the scalingbehaviors of the delay; which is defined to be the average number of time slots required todeliver a message; and the cost; which is defined to be the average number of transmissionsrequired to deliver a message; in terms of the number of mobiles (M) and the number ofbase stations (B). These scaling results reveal the fundamental tradeoff among delay …,Proceedings of the 6th International Wireless Communications and Mobile Computing Conference,2010,8
Computing frequent elements using gossip,Bibudh Lahiri; Srikanta Tirthapura,Abstract We present algorithms for identifying frequently occurring elements in a largedistributed data set using gossip. Our algorithms do not rely on any central control; or on anunderlying network structure; such as a spanning tree. Instead; nodes repeatedly select arandom partner and exchange data with the partner–if this process continues for a (short)period of time; the desired results are computed; with probabilistic guarantees on theaccuracy. Our algorithm for frequent elements is built by layering a novel small space“sketch” of data over a gossip-based data dissemination mechanism. We prove that thealgorithm converges to the approximate frequent elements with high probability; and providebounds on the time till convergence. To our knowledge; this is the first work on computingfrequent elements using gossip.,International Colloquium on Structural Information and Communication Complexity,2008,8
Adaptive counting networks,Srikanta Tirthapura,Counting networks are well studied parallel and distributed data structures; which are usefulin synchronization applications such as distributed counting and load balancing. However;current constructions of counting networks are static; since their width (the degree ofparallelism); and hence the size of the network; have to be fixed in advance. This present anobstacle in efficiently implementing them in a large distributed system whose size may bechanging; due to nodes joining and leaving the network. The authors presented an adaptiveconstruction of the bitonic counting network. The network tunes its width to the system size ina distributed and local way. With high probability; the effective" width" of the network isOmega (N/log 2 N); where N is the number of nodes currently in the system; and theeffective'" depth" of the network is O (log 2 N). In contrast; a static implementation would …,Distributed Computing Systems; 2005. ICDCS 2005. Proceedings. 25th IEEE International Conference on,2005,8
Self-stabilizing smoothing and counting,Maurice Herlihy; Srikanta Tirthapura,A smoothing network is a distributed data structure that accepts tokens on input wires androutes them to output wires. It ensures that however imbalanced the traffic on input wires; thenumbers of tokens emitted on output wires are approximately balanced. Prior work onsmoothing networks always assumed that such networks were properly initialized. In a realdistributed system; however; network switches may be rebooted or replaced dynamically;and it may not be practical to determine the correct initial state for the new switch. Prioranalyses do not work under these new assumptions. This paper makes the followingcontributions. First; we show that some well-known 1-smoothing networks; known ascounting networks; when started in an arbitrary initial state (perhaps chosen by anadversary); remain remarkably smooth; degrading from 1-smooth to log (n)-smooth …,Distributed Computing Systems; 2003. Proceedings. 23rd International Conference on,2003,8
Distributed queuing and applications,Srikanta N Tirthapura,Abstract Distributed Queuing is a fundamental distributed coordination problem; arising in avariety of applications; such as ordered multicast and distributed fetch-and-&phis; datastructures.,*,2003,6
Work-efficient parallel and incremental graph connectivity,Natcha Simsiri; Kanat Tangwongsan; Srikanta Tirthapura; Kun-Lung Wu,Abstract: On an evolving graph that is continuously updated by a high-velocity stream ofedges; how can one efficiently maintain if two vertices are connected? This is theconnectivity problem; a fundamental and widely studied problem on graphs. We present thefirst shared-memory parallel algorithm for incremental graph connectivity that is bothprovably work-efficient and has polylogarithmic parallel depth. We also present a simpleralgorithm with slightly worse theoretical properties; but which is easier to implement and hasgood practical performance. Our experiments show a throughput of hundreds of millions ofedges per second on a $20 $-core machine.,arXiv preprint arXiv:1602.05232,2016,5
Monitoring persistent items in the union of distributed streams,Sneha Aman Singh; Srikanta Tirthapura,Abstract A persistent item in a stream is one that occurs regularly in the stream withoutnecessarily contributing significantly to the volume of the stream. Persistent items are oftenassociated with anomalies in network streams; such as botnet traffic and click fraud. While itis important to track persistent items in an online manner; it is challenging to zero-in on suchitems in a massive distributed stream. We present the first communication-efficientdistributed algorithms for tracking persistent items in a data stream whose elements arepartitioned across many different sites. We consider both infinite window and sliding windowsettings; and present algorithms that can track persistent items approximately with aprobabilistic guarantee on the approximation error. Our algorithms have a provably lowcommunication cost; and a low rate of false positives and false negatives; with a high …,Journal of Parallel and Distributed Computing,2014,5
Computing time-decayed aggregates in data streams,*,Aggregates are calculated from a data stream in which data is sent in a sequence of tuples;in which each tuple comprises an item identifier and a timestamp indicating when the tuplewas transmitted. The tuples may arrive out-of-order; that is; the sequence in which the tuplesarrive are not necessarily in the sequence of their corresponding timestamps. In calculatingaggregates; more recent data may be given more weight by multiplying each tuple by adecay function which is a function of the timestamp associated with the tuple and the currenttime. The tuples are recorded in a quantile-digest data structure. Aggregates are calculatedfrom the data stored in the quantile-digest data structure.,*,2013,5
A lower bound on proximity preservation by space filling curves,Pan Xu; Srikanta Tirthapura,A space filling curve (SFC) is a proximity preserving mapping from a high dimensional spaceto a single dimensional space. SFCs have been used extensively in dealing with multi-dimensional data in parallel computing; scientific computing; and databases. The generalgoal of an SFC is that points that are close to each other in high-dimensional space are alsoclose to each other in the single dimensional space. While SFCs have been used widely; theextent to which proximity can be preserved by an SFC is not precisely understood yet. Weconsider natural metrics; including the" nearest-neighbor stretch" of an SFC; which measurethe extent to which an SFC preserves proximity. We first show a powerful negative result;that there is an inherent lower bound on the stretch of any SFC. We then show that thestretch of the commonly used Z curve is within a factor of 1.5 from the optimal; irrespective …,Parallel & Distributed Processing Symposium (IPDPS); 2012 IEEE 26th International,2012,5
Detecting insider threats using radish: a system for real-time anomaly detection in heterogeneous data streams,Brock Böse; Bhargav Avasarala; Srikanta Tirthapura; Yung-Yu Chung; Donald Steiner,We present a scalable system for high-throughput real-time analysis of heterogeneous datastreams. Our architecture enables incremental development of models for predictiveanalytics and anomaly detection as data arrives into the system. In contrast with batch data-processing systems; such as Hadoop; that can have high latency; our architecture allows foringest and analysis of data on the fly; thereby detecting and responding to anomalousbehavior in near real time. This timeliness is important for applications such as insider threat;financial fraud; and network intrusions. We demonstrate an application of this system to theproblem of detecting insider threats; namely; the misuse of an organization's resources byusers of the system and present results of our experiments on a publicly available insiderthreat dataset.,IEEE Systems Journal,2017,4
Identifying correlated heavy-hitters in a two-dimensional data stream,Bibudh Lahiri; Arko Provo Mukherjee; Srikanta Tirthapura,Abstract We consider online mining of correlated heavy-hitters (CHH) from a data stream.Given a stream of two-dimensional data; a correlated aggregate query first extracts asubstream by applying a predicate along a primary dimension; and then computes anaggregate along a secondary dimension. Prior work on identifying heavy-hitters in streamshas almost exclusively focused on identifying heavy-hitters on a single dimensional stream;and these yield little insight into the properties of heavy-hitters along other dimensions. Intypical applications however; an analyst is interested not only in identifying heavy-hitters; butalso in understanding further properties such as: what other items appear frequently alongwith a heavy-hitter; or what is the frequency distribution of items that appear along with theheavy-hitters. We consider queries of the following form:“In a stream S of (x; y) tuples; on …,Data Mining and Knowledge Discovery,2016,4
Change-Sensitive Algorithms for Maintaining Maximal Cliques in a Dynamic Graph,Apurba Das; Michael Svendsen; Srikanta Tirthapura,Abstract: We consider the maintenance of the set of all maximal cliques in a dynamic graphthat is changing through the addition or deletion of edges. We present nearly tight boundson the magnitude of change in the set of maximal cliques; as well as the first change-sensitive algorithms for clique maintenance; whose runtime is proportional to the magnitudeof the change in the set of maximal cliques. We present experimental results showing thatthese algorithms are efficient in practice.,arXiv preprint arXiv:1601.06311,2016,4
Computing correlated aggregates over a data stream,*,Described herein are approaches for computing correlated aggregates. An aspect providesfor receiving a stream of data elements at a device; each data element having at least onenumerical attribute; maintaining in memory plurality of tree structures comprising a pluralityof separate nodes for summarizing numerical attributes of the data elements with respect toa predicate value of a correlated aggregation query; said maintaining comprising: creatingthe plurality of tree structures in which each node implements one of: a probabilistic counterand a sketch; wherein said probabilistic counter and said sketch each act to estimateaggregated data element numerical attributes to form a summary of said numericalattributes; and responsive to a correlated aggregation query specifying said predicate value;using said plurality of tree structures as a summary of said data element numerical …,*,2014,4
Sparse Covers for Planar Graphs and Graphs that Exclude a Fixed Minor,Costas Busch; Ryan LaFortune; Srikanta Tirthapura,Abstract We consider the construction of sparse covers for planar graphs and other graphsthat exclude a fixed minor. We present an algorithm that gives a cover for the γ-neighborhood of each node. For planar graphs; the cover has radius less than 16 γ anddegree no more than 18. For every n node graph that excludes a minor of a fixed size; wepresent an algorithm that yields a cover with radius no more than 4 γ and degree O (log n).This is a significant improvement over previous results for planar graphs and for graphsexcluding a fixed minor; in order to obtain clusters with radius O (γ); it was required to havethe degree polynomial in n. Our algorithms are based on a recursive application of a basicroutine called shortest-path clustering; which seems to be a novel approach to theconstruction of sparse covers. Since sparse covers have many applications in distributed …,Algorithmica,2014,4
Concurrent counting is harder than queuing,Costas Busch; Srikanta Tirthapura,Abstract We compare the complexities of two fundamental distributed coordinationproblems; distributed counting and distributed queuing; in a concurrent setting. In bothdistributed counting and queuing; processors in a distributed system issue operations whichare organized into a total order. In counting; each participating processor receives the rankof its operation in the total order; where as in queuing; a processor receives the identity of itspredecessor in the total order. Many coordination applications can be solved using eitherdistributed counting or queuing; and it is useful to know which of counting or queuing is theeasier problem. Our results show that concurrent counting is harder than concurrent queuingon a variety of processor interconnection topologies; including high and low diametergraphs. For all these topologies; we show that the concurrent delay complexity of a …,Theoretical Computer Science,2010,4
Concurrent counting is harder than queuing,Srikanta Tirthapura; Costas Busch,In both distributed counting and queuing; processors in a distributed system issueoperations which are organized into a total order. In counting; each processor receives therank of its operation in the total order; where as in queuing; a processor gets back theidentity of its predecessor in the total order. Coordination applications such as totallyordered multicast can be solved using either distributed counting or queuing; and it wouldbe very useful to definitively know which of counting or queuing is a harder problem. Weconduct the first systematic study of the relative complexities of distributed counting andqueuing in a concurrent setting. Our results show that concurrent counting is harder thanconcurrent queuing on a variety of processor interconnection topologies; including highdiameter graphs such as the list and the mesh; and low diameter graphs such as the …,Parallel and Distributed Processing Symposium; 2006. IPDPS 2006. 20th International,2006,4
A simple message-optimal algorithm for random sampling from a distributed stream,Yung-Yu Chung; Srikanta Tirthapura; David P Woodruff,We present a simple; message-optimal algorithm for maintaining a random sample from alarge data stream whose input elements are distributed across multiple sites thatcommunicate via a central coordinator. At any point in time; the set of elements held by thecoordinator represent a uniform random sample from the set of all the elements observed sofar. When compared with prior work; our algorithms asymptotically improve the total numberof messages sent in the system. We present a matching lower bound; showing that ourprotocol sends the optimal number of messages up to a constant factor with largeprobability. We also consider the important case when the distribution of elements acrossdifferent sites is non-uniform; and show that for such inputs; our algorithm significantlyoutperforms prior solutions.,IEEE Transactions on Knowledge and Data Engineering,2016,3
An evaluation of streaming algorithms for distinct counting over a sliding window,Sneha Aman Singh; Srikanta Tirthapura,Counting the number of distinct elements in a data stream (``distinct counting'') is afundamental aggregation task in database query processing; query optimization andnetwork monitoring. On a stream of elements; it is commonly needed to compute anaggregate over only the most recent elements; leading to the problem of distinct countingover a``sliding window''of the stream. We present a detailed experimental study of theperformance of different algorithms for distinct counting over a sliding window. We observethat the performance of an algorithm depends on the basic method used; as well as aspectssuch as the hash function; the mix of query and updates; and the method used to boostaccuracy. We compare the performance of prominent algorithms; and evaluate the influenceof these factors; leading to practical recommendations for implementation. To the best of …,Frontiers in ICT,2015,3
Computing time-decayed aggregates under smooth decay functions,*,Aggregates are calculated from a data stream in which data is sent in a sequence of tuples;in which each tuple comprises an item identifier and a timestamp indicating when the tuplewas transmitted. The tuples may arrive at a data receiver out-of-order; that is; the sequencein which the tuples arrive are not necessarily in the same sequence as their correspondingtimestamps. In calculating aggregates; more recent data may be given more weight by adecay function which is a function of the timestamp associated with the tuple and the currenttime. The statistical characteristics of the tuples are summarized by a set of linear datasummaries. The set of linear data summaries are generated such that only a single lineardata summary falls between a set of boundaries calculated from the decay function and a setof timestamps. Aggregates are calculated from the set of linear data summaries.,*,2013,3
Streaming algorithms for k-means clustering with fast queries,Yu Zhang; Kanat Tangwongsan; Srikanta Tirthapura,Abstract: We present methods for k-means clustering on a stream with a focus on providingfast responses to clustering queries. When compared with the current state-of-the-art; ourmethods provide a substantial improvement in the time to answer a query for cluster centers;while retaining the desirable properties of provably small approximation error; and lowspace usage. Our algorithms are based on a novel idea of" coreset caching" that reusescoresets (summaries of data) computed for recent queries in answering the currentclustering query. We present both provable theoretical results and detailed experimentsdemonstrating their correctness and efficiency. Subjects: Data Structures and Algorithms (cs.DS); Software Engineering (cs. SE) Cite as: arXiv: 1701.03826 [cs. DS](or arXiv: 1701.03826v1 [cs. DS] for this version) Submission history From: Yu Zhang [view email][v1] Fri; 13 Jan …,arXiv preprint arXiv:1701.03826,2017,2
Work-efficient parallel union-find with applications to incremental graph connectivity,Natcha Simsiri; Kanat Tangwongsan; Srikanta Tirthapura; Kun-Lung Wu,Abstract On an undirected graph; how can one quickly answer whether two vertices areconnected while allowing more edges to be added incrementally? This is the well-studiedincremental graph connectivity (IGC) problem; a fundamental problem that can be efficientlysolved using solutions to the classical union-find problem. Motivated by the need to handlelarger and rapidly-changing graphs; this paper presents the first shared-memory parallelalgorithm for IGC and equivalently; Union-Find that is provably work-efficient (ie; does nomore work than the sequential optimal) and has polylogarithmic parallel depth. It performspath compression in parallel without a lock or speculative execution. We also present asimpler algorithm with slightly worse theoretical properties; but which is easier to implement;and has good practical performance.,European Conference on Parallel Processing,2016,2
Distinct random sampling from a distributed stream,Srikanta Tirthapura,We consider continuous maintenance of a random sample of distinct elements from amassive data stream; whose input elements are observed at multiple distributed sites thatcommunicate via a central coordinator. At any point; when a query is received at thecoordinator; it responds with a random sample from the set of all distinct elements observedat the different sites so far. We present the first algorithms for distinct random sampling froma distributed stream. We also present a lower bound on the expected number of messagesthat must be transmitted by any distributed algorithm; showing that our algorithm is messageoptimal to within a factor of four. We present extensions to sliding windows; andexperimental results showing the performance of our algorithm on real-world data sets.,Parallel and Distributed Processing Symposium (IPDPS); 2015 IEEE International,2015,2
Distinct random sampling from a distributed stream,Yung-Yu Chung,ABSTRACT We consider continuous maintenance of a random sample of distinct elementsfrom a massive data stream; whose input elements are observed at multiple distributed sitesthat communicate via a central coordinator. At any point; when a query is received at thecoordinator; it responds with a random sample from the set of all distinct elements observedat the different sites so far. We present the first algorithms for distinct random sampling ondistributed streams. We also present a lower bound on the expected number of messagesthat must be transmitted by any distributed algorithm; showing that our algorithm is messageoptimal to within a factor of four. We present extensions to sliding windows; and detailedexperimental results showing the performance of our algorithm on real-world data sets.,*,2013,2
A streaming approximation algorithm for Klee’s measure problem,Gokarna Sharma; Costas Busch; Srikanta Tirthapura,Abstract The efficient estimation of frequency moments of a data stream in one-pass usinglimited space and time per item is one of the most fundamental problem in data streamprocessing. An especially important estimation is to find the number of distinct elements in adata stream; which is generally referred to as the zeroth frequency moment and denoted byF0. In this paper; we consider streams of rectangles defined over a discrete space and thetask is to compute the total number of distinct points covered by the rectangles. This isknown as the Klee's measure problem in 2 dimensions. We present and analyze arandomized streaming approximation algorithm which gives an (ϵ; δ)-approximation of F0for the total area of Klee's measure problem in 2 dimensions. Our algorithm achieves thefollowing complexity bounds:(a) the amortized processing time per rectangle is O (1 ϵ4 …,CoRR; abs/1004.1569,2010,2
Work‐efficient parallel union‐find,Natcha Simsiri; Kanat Tangwongsan; Srikanta Tirthapura; Kun‐Lung Wu,Summary The incremental graph connectivity (IGC) problem is to maintain a data structurethat can quickly answer whether two given vertices in a graph are connected; while allowingmore edges to be added to the graph. IGC is a fundamental problem and can be solvedefficiently in the sequential setting using a solution to the classical union-find problem.However; sequential solutions are not sufficient to handle modern-day large; rapidly-changing graphs where edge updates arrive at a very high rate. We present the first shared-memory parallel data structure for union-find (equivalently; IGC) that is both provably work-efficient (ie; performs no more work than the best sequential counterpart) and haspolylogarithmic parallel depth. We also present a simpler algorithm with slightly worsetheoretical properties; but which is easier to implement and has good practical …,Concurrency and Computation: Practice and Experience,2018,1
Streaming k-Means Clustering with Fast Queries,Yu Zhang; Kanat Tangwongsan; Srikanta Tirthapura,We present methods for k-means clustering on a stream with a focus on providing fastresponses to clustering queries. Compared to the current state-of-the-art; our methodsprovide substantial improvement in the query time for cluster centers while retaining thedesirable properties of provably small approximation error and low space usage. Ouralgorithms rely on a novel idea of" coreset caching" that systematically reuses coresets(summaries of data) computed for recent queries in answering the current clustering query.We present both theoretical analysis and detailed experiments demonstrating theircorrectness and e ciency.,Data Engineering (ICDE); 2017 IEEE 33rd International Conference on,2017,1
Enumeration of maximal cliques from an uncertain graph,Arko Provo Mukherjee; Pan Xu; Srikanta Tirthapura,We consider the enumeration of dense substructures (maximal cliques) from an uncertaingraph. For parameter 0<; α<; 1; we define the notion of an a-maximal clique in an uncertaingraph. We present matching upper and lower bounds on the number of a-maximal cliquespossible within a (uncertain) graph. We present an algorithm to enumerate a-maximalcliques whose worst-case runtime is near-optimal; and an experimental evaluation showingthe practical utility of the algorithm.,IEEE transactions on knowledge and data engineering,2017,1
Estimating quantiles from the union of historical and streaming data,Sneha Aman Singh; Divesh Srivastava; Srikanta Tirthapura,Abstract Modern enterprises generate huge amounts of streaming data; for example; micro-blog feeds; financial data; network monitoring and industrial application monitoring. WhileData Stream Management Systems have proven successful in providing support for real-time alerting; many applications; such as network monitoring for intrusion detection and real-time bidding; require complex analytics over historical and real-time data over the datastreams. We present a new method to process one of the most fundamental analyticalprimitives; quantile queries; on the union of historical and streaming data. Our methodcombines an index on historical data with a memory-efficient sketch on streaming data toanswer quantile queries with accuracy-resource tradeoffs that are significantly better thancurrent solutions that are based solely on disk-resident indexes or solely on streaming …,Proceedings of the VLDB Endowment,2016,1
Space-Efficient Estimation of Statistics Over Sub-Sampled Streams,Andrew McGregor; A Pavan; Srikanta Tirthapura; David P Woodruff,Abstract In many stream monitoring situations; the data arrival rate is so high that it is noteven possible to observe each element of the stream. The most common solution is to sub-sample the data stream and use the sample to infer properties and estimate aggregates ofthe original stream. However; in many cases; the estimation of aggregates on the originalstream cannot be accomplished through simply estimating them on the sampled stream;followed by a normalization. We present algorithms for estimating frequency moments;support size; entropy; and heavy hitters of the original stream; through a single pass over thesampled stream.,Algorithmica,2016,1
Computing time-decayed aggregates under smooth decay functions,*,Aggregates are calculated from a data stream in which data is sent in a sequence of tuples;in which each tuple comprises an item identifier and a timestamp indicating when the tuplewas transmitted. The tuples may arrive at a data receiver out-of-order; that is; the sequencein which the tuples arrive are not necessarily in the same sequence as their correspondingtimestamps. In calculating aggregates; more recent data may be given more weight by adecay function which is a function of the timestamp associated with the tuple and the currenttime. The statistical characteristics of the tuples are summarized by a set of linear datasummaries. The set of linear data summaries are generated such that only a single lineardata summary falls between a set of boundaries calculated from the decay function and a setof timestamps. Aggregates are calculated from the set of linear data summaries.,*,2015,1
Computing correlated aggregates over a data stream,*,Described herein are approaches for computing correlated aggregates. An aspect providesfor receiving a stream of data elements at a device; each data element having at least onenumerical attribute; maintaining in memory plurality of tree structures comprising a pluralityof separate nodes for summarizing numerical attributes of the data elements with respect toa predicate value of a correlated aggregation query; said maintaining comprising: creatingthe plurality of tree structures in which each node implements one of: a probabilistic counterand a sketch; wherein said probabilistic counter and said sketch each act to estimateaggregated data element numerical attributes to form a summary of said numericalattributes; and responsive to a correlated aggregation query specifying said predicate value;using said plurality of tree structures as a summary of said data element numerical …,*,2014,1
Random sampling from distributed streams,*,Described herein are methods; systems; apparatuses and products for random samplingfrom distributed streams. An aspect provides a method for distributed sampling on a networkwith a plurality of sites and a coordinator; including: receiving at the coordinator a dataelement from a site of the plurality of sites; said data element having a weight randomlyassociated therewith deemed reportable by comparison at the site to a locally stored globalvalue; comparing the weight of the data element received with a global value stored at thecoordinator; and performing one of: updating the global value stored at the coordinator to theweight of the data element received; and communicating the global value stored at thecoordinator back to the site of the plurality of sites. Other embodiments are disclosed.,*,2013,1
On delay; cost and infrastructure tradeoff in mobile sensor networks,Shan Zhou; Lei Ying; Srikanta Tirthapura,*,*,2010,1
Distributed Computing and Networking,Luciano Bononi Ajoy K Datta; Stéphane Devismes Archan Misra,As the Technical Program Committee (TPC) chairs; it is our pleasure to provide this volume;which contains papers that were accepted for presentation at the 13th InternationalConference on Distributed Computing and Networking (ICDCN 2012); held during January3–6; 2012; in Hong Kong. These papers were selected from a total of 100 manuscriptssubmitted for consideration to the ICDCN conference; roughly equally distributed betweenthe Distributed Computing and Networking tracks. Each submission was reviewed by atleast three; and on average four; TPC members; as well as selected external reviewers. Aftera thorough discussion of the reviews; we were very happy to select 36 submissions asregular papers and one submission as a short paper (brief announcement). The conferenceprogram also included four poster papers; that we felt would benefit from discussion and …,*,2009,1
Brief announcement: Concurrent counting is harder than queuing,Srikanta Tirthapura,We compare the complexities of two fundamental coordination problems; distributedqueuing and distributed counting. In distributed counting; processors in a network increment(perhaps concurrently) a globally unique shared counter. Each processor in return receivesthe value of the counter after its increment operation took effect. Put in another way; theoperations issued by processors are arranged into a total order; and each processor isreturned the rank of its operation. In distributed queuing; similar to counting; processorsissue operations which are organized into a total order. However; in contrast with counting;each processor is returned the identity of its predecessor operation in the total order (seeFigure 1). aa• a eount= l pred= none bb,Proceedings of the twenty-second annual symposium on Principles of distributed computing,2003,1
Incremental Maintenance of Maximal Bicliques in a Dynamic Bipartite Graph,Apurba Das; Srikanta Tirthapura,We consider incremental maintenance of maximal bicliques from a dynamic bipartite graphthat changes over time due to the addition of edges. When new edges are added to thegraph; we seek to enumerate the change in the set of maximal bicliques; withoutenumerating the set of maximal bicliques that remain unaffected. The challenge is toenumerate the change without explicitly enumerating the set of all maximal bicliques. In thiswork; we present (1)~ Near-tight bounds on the magnitude of change in the set of maximalbicliques of a graph; due to a change in the edge set; and an (2)~ Incremental algorithm forenumerating the change in the set of maximal bicliques. For the case when a constantnumber of edges are added to the graph; our algorithm is" change-sensitive"; ie; its timecomplexity is proportional to the magnitude of change in the set of maximal bicliques. To …,IEEE Transactions on Multi-Scale Computing Systems,2018,*
Variance-Optimal Offline and Streaming Stratified Random Sampling,Trong Duc Nguyen; Ming-Hung Shih; Divesh Srivastava; Srikanta Tirthapura; Bojian Xu,Abstract: Stratified random sampling (SRS) is a fundamental sampling technique thatprovides accurate estimates for aggregate queries using a small size sample; and has beenused widely for approximate query processing. A key question in SRS is how to partition atarget sample size among different strata. While {\em Neyman allocation} provides a solutionthat minimizes the variance of an estimate using this sample; it works under the assumptionthat each stratum is abundant; ie has a large number of data points to choose from. Thisassumption may not hold in general: one or more strata may be bounded; and may notcontain a large number of data points; even though the total data size may be large. We firstpresent\voila; an offline method for allocating sample sizes to strata in a variance-optimalmanner; even for the case when one or more strata may be bounded. We next consider …,arXiv preprint arXiv:1801.09039,2018,*
Onion Curve: A Space Filling Curve with Near-Optimal Clustering,Pan Xu; Cuong Nguyen; Srikanta Tirthapura,Abstract: Space filling curves (SFCs) are widely used in the design of indexes for spatial andtemporal data. Clustering is a key metric for an SFC; that measures how well the curvepreserves locality in moving from higher dimensions to a single dimension. We present the{\em onion curve}; an SFC whose clustering performance is provably close to optimal for thecube and near-cube shaped query sets; irrespective of the side length of the query. Weshow that in contrast; the clustering performance of the widely used Hilbert curve can be farfrom optimal; even for cube-shaped queries. Since the clustering performance of an SFC iscritical to the efficiency of multi-dimensional indexes based on the SFC; the onion curve candeliver improved performance for data structures involving multi-dimensional data.,arXiv preprint arXiv:1801.07399,2018,*
Butterfly Counting in Bipartite Networks,Seyed-Vahid Sanei-Mehri; Erdem Saryuce; Srikanta Tirthapura,Abstract: Graph motifs are used to analyze networks from diverse domains. We consider theproblem of counting motifs in bipartite affiliation networks; such as author-paper; user-product; and actor-movie relations. The substantial prior work on counting motifs in unipartitegraphs; such as triangle counting; does not apply here since bipartite graphs do not havetriangles. Unlike the solution of projecting bipartite graphs onto unipartite graphs; whichleads to a substantial increase in the size of the network; we directly address counting motifsin bipartite networks. We focus on counting the number of occurrences of a\butterfly"; acomplete 2\times 2 subgraph; which is also the simplest cohesive and bipartite higher-orderstructure. Our main contribution is a suite of randomized algorithms for approximating thenumber of butterflies in a graph with provable accuracy guarantees. An experimental …,arXiv preprint arXiv:1801.00338,2017,*
Learning Graphical Models from a Distributed Stream,Yu Zhang; Srikanta Tirthapura; Graham Cormode,Abstract: A current challenge for data management systems is to support the constructionand maintenance of machine learning models over data that is large; multi-dimensional; andevolving. While systems that could support these tasks are emerging; the need to scale todistributed; streaming data requires new models and algorithms. In this setting; as well ascomputational scalability and model accuracy; we also need to minimize the amount ofcommunication between distributed processors; which is the chief component of latency. Westudy Bayesian networks; the workhorse of graphical models; and present a communication-efficient method for continuously learning and maintaining a Bayesian network model overdata that is arriving as a distributed stream partitioned across multiple processors. We showa strategy for maintaining model parameters that leads to an exponential reduction in …,arXiv preprint arXiv:1710.02103,2017,*
A Change-Sensitive Algorithm for Maintaining Maximal Bicliques in a Dynamic Bipartite Graph,Apurba Das; Srikanta Tirthapura,Abstract: We consider the maintenance of maximal bicliques from a dynamic bipartite graphthat changes over time due to the addition or deletion of edges. When the set of edges in agraph changes; we are interested in knowing the change in the set of maximal bicliques(the" change"); rather than in knowing the set of maximal bicliques that remain unaffected.The challenge in an efficient algorithm is to enumerate the change without explicitlyenumerating the set of all maximal bicliques. In this work; we present (1) near-tight boundson the magnitude of change in the set of maximal bicliques of a graph; due to a change inthe edge set (2) a" change-sensitive" algorithm for enumerating the change in the set ofmaximal bicliques; whose time complexity is proportional to the magnitude of change thatactually occurred in the set of maximal bicliques in the graph. To our knowledge; these …,arXiv preprint arXiv:1707.08272,2017,*
Summarizing a stream of multidimensional; axis-aligned rectangles,*,A method for estimating aggregates over a stream of axis-aligned rectangles; includes:decomposing the stream along one-dimensional intervals; wherein vertices for the rectangleare located in a predetermined grid; assigning each grid row to buckets; wherein the one-dimensional intervals are placed into buckets according to the corresponding rows in whichthe one-dimensional intervals are positioned; and estimating a sum of a number of gridpoints touched by at least one of the rectangles in each row of the grid to approximate avolume of the axis-aligned rectangles by: using pairwise-independent hash functions in amulti-dimensional algorithm to determine buckets that include a first interval correspondingto a given rectangle; wherein the interval has hash function results that meet apredetermined threshold; and inserting a second interval for the rectangle corresponding …,*,2015,*
Computing time-decayed aggregates in data streams,*,Aggregates are calculated from a data stream in which data is sent in a sequence of tuples;in which each tuple comprises an item identifier and a timestamp indicating when the tuplewas transmitted. The tuples may arrive out-of-order; that is; the sequence in which the tuplesarrive are not necessarily in the sequence of their corresponding timestamps. In calculatingaggregates; more recent data may be given more weight by multiplying each tuple by adecay function which is a function of the timestamp associated with the tuple and the currenttime. The tuples are recorded in a quantile-digest data structure. Aggregates are calculatedfrom the data stored in the quantile-digest data structure.,*,2014,*
Distributed Computing and Networking: 8th International Conference; ICDCN 2006; Guwahati; India; December 27-30; 2006; Proceedings,Soma Chaudhuri; Samir R Das; Himadri S Paul; Srikanta Tirthapura,VI realm between distributed computing and networking; namely; Modeling BiologicalNetworks; Network Security; Algorithmic Issues in Wireless Sensor Networks; and OpticalNetworking. This was made possible by the efforts of the Tutorial Chairs; Sr-har Iyer andPinaki Mitra. The Organizing Committee worked hard to ensure that the participants enjoyeda comfortable stay and the technical meetings proceeded as smoothly as possible. We aregrateful to the General Vice Chair; Sukumar Nandi; for arranging to hold the conference inGuwahati and for all he did to make the conference a success. Thanks are due to thePublicity Chairs; PK Das and Sriram V. Pemmaraju; for their great work in publicizing theevent both locally and internationally; to the Publication Chairs; HS Paul and SrikantaTirthapura; for their tremendous efforts in compiling the final proceedings; and to the …,*,2007,*
A Link Reversal Approach to Distributed Algorithms in Mobile Ad Hoc Networks,Costas Busch; Srikanta Tirthapura,*,*,2004,*
Brief announcement: adaptive balancing networks,Srikanta Tirthapura,Abstract We present an adaptive construction of the bitonic balancing network. Our networktunes its width (the degree of parallelism) to the system size in a distributed and local way;and does this with the help of an efficient peer-to-peer lookup service. In contrast; allpreviously known constructions were static; and had the same width irrespective of thesystem size. Our technique is quite general: though we describe here the construction of thebitonic balancing network; this could be used in the adaptive construction of any distributeddata structure which can be decomposed in a recursive manner.,Proceedings of the twenty-third annual ACM symposium on Principles of distributed computing,2004,*
Concurrent Counting is Harder than Queuing (Brief Announcement),S Tirthapura,*,PROCEEDINGS OF THE ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING,2003,*
Supplementary Information:” Computational Characterization of Bulk Heterojunction Nanomorphology” Olga Wodo; Srikanta Tirthapura; Sumit Chaudhary and Bask...,Olga Wodo,In Figure 1; we show the equivalence between an example morphology and its equivalentgraph. The graph construction starts from a given digitized (two-phase) morphology. Given atwo-phase morphology; we construct a labeled weighted undirected graph G=(V; E; W; L); asfollows. There is one vertex v∈ V corresponding to each pixel (voxel in 3D) in themorphology. For each vertex; we use the inherent structure of the morphology (ie; pixels arelocated on a uniform lattice) to define the edge set E. There is an edge between each pair ofvertices that correspond to neighboring pixels (voxels) in the morphology. Each edge e=(u;v)∈ E is assigned a weight W (e) equal to the (normalized) distance between the pixels.First order neighbors one lattice distance away have an edge weight of 1; and second orderneighbors√ 2 lattice units away have an edge,*,*,*
Algorithm Design and Parallelism,Umit Catalyurek; Edmond Chow; Panagiota Fatourou; Ananth Kalyanaraman; Sanjay Ranka; Abhinav Sarje; Bertil Schmidt; Sudip K Seal; Oliver Sinnen; Srikanta Tirthapura; Denis Trystram; Anil Vullikanti; Jaroslaw Zola; David Bader; Olivier Beaumont; Tasneem Brutch; Henri Casanova; Florina Ciorba; Pierre-Francois Dutot; Lutz Gross; Daniel Grosu; Sun-Yuan Hsieh; Chao Jin; Timos Kipouros; Arun Konagurthu; Andrew Lewis; Cheng-Kuan Lin; Pangfeng Liu; Pierre Manneback; Loris Marchal; Rami Melhem; Koji Nankano; Erik Saule; Leonel Sousa; Jeff Tan; Jesper Larsson; Shi-Chun Tsai; Jichuan Chang; Robert Mullins; Alex Ramirez,Algorithm Design and Parallelism Umit Catalyurek; Ohio State University; USA EdmondChow; Georgia Tech; USA Panagiota Fatourou; University of Crete; Greece AnanthKalyanaraman; Washington State University; USA Sanjay Ranka; University of Florida; USAAbhinav Sarje; Lawrence Livermore National Laboratory; USA Bertil Schmidt; University ofMainz; Germany Sudip K. Seal; Oak Ridge National Laboratories; USA Oliver Sinnen; Universityof Auckland; New Zealand Srikanta Tirthapura; Iowa State University; USA Denis Trystram; Universityof Grenoble; France Anil Vullikanti; Virginia Tech; USA Jaroslaw Zola; Iowa State University;USA … Applications David Bader; Georgia Institute of Technology; USA Olivier Beaumont; UniversitéBordeau; France Tasneem Brutch; Samsung Electronics; San Jose; CA Henri Casanova; Universityof Hawaii; USA Florina Ciorba; Technical University of Dresden; Germany …,*,*,*
A Streaming Algorithm for Online Payload-based Network Anomaly Detection,Bibudh Lahiri; Yang Liu; Srikanta Tirthapura; Yong Guan,*,*,*,*
DIMACS TR: 2007-10 Time-Decaying Aggregates in Out-of-order Streams,Graham Cormode; Flip Korn; Srikanta Tirthapura,ABSTRACT Processing large data streams is now a major topic in data management. Thedata involved can be truly massive; and the required analyses complex. In a stream ofsequential events such as stock feeds; sensor readings; or IP traffic measurements; tuplespertaining to recent events are typically more important than older ones. This can beformalized via time decay functions; which assign weights based on age. Decay functionssuch as sliding windows and exponential decay have been well studied under theassumption of well-ordered arrivals; ie; data arrives in the order of increasing time stamps.However; data quality issues are prevalent in massive streams (due to network asynchronyand delays or possibly due to features inherent to the measurement process); and correctorder of arrival cannot be guaranteed. We focus on the computation of decayed …,*,*,*
Fairness and Throughput Optimization of End to End Streams in Multihop Ad Hoc Wireless Networks,Srikanta Tirthapura; Aravind Velayutham,*,*,*,*
