Database Cracking.,Stratos Idreos; Martin L Kersten; Stefan Manegold,ABSTRACT Database indices provide a non-discriminative navigational infrastructure tolocalize tuples of interest. Their maintenance cost is taken during database updates. In thispaper; we study the complementary approach; addressing index maintenance as part ofquery processing using continuous physical reorganization; ie; cracking the database intomanageable pieces. The motivation is that by automatically organizing data the way usersrequest it; we can achieve fast access and the much desired self-organized behavior. Wepresent the first mature cracking architecture and report on our implementation of cracking inthe context of a full fledged relational system. It led to a minor enhancement to its relationalalgebra kernel; such that cracking could be piggy-backed without incurring too muchprocessing overhead. Furthermore; we illustrate the ripple effect of dynamic …,CIDR,2007,242,4
MonetDB: Two decades of research in column-oriented database architectures,Stratos Idreos; Fabian Groffen; Niels Nes; Stefan Manegold; Sjoerd Mullender; Martin Kersten,*,IEEE Data Engineering Bulletin,2012,172
Self-organizing tuple reconstruction in column-stores,Stratos Idreos; Martin L Kersten; Stefan Manegold,Abstract Column-stores gained popularity as a promising physical design alternative. Eachattribute of a relation is physically stored as a separate column allowing queries to load onlythe required attributes. The overhead incurred is on-the-fly tuple reconstruction for multi-attribute queries. Each tuple reconstruction is a join of two columns based on tuple IDs;making it a significant cost component. The ultimate physical design is to have multiplepresorted copies of each base table such that tuples are already appropriately organized inmultiple different orders across the various columns. This requires the ability to predict theworkload; idle time to prepare; and infrequent updates. In this paper; we propose a noveldesign; partial sideways cracking; that minimizes the tuple reconstruction cost in a self-organizing way. It achieves performance similar to using presorted data; but without …,Proceedings of the 2009 ACM SIGMOD International Conference on Management of data,2009,151,12
The design and implementation of modern column-oriented database systems,Daniel Abadi; Peter Boncz; Stavros Harizopoulos; Stratos Idreos; Samuel Madden,Abstract In this article; we survey recent research on column-oriented database systems; orcolumn-stores; where each attribute of a table is stored in a separate file or region onstorage. Such databases have seen a resurgence in recent years with a rise in interest inanalytic queries that perform scans and aggregates over large portions of a few columns of atable. The main advantage of a column-store is that it can access just the columns needed toanswer such queries. We specifically focus on three influential research prototypes;MonetDB [46]; MonetDB/X100 [18]; and C-Store [86]. These systems have formed the basisfor several well-known commercial column-store implementations. We describe theirsimilarities and differences and discuss their specific architectural features for compression;late materialization; join processing; vectorization and adaptive indexing (database …,Foundations and Trends in Databases,2013,124,6
NoDB: efficient query execution on raw data files,Ioannis Alagiannis; Renata Borovica; Miguel Branco; Stratos Idreos; Anastasia Ailamaki,Abstract As data collections become larger and larger; data loading evolves to a majorbottleneck. Many applications already avoid using database systems; eg; scientific dataanalysis and social networks; due to the complexity and the increased data-to-query time.For such applications data collections keep growing fast; even on a daily basis; and we arealready in the era of data deluge where we have much more data than what we can move;store; let alone analyze. Our contribution in this paper is the design and roadmap of a newparadigm in database systems; called NoDB; which do not require data loading while stillmaintaining the whole feature set of a modern database system. In particular; we show howto make raw data files a first-class citizen; fully integrated with the query engine. Through ourdesign and lessons learned by implementing the NoDB philosophy over a modern DBMS …,Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data,2012,121,19
Merging what's cracked; cracking what's merged: adaptive indexing in main-memory column-stores,Stratos Idreos; Stefan Manegold; Harumi Kuno; Goetz Graefe,Abstract Adaptive indexing is characterized by the partial creation and refinement of theindex as side effects of query execution. Dynamic or shifting workloads may benefit frompreliminary index structures focused on the columns and specific key ranges actuallyqueried---without incurring the cost of full index construction. The costs and benefits ofadaptive indexing techniques should therefore be compared in terms of initialization costs;the overhead imposed upon queries; and the rate at which the index converges to a statethat is fully-refined for a particular workload component. Based on an examination ofdatabase cracking and adaptive merging; which are two techniques for adaptive indexing;we seek a hybrid technique that has a low initialization cost and also converges rapidly. Wefind the strengths and weaknesses of database cracking and adaptive merging …,Proceedings of the VLDB Endowment,2011,98,21
Publish/subscribe for RDF-based P2P networks,Paul-Alexandru Chirita; Stratos Idreos; Manolis Koubarakis; Wolfgang Nejdl,Abstract Publish/subscribe systems are an alternative to query based systems in caseswhere the same information is asked for over and over; and where clients want to getupdated answers for the same query over a period of time. Recent publish/subscribesystems such as P2P-DIET have introduced this paradigm in the P2P context. In this paperwe built on the experience gained with P2P-DIET and the Edutella P2P infrastructure andpresent the first implementation of a P2P publish/subscribe system supporting metadata anda query language based on RDF. We define formally the basic concepts of our system andpresent detailed protocols for its operation. Our work utilizes the latest ideas in queryprocessing for RDF data; P2P indexing and routing research.,European Semantic Web Symposium,2004,89,21
The researcher’s guide to the data deluge: Querying a scientific database in just a few seconds,Martin L Kersten; Stratos Idreos; Stefan Manegold; Erietta Liarou,ABSTRACT There is a clear need for interactive exploration of extremely large databases;especially in the area of scientific data management where ingestion of multiple Terabyteson a daily basis is foreseen. Unfortunately; current data management technology is not well-suited for such overwhelming demands. In light of these challenges; we should rethink someof the strict requirements database systems adopted in the past. We envision that nextgeneration database systems should interpret queries by their intent; rather than as acontract carved in stone for complete and correct answers. The result set should aid the userin understanding the database's content and provide guidance to continue the dataexploration journey. A scientist can stepwise explore deeper and deeper into the database;and stop when the result content and quality reaches his satisfaction point. At the same …,PVLDB Challenges and Visions,2011,85,19
Updating a cracked database,Stratos Idreos; Martin L Kersten; Stefan Manegold,Abstract A cracked database is a datastore continuously reorganized based on operationsbeing executed. For each query; the data of interest is physically reclustered to speed-upfuture access to the same; overlapping or even disjoint data. This way; a cracking DBMS self-organizes and adapts itself to the workload. So far; cracking has been considered for staticdatabases only. In this paper; we introduce several novel algorithms for high-volumeinsertions; deletions and updates against a cracked database. We show that the niceperformance properties of a cracked database can be maintained in a dynamic environmentwhere updates interleave with queries. Our algorithms comply with the cracking philosophy;ie; a table is informed on pending insertions and deletions; but only when the relevant datais needed for query processing just enough pending update actions are applied.,Proceedings of the 2007 ACM SIGMOD international conference on Management of data,2007,79,3
Evaluating conjunctive triple pattern queries over large structured overlay networks,Erietta Liarou; Stratos Idreos; Manolis Koubarakis,Abstract We study the problem of evaluating conjunctive queries composed of triple patternsover RDF data stored in distributed hash tables. Our goal is to develop algorithms that scaleto large amounts of RDF data; distribute the query processing load evenly and incur littlenetwork traffic. We present and evaluate two novel query processing algorithms with thesepossibly conflicting goals in mind. We discuss the various tradeoffs that occur in our settingthrough a detailed experimental evaluation of the proposed algorithms.,International Semantic Web Conference,2006,74,12
Overview of data exploration techniques,Stratos Idreos; Olga Papaemmanouil; Surajit Chaudhuri,Abstract Data exploration is about efficiently extracting knowledge from data even if we donot know exactly what we are looking for. In this tutorial; we survey recent developments inthe emerging area of database systems tailored for data exploration. We discuss new ideason how to store and access data as well as new ideas on how to interact with a data systemto enable users and applications to quickly figure out which data parts are of interest. Inaddition; we discuss how to exploit lessons-learned from past research; the new challengesdata exploration crafts; emerging applications and future research directions.,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,73,3
Here are my data files. here are my queries. where are my results?,Stratos Idreos; Ioannis Alagiannis; Ryan Johnson; Anastasia Ailamaki,ABSTRACT Database management systems (DBMS) provide incredible flexibility andperformance when it comes to query processing; scalability and accuracy. To fully exploitDBMS features; however; the user must define a schema; load the data; tune the system forthe expected workload; and answer several questions. Should the database use a column-store; a row-store or some hybrid format? What indices should be created? All thesequestions make for a formidable and time-consuming hurdle; often deterring newapplications or imposing high cost to existing ones. A characteristic example is that ofscientific databases with huge data sets. The prohibitive initialization cost and complexitystill forces scientists to rely on “ancient” tools for their data management tasks; delayingscientific understanding and progress. Users and applications collect their data in flat files …,Proceedings of 5th Biennial Conference on Innovative Data Systems Research,2011,73,12
Stochastic database cracking: Towards robust adaptive indexing in main-memory column-stores,Felix Halim; Stratos Idreos; Panagiotis Karras; Roland HC Yap,Abstract Modern business applications and scientific databases call for inherently dynamicdata storage environments. Such environments are characterized by two challengingfeatures:(a) they have little idle system time to devote on physical design; and (b) there islittle; if any; a priori workload knowledge; while the query and data workload keeps changingdynamically. In such environments; traditional approaches to index building andmaintenance cannot apply. Database cracking has been proposed as a solution that allowson-the-fly physical data reorganization; as a collateral effect of query processing. Crackingaims to continuously and automatically adapt indexes to the workload at hand; withouthuman intervention. Indexes are built incrementally; adaptively; and on demand.Nevertheless; as we show; existing adaptive indexing methods fail to deliver workload …,Proceedings of the VLDB Endowment,2012,64,12
Exploiting the power of relational databases for efficient stream processing,Erietta Liarou; Romulo Goncalves; Stratos Idreos,Abstract Stream applications gained significant popularity over the last years that lead to thedevelopment of specialized stream engines. These systems are designed from scratch witha different philosophy than nowadays database engines in order to cope with the streamapplications requirements. However; this means that they lack the power and sophisticatedtechniques of a full fledged database system that exploits techniques and algorithmsaccumulated over many years of database research. In this paper; we take the oppositeroute and design a stream engine directly on top of a database kernel. Incoming tuples aredirectly stored upon arrival in a new kind of system tables; called baskets. A continuousquery can then be evaluated over its relevant baskets as a typical one-time query exploitingthe power of the relational engine. Once a tuple has been seen by all relevant queries …,Proceedings of the 12th International Conference on Extending Database Technology: Advances in Database Technology,2009,61,5
H2O: a hands-free adaptive store,Ioannis Alagiannis; Stratos Idreos; Anastasia Ailamaki,Abstract Modern state-of-the-art database systems are designed around a single datastorage layout. This is a fixed decision that drives the whole architectural design of adatabase system; ie; row-stores; column-stores. However; none of those choices is auniversally good solution; different workloads require different storage layouts and dataaccess methods in order to achieve good performance. In this paper; we present the H2Osystem which introduces two novel concepts. First; it is flexible to support multiple storagelayouts and data access patterns in a single engine. Second; and most importantly; itdecides on-the-fly; ie; during query processing; which design is best for classes of queriesand the respective data parts. At any given point in time; parts of the data might bematerialized in various patterns purely depending on the query workload; as the workload …,Proceedings of the 2014 ACM SIGMOD international conference on Management of data,2014,57,5
Publish/subscribe functionality in IR environments using structured overlay networks,Christos Tryfonopoulos; Stratos Idreos; Manolis Koubarakis,Abstract We study the problem of offering publish/subscribe functionality on top of structuredoverlay networks using data models and languages from IR. We show how to achieve thisby extending the distributed hash table Chord and present a detailed experimentalevaluation of our proposals.,Proceedings of the 28th annual international ACM SIGIR conference on Research and development in information retrieval,2005,55,12
Indexing for Interactive Exploration of Big Data Series,Kostas Zoumpatianos; Stratos Idreos; Themis Palpanas,Abstract Numerous applications continuously produce big amounts of data series; and inseveral time critical scenarios analysts need to be able to query these data as soon as theybecome available; which is not currently possible with the state-of-the-art indexing methodsand for very large data series collections. In this paper; we present the first adaptive indexingmechanism; specifically tailored to solve the problem of indexing and querying very largedata series collections. The main idea is that instead of building the complete index over thecomplete data set up-front and querying only later; we interactively and adaptively buildparts of the index; only for the parts of the data on which the users pose queries. The neteffect is that instead of waiting for extended periods of time for the index creation; users canimmediately start exploring the data series. We present a detailed design and evaluation …,ACM SIGMOD International Conference on Management of Data,2014,48,10
Selective information dissemination in P2P networks: problems and solutions,Manolis Koubarakis; Christos Tryfonopoulos; Stratos Idreos; Yannis Drougas,Abstract We study the problem of selective dissemination of information in P2P networks. Wepresent our work on data models and laiguages for textual information dissemination anddiscuss a relemnt P2P architecture that motivates our efforts. We also survey our results onthe computational complexity of three related algorithmic problems (query satisfiability;entailment and filtering) and present efficient algorithms for the most crucial of theseproblems (filtering). Finally; we discuss the features of P2P-DIET; a super-peer system wehave implemented at the Technical Lniversity of Crete; that realizes our vision and is able tosupport both ad-hoc querying and selective information dissemination scenarios in a P2Pframework.,ACM SIGMOD Record,2003,45,18
P2p-diet: An extensible p2p service that unifies ad-hoc and continuous querying in super-peer networks,Stratos Idreos; Manolis Koubarakis; Christos Tryfonopoulos,The main application scenario considered in recent peer-topeer (P2P) data sharing systemsis that of ad-hoc querying: a user poses a query (eg;“I want music by Moby”) and the systemreturns a list of pointers to matching files owned by various peers in the network. Then; theuser can go ahead and download files of interest. The complementary publish/subscribe(pub/sub) scenario has started receiving attention only recently [1; 7; 8; 10]. In a pub/sub; auser posts a continuous query or profile to the system to receive notifications whenevercertain resources of interest are published (eg; when a song of Moby becomes available).Pub/sub can be as useful as ad-hoc querying in many target applications of P2P networksranging from file sharing; to more advanced applications such as alert systems for digitallibraries; e-commerce networks etc. In this demo paper we present the system P2P-DIET …,Proceedings of the 2004 ACM SIGMOD international conference on Management of data,2004,44,12
Concurrency control for adaptive indexing,Goetz Graefe; Felix Halim; Stratos Idreos; Harumi Kuno; Stefan Manegold,Abstract Adaptive indexing initializes and optimizes indexes incrementally; as a side effect ofquery processing. The goal is to achieve the benefits of indexes while hiding or minimizingthe costs of index creation. However; index-optimizing side effects seem to turn read-onlyqueries into update transactions that might; for example; create lock contention. This paperstudies concurrency control in the context of adaptive indexing. We show that the design andimplementation of adaptive indexing rigorously separates index structures from indexcontents; this relaxes the constraints and requirements during adaptive indexing comparedto those of traditional index updates. Our design adapts to the fact that an adaptive index isrefined continuously; and exploits any concurrency opportunities in a dynamic way.,Proceedings of the VLDB Endowment,2012,38,3
Continuous RDF query processing over DHTs,Erietta Liarou; Stratos Idreos; Manolis Koubarakis,Abstract We study the continuous evaluation of conjunctive triple pattern queries over RDFdata stored in distributed hash tables. In a continuous query scenario network nodessubscribe with long-standing queries and receive answers whenever RDF triples satisfyingtheir queries are published. We present two novel query processing algorithms for thisscenario and analyze their properties formally. Our performance goal is to have algorithmsthat scale to large amounts of RDF data; distribute the storage and query processing loadevenly and incur as little network traffic as possible. We discuss the various performancetradeoffs that occur through a detailed experimental evaluation of the proposed algorithms.,*,2007,37,5
dbTouch: Analytics at your Fingertips.,Stratos Idreos; Erietta Liarou,ABSTRACT As we enter the era of data deluge; turning data into knowledge has become themajor challenge across most sciences and businesses that deal with data. In addition; as weincrease our ability to create data; more and more people are confronted with datamanagement problems on a daily basis for numerous aspects of every day life. Afundamental need is data exploration through interactive tools; ie; being able to quickly andeffortlessly determine data and patterns of interest. However; modern database systemshave not been designed with data exploration and usability in mind; they require users withexpert knowledge and skills; while they react in a strict and monolithic way to every userrequest; resulting in correct answers but slow response times. In this paper; we introduce thevision of a new generation of data management systems; called dbTouch; our vision is to …,CIDR,2013,36,10
Motor “dexterity”?: evidence that left hemisphere lateralization of motor circuit connectivity is associated with better motor performance in children,Anita D Barber; Priti Srinivasan; Suresh E Joel; Brian S Caffo; James J Pekar; Stewart H Mostofsky,Abstract Motor control relies on well-established motor circuits; which are critical for typicalchild development. Although many imaging studies have examined task activation duringmotor performance; none have examined the relationship between functional intrinsicconnectivity and motor ability. The current study investigated the relationship betweenresting state functional connectivity within the motor network and motor performanceassessment outside of the scanner in 40 typically developing right-handed children. Bettermotor performance correlated with greater left-lateralized (mean left hemisphere—meanright hemisphere) motor circuit connectivity. Speed; rhythmicity; and control of movementswere associated with connectivity within different individual region pairs: faster speed wasassociated with more left-lateralized putamen–thalamus connectivity; less overflow with …,Cerebral Cortex,2011,36,12
Benchmarking adaptive indexing,Goetz Graefe; Stratos Idreos; Harumi Kuno; Stefan Manegold,Abstract Ideally; realizing the best physical design for the current and all subsequentworkloads would impact neither performance nor storage usage. In reality; workloads anddatasets can change dramatically over time and index creation impacts the performance ofconcurrent user and system activity. We propose a framework that evaluates the key premiseof adaptive indexing—a new indexing paradigm where index creation and re-organizationtake place automatically and incrementally; as a side-effect of query execution. We focus onhow the incremental costs and benefits of dynamic reorganization are distributed across theworkload's lifetime. We believe measuring the costs and utility of the stages of adaptationare relevant metrics for evaluating new query processing paradigms and comparing them totraditional approaches.,Technology Conference on Performance Evaluation and Benchmarking,2010,34,10
Business Analytics in (a) Blink.,Ronald Barber; Peter Bendel; Marco Czech; Oliver Draese; Frederick Ho; Namik Hrle; Stratos Idreos; Min-Soo Kim; Oliver Koeth; Jae-Gil Lee; Tianchao Tim Li; Guy M Lohman; Konstantinos Morfonios; René Müller; Keshava Murthy; Ippokratis Pandis; Lin Qiao; Vijayshankar Raman; Richard Sidle; Knut Stolze; Sandor Szabo,Abstract The Blink project's ambitious goal is to answer all Business Intelligence (BI) queriesin mere seconds; regardless of the database size; with an extremely low total cost ofownership. Blink is a new DBMS aimed primarily at read-mostly BI query processing thatexploits scale-out of commodity multi-core processors and cheap DRAM to retain a (copy ofa) data mart completely in main memory. Additionally; it exploits proprietary compressiontechnology and cache-conscious algorithms that reduce memory bandwidth consumptionand allow most SQL query processing to be performed on the compressed data. Blinkalways scans (portions of) the data mart in parallel on all nodes; without using any indexesor materialized views; and without any query optimizer to choose among them. The Blinktechnology has thus far been incorporated into two IBM accelerator products generally …,IEEE Data Eng. Bull.,2012,30,20
Database cracking: towards auto-tunning database kernels,Efstratios Ydraios,Information has always been a powerful thing. Gathering; managing; accessing andanalyzing information has evolved to be a critical issue for the success of any kind ofcommercial or government organization. Telecommunications; banking systems; hospitals;etc.; they all depend on data management; requiring various crucial properties; eg; fast dataaccess times; security and accuracy. Even entire scientific fields crucially depend on howefficiently scientists can interpret data in order to find meaningful patterns among huge pilesof data. Nowadays; with the advent of rich media data; even a single person's life representsa challenging data management task with tons of music; photos; video; to store; share andorganize. No wonder many argue we are living in the information era; economy; personal;social and scientific evolution; they all crucially depend on data manipulation.,*,2010,30,12
LibraRing: an architecture for distributed digital libraries based on DHTs,Christos Tryfonopoulos; Stratos Idreos; Manolis Koubarakis,Abstract We present a digital library architecture based on distributed hash tables. Wediscuss the main components of this architecture and the protocols for offering informationretrieval and information filtering functionality. We present an experimental evaluation of ourproposals.,International Conference on Theory and Practice of Digital Libraries,2005,30,19
Continuous multi-way joins over distributed hash tables,Stratos Idreos; Erietta Liarou; Manolis Koubarakis,Abstract This paper studies the problem of evaluating continuous multi-way joins on top ofDistributed Hash Tables (DHTs). We present a novel algorithm; called recursive join (RJoin);that takes into account various parameters crucial in a distributed setting ie; network traffic;query processing load distribution; storage load distribution etc. The key idea of RJoin isincremental evaluation: as relevant tuples arrive continuously; a given multi-way join isrewritten continuously into a join with fewer join operators; and is assigned continuously todifferent nodes of the network. In this way; RJoin distributes the responsibility of evaluating acontinuous multi-way join to many network nodes by assigning parts of the evaluation ofeach binary join to a different node depending on the values of the join attributes. The actualnodes to be involved are decided by RJoin dynamically after taking into account the rate …,Proceedings of the 11th international conference on Extending database technology: Advances in database technology,2008,27,21
Database cracking: fancy scan; not poor man's sort!,Holger Pirk; Eleni Petraki; Stratos Idreos; Stefan Manegold; Martin Kersten,Abstract Database Cracking is an appealing approach to adaptive indexing: on every range-selection query; the data is partitioned using the supplied predicates as pivots. The core ofdatabase cracking is; thus; pivoted partitioning. While pivoted partitioning; like scanning;requires a single pass through the data it tends to have much higher costs due to lower CPUefficiency. In this paper; we conduct an in-depth study of the reasons for the low CPUefficiency of pivoted partitioning. Based on the findings; we develop an optimized versionwith significantly higher (single-threaded) CPU efficiency. We also develop a number ofmulti-threaded implementations that are effectively bound by memory bandwidth. Combiningall of these optimizations we achieve an implementation that has costs close to or better thanan ordinary scan on a variety of systems ranging from low-end (cheaper than $300) …,Proceedings of the Tenth International Workshop on Data Management on New Hardware,2014,25,18
Repeatability and workability evaluation of SIGMOD 2011,Philippe Bonnet; Stefan Manegold; Matias Bjørling; Wei Cao; Javier Gonzalez; Joel Granados; Nancy Hall; Stratos Idreos; Milena Ivanova; Ryan Johnson; David Koop; Tim Kraska; René Müller; Dan Olteanu; Paolo Papotti; Christine Reilly; Dimitris Tsirogiannis; Cong Yu; Juliana Freire; Dennis Shasha,Abstract SIGMOD has offered; since 2008; to verify the experiments published in the papersaccepted at the conference. This year; we have been in charge of reproducing theexperiments provided by the authors (repeatability); and exploring changes to experimentparameters (workability). In this paper; we assess the SIGMOD repeatability process in termsof participation; review process and results. While the participation is stable in terms ofnumber of submissions; we find this year a sharp contrast between the high participationfrom Asian authors and the low participation from American authors. We also find that mostexperiments are distributed as Linux packages accompanied by instructions on how to setupand run the experiments. We are still far from the vision of executable papers.,ACM SIGMOD Record,2011,25,12
Distributed evaluation of continuous equi-join queries over large structured overlay networks,Stratos Idreos; Christos Tryfonopoulos; Manolis Koubarakis,We study the problem of continuous relational query processing in Internet-scale overlaynetworks realized by distributed hash tables. We concentrate on the case of continuous two-way equi-join queries. Joins are hard to evaluate in a distributed continuous queryenvironment because data from more than one relations is needed; and this data is insertedin the network asynchronously. Each time a new tuple is inserted; the network nodes have tocooperate to check if this tuple can contribute to the satisfaction of a query when combinedwith previously inserted tuples. We propose a series of algorithms that initially index queriesat network nodes using hashing. Then; they exploit the values of join attributes in incomingtuples to rewrite the given queries into simpler ones; and reindex them in the network wherethey might be satisfied by existing or future tuples. We present a detailed experimental …,Data Engineering; 2006. ICDE'06. Proceedings of the 22nd International Conference on,2006,25,15
MonetDB/DataCell: online analytics in a streaming column-store,Erietta Liarou; Stratos Idreos; Stefan Manegold; Martin Kersten,Abstract In DataCell; we design streaming functionalities in a modern relational databasekernel which targets big data analytics. This includes exploitation of both itsstorage/execution engine and its optimizer infrastructure. We investigate the opportunitiesand challenges that arise with such a direction and we show that it carries significantadvantages for modern applications in need for online analytics such as web logs; networkmonitoring and scientific data management. The major challenge then becomes the efficientsupport for specialized stream features; eg; multi-query processing and incremental window-based processing as well as exploiting standard DBMS functionalities in a streamingenvironment such as indexing. This demo presents DataCell; an extension of the MonetDBopen-source column-store for online analytics. The demo gives users the opportunity to …,Proceedings of the VLDB Endowment,2012,24,18
Beyond the Wall: Near-Data Processing for Databases,Sam Likun Xi; Oreoluwa Babarinsa; Manos Athanassoulis; Stratos Idreos,Abstract The continuous growth of main memory size allows modern data systems toprocess entire large scale datasets in memory. The increase in memory capacity; however;is not matched by proportional decrease in memory latency; causing a mismatch for in-memory processing. As a result; data movement through the memory hierarchy is now oneof the main performance bottlenecks for main memory data systems. Database systemsresearchers have proposed several innovative solutions to minimize data movement and tomake data access patterns hardware-aware. Nevertheless; all relevant rows and columnsfor a given query have to be moved through the memory hierarchy; hence; movement oflarge data sets is on the critical path. In this paper; we present JAFAR; a Near-DataProcessing (NDP) accelerator for pushing selects down to memory in modern column …,Proceedings of the 11th International Workshop on Data Management on New Hardware,2015,23,6
Transactional support for adaptive indexing,Goetz Graefe; Felix Halim; Stratos Idreos; Harumi Kuno; Stefan Manegold; Bernhard Seeger,Abstract Adaptive indexing initializes and optimizes indexes incrementally; as a side effect ofquery processing. The goal is to achieve the benefits of indexes while hiding or minimizingthe costs of index creation. However; index-optimizing side effects seem to turn read-onlyqueries into update transactions that might; for example; create lock contention. This paperstudies concurrency control and recovery in the context of adaptive indexing. We show thatthe design and implementation of adaptive indexing rigorously separates index structuresfrom index contents; this relaxes constraints and requirements during adaptive indexingcompared to those of traditional index updates. Our design adapts to the fact that anadaptive index is refined continuously and exploits any concurrency opportunities in adynamic way. A detailed experimental analysis demonstrates that (a) adaptive indexing …,The VLDB Journal,2014,22,10
Queriosity: Automated data exploration,Abdul Wasay; Manos Athanassoulis; Stratos Idreos,Curiosity; a fundamental drive amongst higher living organisms; is what enables exploration;learning and creativity. In our increasingly data-driven world; data exploration; ie; Makingsense of mounting haystacks of data; is akin to intelligence for science; business andindividuals. However; modern data systems--designed for data retrieval rather thanexploration--only let us retrieve data and ask if it is interesting. This makes knowledgediscovery a game of hit-and-trial which can only be orchestrated by expert data scientists.We present the vision toward Queriosity; an automated and personalized data explorationsystem. Designed on the principles of autonomy; learning and usability; Queriosity envisionsa paradigm shift in data exploration and aims to become aa personalized" data robot" thatprovides a direct answer to what is interesting in a user's data set; instead of just …,Big Data (BigData Congress); 2015 IEEE International Congress on,2015,19,12
Holistic indexing in main-memory column-stores,Eleni Petraki; Stratos Idreos; Stefan Manegold,Abstract Great database systems performance relies heavily on index tuning; ie; creatingand utilizing the best indices depending on the workload. However; the complexity of theindex tuning process has dramatically increased in recent years due to ad-hoc workloadsand shortage of time and system resources to invest in tuning. This paper introduces holisticindexing; a new approach to automated index tuning in dynamic environments. Holisticindexing requires zero set-up and tuning effort; relying on adaptive index creation as a side-effect of query processing. Indices are created incrementally and partially; they arecontinuously refined as we process more and more queries. Holistic indexing takes the state-of-the-art adaptive indexing ideas a big step further by introducing the notion of a systemwhich never stops refining the index space; taking educated decisions about which index …,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,19,12
Publish/subscribe with RDF data over large structured overlay networks,Erietta Liarou; Stratos Idreos; Manolis Koubarakis,Abstract We study the problem of evaluating RDF queries over structured overlay networks.We consider the publish/subscribe scenario where nodes subscribe with long-standingqueries and receive notifications whenever triples matching their queries are inserted in thenetwork. In this paper we focus on conjunctive multi-predicate queries. We demonstrate thatthese queries are useful in various modern applications eg; distributed digital libraries orGrid resource discovery. Conjunctive multi-predicate queries are hard to answer sincemultiple triples are necessary for their evaluation; and these triples will usually be inserted inthe network asynchronously. We present and evaluate query processing algorithms that arescalable and distribute the query processing load evenly.,*,2007,19,4
Query processing in super-peer networks with languages based on information retrieval: the p2p-diet approach,Stratos Idreos; Christos Tryfonopoulos; Manolis Koubarakis; Yannis Drougas,Abstract This paper presents P2P-DIET; an implemented resource sharing system thatunifies one-time and continuous query processing in super-peer networks. P2P-DIET offersa simple data model for the description of networkresources based on attributes with valuesof type text and a query language based on concepts from Information Retrieval. The focusof this paper is on the main modelling concepts of P2P-DIET (metadata; advertisements andqueries); the routing algorithms (inspired by the publish/subscibe system SIENA) and thescalable indexing of resource metadata and queries.,International Conference on Extending Database Technology,2004,18,12
P2P-DIET: One-time and continuous queries in super-peer networks,Stratos Idreos; Manolis Koubarakis; Christos Tryfonopoulos,Abstract In peer-to-peer (P2P) systems a very large number of autonomous computingnodes (the peers) pool together their resources and rely on each other for data and services.P2P systems are application level virtual or overlay networks that have emerged as a naturalway to share data and resources. The main application scenario considered in recent P2Pdata sharing systems is that of one-time querying: a user poses a query (eg;“I want music byMoby”) and the system returns a list of pointers to matching files owned by various peers inthe network. Then; the user can go ahead and download files of interest. Thecomplementary scenario of selective dissemination of information (SDI) or selectiveinformation push is also very interesting. In an SDI scenario; a user posts a continuous queryto the system to receive notifications whenever certain resources of interest appear in the …,International Conference on Extending Database Technology,2004,16,16
Designing Access Methods: The RUM Conjecture.,Manos Athanassoulis; Michael S Kester; Lukas M Maas; Radu Stoica; Stratos Idreos; Anastasia Ailamaki; Mark Callaghan,ABSTRACT The database research community has been building methods to store; access;and update data for more than four decades. Throughout the evolution of the structures andtechniques used to access data; access methods adapt to the ever changing hardware andworkload requirements. Today; even small changes in the workload or the hardware lead toa redesign of access methods. The need for new designs has been increasing as datageneration and workload diversification grow exponentially; and hardware advancesintroduce increased complexity. New workload requirements are introduced by theemergence of new applications; and data is managed by large systems composed of moreand more complex and heterogeneous hardware. As a result; it is increasingly important todevelop application-aware and hardware-aware access methods. The fundamental …,EDBT,2016,15,12
RINSE: interactive data series exploration with ADS+,Kostas Zoumpatianos; Stratos Idreos; Themis Palpanas,Abstract Numerous applications continuously produce big amounts of data series; and inseveral time critical scenarios analysts need to be able to query these data as soon as theybecome available. An adaptive index data structure; ADS+; which is specifically tailored tosolve the problem of indexing and querying very large data series collections has beenrecently proposed as a solution to this problem. The main idea is that instead of building thecomplete index over the complete data set up-front and querying only later; we interactivelyand adaptively build parts of the index; only for the parts of the data on which the users posequeries. The net effect is that instead of waiting for extended periods of time for the indexcreation; users can immediately start exploring the data series. In this work; we present ademonstration of ADS+; we introduce RINSE; a system that allows users to experience …,Proceedings of the VLDB Endowment,2015,15,12
Enhanced stream processing in a DBMS kernel,Erietta Liarou; Stratos Idreos; Stefan Manegold; Martin Kersten,Abstract Continuous query processing has emerged as a promising query processingparadigm with numerous applications. A recent development is the need to handle bothstreaming queries and typical one-time queries in the same application. For example; datawarehousing can greatly benefit from the integration of stream semantics; ie; online analysisof incoming data and combination with existing data. This is especially useful to provide lowlatency in data-intensive analysis in big data warehouses that are augmented with new dataon a daily basis. However; state-of-the-art database technology cannot handle streamsefficiently due to their" continuous" nature. At the same time; state-of-the-art streamtechnology is purely focused on stream applications. The research efforts are mostly gearedtowards the creation of specialized stream management systems built with a different …,Proceedings of the 16th International Conference on Extending Database Technology,2013,15,15
NoDB in action: adaptive query processing on raw data,Ioannis Alagiannis; Renata Borovica; Miguel Branco; Stratos Idreos; Anastasia Ailamaki,Abstract As data collections become larger and larger; users are faced with increasingbottlenecks in their data analysis. More data means more time to prepare the data; to loadthe data into the database and to execute the desired queries. Many applications alreadyavoid using traditional database systems; eg; scientific data analysis and social networks;due to their complexity and the increased data-to-query time; ie the time between getting thedata and retrieving its first useful results. For many applications data collections keepgrowing fast; even on a daily basis; and this data deluge will only increase in the future;where it is expected to have much more data than what we can move or store; let aloneanalyze. In this demonstration; we will showcase a new philosophy for designing databasesystems called NoDB. NoDB aims at minimizing the data-to-query time; most prominently …,Proceedings of the VLDB Endowment,2012,14,12
JAFAR: near-data processing for databases,Oreoluwatomiwa O Babarinsa; Stratos Idreos,Abstract As main-memory sizes have grown; data systems have been able to process entirelarge-scale data-sets in memory. However; because memory speeds have been not beenkeeping pace with CPU speeds; the cost of moving data into CPU caches has begun todominate certain operations within in-memory data systems. Recent advances in hardwarearchitectures point to near memory computation capabilities becoming possible soon. Thisallows us to rethink how database systems process queries and how they split computationacross the various computational units. In this paper; we present JAFAR; a near dataprocessing accelerator for pushing selects down to memory. Through a detailed simulationof JAFAR hardware we show it has the potential to provide up to 900\% improvement forselect operations in modern column-stores.,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,13,2
ADS: the adaptive data series index,Kostas Zoumpatianos; Stratos Idreos; Themis Palpanas,Abstract Numerous applications continuously produce big amounts of data series; and inseveral time critical scenarios analysts need to be able to query these data as soon as theybecome available. This; however; is not currently possible with the state-of-the-art indexingmethods and for very large data series collections. In this paper; we present the first adaptiveindexing mechanism; specifically tailored to solve the problem of indexing and querying verylarge data series collections. We present a detailed design and evaluation of our methodusing approximate and exact query algorithms with both synthetic and real data sets.Adaptive indexing significantly outperforms previous solutions; gracefully handling largedata series collections; reducing the data to query delay: By the time state-of-the-art indexingtechniques finish indexing 1 billion data series (and before answering even a single …,The VLDB Journal,2016,12,12
Estimating the compression fraction of an index using sampling,Stratos Idreos; Raghav Kaushik; Vivek Narasayya; Ravishankar Ramamurthy,Data compression techniques such as null suppression and dictionary compression arecommonly used in today's database systems. In order to effectively leverage compression; itis necessary to have the ability to efficiently and accurately estimate the size of an index if itwere to be compressed. Such an analysis is critical if automated physical design tools are tobe extended to handle compression. Several database systems today provide estimators forthis problem based on random sampling. While this approach is efficient; there is noprevious work that analyses its accuracy. In this paper; we analyse the problem of estimatingthe compressed size of an index from the point of view of worst-case guarantees. We showthat the simple estimator implemented by several database systems has several “good”cases even though the estimator itself is agnostic to the internals of the specific …,Data Engineering (ICDE); 2010 IEEE 26th International Conference on,2010,12,18
Semantic grid resource discovery in Atlas,Zoi Kaoudi; Iris Miliaraki; Matoula Magiridou; Erietta Liarou; Stratos Idreos; Manolis Koubarakis,Abstract We study the problem of resource discovery in the Semantic Grid. We show how tosolve this problem by utilizing Atlas; a P2P system for the distributed storage and retrieval ofRDF (S) data. Atlas is currently under development in project OntoGrid funded by FP6. Atlasis built on top of the distributed hash table Bamboo and supports pull and push queryingscenarios. It inherits all the nice features of Bamboo (openness; scalability; fault-tolerance;resistance to high churn rates) and extends Bamboo's protocols for storing and queryingRDF (S) data. Atlas is being used currently to realize the metadata service of S-OGSA in afully distributed and scalable way. In this paper; we concentrate on the main features of Atlasand demonstrate its use for Semantic Grid resource discovery in an OntoGrid use casescenario.,*,2007,12,4
Smooth scan: Statistics-oblivious access paths,Renata Borovica-Gajic; Stratos Idreos; Anastasia Ailamaki; Marcin Zukowski; Campbell Fraser,Query optimizers depend heavily on statistics representing column distributions to createefficient query plans. In many cases; though; statistics are outdated or non-existent; and theprocess of refreshing statistics is very expensive; especially for ad-hoc workloads on everbigger data. This results in suboptimal plans that severely hurt performance. The mainproblem is that any decision; once made by the optimizer; is fixed throughout the executionof a query. In particular; each logical operator translates into a fixed choice of a physicaloperator at run-time. In this paper; we advocate for continuous adaptation and morphing ofphysical operators throughout their lifetime; by adjusting their behavior in accordance withthe statistical properties of the data. We demonstrate the benefits of the new paradigm bydesigning and implementing an adaptive access path operator called Smooth Scan …,Data Engineering (ICDE); 2015 IEEE 31st International Conference on,2015,11,5
Blink: Not Your Father’s Database!,Ronald Barber; Peter Bendel; Marco Czech; Oliver Draese; Frederick Ho; Namik Hrle; Stratos Idreos; Min-Soo Kim; Oliver Koeth; Jae-Gil Lee; Tianchao Tim Li; Guy Lohman; Konstantinos Morfonios; Rene Mueller; Keshava Murthy; Ippokratis Pandis; Lin Qiao; Vijayshankar Raman; Sandor Szabo; Richard Sidle; Knut Stolze,Abstract The Blink project's ambitious goals are to answer all Business Intelligence (BI)queries in mere seconds; regardless of the database size; with an extremely low total cost ofownership. It takes a very innovative and counter-intuitive approach to processing BIqueries; one that exploits several disruptive hardware and software technology trends.Specifically; it is a new; workload-optimized DBMS aimed primarily at BI query processing;and exploits scale-out of commodity multi-core processors and cheap DRAM to retain a(copy of a) data mart completely in main memory. Additionally; it exploits proprietarycompression technology and cache-conscious algorithms that reduce memory bandwidthconsumption and allow most SQL query processing to be performed on the compresseddata. Ignoring the general wisdom of the last three decades that the only way to scalably …,International Workshop on Business Intelligence for the Real-Time Enterprise,2011,11,12
Designing semantic publish/subscribe networks using super-peers,Paul-Alexandru Chirita; Stratos Idreos; Manolis Koubarakis; Wolfgang Nejdl,Summary Publish/subscribe systems are an alternative to query-based systems in caseswhere the same information is asked for over and over; and where clients want to getupdated answers for the same query over a period of time. Recent publish/subscribesystems such as P2P-DIET have introduced this paradigm in the P2P context. In this chapterwe build on the experience gained with P2P-DIET and the Edutella super-peer infrastructureand present a semantic publish/subscribe system supporting metadata and a querylanguage based on RDF. We define formally the basic concepts of our system and presentdetailed protocols for its operation.,*,2006,11,3
P2P-DIET: A Query and Notification Service Based on Mobile Agents for Rapid Implementation of P2P Applications,Stratos Idreos; M Koubarakis,Abstract The paradigm of data sharing peer-to-peer systems has recently become a hot areaof research due to the popularity of file sharing applications such as Napster; Gnutella andKazaA that adopt the “information pull” model. Peerto-peer systems exhibit many interestingfeatures like adaptivity; load balancing; self-organization; fault-tolerance and the ability topool together large amounts of resources and put them at the disposal of a large communityof users. In the last few years; the publish-subscribe paradigm has also emerged as a verypromising one for the development of Internet applications concentrating on the “informationpush” model. This dissertation presents the design and development of P2P-DIET; a peerto-peer service that unifies the above two paradigms. The service has been implemented usingthe mobile agent system DIET Core developed in project DIET. Our service supports …,*,2003,11,5
Adaptive indexing over encrypted numeric data,Panagiotis Karras; Artyom Nikitin; Muhammad Saad; Rudrika Bhatt; Denis Antyukhov; Stratos Idreos,Abstract Today; outsourcing query processing tasks to remote cloud servers becomes aviable option; such outsourcing calls for encrypting data stored at the server so as to renderit secure against eavesdropping adversaries and/or an honest-but-curious server itself. Atthe same time; to be efficiently managed; outsourced data should be indexed; and evenadaptively so; as a side-effect of query processing. Computationally heavy encryptionschemes render such outsourcing unattractive; an alternative; Order-Preserving EncryptionScheme (OPES); intentionally preserves and reveals the order in the data; hence isunattractive from the security viewpoint. In this paper; we propose and analyze a scheme forlightweight and indexable encryption; based on linear-algebra operations. Our schemeprovides higher security than OPES and allows for range and point queries to be …,Proceedings of the 2016 International Conference on Management of Data,2016,10,21
Joins on encoded and partitioned data,Jae-Gil Lee; Gopi Attaluri; Ronald Barber; Naresh Chainani; Oliver Draese; Frederick Ho; Stratos Idreos; Min-Soo Kim; Sam Lightstone; Guy Lohman; Konstantinos Morfonios; Keshava Murthy; Ippokratis Pandis; Lin Qiao; Vijayshankar Raman; Vincent Kulandai Samy; Richard Sidle; Knut Stolze; Liping Zhang,Abstract Compression has historically been used to reduce the cost of storage; I/Os from thatstorage; and buffer pool utilization; at the expense of the CPU required to decompress dataevery time it is queried. However; significant additional CPU efficiencies can be achieved bydeferring decompression as late in query processing as possible and performing queryprocessing operations directly on the still-compressed data. In this paper; we investigate thebenefits and challenges of performing joins on compressed (or encoded) data. Wedemonstrate the benefit of independently optimizing the compression scheme of each joincolumn; even though join predicates relating values from multiple columns may requiretranslation of the encoding of one join column into the encoding of the other. We also showthe benefit of compressing" payload" data other than the join columns" on the fly;" to …,Proceedings of the VLDB Endowment,2014,9,10
dbTouch in action database kernels for touch-based data exploration,Erietta Liarou; Stratos Idreos,A fundamental need in the era of data deluge is data exploration through interactive tools; ie;being able to quickly determine data and patterns of interest. dbTouch is a new researchdirection towards a next generation of data management systems that inherently supportdata exploration by allowing touch-based interaction. Data is represented in a visual format;while users can touch those shapes and interact/query with gestures. In a dbTouch system;the whole database kernel is geared towards quick responses in touch input; the user drivesquery processing (not just query construction) via touch gestures; dictating how fast or slowdata flows through query plans and which data parts are processed at any time. dbTouchtranslates the gestures into interactive database operators; reacting continuously to thetouch input and analytics tasks given by the user in real-time such as sliding a finger over …,Data Engineering (ICDE); 2014 IEEE 30th International Conference on,2014,9,12
Adaptive indexing in modern database kernels,Stratos Idreos; Stefan Manegold; Goetz Graefe,Abstract Physical design represents one of the hardest problems for database managementsystems. Without proper tuning; systems cannot achieve good performance. Offline indexingcreates indexes a priori assuming good workload knowledge and idle time. More recently;online indexing monitors the workload trends and creates or drops indexes online. Adaptiveindexing takes another step towards completely automating the tuning process of adatabase system; by enabling incremental and partial online indexing. The main idea is thatphysical design changes continuously; adaptively; partially; incrementally and on demandwhile processing queries as part of the execution operators. As such it brings a plethora ofopportunities for rethinking and improving every single corner of database system design.We will analyze the indexing space between offline; online and adaptive indexing …,Proceedings of the 15th International Conference on Extending Database Technology,2012,9,10
Big Data Exploration,Stratos Idreos,External Files................................................................................................... 288 AdaptiveLoading.......................................................................................... 288 SelectiveParsing............................................................................................. 288 Indexing........................................................................................................... 289 Caching............................................................................................................ 289 Statistics........................................................................................................... 289 Splitting Files.................................................................................................. 290 DataVaults...................................................................................................... 290 Summary......................................................................................................... 290 Sampling-Based QueryProcessing................................................................... 291 Sciborg.............................................................................................................. 291 Blink …,Big Data Computing,2013,7,0
Monkey: Optimal navigable key-value store,Niv Dayan; Manos Athanassoulis; Stratos Idreos,Abstract In this paper; we show that key-value stores backed by an LSM-tree exhibit anintrinsic trade-off between lookup cost; update cost; and main memory footprint; yet allexisting designs expose a suboptimal and difficult to tune trade-off among these metrics. Wepinpoint the problem to the fact that all modern key-value stores suboptimally co-tune themerge policy; the buffer size; and the Bloom filters' false positive rates in each level. Wepresent Monkey; an LSM-based key-value store that strikes the optimal balance between thecosts of updates and lookups with any given main memory budget. The insight is that worst-case lookup cost is proportional to the sum of the false positive rates of the Bloom filtersacross all levels of the LSM-tree. Contrary to state-of-the-art key-value stores that assign afixed number of bits-per-element to all Bloom filters; Monkey allocates memory to filters …,Proceedings of the 2017 ACM International Conference on Management of Data,2017,6,12
Design Tradeoffs of Data Access Methods,Manos Athanassoulis; Stratos Idreos,Abstract Database researchers and practitioners have been building methods to store;access; and update data for more than five decades. Designing access methods has been aconstant effort to adapt to the ever changing underlying hardware and workloadrequirements. The recent explosion in data system designs-including; in addition totraditional SQL systems; NoSQL; NewSQL; and other relational and non-relational systems-makes understanding the tradeoffs of designing access methods more important than ever.Access methods are at the core of any new data system. In this tutorial we survey recentdevelopments in access method design and we place them in the design space where eachapproach focuses primarily on one or a subset of read performance; update performance;and memory utilization. We discuss how to utilize designs and lessons-learned from past …,Proceedings of the 2016 International Conference on Management of Data,2016,6,12
Upbit: Scalable in-memory updatable bitmap indexing,Manos Athanassoulis; Zheng Yan; Stratos Idreos,Abstract Bitmap indexes are widely used in both scientific and commercial databases. Theybring fast read performance for specific types of queries; such as equality and selectiverange queries. A major drawback of bitmap indexes; however; is that supporting updates isparticularly costly. Bitmap indexes are kept compressed to minimize storage footprint; as aresult; updating a bitmap index requires the expensive step of decoding and then encodinga bitvector. Today; more and more applications need support for both reads and writes;blurring the boundaries between analytical processing and transaction processing. Thisrequires new system designs and access methods that support general updates and; at thesame time; offer competitive read performance. In this paper; we propose scalable in-memory Updatable Bitmap indexing (UpBit); which offers efficient updates; without hurting …,Proceedings of the 2016 International Conference on Management of Data,2016,6,12
Specification and Design of Ontology Services and Semantic Grid Services on top of Self-organized P2P Networks,Zoi Kaoudi; Iris Miliaraki; Spiros Skiadopoulos; Matoula Magiridou; Erietta Liarou; Stratos Idreos; Manolis Koubarakis,*,Deliverable D4,2005,6
Distributed large-scale information filtering,Christos Tryfonopoulos; Stratos Idreos; Manolis Koubarakis; Paraskevi Raftopoulou,Abstract We study the problem of distributed resource sharing in peer-to-peer networks andfocus on the problem of information filtering. In our setting; subscriptions and publicationsare specified using an expressive attribute-value representation that supports both theBoolean and Vector Space models. We use an extension of the distributed hash table Chordto organise the nodes and store user subscriptions; and utilise efficient publication protocolsthat keep the network traffic and latency low at filtering time. To verify our approach; weevaluate the proposed protocols experimentally using thousands of nodes; millions of usersubscriptions; and two different real-life corpora. We also study three important facets of theload-balancing problem in such a scenario and present a novel algorithm that manages todistribute the load evenly among the nodes. Our results show that the designed protocols …,*,2014,5,18
P2P-DIET: ad-hoc and continuous queries in peer-to-peer networks using mobile agents,Stratos Idreos; Manolis Koubarakis,Abstract This paper presents P2P-DIET; a resource sharing system that unifies ad-hoc andcontinuous query processing in super-peer networks using mobile agents. P2P-DIET offersa simple data model for the description of network resources based on attributes with valuesof type text. It also utilizes very efficient query processing algorithms based on indexing ofresource metadata and queries. The capability of location-independent addressing issupported; which enables P2P-DIET clients to connect from anywhere in the network anduse dynamic IP addresses. The features of stored notifications and rendezvous guaranteethat all important information is delivered to interested clients even if they have beendisconnected for some time. P2P-DIET has been developed on top of the Open Sourcemobile agent system DIET Agents and is currently been demonstrated as a file sharing …,Hellenic Conference on Artificial Intelligence,2004,5,12
Adaptive data skipping in main-memory systems,Wilson Qin; Stratos Idreos,Abstract As modern main-memory optimized data systems increasingly rely on fast scans;lightweight indexes that allow for data skipping play a crucial role in data filtering to reducesystem I/O. Scans benefit from data skipping when the data order is sorted; semi-sorted; orcomprised of clustered values. However data skipping loses effectiveness over arbitrarydata distributions. Applying data skipping techniques over non-sorted data can significantlydecrease query performance since the extra cost of metadata reads result in nocorresponding scan performance gains. We introduce adaptive data skipping as aframework for structures and techniques that respond to a vast array of data distributions andquery workloads. We reveal an adaptive zonemaps design and implementation on a main-memory column store prototype to demonstrate that adaptive data skipping has potential …,Proceedings of the 2016 International Conference on Management of Data,2016,4,12
Cracking big data,Stratos Idreos,textabstractA fundamental and emerging need with big amounts of data is data exploration:when we are searching for interesting patterns we often do not have a priori knowledge ofexactly what we are looking for. Database cracking enables such data exploration featuresby bringing; for the first time; incremental and adaptive indexing abilities to modern databasesystems.,ERCIM News,2012,3,19
Publish/subscribe functionalities for future digital libraries using structured overlay networks,Christos Tryfonopoulos; Stratos Idreos; Manolis Koubarakis,We are interested in the problem of distributed resource sharing in future digital libraries(DLs). We adopt a pure P2P architecture (illustrated in Figure 1); but our ideas can be easilymodified to work in the case of hierarchical P2P networks; as in [3]. Information providers(DLs) and information consumers (users) are both represented by peers participating in apeer-to-peer (P2P) overlay network. There are two kinds of basic functionality that we expectthis architecture to offer: information retrieval (IR) and publish/subscribe (pub/sub). In an IRscenario a user poses a query (eg;“I am interested in papers on bio-informatics”) and thesystem returns information about matching resources. In a pub/sub scenario (also known asinformation filtering (IF) or selective dissemination of information (SDI)) a user posts asubscription (or profile or continuous query) to the system to receive notifications …,DELOS’05; Schloss Dagstuhl; Germany,2005,3,12
Access Path Selection in Main-Memory Optimized Data Systems: Should I Scan or Should I Probe?,Michael S Kester; Manos Athanassoulis; Stratos Idreos,Abstract The advent of columnar data analytics engines fueled a series of optimizations onthe scan operator. New designs include column-group storage; vectorized execution; sharedscans; working directly over compressed data; and operating using SIMD and multi-coreexecution. Larger main memories and deeper cache hierarchies increase the efficiency ofmodern scans; prompting a revisit of the question of access path selection. In this paper; wecompare modern sequential scans and secondary index scans. Through detailed analyticalmodeling and experimentation we show that while scans have become useful in more casesthan before; both access paths are still useful; and so; access path selection (APS) is stillrequired to achieve the best performance when considering variable workloads. We showhow to perform access path selection. In particular; contrary to the way traditional systems …,Proceedings of the 2017 ACM International Conference on Management of Data,2017,2,1
Main Memory Adaptive Denormalization,Zezhou Liu; Stratos Idreos,Abstract Joins have traditionally been the most expensive database operator; but they arerequired to query normalized schemas. In turn; normalized schemas are necessary tominimize update costs and space usage. Joins can be avoided altogether by using adenormalized schema instead of a normalized schema; this improves analytical queryprocessing times at the tradeof increased update overhead; loading cost; and storagerequirements.,Proceedings of the 2016 International Conference on Management of Data,2016,2,18
GeckoFTL: Scalable Flash Translation Techniques For Very Large Flash Devices,Niv Dayan; Philippe Bonnet; Stratos Idreos,Abstract The volume of metadata needed by a flash translation layer (FTL) is proportional tothe storage capacity of a flash device. Ideally; this metadata should reside in the device'sintegrated RAM to enable fast access. However; as flash devices scale to terabytes; thenecessary volume of metadata is exceeding the available integrated RAM. Moreover;recovery time after power failure; which is proportional to the size of the metadata; isbecoming impractical. The simplest solution is to persist more metadata in flash. Theproblem is that updating metadata in flash increases the amount of internal IOs therebyharming performance and device lifetime. In this paper; we identify a key component of themetadata called the Page Validity Bitmap (PVB) as the bottleneck. PVB is used by thegarbage-collectors of state-of-the-art FTLs to keep track of which physical pages in the …,Proceedings of the 2016 International Conference on Management of Data,2016,2,21
Query management system and engine allowing for efficient query execution on raw details,*,A database system maintains a feature set of a modern database system while operatingdirectly on raw data files. Systems may use an adaptive indexing mechanism that maintainspositional information to provide efficient access to raw data files; a flexible cachingstructure; and techniques for selective parsing and selective tokenizing. In doing so;possible performance bottlenecks associated with repeated parsing; tokenizing; andexpensive data type conversion costs can be overcome.,*,2016,2,6
One loop does not fit all,Styliani Pantela; Stratos Idreos,Abstract Just-In-Time (JIT) compilation increasingly becomes a key technology for moderndatabase systems. It allows the creation of code on-the-fly to perfectly match an active query.In the past; it has been argued that a query should be compiled to a single loop thatperforms all query actions; for example; all selects over all relevant columns. On the otherhand; vectorization--a common feature in modern data systems--allows for better results byevaluating the query predicates sequentially in different tight for-loops.,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,2,12
Data canopy: Accelerating exploratory statistical analysis,Abdul Wasay; Xinding Wei; Niv Dayan; Stratos Idreos,Abstract During exploratory statistical analysis; data scientists repeatedly compute statisticson data sets to infer knowledge. Moreover; statistics form the building blocks of coremachine learning classification and filtering algorithms. Modern data systems; softwarelibraries; and domain-specific tools provide support to compute statistics but lack a cohesiveframework for storing; organizing; and reusing them. This creates a significant problem forexploratory statistical analysis as data grows: Despite existing overlap in exploratoryworkloads (which are repetitive in nature); statistics are always computed from scratch. Thisleads to repeated data movement and recomputation; hindering interactive data exploration.We address this challenge in Data Canopy; where descriptive and dependence statistics aresynthesized from a library of basic aggregates. These basic aggregates are stored within …,Proceedings of the 2017 ACM International Conference on Management of Data,2017,1,21
DASlab: The Data Systems Laboratory at Harvard SEAS,Stratos Idreos,Abstract DASlab is a new laboratory at the Harvard School of Engineering and AppliedSciences (SEAS). The lab was formed in January 2014 when Stratos Idreos joined HarvardSEAS. DASlab curently consists of 3 PhD students; 1 postdoctoral researcher and 9undergraduate researchers while it is set to double its graduate student population in thenext one to two years. The lab is part of a growing community of systems and computerscience researchers at Harvard; computer science faculty is scheduled to grow by 50% inthe next few year.,ACM SIGMOD Record,2015,1,19
Evolutionary Data Systems,Stratos Idreos; Lukas M Maas; Mike S Kester,Abstract: Anyone in need of a data system today is confronted with numerous complexoptions in terms of system architectures; such as traditional relational databases; NoSQLand NewSQL solutions as well as several sub-categories like column-stores; row-stores etc.This overwhelming array of choices makes bootstrapping data-driven applications difficultand time consuming; requiring expertise often not accessible due to cost issues (eg; toscientific labs or small businesses). In this paper; we present the vision of evolutionary datasystems that free systems architects and application designers from the complex;cumbersome and expensive process of designing and tuning specialized data systemarchitectures that fit only a single; static application scenario. Setting up an evolutionarysystem is as simple as identifying the data. As new data and queries come in; the system …,arXiv preprint arXiv:1706.05714,2017,*,18
Small Data,Oliver Kennedy; D Richard Hipp; Stratos Idreos; Amélie Marian; Arnab Nandi; Carmela Troncoso; Eugene Wu,Data is becoming increasingly personal. Individuals regularly interact with a wide variety ofstructured data; from SQLite databases on phones; to HR spreadsheets; to personalsensors; to open government data appearing in news articles. Although these workloads areimportant; many of the classical challenges associated with scale and Big Data do not apply.This panel brings together experts in a variety of fields to explore the new opportunities andchallenges presented by" Small Data".,Data Engineering (ICDE); 2017 IEEE 33rd International Conference on,2017,*,21
The Automatic Scientist will be a Data System.,Stratos Idreos,For thousands of years science happens in a rather manual way. Mathematics; engineeringand computer science provide the means to automate some of the laborious tasks that haveto do with computation; data collection and management; and to some degree predictability.As scientific fields grow more mature; though; and scientists over-specialize a new problemappears that has to do with the core of the scientific process rather with the supporting steps.,CIDR,2017,*,12
MonetDB Jun2016 feature release,ML Kersten; PA Boncz; NJ Nes; S Manegold; KS Mullender; JA deRijke; Y Zhang; M Pham; LHA Scheers; E Petraki; THJ Sellam; Y Kargin; MM Gawade; HF Mühleisen; K Kyzirakos; DG Nedev; CP Cijvat; F Alvanaki; M vanDinther; E Sidirourgos; RA Koopmanschap; M Raasveldt; P Koutsourakis; TR Döhmen; BB Kruit; A Wits; PE Ferreira; SG Stalinov,KNAW Narcis. Back to search results. Publication MonetDB Jun2016 feature release (2016).Pagina-navigatie: Main. Save publication: Save as MODS; Export to Mendeley; Save as EndNote;Export to RefWorks. Title; MonetDB Jun2016 feature release. Author; ML Kersten (Martin); PA Boncz(Peter); NJ Nes (Niels); S. Manegold (Stefan); KS Mullender (Sjoerd); JA de Rijke (Arjen); Y. Zhang(Ying); M.-D. Pham (Minh-Duc); LHA Scheers (Bart); E. Petraki (Eleni); THJ Sellam (Thibault); Y.Kargin (Yagiz); MM Gawade (Mrunal); HF Mühleisen (Hannes); K. Kyzirakos (Konstantinos); DGNedev (Dimitar); CP Cijvat (Robin); F. Alvanaki (Foteini); M. van Dinther (Martin); E. Sidirourgos(Eleftherios); RA Koopmanschap (Richard); M. Raasveldt (Mark); P. Koutsourakis (Panagiotis);TR Döhmen (Till); BB Kruit (Benno); A. Wits (Abe); PE Silva Ferreira (Pedro); SG Stalinov (Svetlin).Supporting host; Database Architectures. Date; 2016 …,*,2016,*,8
MonetDB Jul2015-SP3 bigfix release,ML Kersten; PA Boncz; NJ Nes; Stefan Manegold; KS Mullender; JA deRijke; Ying Zhang; M Pham; LHA Scheers; Eleni Petraki; THJ Sellam; Yagiz Kargin; MM Gawade; HF Mühleisen; Konstantinos Kyzirakos; DG Nedev; CP Cijvat; Foteini Alvanaki; M vanDinther; Eleftherios Sidirourgos; RA Koopmanschap; Mark Raasveldt; Panagiotis Koutsourakis; TR Döhmen; BB Kruit; Abe Wits,KNAW Narcis. Back to search results. Publication MonetDBJul2015-SP3 bigfix release (2016). Pagina-navigatie: Main …,*,2016,*,21
Advances in Database Technology—EDBT 2014,Sihem Amer-Yahia; Vassilis Christophides; Anastasios Kementsietsidis; Minos Garofalakis; Stratos Idreos; Vincent Leroy,The proceedings of EDBT 2014 include an overview of a keynote address by SergeAbiteboul (INRIA); an overview of a keynote address by Peter Boncz (CWI); a laudationconcerning the EDBT 2014 Test of Time Award; and 49 research papers and 3 vision papersthat were selected by the Program Committee from 266 submissions.,*,2014,*,12
Foundations and Trends® in Databases,Daniel Abadi; Peter Boncz; Stavros Harizopoulos; Stratos Idreos; Samuel Madden,*,Foundations and Trends® in Databases,2013,*
MonetDB Feb2013-SP4 bugfix release,ML Kersten; PA Boncz; NJ Nes; S Manegold; KS Mullender; JA deRijke; Y Zhang; S Idreos; E Sidirourgos; H Pirk; M Pham; LHA Scheers; E Petraki; THJ Sellam; Y Kargin; MM Gawade; HF Mühleisen; S Héman; K Kyzirakos,KNAW Narcis. Back to search results. Publication MonetDB Feb2013-SP4 bugfix release (2013).Pagina-navigatie: Main. Save publication: Save as MODS; Export to Mendeley; Save as EndNote;Export to RefWorks. Title; MonetDB Feb2013-SP4 bugfix release. Author; ML Kersten (Martin);PA Boncz (Peter); NJ Nes (Niels); S. Manegold (Stefan); KS Mullender (Sjoerd); JA de Rijke(Arjen); Y. Zhang (Ying); S. Idreos (Stratos); E. Sidirourgos (Eleftherios); H. Pirk (Holger); M.-D.Pham (Minh-Duc); LHA Scheers (Bart); E. Petraki (Eleni); THJ Sellam (Thibault); Y. Kargin (Yagiz);MM Gawade (Mrunal); HF Mühleisen (Hannes); S. Héman (Sándor); K. Kyzirakos (Konstantinos).Supporting host; Database Architectures; Database Architectures. Date; 2013-09-01. Language;English. Type; Other. Publication; https://ir.cwi.nl/pub/21480. Persistent Identifier;urn:NBN:nl:ui:18-21480. Metadata; XML. Source; CWI …,*,2013,*,20
MonetDB Feb2013-SP1 bugfix release,ML Kersten; PA Boncz; NJ Nes; S Manegold; KS Mullender; FE Groffen; JA deRijke; Y Zhang; S Idreos; RA Goncalves; E Sidirourgos; H Pirk; M Pham; LHA Scheers; E Petraki; THJ Sellam; Y Kargin; MM Gawade; HF Mühleisen,KNAW Narcis. Back to search results. Publication MonetDB Feb2013-SP1 bugfix release (2013).Pagina-navigatie: Main. Save publication: Save as MODS; Export to Mendeley; Save as EndNote;Export to RefWorks. Title; MonetDB Feb2013-SP1 bugfix release. Author; ML Kersten (Martin);PA Boncz (Peter); NJ Nes (Niels); S. Manegold (Stefan); KS Mullender (Sjoerd); FE Groffen(Fabian); JA de Rijke (Arjen); Y. Zhang (Ying); S. Idreos (Stratos); RA Goncalves (Romulo); E.Sidirourgos (Eleftherios); H. Pirk (Holger); M.-D. Pham (Minh-Duc); LHA Scheers (Bart); E. Petraki(Eleni); THJ Sellam (Thibault); Y. Kargin (Yagiz); MM Gawade (Mrunal); HF Mühleisen (Hannes).Supporting host; Database Architectures; Database Architectures. Date; 2013-03-01. Language;English. Type; Other. Publication; https://ir.cwi.nl/pub/21316. Persistent Identifier;urn:NBN:nl:ui:18-21316. Metadata; XML. Source; CWI …,*,2013,*,18
Concurrency Control in Adaptive Indexing,Stratos Idreos,*,*,2012,*
Data Infrastructures and Data Management Research: Close Relatives or Total Strangers?,Stratos Idreos,*,*,2012,*
Stochastic Database Cracking,Stratos Idreos,*,*,2012,*
MonetDB Dec2011 feature release,ML Kersten; PA Boncz; NJ Nes; S Manegold; KS Mullender; FE Groffen; JA deRijke; Y Zhang; MG Ivanova; S Idreos; RA Goncalves; E Sidirourgos; E Liarou; H Pirk; M Pham; LHA Scheers; E Petraki; THJ Sellam; Y Kargin; MM Gawade; VV Meduri,KNAW Narcis. Back to search results. Publication MonetDB Dec2011 feature release (2012).Pagina-navigatie: Main. Save publication: Save as MODS; Export to Mendeley; Save as EndNote;Export to RefWorks. Title; MonetDB Dec2011 feature release. Author; ML Kersten (Martin); PABoncz (Peter); NJ Nes (Niels); S. Manegold (Stefan); KS Mullender (Sjoerd); FE Groffen (Fabian);JA de Rijke (Arjen); Y. Zhang (Ying); MG Ivanova (Milena); S. Idreos (Stratos); RA Goncalves(Romulo); E. Sidirourgos (Eleftherios); E. Liarou (Erietta); H. Pirk (Holger); M.-D. Pham(Minh-Duc); LHA Scheers (Bart); E. Petraki (Eleni); THJ Sellam (Thibault); Y. Kargin (Yagiz); MMGawade (Mrunal); VV Meduri (Vamsi). Supporting host; Database Architectures; name unknown.Date; 2012-01-01. Language; English. Type; Other. Publication; https://ir.cwi.nl/pub/19382.Persistent Identifier; urn:NBN:nl:ui:18-19382. Metadata; XML. Source; CWI …,*,2012,*,21
Database Cracking: Concurrency control and Stochastic Cracking,S Idreos,KNAW Narcis. Back to search results. Publication Database Cracking: Concurrencycontrol and Stochastic Cracking (2012). Pagina-navigatie: Main …,*,2012,*,3
Big Data: Research Challenges; Applications and Tools,Stratos Idreos,*,*,2012,*
Too Many Links in the Horizon; What is Next? Linked Views and Linked History.,Erietta Liarou; Stratos Idreos,Abstract. The trend for more online linked data becomes stronger. Foreseeing a future where“everything” will be online and linked; we ask the critical question; what is next? We envisionthat managing; querying and storying large amounts of links and data is far from yet anotherquery processing task. We highlight two distinct and promising research directions towardsmanaging and making sense of linked data. We introduce linked views to help focusing onspecific link and data instances and linked history to help observe how links and datachange over time.,*,2011,*,3
A stream data model and query language for continuous/stream queries over EO image files and databases,Milena Ivanova; Martin Kersten; Stefan Manegold; Holger Pirk; Erietta Liarou; Romulo Goncalves; Stratos Idreos,Executive Summary In the TELEIOS project; in particular NOA's real-time fire monitoring usecase (work-package 7) requires continuous query processing functionality similar to thatknown from event stream processing of publish/-subscribe scenarios. As opposed to ad-hocquery processing; where one-time queries are evaluated against a stable data base;continuous query processing features long-running queries that are continuously evaluatedagainst ever new arriving data. In general; stream applications gained significant popularityover the last years that lead to the development of specialized stream engines. Thesesystems are designed from scratch with a different philosophy than nowadays databaseengines in order to cope with the stream applications requirements. However; this meansthat they lack the power and sophisticated techniques of a full fledged database system …,*,2011,*,21
MonetDB Aug2011-SP1 bugfix release,ML Kersten; PA Boncz; NJ Nes; S Manegold; KS Mullender; FE Groffen; JA deRijke; Y Zhang; MG Ivanova; S Idreos; RA Goncalves; E Sidirourgos; E Liarou; H Pirk; M Pham; LHA Scheers; E Petraki,KNAW Narcis. Back to search results. Publication MonetDB Aug2011-SP1 bugfix release (2011).Pagina-navigatie: Main. Save publication: Save as MODS; Export to Mendeley; Save as EndNote;Export to RefWorks. Title; MonetDB Aug2011-SP1 bugfix release. Author; ML Kersten (Martin);PA Boncz (Peter); NJ Nes (Niels); S. Manegold (Stefan); KS Mullender (Sjoerd); FE Groffen(Fabian); JA de Rijke (Arjen); Y. Zhang (Ying); MG Ivanova (Milena); S. Idreos (Stratos); RAGoncalves (Romulo); E. Sidirourgos (Eleftherios); E. Liarou (Erietta); H. Pirk (Holger); M.-D. Pham(Minh-Duc); LHA Scheers (Bart); E. Petraki (Eleni). Supporting host; Database Architectures;name unknown. Date; 2011-09-01. Language; English. Type; Other. Publication;https://ir.cwi.nl/pub/19379. Persistent Identifier; urn:NBN:nl:ui:18-19379. Metadata; XML. Source;CWI. Go to Website Navigation: Home; about narcis; login; Nederlands. contact …,*,2011,*,12
MonetDB Apr2011-SP1 bugfix release,ML Kersten; PA Boncz; NJ Nes; S Manegold; KS Mullender; FE Groffen; JA deRijke; Y Zhang; MG Ivanova; S Idreos; RA Goncalves; E Sidirourgos; E Liarou; H Pirk; M Pham; LHA Scheers; E Petraki,KNAW Narcis. Back to search results. Publication MonetDB Apr2011-SP1 bugfix release (2011).Pagina-navigatie: Main. Save publication: Save as MODS; Export to Mendeley; Save as EndNote;Export to RefWorks. Title; MonetDB Apr2011-SP1 bugfix release. Author; ML Kersten (Martin);PA Boncz (Peter); NJ Nes (Niels); S. Manegold (Stefan); KS Mullender (Sjoerd); FE Groffen(Fabian); JA de Rijke (Arjen); Y. Zhang (Ying); MG Ivanova (Milena); S. Idreos (Stratos); RAGoncalves (Romulo); E. Sidirourgos (Eleftherios); E. Liarou (Erietta); H. Pirk (Holger); M.-D. Pham(Minh-Duc); LHA Scheers (Bart); E. Petraki (Eleni). Supporting host; Database Architectures;name unknown. Date; 2011-05-01. Language; English. Type; Other. Publication;https://ir.cwi.nl/pub/19376. Persistent Identifier; urn:NBN:nl:ui:18-19376. Metadata; XML. Source;CWI. Go to Website Navigation: Home; about narcis; login; Nederlands. contact …,*,2011,*,3
Sideways Cracking,Stratos Idreos,*,*,2011,*
Database Cracking and the Path Towards Auto-tuning Database kernels,Stratos Idreos,*,*,2011,*
An IPad for my Data,Stratos Idreos,*,*,2011,*
Benchmarking adaptive indexing,G Goetz; S Idreos; H Kuno; S Manegold,textabstractIdeally; realizing the best physical design for the current and all subsequentworkloads would impact neither performance nor storage usage. In reality; workloads anddatasets can change dramatically over time and index creation impacts the performance ofconcurrent user and system activity. We propose a framework that evaluates the key premiseof adaptive indexing---a new indexing paradigm where index creation and re-organizationtake place automatically and incrementally; as a side-effect of query execution. We focus onhow the incremental costs and benefits of dynamic reorganization are distributed across theworkload's lifetime. We believe measuring the costs and utility of the stages of adaptationare relevant metrics for evaluating new query processing paradigms and comparing them totraditional approaches.,*,2010,*,5
Stratos Idreos,Stratos Idreos,Information has always been a powerful thing. Gathering; managing; accessing andanalyzing information has evolved to be a critical issue for the success of any kind ofcommercial or government organization. Telecommunications; banking systems; hospitals;etc.; they all depend on data management; requiring various crucial properties; eg; fast dataaccess times; security and accuracy. Even entire scientific fields crucially depend on howefficiently scientists can interpret data in order to find meaningful patterns among huge pilesof data. Nowadays; with the advent of rich media data; even a single person's life representsa challenging data management task with tons of music; photos; video; to store; share andorganize. No wonder many argue we are living in the information era; economy; personal;social and scientific evolution; they all crucially depend on data manipulation.,*,2010,*,5
1 L3S and University of Hannover; Hannover; Germany,Paul-Alexandra Chirita; Stratos Idreos; Manolis Koubarakis; Wolfgang Nejdl,Summary. Publish/subscribe systems are an alternative to query-based systems in caseswhere the same information is asked for over and over; and where clients want to getupdated answers for the same query over a period of time. Recent publish/subscribesystems such as P2P-DIET have introduced this paradigm in the P2P context. In this chapterwe build on the experience gained with P2P-DIET and the Edutella super-peer infrastructureand present a semantic publish/subscribe system supporting metadata and a querylanguage based on RDF. We define formally the basic concepts of our system and presentdetailed protocols for its operation.,Semantic Web and Peer-to-Peer: Decentralized Management and Exchange of Knowledge and Information,2005,*,20
MonetDB,ML Kersten; PA Boncz; NJ Nes; S Manegold; KS Mullender; FE Groffen; MG Ivanova; Y Zhang; RA Goncalves; E Sidirourgos; E Liarou; S Idreos; JA deRijke; AP deVries; W Alink; R Cornacchia; JFP van deAkker; AR vanBallegooij; CA van deBerg; JR Castelo; J Flokstra; CA Galindo-Legaria; T Grust; S Héman; D Hiemstra; T Ianeva; JS Karlsson; M vanKeulen; S deKonink; JA List; N Mamoulis; GJ Molenaar; G Modena; S Göldner; AJ Pellenkoft; HGP Bosch; W Quak; G Ramirez Camps; J Rittinger; H Rode; W Scherphof; AR Schmidt; N Tang; J Teubner; C Treijtel; T Tsikrika; F Waas; THW Westerveld; MA Windhouwer; M Zukowski; A Gafriller; A Singh; A Scherpenisse; B Brodbeck; G deNijs; M Mayr; M Antonelli; M vanDinther; R Aly; R vanOs; S Mayer; S Kerschbaumer; T Ressel; T Schreiber,KNAW Narcis. Back to search results. Publication MonetDB (2005). Pagina-navigatie: Main. Savepublication: Save as MODS; Export to Mendeley; Save as EndNote; Export to RefWorks. Title;MonetDB. Author; ML Kersten (Martin); PA Boncz (Peter); NJ Nes (Niels); S. Manegold (Stefan);KS Mullender (Sjoerd); FE Groffen (Fabian); MG Ivanova (Milena); Y. Zhang (Ying); RA Goncalves(Romulo); E. Sidirourgos (Eleftherios); E. Liarou (Erietta); S. Idreos (Stratos); JA de Rijke (Arjen);AP de Vries (Arjen); W. Alink (Wouter); R. Cornacchia (Roberto); JFP van den Akker; AR vanBallegooij; CA van den Berg; JR Castelo; J. Flokstra; CA Galindo-Legaria; T. Grust; S. Héman(Sándor); D. Hiemstra; T. Ianeva; JS Karlsson; M. van Keulen; S. de Konink (Stefan …,*,2005,*,20
Peer-to-Peer Computing and Databases (P2PDB)-,Stratos Idreos; Christos Tryfonopoulos; Manolis Koubarakis; Yannis Drougas,*,Lecture Notes in Computer Science,2004,*
P2P-DIET: A query and notification service based on mobile agents for rapid implementation of peer-to-peer applications,Stratos Idreos,Notice: The documents contained in these directories are included by the contributingauthors as a means to ensure timely dissemination of scholarly and technical work on a non-commercial basis. Copyright and all rights therein are maintained by the authors or by othercopyright holders; notwithstanding that they have offered their works here electronically. It isunderstood that all persons copying this information will adhere to the terms and constraintsinvoked by each author's copyright.,Technical University of Crete,2003,*,15
SQL & intro to db architectures,Stratos Idreos,Page 1. SQL & intro to db architectures prof. Stratos Idreos …,*,*,*,10
ICDE 2017 Reviewers,Yannis Papakonstantinou; Lei Chen; Reynold Cheng; Wolfgang Gatterbauer; Bingsheng He; Stratos Idreos; Christopher Jermaine; Chen Li; Gerome Miklau; Tamer Özsu; Olga Papaemmanouil; Evimaria Terzi; Eugene Wu; Ashraf Aboulnaga; Alex Alves; Amazon Gabriel Antoniu; INRIA Arvind Arasu; Andrey Balmin; Workday Zhifeng Bao; Sumita Barahmand; Srikanta Bedathur; Carsten Binnig; Spyros Blanas; Marco Brambilla; Stephane Bressan; K Selcuk Candan; Zhao Cao; James Cheng; Fei Chiang; Panos K Chrysanthis; Philippe Cudre-Mauroux,ICDE 2017 Program Committee Chairs Yannis Papakonstantinou; University of California; SanDiego Yanlei Diao; Ecole Polytechnique; France; and University of Massachusetts; Amherst …ICDE 2017 Area Chairs Lei Chen; Hong Kong University of Science and Technology ReynoldCheng; University of Hong Kong Wolfgang Gatterbauer; Carnegie Mellon University BingshengHe; National University of Singapore Stratos Idreos; Harvard University ChristopherJermaine; Rice University Chen Li; University of California Irvine Gerome Miklau; University ofMassachusetts Tamer Özsu; University of Waterloo Olga Papaemmanouil; Brandeis UniversityEvimaria Terzi; Boston University Eugene Wu; Columbia University … ICDE 2017 Program CommitteeAshraf Aboulnaga; Qatar Computing Research Institute Alex Alves; Amazon Gabriel Antoniu;INRIA Arvind Arasu; Microsoft Research Andrey Balmin; Workday Zhifeng Bao; RMIT …,*,*,*,5
Past and Future Steps for Adaptive Storage Data Systems: From Shallow to Deep Adaptivity,Stratos Idreos; Manos Athanassoulis Niv Dayan; Demi Guo; Mike S Kester; Lukas Maas; Kostas Zoumpatianos,Abstract. Data systems with adaptive storage can autonomously change their behavior byaltering how data is stored and accessed. Such systems have been studied primarily for thecase of adaptive indexing to automatically create the right indexes at the right granularity.More recently work on adaptive loading and adaptive data layouts brought even moreflexibility. We survey this work and describe the need for even deeper adaptivity that goesbeyond adjusting knobs in a single architecture; instead it can adapt the fundamentalarchitecture of a data system to drastically alter its behavior.,*,*,*,12
Database Kernels Tailored for Data Exploration,Stratos Idreos,Abstract Data exploration is about efficiently extracting knowledge from data even if we donot know exactly what we are looking for. In this tutorial; we survey recent developments inthe emerging area of database systems tailored for data exploration. Specifically; we surveyrecent literature that focuses on the vision of database kernels that are tailored for dataexploration by adapting their storage and access patterns to varying workloads.,*,*,*,21
The magazine archive includes every article published in Communications of the ACM for over the past 50 years.,Ioannis Alagiannis; Renata Borovica-Gajic; Miguel Branco; Stratos Idreos; Anastasia Ailamaki,As data collections become larger and larger; users are faced with increasing bottlenecks intheir data analysis. More data means more time to prepare and to load the data into thedatabase before executing the desired queries. Many applications already avoid usingdatabase systems; for example; scientific data analysis and social networks; due to thecomplexity and the increased data-to-query time; that is; the time between getting the dataand retrieving its first useful results. For many applications data collections keep growingfast; even on a daily basis; and this data deluge will only increase in the future; where it isexpected to have much more data than what we can move or store; let alone analyze.Wehere present the design and roadmap of a new paradigm in database systems; calledNoDB; which do not require data loading while still maintaining the whole feature set of a …,Communications of the ACM,*,*,5
Queriosity: Automated Data Exploration [Vision],Abdul Wasay; Manos Athanassoulis; Stratos Idreos,Abstract—Curiosity; a fundamental drive amongst higher living organisms; is what enablesexploration; learning and creativity. In our increasingly data-driven world; data exploration;ie; making sense of mounting haystacks of data; is akin to intelligence for science; businessand individuals. However; modern data systems–designed for data retrieval rather thanexploration–only let us retrieve data and ask if it is interesting. This makes knowledgediscovery a game of hit-and-trial which can only be orchestrated by expert data scientists.We present the vision toward Queriosity∗; an automated and personalized data explorationsystem. Designed on the principles of autonomy; learning and usability; Queriosity envisionsa paradigm shift in data exploration and aims to become aa personalized “data robot” thatprovides a direct answer to what is interesting in a user's data set; instead of just …,*,*,*,10
Data Engineering,Ronald Barber; Peter Bendel; Marco Czech; Oliver Draese; Frederick Ho; Namik Hrle; Stratos Idreos; Min-Soo Kim; Oliver Koeth; Jae-Gil Lee; Tianchao Tim Li; Guy Lohman; Konstantinos Morfonios; Rene Mueller; Keshava Murthy; Ippokratis Pandis; Lin Qiao; Vijayshankar Raman; Richard Sidle; Knut Stolze; Sandor Szabo,The Data Engineering Bulletin The Bulletin of the Technical Committee on Data Engineeringis published quarterly and is distributed to all TC members. Its scope includes the design;implementation; modelling; theory and application of database systems and theirtechnology. Letters; conference information; and news should be sent to the Editor-in-Chief.Papers for each issue are solicited by and should be sent to the Associate Editorresponsible for the issue. Opinions expressed in contributions are those of the authors anddo not necessarily reflect the positions of the TC on Data Engineering; the IEEE ComputerSociety; or the authors' organizations. The Data Engineering Bulletin web site is at http://tab.computer. org/tcde/bull_about. html.,*,*,*,21
Recovering semantics of tables on the web,Thomas Neumann; Ruoming Jin; Lin Liu; Bolin Ding; Haixun Wang; Stratos Idreos; Stefan Manegold; Harumi Kuno; Goetz Graefe,@article{2002939; author = {Venetis; Petros and Halevy; Alon and Madhavan; Jayant andPa\c{s}ca; Marius and Shen; Warren and Wu; Fei and Miao; Gengxin and Wu; Chung}; title ={Recovering semantics of tables on the web}; journal = {Proc. VLDB Endow.}; volume = {4}; number ={9}; year = {2011}; issn = {2150-8097}; pages = {528--538}; publisher = {VLDB Endowment}; }@article{2002940; author = {Neumann; Thomas}; title = {Efficiently compiling efficient query plansfor modern hardware}; journal = {Proc. VLDB Endow.}; volume = {4}; number = {9}; year = {2011};issn = {2150-8097}; pages = {539--550}; publisher = {VLDB Endowment}; } @article{2002941;author = {Jin; Ruoming and Liu; Lin and Ding; Bolin and Wang; Haixun}; title = {Distance-constraintreachability computation in uncertain graphs}; journal = {Proc …,Proc. VLDB Endow.,*,*,12
Stochastic Database Cracking,Felix Halim; Stratos Idreos; Panagiotis Karras; Roland HC Yap,ABSTRACT Modern business applications and scientific databases call for inherentlydynamic data storage environments. Such environments are characterized by twochallenging features:(a) they have little idle system time to devote on physical design; and(b) there is little; if any; a priori workload knowledge; while the query and data workloadkeeps changing dynamically. In such environments; traditional approaches to index buildingand maintenance cannot apply. Database cracking has been proposed as a solution thatallows on-the-fly physical data reorganization; as a collateral effect of query processing.Cracking aims to continuously and automatically adapt indexes to the workload at hand;without human intervention. Indexes are built incrementally; adaptively; and on demand.Nevertheless; as we show; existing adaptive indexing methods fail to deliver workload …,*,*,*,6
