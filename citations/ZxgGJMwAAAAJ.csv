Storing and querying ordered XML using a relational database system,Igor Tatarinov; Stratis D Viglas; Kevin Beyer; Jayavel Shanmugasundaram; Eugene Shekita; Chun Zhang,Abstract XML is quickly becoming the de facto standard for data exchange over the Internet.This is creating a new set of data management requirements involving XML; such as theneed to store and query XML documents. Researchers have proposed using relationaldatabase systems to satisfy these requirements by devising ways to" shred" XML documentsinto relations; and translate XML queries into SQL queries over these relations. However; akey issue with such an approach; which has largely been ignored in the research literature;is how (and whether) the ordered XML data model can be efficiently supported by theunordered relational data model. This paper shows that XML's ordered data model canindeed be efficiently supported by a relational database system. This is accomplished byencoding order as a data value. We propose three order encoding methods that can be …,Proceedings of the 2002 ACM SIGMOD international conference on Management of data,2002,1161
Evaluating window joins over unbounded streams,Jaewoo Kang; Jeffrey F Naughton; Stratis D Viglas,We investigate algorithms for evaluating sliding window joins over pairs of unboundedstreams. We introduce a unit-time-basis cost model to analyze the expected performance ofthese algorithms. Using this cost model; we propose strategies for maximizing the efficiencyof processing joins in three scenarios. First; we consider the case where one stream is muchfaster than the other. We show that asymmetric combinations of join algorithms;(eg; hashjoin on one input; nested-loops join on the other) can outperform symmetric join algorithmimplementations. Second; we investigate the case where system resources are insufficientto keep up with the input streams. We show that we can maximize the number of join resulttuples produced in this case by properly allocating computing resources across the two inputstreams. Finally; we investigate strategies for maximizing the number of result tuples …,Data Engineering; 2003. Proceedings. 19th International Conference on,2003,485
Rate-based query optimization for streaming information sources,Stratis D Viglas; Jeffrey F Naughton,Abstract Relational query optimizers have traditionally relied upon table cardinalities whenestimating the cost of the query plans they consider. While this approach has been andcontinues to be successful; the advent of the Internet and the need to execute queries overstreaming sources requires a different approach; since for streaming inputs the cardinalitymay not be known or may not even be knowable (as is the case for an unbounded stream.)In view of this; we propose shifting from a cardinality-based approach to a rate-basedapproach; and give an optimization framework that aims at maximizing the output rate ofquery evaluation plans. This approach can be applied to cases where the cardinality-basedapproach cannot be used. It may also be useful for cases where cardinalities are known;because by focusing on rates we are able not only to optimize the time at which the last …,Proceedings of the 2002 ACM SIGMOD international conference on Management of data,2002,332
-Maximizing the Output Rate of Multi-Way Join Queries over Streaming Information Sources,Stratis D Viglas; Jeffrey F Naughton; Josef Burger,Join algorithms have been extensively explored in the research literature; and at manypoints during the history of community one might have concluded that there was nothingmore to be discovered about them. The recent flurry of interest in streaming and adaptivejoin algorithms is one counter example. This chapter continues this investigation intostreaming and adaptive join algorithms; but with a new twist: by considering multi-waysymmetric join operators. The chapter shows that in many cases a multi-way join operatorcan produce its output in a streaming fashion and at a faster rate than any tree of binary joinoperators. Multi-way join operator has introduced interesting issues with respect to how tohandle memory overflow and how to choose a probing sequence within the join.Maximizingthe Output Rate of Multi-Way Join Queries over Streaming Information Sources Stratis D …,*,2003,330
The Niagara internet query system,Jeffrey F.  Naughton; David J.  DeWitt; David Maier; Ashraf Aboulnaga; Jianjun Chen; Leonidas Galanis; Jaewoo Kang; Rajasekar Krishnamurthy; Qiong Luo; Naveen Prakash; Ravishankar Ramamurthy; Jayavel Shanmugasundaram; Feng Tian; Kristin Tufte; Stratis Viglas; Yuan Wang; Chun Zhang; Bruce Jackson; Anurag Gupta; Rushan Chen,Abstract Recently; there has been a great deal of research into XML query languages toenable the execution of database-style queries over XML files. However; merely being anXML query-processing engine does not render a system suitable for querying the Internet. Auseful system must provide mechanisms to (a) find the XML files that are relevant to a givenquery; and (b) deal with remote data sources that either provide unpredictable data accessand transfer rates; or are infinite streams; or both. The Niagara Internet Query System wasdesigned from the bottom-up to provide these mechanisms. In this article we describe theoverall Niagara architecture; and how Niagara finds relevant XML documents by using acollaboration between the Niagara XML-QL query processor and the Niagara “text-in-context” XML search engine. The Niagara Internet Query System is public domain …,IEEE Data Eng. Bull.,2001,256
Semantics of ranking queries for probabilistic data and expected ranks,Graham Cormode; Feifei Li; Ke Yi,When dealing with massive quantities of data; top-k queries are a powerful technique forreturning only the k most relevant tuples for inspection; based on a scoring function. Theproblem of efficiently answering such ranking queries has been studied and analyzedextensively within traditional database settings. The importance of the top-k is perhaps evengreater in probabilistic databases; where a relation can encode exponentially many possibleworlds. There have been several recent attempts to propose definitions and algorithms forranking queries over probabilistic data. However; these all lack many of the intuitiveproperties of a top-k over deterministic data. Specifically; we define a number of fundamentalproperties; including exact-k; containment; unique-rank; value-invariance; and stability;which are all satisfied by ranking queries on certain data. We argue that all these …,Data Engineering; 2009. ICDE'09. IEEE 25th International Conference on,2009,212
Flashing up the storage layer,Ioannis Koltsidas; Stratis D Viglas,Abstract In the near future; commodity hardware is expected to incorporate both flash andmagnetic disks. In this paper we study how the storage layer of a database system canbenefit from the presence of both kinds of disk. We propose using the flash and the magneticdisk at the same level of the memory hierarchy and placing a data page to only one of thesedisks according to the workload of the page. Pages with a read-intensive workload areplaced on the flash disk; while pages with a write-intensive workload are placed on themagnetic disk. We present a family of on-line algorithms to decide the optimal placement ofa page and study their theoretical properties. Our system is self-tuning; ie; our algorithmsadapt page placement to changing workloads. We also present a buffer replacement policythat takes advantage of the asymmetric I/O properties of the two types of storage media to …,Proceedings of the VLDB Endowment,2008,195
-Mixed Mode XML Query Processing,Alan Halverson; Josef Burger; Leonidas Galanis; Ameet Kini; Rajasekar Krishnamurthy; Ajith Nagaraja Rao; Feng Tian; Stratis D Viglas; Yuan Wang; Jeffrey F Naughton; David J DeWitt,Querying XML documents typically involves both tree-based navigation and patternmatching similar to that used in structured information retrieval domains. This chapter showsthat for good performance; a native XML query processing system should support queryplans that mix these two processing paradigms. The chapter describes the prototype nativeXML system; and reports on experiments demonstrating that even for simple queries; thereare a number of options for how to combine tree-based navigation and structural joins basedon information retrieval-style inverted lists; and that these options can have widely varyingperformance. It presents the ways of transparently using both techniques in a single system;and provides a cost model for identifying efficient combinations of the techniques. Thepreliminary experimental results prove the viability of the approach.Mixed Mode XML …,*,2003,126
Generating code for holistic query evaluation,Konstantinos Krikellas; Stratis D Viglas; Marcelo Cintra,We present the application of customized code generation to database query evaluation.The idea is to use a collection of highly efficient code templates and dynamically instantiatethem to create query-and hardware-specific source code. The source code is compiled anddynamically linked to the database server for processing. Code generation diminishes thebloat of higher-level programming abstractions necessary for implementing generic;interpreted; SQL query engines. At the same time; the generated code is customized for thehardware it will run on. We term this approach holistic query evaluation. We present thedesign and development of a prototype system called HIQUE; the Holistic Integrated QueryEngine; which incorporates our proposals. We undertake a detailed experimental study ofthe system's performance. The results show that HIQUE satisfies its design objectives …,Data Engineering (ICDE); 2010 IEEE 26th International Conference on,2010,96
Vectorizing and querying large XML repositories,Peter Buneman; Byron Choi; Wenfei Fan; Robert Hutchison; Robert Mann; Stratis D Viglas,Vertical partitioning is a well-known technique for optimizing query performance in relationaldatabases. An extreme form of this technique; which we call vectorization; is to store eachcolumn separately. We use a generalization of vectorization as the basis for a native XMLstore. The idea is to decompose an XML document into a set of vectors that contain the datavalues and a compressed skeleton that describes the structure. In order to query thisrepresentation and produce results in the same vectorized format; we consider a practicalfragment of XQuery and introduce the notion of query graphs and a novel graph reductionalgorithm that allows us to leverage relational optimization techniques as well as to reducethe unnecessary loading of data vectors and decompression of skeletons. A preliminaryexperimental study based on some scientific and synthetic XML data repositories in the …,Data Engineering; 2005. ICDE 2005. Proceedings. 21st International Conference on,2005,68
Rewind: Recovery write-ahead system for in-memory non-volatile data-structures,Andreas Chatzistergiou; Marcelo Cintra; Stratis D Viglas,Abstract Recent non-volatile memory (NVM) technologies; such as PCM; STT-MRAM andReRAM; can act as both main memory and storage. This has led to research into NVMprogramming models; where persistent data structures remain in memory and are accesseddirectly through CPU loads and stores. Existing mechanisms for transactional updates arenot appropriate in such a setting as they are optimized for block-based storage. We presentREWIND; a user-mode library approach to managing transactional updates directly fromuser code written in an imperative general-purpose language. REWIND relies on a custompersistent in-memory data structure for the log that supports recoverable operations on itself.The scheme also employs a combination of non-temporal updates; persistent memoryfences; and lightweight logging. Experimental results on synthetic transactional …,Proceedings of the VLDB Endowment,2015,66
Write-limited sorts and joins for persistent memory,Stratis D Viglas,Abstract To mitigate the impact of the widening gap between the memory needs of CPUsand what standard memory technology can deliver; system architects have introduced a newclass of memory technology termed persistent memory. Persistent memory is byte-addressable; but exhibits asymmetric I/O: writes are typically one order of magnitude moreexpensive than reads. Byte addressability combined with I/O asymmetry render theperformance profile of persistent memory unique. Thus; it becomes imperative to find newways to seamlessly incorporate it into database systems. We do so in the context of queryprocessing. We focus on the fundamental operations of sort and join processing. Weintroduce the notion of write-limited algorithms that effectively minimize the I/O cost. We givea high-level API that enables the system to dynamically optimize the workflow of the …,Proceedings of the VLDB Endowment,2014,40
Data management over flash memory,Ioannis Koltsidas; Stratis D Viglas,Abstract Flash SSDs are quickly becoming mainstream and emerge as alternatives tomagnetic disks. It is therefore imperative to incorporate them seamlessly into the enterprise.We present the salient results of research in the area; touching all aspects of the datamanagement stack: from the fundamentals of flash technology; through storage for databasesystems and the manipulation of SSD-resident data; to query processing.,Proceedings of the 2011 ACM SIGMOD International Conference on Management of data,2011,34
SAND Join—A skew handling join algorithm for Google's MapReduce framework,Fariha Atta; Stratis D Viglas; Salman Niazi,The simplicity and flexibility of the MapReduce framework have motivated programmers oflarge scale distributed data processing applications to develop their applications using thisframework. However; the implementations of this framework; including Hadoop; do nothandle skew in the input data effectively. Skew in the input data results in poor loadbalancing which can swamp the benefits achievable by parallelization of applications onsuch parallel processing frameworks. The performance of join operation; which is the mostexpensive and most frequently executed operation; is severely degraded in the presence ofheavy skew in the input datasets to be joined. Hadoop's implementation of the join operationcannot effectively handle such skewed joins; attributed to the use of hash partitioning forload distribution. In this work; we introduce “Skew hANDling Join”(SAND Join) that …,Multitopic Conference (INMIC); 2011 IEEE 14th International,2011,23
Putting XML query algebras into context,Stratis D Viglas; Leonidas Galanis; David J DeWitt; David Maier; JF Naughtonn,*,submitted for publication,2002,23
Efficient persist barriers for multicores,Arpit Joshi; Vijay Nagarajan; Marcelo Cintra; Stratis Viglas,Emerging non-volatile memory technologies enable fast; fine-grained persistence comparedto slow block-based devices. In order to ensure consistency of persistent state; dirty cachelines need to be periodically flushed from caches and made persistent in an order specifiedby the persistency model. A persist barrier is one mechanism for enforcing this ordering. Inthis paper; we first show that current persist barrier implementations; owing to certainordering dependencies; add cache line flushes to the critical path. Our main contribution isan efficient persist barrier; that reduces the number of cache line flushes happening in thecritical path. We evaluate our proposed persist barrier by using it to enforce two persistencymodels: buffered epoch persistency with programmer inserted barriers; and buffered strictpersistency in bulk mode with hardware inserted barriers. Experimental evaluations using …,Microarchitecture (MICRO); 2015 48th Annual IEEE/ACM International Symposium on,2015,22
Code generation for efficient query processing in managed runtimes,Fabian Nagel; Gavin Bierman; Stratis D Viglas,Abstract In this paper we examine opportunities arising from the convergence of two trendsin data management: in-memory database systems (imdbs); which have received renewedattention following the availability of affordable; very large main memory systems; andlanguage-integrated query; which transparently integrates database queries withprogramming languages (thus addressing the famous' impedance mismatch'problem).Language-integrated query not only gives application developers a more convenient way toquery external data sources like imdbs; but also to use the same querying language to queryan application's in-memory collections. The latter offers further transparency to developersas the query language and all data is represented in the data model of the hostprogramming language. However; compared to imdbs; this additional freedom comes at a …,Proceedings of the VLDB Endowment,2014,22
Updating recursive XML views of relations,Byron Choi; Gao Cong; Wenfei Fan; Stratis D Viglas,This paper investigates the view update problem for XML views published from relationaldata. We consider (possibly) recursively defined XML views; compressed into DAGs andstored in relations. We provide new techniques to efficiently support XML view updatesspecified in terms of XFath expressions with recursion and complex filters. The interactionbetween XFath recursion and DAG compression of XML views makes the analysis of XMLview updates intriguing. Furthermore; many issues are still open even for relational viewupdates; and need to be explored. In response to these; we revise the update semantics toaccommodate XML side effects based on the semantics of XML views; and present efficientalgorithms to translate XML updates to relational view updates. Moreover; we propose amild condition on SPJ views; and show that under this condition the analysis of deletions …,Data Engineering; 2007. ICDE 2007. IEEE 23rd International Conference on,2007,22
Fast heuristics for near-optimal task allocation in data stream processing over clusters,Andreas Chatzistergiou; Stratis D Viglas,Abstract We study provisioning and job reconfiguration techniques for adapting to executionenvironment changes when processing data streams on cluster-based deployments. Bymonitoring the performance of an executing job; we identify computation and communicationbottlenecks. In such cases we reconfigure the job by reallocating its tasks to minimize thecommunication cost. Our work targets data-intensive applications where the inter-nodetransfer latency is significant. We aim to minimize the transfer latency while keeping thenodes below some computational load threshold. We propose a scalable centralizedscheme that employs fast allocation heuristics. Our techniques are based on a generalgroup-based job representation that is commonly found in many distributed data streamprocessing frameworks. Using this representation we devise linear-time task allocation …,Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management,2014,18
Recycling in pipelined query evaluation,Fabian Nagel; Peter Boncz; Stratis D Viglas,Database systems typically execute queries in isolation. Sharing recurring intermediate andfinal results between successive query invocations is ignored or only exploited by cachingfinal query results. The DBA is kept in the loop to make explicit sharing decisions byidentifying and/or defining materialized views. Thus decisions are made only after a longtime and sharing opportunities may be missed. Recycling intermediate results has beenproposed as a method to make database query engines profit from opportunities to reusefine-grained partial query results; that is fully autonomous and is able to continuously adaptto changes in the workload. The technique was recently revisited in the context of MonetDB;a system that by default materializes all intermediate results. Materializing intermediateresults can consume significant system resources; therefore most other database systems …,Data Engineering (ICDE); 2013 IEEE 29th International Conference on,2013,18
Sorting hierarchical data in external memory for archiving,Ioannis Koltsidas; Heiko Müller; Stratis D Viglas,Abstract Sorting hierarchical data in external memory is necessary for a wide variety ofapplications including archiving scientific data and dealing with large XML datasets. Thetopic of sorting hierarchical data; however; has received little attention from the researchcommunity so far. In this paper we focus on sorting arbitrary hierarchical data that far exceedthe size of physical memory. We propose HErMeS; an algorithm that generalizes the mostwidely-used techniques for sorting flat data in external memory. HErMeS efficiently exploitsthe hierarchical structure to minimize the number of disk accesses and optimize the use ofavailable memory. We extract the theoretical bounds of the algorithm with respect to thestructure of the hierarchical dataset. We then show how the algorithm can be used to supportefficient archiving. We have conducted an experimental study using several workloads …,Proceedings of the VLDB Endowment,2008,16
Adapting the B+-tree for asymmetric I/O,Stratis D Viglas,Abstract We present an indexing structure for secondary storage based on the B+-tree; buttailored for asymmetric i/o. In contrast to the traditional B+-tree; the tree is not kept balancedat all times; rather; it is kept unbalanced to cope with the i/o asymmetry commonly found incontemporary systems. We identify when imbalance is beneficial and present theunbalanced B+-tree; or the uB+-tree; its maintenance algorithms and its variants. Weevaluate the uB+-tree by comparing it to the B+-tree. Our results show that the uB+-tree ishighly competitive and significantly outperforms the B+-tree in environments of asymmetrici/o.,East European Conference on Advances in Databases and Information Systems,2012,14
The case for flash-aware multi-level caching,Ioannis Koltsidas; Stratis D Viglas,ABSTRACT The random read efficiency of flash memory; combined with its growing densityand dropping price; make it well-suited for use as a read cache. In this paper we explorehow a system can use flash memory as a cache layer between the main memory buffer pooland the magnetic disk. We study the problem of deciding which data pages to cache on flashand propose alternatives that serve different purposes. We provide an analytical cost modelto decide the optimal caching scheme for any workload; taking into account the physicalproperties of the flash disk used. We discuss implementation issues such as the effect of theflash disk block size on performance. Our experimental evaluation shows that questions onsystems with flash-resident caches cannot be given universal answers that hold across allflash disks and workloads. Rather; our cost model should be applied in each individual …,University of Edinburgh Technical Report EDI-INF-RR-1319,2009,13
Updating recursive XML views of relations,Byron Choi; Gao Cong; Wenfei Fan; Stratis D Viglas,Abstract This paper investigates the view update problem for XML views published fromrelational data. We consider XML views defined in terms of mappings directed by possiblyrecursive DTDs compressed into DAGs and stored in relations. We provide new techniquesto efficiently support XML view updates specified in terms of XPath expressions withrecursion and complex filters. The interaction between XPath recursion and DAGcompression of XML views makes the analysis of the XML view update problem ratherintriguing. Furthermore; many issues are still open even for relational view updates; andneed to be explored. In response to these; on the XML side; we revise the notion of sideeffects and update semantics based on the semantics of XML views; and present effecientalgorithms to translate XML updates to relational view updates. On the relational side; we …,Journal of Computer Science and Technology,2008,13
Processing declarative queries through generating imperative code in managed runtimes,Stratis D Viglas,We present the results of our work on integrating database and programming languageruntimes through code generation and extensive just-in-time adaptation. Our techniquesdeliver significant performance improvements over non-integrated solutions. Our workmakes important first steps towards a future where data processing applications willcommonly run on machines that can store their datasets entirely in persistent memory; andwill be written in a single programming language employing higher-level APIs and language-integrated query.,Data Engineering (ICDE); 2017 IEEE 33rd International Conference on,2017,12
Designing a flash-aware two-level cache,Ioannis Koltsidas; Stratis D Viglas,Abstract The random read efficiency of flash memory; combined with its growing density anddropping price; make it well-suited for use as a read cache. We explore how a system canuse flash memory as a cache layer between the main memory buffer pool and the magneticdisk. We study the problem of deciding which data pages to cache on flash and proposealternatives that serve different purposes. We give an analytical model to decide the optimalcaching scheme for any workload; taking into account the physical properties of the flashdisk used. We discuss implementation issues such as the effect of the flash cache block sizeon performance. Our experimental evaluation shows that questions on systems with flash-resident caches cannot be given universal answers that hold across all flash disks andworkloads. Rather; our cost model should be applied per case to provide an optimal …,East European Conference on Advances in Databases and Information Systems,2011,12
A query language for multi‐version data web archives,Marios Meimaris; George Papastefanatos; Stratis Viglas; Yannis Stavrakas; Christos Pateritsas; Ioannis Anagnostopoulos,Abstract The Data Web refers to the vast and rapidly increasing quantity of scientific;corporate; government and crowd-sourced data published in the form of Linked Open Data;which encourages the uniform representation of heterogeneous data items on the web andthe creation of links between them. The growing availability of open linked datasets hasbrought forth significant new challenges regarding their proper preservation and themanagement of evolving information within them. In this paper; we focus on the evolutionand preservation challenges related to publishing and preserving evolving linked dataacross time. We discuss the main problems regarding their proper modelling and queryingand provide a conceptual model and a query language for modelling and retrieving evolvingdata along with changes affecting them. We present in details the syntax of the query …,Expert Systems,2016,11
Just-in-time compilation for SQL query processing,Stratis D Viglas,Just-in-time compilation of SQL queries into native code has recently emerged as a viabletechnique for query processing and an alternative to the dominant interpretation-basedapproach. We present the salient results of research in this fresh area; addressing allaspects of the query processing stack: from traditional query compilation techniques; tocompilation in managed environments; to state-of-the-art approaches on intermediate andnative code emission. Throughout the discussion we refer and draw analogies to thegeneral code generation techniques used in contemporary compiler technology. At thesame time we describe the open research problems of the area.,Data Engineering (ICDE); 2014 IEEE 30th International Conference on,2014,11
System co-design and data management for flash devices,Philippe Bonnet; Luc Bouganim; Ioannis Koltsidas; Stratis D Viglas,ABSTRACT Flash devices are emerging as a replacement for disks. How does this evolutionimpact the design of data management systems? While flash devices have been availablefor years; this question is still open. In this tutorial; we share two views on the development ofdata management systems for flash devices. The first view considers that flash devicesintroduce so much complexity that it is necessary to reconsider the strictly layered approachbetween storage system; operating system and data management system. The second viewconsiders that data management systems should recognize the complexity of flash devicesand leverage the characteristics of different classes of devices for different usage patterns.Throughout the tutorial; we will cover the data management stack: from the fundamentals offlash technology; through storage for database systems and the manipulation of flash …,Proc. VLDB,2011,11
Data management in non-volatile memory,Stratis D Viglas,Abstract Non-volatile memory promises to bridge the gap between main memory andsecondary storage by offering a universal storage device. Its performance profile is unique inthat its latency is close to main memory and it is byte addressable; but it exhibits asymmetricI/O in that writes are more expensive than reads. These properties imply that it cannot act asa drop-in replacement for either main-memory or disk. Therefore; we must revisit the salientaspects of data management in light of this new technology. In what follows we present thecurrent work in the area with a view towards identifying the open problems and exposing theresearch opportunities. In particular; we address issues like:(a) incorporating non-volatilememory into the data management stack;(b) supporting transactions and ensuringpersistence and recovery; and (c) query processing.,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,9
Scheduling threads for intra-query parallelism on multicore processors,Konstantinos Krikellas; Marcelo Cintra; Stratis Viglas,ABSTRACT Contemporary multicore processors allow for intra-query parallelism duringquery execution. We study the problem of thread scheduling in the context of multithreadedquery evaluation on multicore CPUs. We show that the search space for possible operatorexecution schedules scales fast; thus forbidding the use of exhaustive techniques. To thatend; we model intra-query parallelism on multicore systems and present schedulingheuristics that result in different degrees of schedule optimality and optimization cost. Wehave implemented the scheduling algorithms and experimentally evaluated theirperformance using (a) various query plans and metrics; and (b) different hardware setupsand parameters. Our results demonstrate that the proposed heuristics-based techniquesgenerate schedules of high quality; while inducing negligible optimization cost.,EDBT; University of Edinburgh; Edinburgh; Scotland,2010,9
ATOM: Atomic durability in non-volatile memory through hardware logging,Arpit Joshi; Vijay Nagarajan; Stratis Viglas; Marcelo Cintra,Non-volatile memory (NVM) is emerging as a fast byte-addressable alternative for storingpersistent data. Ensuring atomic durability in NVM requires logging. Existing techniqueshave proposed software logging either by using streaming stores for an undo log; or; byrelying on the combination of clflush and mfence for a redo log. These techniques aresuboptimal because they waste precious execution cycles to implement logging; which isfundamentally a data movement operation. We propose ATOM; a hardware log managerbased on undo logging that performs the logging operation out of the critical path. Wepresent the design principles behind ATOM and two techniques to optimize its performance.Our results show that ATOM achieves an improvement of 27% to 33% for micro-benchmarksand 60% for TPC-C over a baseline undo log design.,High Performance Computer Architecture (HPCA); 2017 IEEE International Symposium on,2017,7
Modeling Multithreaded Query Execution on Chip Multiprocessors.,Konstantinos Krikellas; Stratis Viglas; Marcelo Cintra,ABSTRACT Modern CPUs follow multicore designs with multiple threads running in parallel.The dataflow of query processing algorithms needs to be adapted to exploit such designs.We identify memory accesses and thread synchronization as the main bottlenecks in amulticore execution environment. We present a uniform framework to mitigate the impact ofthese bottlenecks in multithreaded versions of the most frequently used query processingalgorithms; namely sorting; partitioning; join evaluation; and aggregation. We analyticallymodel the expected performance and scalability of the proposed algorithms. We conduct anextensive experimental analysis of both the analytical model and the algorithms. Our resultsshow that:(a) the analytical model adequately captures the performance of the algorithms;and (b) the algorithms themselves achieve considerable speedups compared to their …,ADMS@ VLDB,2010,7
Multithreaded query execution on multicore processors,Konstantinos Krikellas; Marcelo Cintra; Stratis D Viglas,ABSTRACT Modern CPUs follow multicore designs with multiple threads running in parallel.The dataflow of query engine algorithms needs to be adapted to exploit such designs. Weidentify memory accesses and thread synchronization as the main bottlenecks in a multicoreexecution environment. We present a uniform framework to mitigate the impact of thesebottlenecks in multithreaded versions of the most frequently used query processingalgorithms; namely sorting; partitioning; join evaluation; and aggregation. Through ananalytical model; we extract the expected behavior and scalability of the proposedalgorithms. We conduct an extensive experimental analysis of both the analytical model andthe algorithms. Our results show that:(a) the analytical model adequately captures theperformance of the algorithms; and (b) the algorithms themselves achieve considerable …,VLDB 2009,2009,7
A comparative study of implementation techniques for query processing in multicore systems,Stratis D Viglas,Multicore systems and multithreaded processing are now the de facto standards ofenterprise and personal computing. If used in an uninformed way; however; multithreadedprocessing might actually degrade performance. We present the facets of the memoryaccess bottleneck as they manifest in multithreaded processing and show their impact onquery evaluation. We present a system design based on partition parallelism; memorypooling; and data structures conducive to multithreaded processing. Based on this design;we present alternative implementations of the most common query processing algorithms;which we experimentally evaluate using multiple scenarios and hardware platforms. Ourresults show that the design and algorithms are indeed scalable across platforms; but thechoice of optimal algorithm largely depends on the problem parameters and underlying …,IEEE Transactions on Knowledge and Data Engineering,2014,6
Conversational querying,Yannis E Ioannidis; Stratis D Viglas,Abstract The traditional interaction mechanism with a database system is through the use ofa query language; the most widely used one being SQL. However; when one is facing asituation where he or she has to make a minor modification to a previously issued SQLquery; either the whole query has to be written from scratch; or one has to invoke an editor toedit the query. This; however; is not the way we converse with each other as humans. Duringthe course of a conversation; the preceding interaction is used as a context within whichmany incomplete and/or incremental phrases are uniquely and unambiguously interpreted;sparing the need to repeat the same things again and again. In this paper; we present aneffective mechanism that allows a user to interact with a database system in a way similar tothe way humans converse. More specifically; incomplete SQL queries are accepted as …,Information Systems,2006,6
Stream operators for querying data streams,Lisha Ma; Stratis D Viglas; Meng Li; Qian Li,Abstract One of the most important uses of aggregate queries over data streams is sampling.Typically; aggregation is performed over sliding windows where queries return new resultswhenever the window contents change; a concept referred to as a continuous query.Existing data models and query languages for streams are not capable of expressing manypractical user-defined samplings over streams. To this end we propose a new data streammodel; referred to as the sequence model; and a query language for specifying aggregatequeries over data streams. We show that the sequence model can readily express asuperset of the aggregate queries expressible in the previously proposed time-based datastream model; thus providing a declarative and formal semantics to understand and reasonabout continuous aggregate queries. Defined on top of the sequence model; our query …,International Conference on Web-Age Information Management,2005,6
P2P; Ad Hoc and Sensor Networks–All the Different or All the Same,Peter A Boncz; Angela Bonifati; J Böse; S Böttcher; P Kypros; CL Gruenwald; B König-Ries; W May; A Mondal; S Obermeier; A Ouksel; G Samaras; G Sapkota; R Steinmetz; SD Viglas,*,Proc. of Scalable Data Management in Evolving Networks,2007,5
Spatial data management over flash memory,Ioannis Koltsidas; Stratis D Viglas,Abstract We present desiderata for improved I/O performance of spatial data structures overflash memory and hybrid flash-magnetic storage configurations. We target the organizationof the data structures and the management of the in-memory buffer pool when dealing withspatial data. Our proposals are based on the fundamentals of flash memory; therebyincreasing the likelihood of being immune to future trends.,International Symposium on Spatial and Temporal Databases,2011,4
Distributed file structures in a peer-to-peer environment,Stratis D Viglas,As computing becomes increasingly distributed; the need for accessing and manipulatingdistributed data becomes prominent. The focus so far has been on developing fault-tolerant;load-balanced and scalable techniques for distributing data across the network withoutplacing much importance on the semantics of the applications built on top of them-much inthe way a centralized file system simply serves disk pages without handling their semantics.In this paper; we continue this" black-box" approach and extend it to the next level. We takestandard file structures and distribute them across a peer-to-peer network and test theirperformance. We then identify performance bottlenecks and propose ways of overcomingthem. These results; we believe; exhibit the potential of seamlessly extending computingapplications assuming standard (centralized) file I/O capabilities to work in distributed …,Data Engineering; 2007. ICDE 2007. IEEE 23rd International Conference on,2007,4
A service-based approach to schema federation of distributed databases,Leena Al-Hussaini; Stratis Viglas; Malcolm Atkinson,ABSTRACT In the last few years; we have witnessed a rapid growth in distributed databaseprocessing. We consider the question of data integration: how we can integrate distributedschemas into a new one and query just that new schema without losing the ability to retrievedata from the original schemas. The area in which we try to answer that question isfederated databases; where the original heterogeneous sources are assumed to beautonomously managed. Our approach is based on schema matching: the identification ofsemantic correspondences between elements of different schemas. We propose SASF; theService-based Approach to Schema Federation; which is composed of three services:schema translation; schema matching; and schema mapping that are accessed through auser portal. Our approach exploits both schema-level and instance-level information to …,*,2005,3
Advanced databases,Stratis D Viglas,The dimensions of the head are impressive1. With a width of less than a hundrednanometers and a thickness of about ten; it flies above the platter at a speed of up to 15;000RPM; at a height that is the equivalent of 40 atoms. If you start multiplying theseinfinitesimally small numbers; you begin to get an idea of their significance. Consider thislittle comparison: if the read/write head were a Boeing 747; and the hard-disk platter werethe surface of the Earth,Taught Lecture,2010,2
Utility-aware multi-device caching,Ioannis Koltsidas; Stratis D Viglas,ABSTRACT We study the problem of buffer allocation in databases that store data acrossmultiple storage devices. In such systems devices share the same main memory for caching.The inmemory pages are managed independently for each device. We analytically modelthe performance of such a system and propose an algorithm to decide the portion of thebuffer pool to allocate to data pages of each device. Our algorithm is based on a noveltechnique to accurately track the hit ratio curve for the data of each storage device. Thiscurve is combined with the I/O costs of each device to decide the utility of caching pages forthat device. The memory space allocated to each device is then determined by its utility. Oursystem is self-tuning and adapts allocation decisions to changing workload characteristics.We have implemented the proposed techniques and experimentally evaluated them …,Technical Report EDI-INF-RR-1331,2009,2
06431 Working Group Summary: P2P; Ad Hoc and Sensor Networks-All the Different or All the Same?.,Peter A Boncz; Angela Bonifati; Joos-Hendrik Böse; Stefan Böttcher; Panos K Chrysanthis; Le Gruenwald; Arantza Illarramendi; Peter Janacik; Birgitta König-Ries; Wolfgang May; Anirban Mondal; Sebastian Obermeier; Aris M Ouksel; George Samaras,*,Scalable Data Management in Evolving Networks,2006,2
XML Data in the virtual observatory,RG Mann; RM Baxter; R Carroll; Q Wen; OP Buneman; B Choi; W Fan; RWO Hutchison; SD Viglas,ASTRONOMICAL DATA ANALYSIS SOFTWARE AND SYSTEMS XIV ASP ConferenceSeries; Vol. 3~j7; ~OO5 PL Shopbell; MC Britton; and R. Ebert; eds. XML Data in the Virtual ObservatoryRG Mann Institute for Astronomy; University of Edinburgh; Royal Observatory; Blackford Hill;Edinburgh; EH9 3HJ; United Kingdom RM Baxter; R. Carroll; and Q. Wen National e-ScienceCentre; University of Edinburgh; 15 South College Street; Edinburgh; EH8 9AA; United Kingdom0. P. Buneman; B. Choi; W. Fan; RW 0. Hutchison; and SD Viglas School of Informatics; Universityof Edinburgh; Appleton Tower; Crichton Street; Edinburgh; EH8 9LE; United KingdomAbstract. XML is the lingua franca of the Web services world and so will play a major role in theconstruction of the Virtual Observatory. Its great advantages are its flexibility;platform-independence; ease of transformation; and the wide variety of existing software …,Astronomical Data Analysis Software and Systems XIV,2005,2
Pyragrid: Bringing Peer-to-Peer and Grid Architectures Together.,Stratis Viglas,Abstract. Peer-to-peer and Grid architectures share common abstractions with respect tostorage and computing functionality. To date; however; there has been little insight on howthe architectures can be bridged. The purpose of this paper is to start the discussion on howthis can be achieved. In particular; we present a system called Pyragrid and its architecture.The system borrows the principle of locating data used in a peer-to-peer system and extendsit to more complex functionality and types of processing. The Pyragrid architecture aims atcapturing generic distributed computing paradigms; irrespective of their specific field. As aninstance of a system built on top of the Pyragrid architecture; we present PyraDB; a noveldistributed database system.,DELOS Workshop: Digital Library Architectures,2004,2
Self-managed collections: Off-heap memory management for scalable query-dominated collections.,Fabian Nagel; Gavin M Bierman; Aleksandar Dragojevic; Stratis Viglas,ABSTRACT Explosive growth in DRAM capacities and the emergence of language-integrated query enable a new class of managed applications that perform complex queryprocessing on huge volumes of data stored as collections of objects in the memory space ofthe application. While more flexible in terms of schema design and application development;this approach typically experiences sub-par query execution performance when comparedto specialized systems like DBMS. To address this issue; we propose self-managedcollections; which utilize off-heap memory management and dynamic query compilation toimprove the performance of querying managed data through language-integrated query. Weevaluate self-managed collections using both microbenchmarks and enumeration-heavyqueries from the TPC-H business intelligence benchmark. Our results show that self …,EDBT,2017,1
Flash-enabled database storage,Ioannis Koltsidas; Stratis D Viglas,Flash memory has emerged as a high-performing and viable storage alternative to magneticdisks for data-intensive applications. In our work we study how the storage layer of adatabase system can benefit from the presence of a flash disk. Due to the varying price andI/O characteristics of flash disks the optimal design decisions vary widely across differentsetups. We study how the system can take advantage of the random read efficiency ofinexpensive flash disks by using the latter at the same level of memory hierarchy asmagnetic disks in a hybrid setup; our algorithms provide efficient and adaptive dataplacement that leads to substantial performance improvement. We propose techniques toaccurately predict the main memory cache behavior for systems consisting ofheterogeneous storage media and selectively allocate memory buffers to devices; …,Data Engineering Workshops (ICDEW); 2010 IEEE 26th International Conference on,2010,1
Application of the peer-to-peer paradigm in digital libraries,Stratis D Viglas; Theodore Dalamagas; Vassilis Christophides; Timos Sellis; Aggeliki Dimitriou,Abstract We present the architecture of a largely distributed Digital Library that is based onthe Peer-to-Peer computing paradigm. The three goals of the architecture are:(i) increasednode autonomy;(ii) flexible location of data; and (iii) efficient query evaluation. To satisfythese goals we propose a solution based on schema mappings and query reformulation. Weidentify the problems involved in developing a system based on the proposed architectureand present ways of tackling them. A prototype implementation provides encouragingresults.,*,2007,1
Sorting of hierarchical data in external memory,Ioannis Koltsidas; Heiko Müller; Stratis Viglas,ABSTRACT Sorting hierarchical data in external memory is needed in a wide variety ofapplications including archiving scientific data and dealing with large XML datasets. Thetopic of sorting hierarchical data has received little attention form the research community sofar. In this paper; we focus on sorting arbitrary hierarchical datasets that exceed the size ofphysical memory. We propose HErMeS; an algorithm that generalizes the most widely-usedtechniques for sorting flat data in external memory; namely multiway merge-sort andreplacement selection. HErMeS efficiently takes into consideration the hierarchical nature ofthe data in order to minimize the number of disk accesses and optimize the usage ofavailable memory. The algorithm's theoretical bounds with respect to the structure of thehierarchical dataset are extracted; while an experimental study demonstrates that our …,*,2007,1
06431 working group summary: Atomicity in mobile networks,Sebastian Obermeier; Joos-Hendrik Böse; Stefan Böttcher; Panos Kypros Chrysanthis; Alex Delis; Le Gruenwald; Anirban Mondal; Aris Ouksel; George Samaras; Stratis Viglas,Abstract We introduce different mobile network applications and show to which degree theconcept of database transactions is required within the applications. We show properties oftransaction processing and explain which properties are important for each of the mobileapplications. Furthermore; we discuss open questions regarding transaction processing inmobile networks and identify open problems for further research.,Dagstuhl Seminar Proceedings,2007,1
Query execution and optimization,Stratis D Viglas,Abstract Query execution and optimization for streaming data revisits almost all aspects ofquery execution and optimization over traditional; disk-bound database systems. The reasonis that two fundamental assumptions of disk-bound systems are dropped:(i) the data resideson disk; and (ii) the data is finite. As such; new evaluation algorithms and new optimizationmetrics need to be devised. The approaches can be broadly classified into two categories.First; there are static approaches that follow the traditional optimize-then-execute paradigmby assuming that optimization-time assumptions will continue to hold during execution; theenvironment is expected to be relatively static in that respect. Alternatively; there areadaptive approaches that assume the environment is completely dynamic and highlyunpredictable. In this chapter we explore both approaches and present novel query …,*,2005,1
Declarative Query Processing in Imperative Managed Runtimes.,Stratis Viglas,ABSTRACT The falling price of main memory has led to the development and growth of in-memory databases. At the same time; new advances in memory technology; like persistentmemory; make it possible to have a truly universal storage model; accessed directly throughthe programming language in the context of a fully managed runtime. This environment isfurther enhanced by language-integrated query; which has picked up significant traction andhas emerged as a generic; safe method of combining programming languages withdatabases with considerable software engineering benefits.,EDBT/ICDT Workshops,2015,*
1. IMPORTANT DATES,Carmen Tang,It is widely understood that China shelters one of the richest mycofloras in the world. Thevariety of ecological zones; topological relief; and geographical extent supports this fact. Theoldest and largest mycological collection in the country is that maintained at the Institute ofMicrobiology; Academia Sinica; in Beijing. The Beijing herbarium (acronym: HMAS) wasestablished in 1953 and now houses over 75;000 specimens of fungi. The rapiddevelopment of mycology in China during the last two decades has not been brought tointernational attention (but see Bartholomew; Brittonia 3 1: 1-25; 1979; Ma; Taxon 38: 617-620; 1989). It is a pleasure; therefore; to introduce the mycological herbarium at Kunming;Yunnan; and to welcome foreign visitors and loan requests.,*,2013,*
VLDB Endowment,Michael Böhlen; Christoph Koch; Ashraf Aboulnaga; Sihem Amer‐Yahia; Chee Yong Chan; Yanlei Diao; Ada Waichee Fu; Johannes Gehrke; Alon Halevy; Jayant Haritsa; Nikos Mamoulis; Thomas Neumann; Dan Olteanu; Divesh Srivastava; Jens Teubner; Stefan Manegold; Peer Kröger; Stratis D Viglas,39th International Conference on Very Large Data Bases; Riva del Garda; Trento; Italy … Proceedingsof the 39th International Conference on … Very Large Data Bases; Riva del Garda; Trento; Italy… Ashraf Aboulnaga; Sihem Amer‐Yahia; Chee Yong Chan; Yanlei Diao; Ada Waichee Fu;Johannes Gehrke; Alon Halevy; Jayant Haritsa; Nikos Mamoulis; Thomas Neumann; DanOlteanu; Divesh Srivastava; Jens Teubner … The 39th International Conference on Very LargeData Bases; Riva del Garda; Trento; Italy … Permission to make digital or hard copies of portionsof this work for personal or classroom use is granted without fee provided that copies are notmade or distributed for profit or commercial advantage and that copies bear this notice and thefull citation on the first page. Copyright for components of this work owned by others than VLDBEndowment must be honored. Abstracting with credit is permitted. To copy otherwise; to …,*,2013,*
Data Provenance and Trust,Stratis D Viglas,The Oxford Dictionary defines provenance as “the place of origin; or earliest known history ofsomething.” The term; when transferred to its digital counterpart; has morphed into a moregeneral meaning. It is not only used to refer to the origin of a digital artefact but also to itschanges over time. By changes in this context we may not only refer to its digital snapshotsbut also to the processes that caused and materialised the change. As an example; considera database record r created at point in time t0; an update u to that record at time t1 causes itto have a value r'. In terms of provenance; we do not only want to record the snapshots (t0; r)and (t1; r') but also the transformation u that when applied to (t0; r) results in (t1; r'); that is u(t0; r)=(t1; r'). Though the above is a rather mathematical example; provenance is importantin a number of contexts and for various reasons. Let us try to instantiate the variables in …,Data Science Journal,2013,*
Nine Years with Peter Buneman,Stratis D Viglas,Abstract The first time I met Peter was a typical rainy Edinburgh morning. I was alreadyaware of his tremendous reputation; achievements; and contributions to database systems;but I had not officially met him until that day. It was Thursday; the first day of May; back in2003; the time was about 8: 30am. It is not so much that I have a good memory; as much as itthat it was a special day for me. At the time; I was a graduating PhD student at the Universityof Wisconsin-Madison and I was in Edinburgh for my interview.,*,2013,*
Data-Intensive Research Workshop Report,Ruth McNally; Bob Mann; Stratis Viglas; Chris Williams,Citation for published version: Atkinson; M; Roure; DD; van Hemert; J; Jha; S; McNally; R;Mann; R; Viglas; S & Williams; CKI 2010; Data- Intensive Research Workshop (15-19 March2010) Report. University of Edinburgh … Link: Link to publication record in Edinburgh ResearchExplorer … General rights Copyright for the publications made accessible via the EdinburghResearch Explorer is retained by the author(s) and / or other copyright owners and it is a conditionof accessing these publications that users recognise and abide by the legal requirements associatedwith these rights … Take down policy The University of Edinburgh has made every reasonableeffort to ensure that Edinburgh Research Explorer content complies with UK legislation. If youbelieve that the public display of this file breaches copyright please contactopenaccess@ed.ac.uk providing details; and we will remove access to the work …,*,2010,*
Holistic Query Evaluation: Optimizing the data flow of query engines for main memory execution,Konstantinos Krikellas; Stratis Viglas; Marcelo Cintra,We present the case for holistic query evaluation: a novel query processing technique that isbased on the generation of query-specific and hardware-friendly source code. The sourcecode is compiled and dynamically linked to the database server for processing. By looking athow modern hardware works and identifying the performance bottlenecks; we have deviseda collection of algorithm templates that we dynamically instantiate per individual query. Ouralgorithms cover a large portion of SQL: selections; projections; joins; and aggregation. Onthat foundation we build query optimization primitives. We present the design anddevelopment of a prototype system called HIQUE–the Holistic Integreated Query Engine–that incorporates our proposals. We undertake a detailed experimental study of the system'sperformance. The results show that the system's efficiency; in the majority of cases …,ACM TODS,2008,*
Message from the BNCODwebim’07 Workshop Chair,John N Wilson; RS Gourlay; BG Tripney; S Chakravarthy; R Cooper; B Eaglestone; M Garvey; S Helmer; J Hong; G Kemp; P McBrien; I Ounis; P Pleshachkov; A Poulovassilis; S Viglas; H Williams,The World Wide Web was created in about 1990 and it is certainly still in its early years interms of its impact on the uses of Information Technology. Currently; in the developed worldthe WWW carries only a small fraction of all commercial transactions and when we look atemerging nations this fraction almost vanishes. When it reaches full maturity; thesignificance of the Web will have expanded well beyond that which we now perceive. Thispotential for growth presents database researchers with many and varied opportunitiesranging from how best to process Web-based information in its elementary forms to ways ofestablishing trust in Internet environments. BNCODwebim'07 brings together engineers;researchers and practitioners who have knowledge to exchange that covers the spectrum ofdevelopment that information management needs to address to cope with the continuing …,*,2007,*
Ph. D. Workshop In conjunction with the 22 nd IEEE International Conference on Data Engineering April 3; 2006 http://ir. iit. edu/icde06phd,Brian Cooper; Christopher Jermaine; Ying Liu; Rachel Pottinger; Arvind Arasu; Shivnath Babu; Ihab Ilyas; Stratis D Viglas,It is our great pleasure to present the Ph. D. Workshop of the 22 nd IEEE InternationalConference on Data Engineering. The goal of the Workshop is to introduce Ph. D. studentsto the research community and to foster the exchange of ideas in a constructive andcongenial atmosphere. The Workshop program includes paper presentations and paneldiscussions. We received a total of 28 papers on current and emerging topics being pursuedby Ph. D. researchers from over a dozen countries around the world. After a careful reviewby a program committee primarily composed of junior faculty; we selected the 13 best forpresentation.,*,2006,*
Comments from the Digital Curation Centre on Long-Lived Digital Data Collections: Enabling Research and Education in the 21st Century; a draft report of the Natio...,Rajendra Bose; Peter Buneman; Peter Burnhill; James Cheney; Floris Geerts; Anastasios Kementsietsidis; Liz Lyon; Mags McGinley; Robin Rice; Chris Rusbridge; Charlotte Waelde; Stratis Viglas,The development of the Internet has caused revolution in the way in which all forms ofscholarship are conducted. The Scientific Method itself is changing as a result of thedependence of all sciences on their accumulations of digital data. The National ScienceBoard report on long-lived digital data collections is a strong confirmation for the need tohave policies; technology and methodologies for caring for–curating–these digitalresources. The Digital Curation Centre (DCC) is an organisation supported by UK researchand university councils; which is dedicated to these issues. The following comments2 on thereport are a summary of discussions among members of the DCC. The DCC welcomes thedraft report. In particular it endorses the view that curation is much more than preservation;: itinvolves all aspects of data acquisition and selection; it is about adding value to and …,*,*,*
DAPPER: a database-inspired approach to persistent memory,Marcelo Cintra; Andreas Chatzistergiou; Arpit Joshi; Vijay Nagarajan; Stratis D Viglas,Abstract Persistent memory collapses the boundaries between the inmemory and secondarystorage representations of data structures; and enables the programmer to process datadirectly from an imperative runtime. We present the early results of the DAPPER project;which takes a database-inspired approach to persistent memory. It supports recoverabledata structures in persistent memory at the imperative language level; algorithms optimizedfor the performance characteristics of the new medium and a runtime to support them; andworkload-driven adaptive data placement.,*,*,*
Data Engineering,Stratis D Viglas; Gavin Bierman; Fabian Nagel; Craig Freedman; Erik Ismert; Per-Ake Larson; Surajit Chaudhuri; Vivek Narasayya; Manoj Syamala; Alvin Cheung; Samuel Madden; Armando Solar-Lezama; Owen Arden; Andrew C Myers; Karthik Ramachandra; Ravindra Guravannavar,Abstract On modern servers the working set of database management systems becomesmore and more main memory resident. Slow disk accesses are largely avoided; and thus thein-memory processing speed of databases becomes an important factor. One very attractiveapproach for fast query processing is justin-time compilation of incoming queries. Byproducing machine code at runtime we avoid the overhead of traditional interpretationsystems; and by carefully organizing the code around register usage we minimize memorytraffic and get excellent performance. In this paper we show how queries can be brought intoa form suitable for efficient translation; and how the underlying code generation can beorchestrated. By carefully abstracting away the necessary plumbing infrastructure we canbuild a query compiler that is both maintainable and efficient. The effectiveness of the …,*,*,*
Supporting Relational Queries in Peer-to-Peer Systems,Joseph Spadavecchia; Stratis D Viglas,Page 1. Supporting Relational Queries in Peer-to-Peer Systems Joseph Spadavecchia and StratisD. Viglas Joseph Spadavecchia Informatics Jamboree - May 2004 j.spadavecchia@ed.ac.uk Page2. 1 Introduction • Our aim is to support relational queries in a P2P environment – to harnessdistributed resources. • The problem is that data is not located on local disk; but instead we mustgo out into the network to locate it. • The system should scale well while nodes join and leave;have guaranteed bounds on the number of routing hops used for lookup; and be fault tolerant whennodes fail. Joseph Spadavecchia Informatics Jamboree - May 2004 j.spadavecchia@ed.ac.ukPage 3. 2 Problem Currently; P2P systems supporting multiple attribute indexing are inefficientand have no guarantees on information retrieval. Joseph Spadavecchia Informatics Jamboree -May 2004 j.spadavecchia@ed.ac.uk Page 4. 3 Problem …,*,*,*
A Peer-to-Peer Architecture for e-Science,Stratis D Viglas,Abstract One of the key issues in supporting e-Science is managing data in distributed;flexible; scalable and autonomous ways. This paper proposes an architecture based onPeer-to-Peer systems that can be used to facilitate large-scale distributed data management.It identifies the important problems that need to be addressed and presents possiblesolutions; along with their expected advantages. These ideas; we believe; are helpful inextending the discussion of alternative approaches of supporting the multiple facets of e-Science.,*,*,*
