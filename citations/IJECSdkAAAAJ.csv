Zab: High-performance broadcast for primary-backup systems,Flavio P Junqueira; Benjamin C Reed; Marco Serafini,Zab is a crash-recovery atomic broadcast algorithm we designed for the ZooKeepercoordination service. ZooKeeper implements a primary-backup scheme in which a primaryprocess executes clients operations and uses Zab to propagate the correspondingincremental state changes to backup processes. Due the dependence of an incrementalstate change on the sequence of changes previously generated; Zab must guarantee that ifit delivers a given state change; then all other changes it depends upon must be deliveredfirst. Since primaries may crash; Zab must satisfy this requirement despite crashes ofprimaries.,Dependable Systems & Networks (DSN); 2011 IEEE/IFIP 41st International Conference on,2011,181
The power of both choices: Practical load balancing for distributed stream processing engines,Muhammad Anis Uddin Nasir; Gianmarco De Francisci Morales; David Garcia-Soriano; Nicolas Kourtellis; Marco Serafini,We study the problem of load balancing in distributed stream processing engines; which isexacerbated in the presence of skew. We introduce Partial Key Grouping (PKG); a newstream partitioning scheme that adapts the classical “power of two choices” to a distributedstreaming setting by leveraging two novel techniques: key splitting and local load estimation.In so doing; it achieves better load balancing than key grouping while being more scalablethan shuffle grouping. We test PKG on several large datasets; both real-world and synthetic.Compared to standard hashing; PKG reduces the load imbalance by up to several orders ofmagnitude; and often achieves nearly-perfect load balance. This result translates into animprovement of up to 60% in throughput and up to 45% in latency when deployed on a realStorm cluster.,Data Engineering (ICDE); 2015 IEEE 31st International Conference on,2015,62
E-store: Fine-grained elastic partitioning for distributed transaction processing systems,Rebecca Taft; Essam Mansour; Marco Serafini; Jennie Duggan; Aaron J Elmore; Ashraf Aboulnaga; Andrew Pavlo; Michael Stonebraker,Abstract On-line transaction processing (OLTP) database management systems (DBMSs)often serve time-varying workloads due to daily; weekly or seasonal fluctuations in demand;or because of rapid growth in demand due to a company's business success. In addition;many OLTP workloads are heavily skewed to" hot" tuples or ranges of tuples. For example;the majority of NYSE volume involves only 40 stocks. To deal with such fluctuations; anOLTP DBMS needs to be elastic; that is; it must be able to expand and contract resources inresponse to load fluctuations and dynamically balance load as hot tuples vary over time.This paper presents E-Store; an elastic partitioning framework for distributed OLTP DBMSs.It automatically scales resources in response to demand spikes; periodic events; andgradual changes in an application's workload. E-Store addresses localized bottlenecks …,Proceedings of the VLDB Endowment,2014,55
Arabesque: a system for distributed graph mining,Carlos HC Teixeira; Alexandre J Fonseca; Marco Serafini; Georgos Siganos; Mohammed J Zaki; Ashraf Aboulnaga,Abstract Distributed data processing platforms such as MapReduce and Pregel havesubstantially simplified the design and deployment of certain classes of distributed graphanalytics algorithms. However; these platforms do not represent a good match for distributedgraph mining problems; as for example finding frequent subgraphs in a graph. Given aninput graph; these problems require exploring a very large number of subgraphs and findingpatterns that match some" interestingness" criteria desired by the user. These algorithms arevery important for areas such as social networks; semantic web; and bioinformatics. In thispaper; we present Arabesque; the first distributed data processing platform for implementinggraph mining algorithms. Arabesque automates the process of exploring a very largenumber of subgraphs. It defines a high-level filter-process computational model that …,Proceedings of the 25th Symposium on Operating Systems Principles,2015,52
Practical Hardening of Crash-Tolerant Systems.,Miguel Correia; Daniel Gómez Ferro; Flavio Paiva Junqueira; Marco Serafini,Abstract Recent failures of production systems have highlighted the importance of toleratingfaults beyond crashes. The industry has so far addressed this problem by hardening crash-tolerant systems with ad hoc error detection checks; potentially overlooking critical faultscenarios. We propose a generic and principled hardening technique for Arbitrary StateCorruption (ASC) faults; which specifically model the effects of realistic data corruptions ondistributed processes. Hardening does not require the use of trusted components or thereplication of the process over multiple physical servers. We implemented a wrapper libraryto transparently harden distributed processes. To exercise our library and evaluate ourtechnique; we obtained ASC-tolerant versions of Paxos; of a subset of the ZooKeeper API;and of an eventually consistent storage by implementing crash-tolerant protocols and …,USENIX Annual Technical Conference,2012,45
On-line diagnosis and recovery: On the choice and impact of tuning parameters,Marco Serafini; Andrea Bondavalli; Neeraj Suri,A sequenced process of Fault Detection followed by the erroneous node's Isolation andsystem Reconfiguration (node exclusion or recovery); that is; the FDIR process;characterizes the sustained operations of a fault-tolerant system. For distributed systemsutilizing message passing; a number of diagnostic (and associated FDIR) approaches;including our prior algorithms; exist in literature and practice. Invariably; the focus is onproving the completeness and correctness (all and only the faulty nodes are isolated) for thechosen fault model; without explicitly segregating permanent from transient faulty nodes. Tocapture diagnostic issues related to the persistence of errors (transient; intermittent; andpermanent); we advocate the integration of count-and-threshold mechanisms into the FDIRframework. Targeting pragmatic system issues; we develop an adaptive online FDIR …,IEEE Transactions on dependable and secure computing,2007,42
Accordion: Elastic scalability for database systems supporting distributed transactions,Marco Serafini; Essam Mansour; Ashraf Aboulnaga; Kenneth Salem; Taha Rafiq; Umar Farooq Minhas,Abstract Providing the ability to elastically use more or fewer servers on demand (scale outand scale in) as the load varies is essential for database management systems (DBMSes)deployed on today's distributed computing platforms; such as the cloud. This requiressolving the problem of dynamic (online) data placement; which has so far been addressedonly for workloads where all transactions are local to one sever. In DBMSes where ACIDtransactions can access more than one partition; distributed transactions represent a majorperformance bottleneck. Scaling out and spreading data across a larger number of serversdoes not necessarily result in a linear increase in the overall system throughput; becausetransactions that used to access only one server may become distributed. In this paper wepresent Accordion; a dynamic data placement system for partition-based DBMSes that …,Proceedings of the VLDB Endowment,2014,29
When two choices are not enough: Balancing at scale in distributed stream processing,Muhammad Anis Uddin Nasir; Gianmarco De Francisci Morales; Nicolas Kourtellis; Marco Serafini,Carefully balancing load in distributed stream processing systems has a fundamental impacton execution latency and throughput. Load balancing is challenging because real-worldworkloads are skewed: some tuples in the stream are associated to keys which aresignificantly more frequent than others. Skew is remarkably more problematic in largedeployments: having more workers implies fewer keys per worker; so it becomes harder to“average out” the cost of hot keys with cold keys. We propose a novel load balancingtechnique that uses a heavy hitter algorithm to efficiently identify the hottest keys in thestream. These hot keys are assigned to d≥ 2 choices to ensure a balanced load; where d istuned automatically to minimize the memory and computation cost of operator replication.The technique works online and does not require the use of routing tables. Our extensive …,Data Engineering (ICDE); 2016 IEEE 32nd International Conference on,2016,26
Scrooge: Reducing the costs of fast Byzantine replication in presence of unresponsive replicas,Marco Serafini; Péter Bokor; Dan Dobre; Matthias Majuntke; Neeraj Suri,Byzantine-Fault-Tolerant (BFT) state machine replication is an appealing technique totolerate arbitrary failures. However; Byzantine agreement incurs a fundamental trade-offbetween being fast (ie optimal latency) and achieving optimal resilience (ie 2f+ b+ 1replicas; where f is the bound on failures and b the bound on Byzantine failures [9]).Achieving fast Byzantine replication despite f failures requires at least f+ b− 2 additionalreplicas [10; 6; 8]. In this paper we show; perhaps surprisingly; that fast Byzantine agreementdespite f failures is practically attainable using only b− 1 additional replicas; which isindependent of the number of crashes tolerated. This makes our approach particularlyappealing for systems that must tolerate many crashes (large f) and few Byzantine faults(small b). The core principle of our approach is to have replicas agree on a quorum of …,Dependable Systems and Networks (DSN); 2010 IEEE/IFIP International Conference on,2010,25
Efficient model checking of fault-tolerant distributed protocols,Péter Bokor; Johannes Kinder; Marco Serafini; Neeraj Suri,To aid the formal verification of fault-tolerant distributed protocols; we propose an approachthat significantly reduces the costs of their model checking. These protocols often specifyatomic; process-local events that consume a set of messages; change the state of a process;and send zero or more messages. We call such events quorum transitions and leveragethem to optimize state exploration in two ways. First; we generate fewer states compared tomodels where quorum transitions are expressed by single-message transitions. Second; werefine transitions into a set of equivalent; finer-grained transitions that allow partial-orderalgorithms to achieve better reduction. We implement the MP-Basset model checker; whichsupports refined quorum transitions. We model check protocols representing core primitivesof deployed reliable distributed systems; namely: Paxos consensus; regular storage; and …,Dependable Systems & Networks (DSN); 2011 IEEE/IFIP 41st International Conference on,2011,24
Eventually linearizable shared objects,Marco Serafini; Dan Dobre; Matthias Majuntke; Péter Bokor; Neeraj Suri,Abstract Linearizability is the strongest known consistency property of shared objects. Inasynchronous message passing systems; Linearizability can be achieved with◊ S and amajority of correct processes. In this paper we introduce the notion of EventualLinearizability; the strongest known consistency property that can be attained with◊ S andany number of crashes. We show that linearizable shared object implementations can beaugmented to support weak operations; which need to be linearized only eventually. Unlikestrong operations that require to be always linearized; weak operations terminate in worstcase runs. However; there is a tradeoff between ensuring termination of weak and strongoperations when processes have only access to◊ S. If weak operations terminate in theworst case; then we show that strong operations terminate only in the absence of …,Proceedings of the 29th ACM SIGACT-SIGOPS symposium on Principles of distributed computing,2010,21
Supporting domain-specific state space reductions through local partial-order reduction,Péter Bokor; Johannes Kinder; Marco Serafini; Neeraj Suri,Abstract Model checkers offer to automatically prove safety and liveness properties ofcomplex concurrent software systems; but they are limited by state space explosion. Partial-Order Reduction (POR) is an effective technique to mitigate this burden. However; applyingexisting notions of POR requires to verify conditions based on execution paths ofunbounded length; a difficult task in general. To enable a more intuitive and still flexibleapplication of POR; we propose local POR (LPOR). LPOR is based on the existing notion ofstatically computed stubborn sets; but its locality allows to verify conditions in single statesrather than over long paths. As a case study; we apply LPOR to message-passing systems.We implement it within the Java Pathfinder model checker using our general Java-basedLPOR library. Our experiments show significant reductions achieved by LPOR for model …,Proceedings of the 2011 26th IEEE/ACM International Conference on Automated Software Engineering,2011,20
Piggybacking on social networks,Aristides Gionis; Flavio Junqueira; Vincent Leroy; Marco Serafini; Ingmar Weber,Abstract The popularity of social-networking sites has increased rapidly over the lastdecade. A basic functionalities of social-networking sites is to present users with streams ofevents shared by their friends. At a systems level; materialized per-user views are a commonway to assemble and deliver such event streams on-line and with low latency. Access to thedata stores; which keep the user views; is a major bottleneck of social-networking systems.We propose to improve the throughput of these systems by using social piggybacking; whichconsists of processing the requests of two friends by querying and updating the view of athird common friend. By using one such hub view; the system can serve requests of the firstfriend without querying or updating the view of the second. We show that; given a socialgraph; social piggybacking can minimize the overall number of requests; but computing …,Proceedings of the VLDB Endowment,2013,19
A tunable add-on diagnostic protocol for time-triggered systems,Marco Serafini; Neeraj Suri; Jonny Vinter; Astrit Ademaj; Wolfgang Brandstatter; Fulvio Tagliabo; Jens Koch,We present a tunable diagnostic protocol for generic time-triggered (TT) systems to detectcrash and send/receive omission faults. Compared to existing diagnostic and membershipprotocols for TT systems; it does not rely on the single-fault assumption and toleratesmalicious faults. It runs at the application level and can be added on top of any TT system(possibly as a middleware component) without requiring modifications at the system level.The information on detected faults is accumulated using a penalty/reward algorithm tohandle transient faults. After a fault is detected; the likelihood of node isolation can beadapted to different system configurations; including those where functions with differentcriticality levels are integrated. Using actual automotive and aerospace parameters; weexperimentally demonstrate the transient fault handling capabilities of the protocol.,Dependable Systems and Networks; 2007. DSN'07. 37th Annual IEEE/IFIP International Conference on,2007,19
Scalable Error Isolation for Distributed Systems.,Diogo Behrens; Marco Serafini; Flavio Paiva Junqueira; Sergei Arnautov; Christof Fetzer,ABSTRACT Mesa is a highly scalable analytic data warehousing system that stores criticalmeasurement data related to Google's Internet advertising business. Mesa is designed tosatisfy ness critical nature of this data result in unique technical and operational challengesfor processing; storing; and querying. The requirements for such a data store are:,NSDI,2015,18
Abortable fork-linearizable storage,Matthias Majuntke; Dan Dobre; Marco Serafini; Neeraj Suri,Abstract We address the problem of emulating a shared read/write memory in a messagepassing system using a storage server prone to Byzantine failures. Although cryptographycan be used to ensure confidentiality and integrity of the data; nothing can prevent amalicious server from returning obsolete data. Fork-linearizability [1] guarantees that if amalicious server hides an update of some client from another client; then these two clientswill never see each others' updates again. Fork-linearizability is arguably the strongestconsistency property attainable in the presence of a malicious server. Recent work [2] hasshown that there is no fork-linearizable shared memory emulation that supports wait-freeoperations. On the positive side; it has been shown that lock-based emulations exist [1; 2].Lock-based protocols are fragile because they are blocking if clients may crash. In this …,International Conference On Principles Of Distributed Systems,2009,17
Application-level diagnostic and membership protocols for generic time-triggered systems,Marco Serafini; Péter Bokor; Neeraj Suri; Jonny Vinter; Astrit Ademaj; Wolfgang Brandstatter; Fulvio Tagliabo; Jens Koch,We present online tunable diagnostic and membership protocols for generic time-triggered(TT) systems to detect crashes; send/receive omission faults; and network partitions.Compared to existing diagnostic and membership protocols for TT systems; our protocols donot rely on the single-fault assumption and also tolerate non-fail-silent (Byzantine) faults.They run at the application level and can be added on top of any TT system (possibly as amiddleware component) without requiring modifications at the system level. The informationon detected faults is accumulated using a penalty/reward algorithm to handle transientfaults. After a fault is detected; the likelihood of node isolation can be adapted to differentsystem configurations; including configurations where functions with different criticality levelsare integrated. All protocols are formally verified using model checking. Using actual …,IEEE Transactions on Dependable and Secure Computing,2011,15
HP: Hybrid paxos for WANs,Dan Dobre; Matthias Majuntke; Marco Serafini; Neeraj Suri,Implementing a fault-tolerant state machine boils down to reaching consensus on asequence of commands. In wide area networks (WANs); where network delays are typicallylarge and unpredictable; choosing the best consensus protocol is difficult. During normaloperation; Classic Paxos (CP) requires three message delays; whereas Fast Paxos (FP)requires only two. However; when collisions occur; due to interfering commands issuedconcurrently; FP re-quires four extra message delays. In addition; FP uses larger quorumsthan CP. Therefore; CP can outperform FP in many situations. We present Hybrid Paxos(HP); a consensus protocol that combines the features of FP and CP. HP implementsgeneralized consensus; where collisions are caused only by interfering commands. In theabsence of collisions HP requires two message delays; and only one extra message …,Dependable Computing Conference (EDCC); 2010 European,2010,12
On efficient models for model checking message-passing distributed protocols,Péter Bokor; Marco Serafini; Neeraj Suri,Abstract The complexity of distributed algorithms; such as state machine replication;motivates the use of formal methods to assist correctness verification. The design of theformal model of an algorithm directly affects the efficiency of the analysis. Therefore; it isdesirable that this model does not add “unnecessary” complexity to the analysis. In thispaper; we consider a general message-passing (MP) model of distributed algorithms andcompare different ways of modeling the message traffic. We prove that the different MPmodels are equivalent with respect to the common properties of distributed algorithms.Therefore; one can select the model which is best suited for the applied verificationtechnique. We consider MP models which differ regarding whether (1) the event of messagedelivery can be interleaved with other events and (2) a computation event must consume …,*,2010,12
The fail-heterogeneous architectural model,Marco Serafini; Neeraj Suri,Fault tolerant distributed protocols typically utilize a homogeneous fault model; either fail-crash or fail-Byzantine; where all processors are assumed to fail in the same manner. Inpractice; due to complexity and evolvability reasons; only a subset of the nodes can actuallybe designed to have a restricted; fail-crash failure mode; provided that they are free ofdesign faults. Based on this consideration; we propose a fail-heterogeneous architecturalmodel for distributed systems which considers two classes of nodes:(a) full-fledgedexecution nodes; which can be fail-Byzantine; and (b) lightweight; validated coordinationnodes; which can only be fail-crash. To illustrate the model we introduce HeterTrust as apractical trustworthy service replication protocol. It has a low latency overhead; requires fewexecution nodes with diversified design; and prevents intruded servers from disclosing …,Reliable Distributed Systems; 2007. SRDS 2007. 26th IEEE International Symposium on,2007,8
Role-based symmetry reduction of fault-tolerant distributed protocols with language support,Péter Bokor; Marco Serafini; Neeraj Suri; Helmut Veith,Abstract Fault-tolerant (FT) distributed protocols (such as group membership; consensus;etc.) represent fundamental building blocks for many practical systems; eg; the Google FileSystem. Not only does one desire rigor in the protocol design but especially in its verificationgiven the complexity and fallibility of manual proofs. The application of model checking (MC)for protocol verification is attractive with its full automation and rich property language.However; being an exhaustive exploration method; its scalable use is very muchconstrained by the overall number of different system states. We observe that; although FTdistributed protocols usually display a very high degree of symmetry which stems frompermuting different processes; MC efforts targeting their automated verification oftendisregard this symmetry. Therefore; we propose to leverage the framework of symmetry …,International Conference on Formal Engineering Methods,2009,7
Efficient verification of distributed protocols using stateful model checking,Habib Saissi; Péter Bokor; Can Arda Muftuoglu; Neeraj Suri; Marco Serafini,This paper presents efficient model checking of distributed software. Key to the achievedefficiency is a novel stateful model checking strategy that is based on the decomposition ofstates into a relevant and an auxiliary part. We formally show this strategy to be sound;complete; and terminating for general finite-state systems. As a case study; we implementthe proposed strategy within Basset/MP-Basset; a model checker for message-passing Javaprograms. Our evaluation with actual deployed fault-tolerant message-passing protocolsshows that the proposed stateful optimization is able to reduce model checking time andmemory by up to 69% compared to the naive stateful search; and 39% compared to partial-order reduction.,Reliable Distributed Systems (SRDS); 2013 IEEE 32nd International Symposium on,2013,6
Clay: fine-grained adaptive partitioning for general database schemas,Marco Serafini; Rebecca Taft; Aaron J Elmore; Andrew Pavlo; Ashraf Aboulnaga; Michael Stonebraker,Abstract Transaction processing database management systems (DBMSs) are critical fortoday's data-intensive applications because they enable an organization to quickly ingestand query new information. Many of these applications exceed the capabilities of a singleserver; and thus their database has to be deployed in a distributed DBMS. The key factoraffecting such a system's performance is how the database is partitioned. If the database ispartitioned incorrectly; the number of distributed transactions can be high. Thesetransactions have to synchronize their operations over the network; which is considerablyslower and leads to poor performance. Previous work on elastic database repartitioning hasfocused on a certain class of applications whose database schema can be represented in ahierarchical tree structure. But many applications cannot be partitioned in this manner …,Proceedings of the VLDB Endowment,2016,5
Method and apparatus for monitoring a status of nodes of a communication network,*,A method and apparatus for monitoring the operability status of nodes of a communicationnetwork determines first node status data at a first node by causing it to diagnose its ownstatus and the status of at least one second node; and to send the first node status data to atleast one second node. The first node receives second node status data from at least onesecond node; and determines node status evaluation data at the first node based on thedetermined first node status data and the received second node status data.,*,2012,5
Leader election for replicated services using application scores,Diogo Becker; Flavio Junqueira; Marco Serafini,Abstract Replicated services often rely on a leader to order client requests and broadcaststate updates. In this work; we present POLE; a leader election algorithm that select leadersusing application-specific scores. This flexibility given to the application enables thealgorithm to tailor leader election according to metrics that are relevant in practical settingsand that have been overlooked by existing approaches. Recovery time and request latencyare examples of such metrics. To evaluate POLE; we use ZooKeeper; an open-sourcereplicated service used for coordinating Web-scale applications. Our evaluation overrealistic wide-area settings shows that application scores can have a significant impact onperformance; and that just optimizing the latency of consensus does not translate into lowerlatency for clients. An important conclusion from our results is that obtaining a general …,Proceedings of the 12th International Middleware Conference,2011,5
Weak consistency as a last resort,Marco Serafini; Flavio Junqueira,Abstract It is well-known that using a replicated service requires a tradeoff betweenavailability and consistency. Eventual Linearizability represents a midpoint in the designspectrum; since it can be implemented ensuring availability in worst-case periods andproviding strong consistency in the regular case. In this paper we show how EventualLinearizability can be used to support master-worker schemes such as workload sharding inWeb applications. We focus on a scenario where sharding maps the workload to a pool ofservers spread over an unreliable wide-area network. In this context; Linearizability isdesirable; but it may prevent achieving sufficient availability and performance. We show thatEventual Linearizability can significantly reduce the time to completion of the workload insome settings.,Proceedings of the 4th International Workshop on Large Scale Distributed Systems and Middleware,2010,5
Sustaining Property Verification of Synchronous Dependable Protocols over Implementation,Marco Serafini; Neeraj Suri,It is often considered that a protocol that has been verified for its dependability properties atthe protocol level maintains these proven properties over its implementation. Focusing onsynchronous protocols; we demonstrate that this assumption can easily be fallacious. Weutilize the example of an existing formally verified diagnostic protocol as implemented ontothe targeted time-triggered architecture (TTA). The cause is identified as the overlapmismatch across the computation and communication phases in TTA; which does not matchthe system assumptions of the protocol. To address this mismatch problem; we develop theconcept of a generic alignment (co-ordination) layer to implement the desiredcommunication assumptions. The verification of this layer ensures that the formally provedproperties of a protocol also hold over their varied implementation.,High Assurance Systems Engineering Symposium; 2007. HASE'07. 10th IEEE,2007,4
On barriers and the gap between active and passive replication,Flavio P Junqueira; Marco Serafini,Abstract Active replication is commonly built on top of the atomic broadcast primitive.Passive replication; which has been recently used in the popular ZooKeeper coordinationsystem; can be naturally built on top of the primary-order atomic broadcast primitive. Passivereplication differs from active replication in that it requires processes to cross a barrier beforethey become primaries and start broadcasting messages. In this paper; we propose a barrierfunction τ that explains and encapsulates the differences between existing primary-orderatomic broadcast algorithms. We also show that implementing primary-order atomicbroadcast on top of a generic consensus primitive and τ inherently results in higher timecomplexity than atomic broadcast; as witnessed by existing algorithms. We overcome thisproblem by presenting an alternative; primary-order atomic broadcast implementation that …,International Symposium on Distributed Computing,2013,3
Reducing the costs of large-scale BFT replication,Marco Serafini; Neeraj Suri,Abstract We identify three key challenges in designing large-scale fault tolerant services.The first is keeping stable best-case performance in presence of failures; which areincreasingly becoming commonplace. The second is that worst-case failures should notresult in major service disruptions and needs to be tolerated. The third is minimizing thecosts of replicating a large number of services. While most previous work has focused onaddressing the first two challenges; we propose new approaches to reduce the replicationcosts of BFT replication in large-scale services.,Proceedings of the 2nd Workshop on Large-Scale Distributed Systems and Middleware,2008,3
Load Balancing for Skewed Streams on Heterogeneous Cluster,Muhammad Anis Uddin Nasir; Hiroshi Horii; Marco Serafini; Nicolas Kourtellis; Rudy Raymond; Sarunas Girdzijauskas; Takayuki Osogami,Abstract: Primitive partitioning strategies for streaming applications operate efficiently undertwo very strict assumptions: the resources are homogeneous and the messages are drawnfrom a uniform key distribution. These assumptions are often not true for the real-world usecases. Dealing with heterogeneity and non-uniform workload requires inferring the resourcecapacities and input distribution at run time. However; gathering these statistics and findingan optimal placement often become a challenge when microsecond latency is desired. Inthis paper; we address the load balancing problem for streaming engines running on aheterogeneous cluster and processing skewed workload. In doing so; we propose a novelpartitioning strategy called Consistent Grouping (CG) that is inspired by traditional consistenthashing. CG is a lightweight distributed strategy that enables each processing element …,arXiv preprint arXiv:1705.09073,2017,2
Efficient robust storage using secret tokens,Dan Dobre; Matthias Majuntke; Marco Serafini; Neeraj Suri,Abstract We present algorithms that reduce the time complexity and improve the scalabilityof robust storage for unauthenticated data. Robust storage ensures progress under everycondition (wait-freedom) and never returns an outdated value (regularity) nor a forged value(Byzantine fault tolerance). The algorithms use secret tokens; which are values randomlyselected by the clients and attached to the data written into the storage. Tokens are secretbecause they cannot be predicted by the attacker before they are used; and thus revealed;by the clients. Our algorithms do not rely on unproven cryptographic assumptions asalgorithms based on self-verifying data. They are optimally-resilient; and ensure that readscomplete in two communication rounds if readers do not write into the storage; or in onecommunication round otherwise.,Symposium on Self-Stabilizing Systems,2009,2
Modeling on-line tests in safety-critical systems,M Serafini; P Lollini; A Bondavalli,*,Guedes; Soares and Zio (eds.); Safety and Reliability for Managing Risk,2006,2
A method and system for processing data,*,A system of redistributing partitions across servers having multiple partitions that eachprocess transactions. Where the transactions are related to one another and the transactionsare able to access one or a set of partitions simultaneously. The system comprising: amonitoring module operable to determine a transaction rate of the number of transactionsprocessed by the multiple partitions on the first server; an affinity module operable todetermine affinity between partitions; wherein the affinity being a measure of how oftengroup transactions access sets of respective partitions; a partition placement moduleoperable to determine a partition mapping in response to a change in a transactionworkload on at least one partition on the first server; the partition placement moduleoperable to receive input from at least one of: a server capacity estimator module; …,*,2016,1
To Crash or Not To Crash: Efficient Modeling of Fail-Stop Faults,Habib Saissi; Péter Bokor; Marco Serafini; Neeraj Suri,Abstract. A commonly used approach in practical verification is to verify a simplified model ofthe system rather than the system itself; which would entail infeasible verification complexity.This paper introduces a model for efficient model checking of message-passing systemswith crash faults. The key to the achieved efficiency is the intuition that the event of processcrash can be omitted in the model as crashed processes can be mimicked by “slow” ones.We formally prove this intuition for a general class of systems and their specifications. Weevaluate model checking efficiency using two models; one where crash events are modeledas separate state transitions (explicit model) and another where these events are omitted(implicit model). Our experiments with widely-used and representative protocol examplesshow significant reductions of model checking memory and time when using the implicit …,Invited paper; Proc. of Workshop on Logical Aspects of Fault-Tolerance (LAFT; in assoc. with LICS),2011,1
Brief announcement: efficient model checking of fault-tolerant distributed protocols using symmetry reduction,Péter Bokor; Marco Serafini; Neeraj Suri; Helmut Veith,Abstract Motivation. Fault-tolerant (FT) distributed protocols represent fundamental buildingblocks behind many practical systems. A rigorous design of these protocols is desired giventhe complexity of manual proofs. The application of model checking (MC)[2] for protocolverification is attractive with its full automation and rich property language. However; beingan exhaustive exploration method; its scalability is limited by the number of different systemstates. Although FT distributed protocols usually display a high degree of symmetry whichstems from permuting different processes; MC efforts targeting their automated verificationoften disregard this symmetry. Therefore; we propose to leverage the framework of symmetryreduction [6] and improve on existing applications of it. Our secondary contribution is todefine a high-level description language (called FTDP) to ease the symmetry-aware …,International Symposium on Distributed Computing,2009,1
Exploiting symmetry of distributed FT protocols to ease model checking,Péter Bokor; András Pataricza; Marco Serafini; Neeraj Suri,Model checking is a formal verification technique used to prove that a system satisfies itsspecification. The system is described by a state transition system (called Kripke structure)and the specification of the system is defined via properties written in temporal logic. Themodel checking problem consists of exploring every possible state of the Kripke structureand checking if the properties hold along all explorations [1]. If the number of reachablestates exceeds a certain limit; the model checking problem becomes infeasible and isusually referred to as state space explosion. If the system model and its temporal propertiesare specificable; the model checking (ie; state exploration) problem can be automated.Distributed fault-tolerant (FT) distributed protocols comprise an arena with subtle protocoloperations and fault semantics; where informal reasoning often leads to errors. Hence …,Supplemental Proc. Int’l Conf. on Dependable Systems and Network (DSN 2007),2007,1
On Exploiting Symmetry To Verify Distributed Protocols,Marco Serafini; Neeraj Suri; Péter Bokor,Amongst varied V&V approaches; formal verification is seeing increased usage andacceptance. One popular techniques is model checking that allows for automatedverification (without user guidance) by performing exhaustive simulation on the model of thesystem. However; model checking faces the problem of state space explosion. Our ongoingresearch aims at proposing a method to facilitate the model checking of a class of distributedprotocols by reducing the size of the associated state space. Abstraction is a general methodto reduce the level of detail in order to reduce the complexity of analysis. We present anabstraction scheme which is aimed at verifying core fault tolerant protocols of frame-based;synchronous systems (eg consensus; atomic broadcast; diagnosis; membership). The ideais that; instead of modeling every single node explicitly; we represent only one correct …,Fast Abstract; International Conference on Dependable Systems and Networks (DSN),2006,1
Search engine and method for performing a search for objects that correspond to a search request,*,A search engine for finding objects that correspond to a search request; including an inputmodule for receiving a keyword query from a user; and a search module being configured tomap the keyword query to the identifiers of objects that semantically match the keyword orthe plurality of keywords contained in the keyword query; and to generate a search resultthat contains a listing of matching object identifiers; is characterized in that the searchmodule is further configured to generate the search result by considering network layerinformation about the user within the process of mapping the keyword query to identifiers ofmatching objects; wherein the network layer information include sophisticated informationthe search module receives from a dedicated entity.,*,2017,*
QFrag: distributed graph search via subgraph isomorphism,Marco Serafini; Gianmarco De Francisci Morales; Georgos Siganos,Abstract This paper introduces QFrag; a distributed system for graph search on top of bulksynchronous processing (BSP) systems such as MapReduce and Spark. Searching forpatterns in graphs is an important and computationally complex problem. Most currentdistributed search systems scale to graphs that do not fit in main memory by partitioning theinput graph. For analytical queries; however; this approach entails running expensivedistributed joins on large intermediate data. In this paper we explore an alternativeapproach: replicating the input graph and running independent parallel instances of asequential graph search algorithm. In principle; this approach leads us to an embarrassinglyparallel problem; since workers can complete their tasks in parallel without coordination.However; the skew present in natural graphs makes this problem a deceitfully parallel …,Proceedings of the 2017 Symposium on Cloud Computing,2017,*
Graph Data Mining with Arabesque,Eslam Hussein; Abdurrahman Ghanem; Vinicius Vitor dos Santos Dias; Carlos HC Teixeira; Ghadeer AbuOda; Marco Serafini; Georgos Siganos; Gianmarco De Francisci Morales; Ashraf Aboulnaga; Mohammed Zaki,Abstract Graph data mining is defined as searching in an input graph for all subgraphs thatsatisfy some property that makes them interesting to the user. Examples of graph datamining problems include frequent subgraph mining; counting motifs; and enumeratingcliques. These problems differ from other graph processing problems such as PageRank orshortest path in that graph data mining requires searching through an exponential number ofsubgraphs. Most current parallel graph analytics systems do not provide good support forgraph data mining. One notable exception is Arabesque; a system that was built specificallyto support graph data mining. Arabesque provides a simple programming model to expressgraph data mining computations; and a highly scalable and efficient implementation of thismodel; scaling to billions of subgraphs on hundreds of cores. This demonstration will …,Proceedings of the 2017 ACM International Conference on Management of Data,2017,*
Social networking feed delivery system and method,*,Disclosed herein are a system; method and architecture for optimizing a manner in whichqueries and updates are issued to data stores servicing an application such as a socialnetworking application. A social graph modeling a social network may be used to generate adata store request schedule that optimizes; eg; minimizes; data store accesses; such aswithout limitation queries and updates to the data store.,*,2014,*
Method and Apparatus for Monitoring a Status of Nodes of a Communication Network,*,The present invention relates to a method and apparatus for monitoring a status of nodes ofa communication network. The method determines first node status data at a first node bydiagnosing the own status of the first node and the status of at least one second node; sendsthe first node status data to at least one second node; receives second node status data fromat least one second node; and determines node status evaluation data at the first nodebased on the determined first node status data and the received second node status data.Furthermore; improvements are proposed for the sake of efficiency and/or robustness of themethod.,*,2012,*
Social piggybacking: leveraging common friends to generate event streams,Aristides Gionis; Flavio Junqueira; Vincent Leroy; Marco Serafini; Ingmar Weber,Abstract Social networking systems present users with online event streams that includerecent activities of their friends. Materialized per-user views are a common way to generatesuch event streams on-line and with low latency. We propose improving throughput by usingsocial piggybacking: process the requests of two friends by just querying and updating theview of a third common friend. By using one such hub view; the system can serve requests ofthe first friend without querying nor updating the view of the second. This reduces the overallload on views; and can be implemented with minimal adaptations by existing socialnetworking architectures. We show that; given a social graph; there exist hub-basedschedules that minimize the overall number of view requests; but computing them is NP-hard. We propose a heuristic to solve the problem and evaluate it using samples from the …,Proceedings of the Fifth Workshop on Social Network Systems,2012,*
Efficient and Low-Cost Fault Tolerance for Web-Scale Systems,Marco Serafini,Online Web-scale services are being increasingly used to handle critical personalinformation. The trend towards storing and managing such information on the “cloud” isextending the need for dependable services to a growing range of Web applications; fromemailing; to calendars; storage of photos; or ﬁnance. This motivates the increased adoptionof fault-tolerant replication algorithms in Web-scale systems; ranging from classic; strongly-consistent replication in systems such as Chubby [Bur06] and ZooKeeper [HKJR10]; tohighly-available weakly-consistent replication as in Amazon's Dynamo [DHJ+ 07] orYahoo!'s PNUTS [CRS+ 08]. This thesis proposes novel algorithms to make fault-tolerantreplication more efficient; available and cost eﬀective. Although the proposed algorithms aregeneric; their goals are motivated by fulﬁlling two major needs of Web-scale systems. The …,*,2010,*
Fault Characterization and Diagnosis in Distributed Systems.,Marco Serafini,*,AlgoSyn,2010,*
Efficient Model Checking of Fault-tolerant Distributed Protocols Using Symmetry Reduction,Péter Bokor; Marco Serafini; Neeraj Suri; Helmut Veith,Abstract Fault-tolerant (FT) distributed protocols (such as group membership; consensus;etc.) represent fundamental building blocks behind many practical systems; eg; the GoogleFile System. Not only does one desire rigor in the protocol design but especially in itsverification given the complexity and fallibility of manual proofs. The application of modelchecking (MC) for protocol verification is attractive with its full automation and rich propertylanguage. However; being an exhaustive exploration method; its scalable use is very muchconstrained by the overall number of different system states. We observe that; although FTdistributed protocols usually display a very high degree of symmetry which stems frompermuting different processes; MC efforts targeting their automated verification oftendisregard this symmetry. In this paper we leverage the framework of symmetry reduction …,*,2009,*
Malicious Fault Characterization Exploiting Honeypot Data,V Stankovic; E Alata; C Leita; M Serafini; O Thonnard; J Viniikka; U Zurutuza,ReSIST is a NoE that addresses the strategic objective “Towards a global dependability andsecurity framework” of the European Union Work Programme; and responds to the stated“need for resilience; self-healing; dynamic content and volatile environments”. In the contextof the Resist Network of Excellence; funds were allocated to one-year sub-projectsaddressing some of the “dependability and security gaps” identified by the network activity.We introduce here the outcomes and deliverables expected by one of these sub-projects;named “Honeypots”; started in January 2008 and with expected completion at the end of2008. In order to assess the resilience of a system it is important to take into considerationmalicious faults. In the specific case of a computer system; one of the most important classesof malicious faults is linked to Internet attacks. The gap GA2 in [13] shows how the lack of …,Proc. of the 7th European Dependable Computing Conference (EDCC 2008),2008,*
IC2E 2017 Program Committee,Jiangchuan Liu; Jean Bacon; Umesh Bellur; David Bermbach; Wei Cai; Abhishek Chandra; Lucy Cherkasova; Dilma Da Silva; Peter Dinda; Aiman Erbad; David Eyers; Eduardo B Fernandez; Ian Foster; Anshul Gandhi; Sergey Gorinsky; Mohamed Hefeeda; Cheng-Hsin Hsu; Hani Jamjoom; Fabio Kon; Dan Li; Baochun Li; Richard TB Ma; Xiaoqiang Ma; Giang Nguyen; Thu Nguyen; Peter Pietzuch; Judy Qiu; Kui Ren; Hani Salah; Marco Serafini; Weisong Shi; Liuba Shrira; Stefan Tai; Kian-Lee Tan; Douglas Thain; Anwar Walid,• Claris Castillo; Renci; USA • Anne Holler; VeloCloud; USA • Partha Kanuparthy; Amazon WebServices; USA • Suzanne McIntosh; Cloudera & NYU; USA • Xiaoqiao Meng; Pinterest; USA• Iqbal Mohomed; Samsung Research; USA • Animesh Nandi; Google; India • Fabio Oliveira;IBM Research; USA • Ravi Soundararajan; VMware; USA • Chengwei Wang; AT&TResearch; USA • Guohui Wang; Facebook; USA • Xiaoyun Zhu; Futurewei Technologies; USA,*,*,*
SRDS 2016 Technical Program Committee,IRISA Emmanuelle Anceaume; France Antonio Fernandez Anta; Saurabh Bagchi; Tamás Bartha; Ken Birman; Borzoo Bonakdarpour; Silvia Bonomi; IBM Cristian Cachin; Switzerland Andrea Ceccarelli; Tzi-cker Chiueh; Gregory Chockler; FUP Elias Duarte; Brazil Pascal Felber; Christof Fetzer; UT Dresden; Germany Roy Friedman; Aniruddha Gokhale; Vincent Gramoli; UFBA Fabiola Greve; Brazil Richard Harper; Maurice Herlihy; Vana Kalogeraki; Bettina Kemme; Ibrahim Khalil; Tatiana Kozlova Madsen; Toshimitsu Masuzawa; Jogesh Muppala; Simin Nadjm-Tehrani; Mikhail Nesterenko; Jose Pereira; Mexico Alex Schwarzmann; Marco Serafini; Roman Vitenberg,Emmanuelle Anceaume; IRISA; France Antonio Fernandez Anta; IMEA; Spain SaurabhBagchi; Purdue University; USA Bharath Balasubramanian; AT&T; USA Tamás Bartha; HungarianAcademy of Sciences; Hungary Sonia Ben Mokthar; CNRS; France Ken Birman; CornellUniversity; USA Borzoo Bonakdarpour; McMaster University; Canada Silvia Bonomi; SapienzaUniversity of Rome; Italy Levente Buttyán; Budapest Univ. of Technology and Economics; HungaryCristian Cachin; IBM; Switzerland Andrea Ceccarelli; University of Firenze; Italy Tzi-ckerChiueh; ITRI; Taiwan Gregory Chockler; Royal Holloway University of London; UK XavierDefago; Tokyo Tech; Japan Elias Duarte; FUP; Brazil Pascal Felber; Neuchatel University; SwitzerlandChristof Fetzer; UT Dresden; Germany Roy Friedman; Technion; Israel Aniruddha Gokhale; VanderbiltUniversity; USA Vincent Gramoli; Sydney University; Australia Fabiola Greve; UFBA …,*,*,*
TECHNISCHE BERICHTE,Diogo Behrens¹; Marco Serafini; Sergei Arnautov¹; Flavio P Junqueira; Christof Fetzer¹,This technical report complements our paper entitled “Scalable error isolation for distributedsystems”[3]. In Section 2; we define the distributed system model and formalize the centralproperty of this work: error isolation. The property dictates that correct processes discard anycorrupt input message. Error isolation can be achieved with traditional techniques such asByzantine-fault tolerant algorithms. In this work; however; we are interested in techniquesthat provide error isolation locally; ie; exchanging no additional messages amongprocesses. In Section 2.4. 2; we define hardening as a transformation of a program p into aprogram ph; such that if all processes of the system run such program ph; then error isolationis guaranteed locally. If our system is only subject to hardware errors; but no maliciousattacks; hardening can guarantee error isolation with broad coverage. Section 3 presents …,*,*,*
SRDSW 2015,Gul Agha; Lotfi Ben Othmane; Ivan Beschastnikh; Antonio Casimiro; Andrea Ceccarelli; Miguel Correia; Domenico Cotroneo; Michel Cukier; David Eyers; Christof Fetzer; Andy Gokhale; Vincent Gramoli; Qi Han; Takahiro Hara; Matti Hiltunen; Taisuke Izumi; Vana Kalogeraki; Rudiger Kapitza; Kyungbaek Kim; Philip Koopman; Ajay Kshemkalyani; Sanjay Madria; Rahul Mangharam; D Manivannan; Keith Marzullo; Luca Mottola; Marta Patiño; Fernando Pedone; José Pereira; Ravi Prakash; Luigi Romano; Marco Serafini; François Taïani; Ashish Tiwari; Sébastien Tixeuil; Tatsuhiro Tsuchiya; Roman Vitenberg,Gul Agha; University of Illinois; USA Lotfi Ben Othmane; Fraunhofer Institute; Germany IvanBeschastnikh; University of British Columbia; Canada Antonio Casimiro; University ofLisboa; Portugal Andrea Ceccarelli; University of Florence; Italy Miguel Correia;IST/INESC-ID; Portugal Domenico Cotroneo; University of Naples Federico Secondo; Italy MichelCukier; University of Maryland; USA Xavier Defago; JAIST; Japan David Eyers; University ofOtago; New Zealand Christof Fetzer; Technical University of Dresden; Germany AndyGokhale; Vanderbilt University; USA Vincent Gramoli; University of Sydney; Australia QiHan; Colorado School of Mines; USA Takahiro Hara; Osaka University; Japan MattiHiltunen; AT&T Labs Research; USA Taisuke Izumi; Nagoya Institute of Technology; Japan VanaKalogeraki; Athens University of Economics and Busine; s Greece Ru¨diger Kapitza …,*,*,*
DSN 2010 subcommittees,Gabriela Jacques da Silva; Karthik Pattabiraman; Shih-Yao Dai; Zbigniew Kalbarczyk; Philip Koopman; Rajesh Panta; Marco Serafini; Elizabeth Van Ruitenbeek; Marco Vieira,2010 IEEE/IFIP International Conference on Dependable Systems & Networks (DSN) …Chair: Zbigniew Kalbarczyk; University of Illinois; USA … Members: Saurabh Bagchi; PurdueUniversity; USA Gabriela Jacques da Silva; University of Illinois; USA Karthik Pattabiraman; Universityof British Columbia; Canada Timothy Tsai; Hitachi; USA … Chair: Douglas Blough; GeorgiaInstitute of Technology; USA … Members: Andrea Ceccarelli; University of Florence; ItalyShih-Yao Dai; National Taiwan University; Taiwan Zbigniew Kalbarczyk; University ofIllinois; USA Philip Koopman; Carnegie Mellon University; USA Rajesh Panta; PurdueUniversity; USA Rick Schlichting; AT&T Labs; USA Marco Serafini; Technical University ofDarmstadt; Germany Elizabeth Van Ruitenbeek; University of Illinois; USA Marco Vieira; Universityof Coimbra; Portugal,*,*,*
On Using Abstractions to Model Check an On-line Diagnostic Protocol,Peter Bokor; Marco Serafini,Distributed diagnostic protocols face the challenges posed by current rise in transient faultrates. The issue of discriminating between transient and intermittent faults becomesessential to avoid unnecessary isolations which reduce system resiliency and thus reliability.This issue can be solved using proper count and threshold mechanisms [1]; that expectunderlying diagnostic protocols to eventually detect not only permanent but also transientfaults. We outline the model checking approach we developed to assess a synchronousframe based diagnostic protocol similar to the DD protocol presented in [2]. In that paper theformal verification of the protocol is done assuming all faults to be permanent. Instead; weproved that the protocol guarantees the desired properties; without posing constraints on thefault duration; as long as the necessary conditions to ensure consensus are met. To solve …,*,*,*
A Case for Heterogeneous Architectures,Marco Serafini; Neeraj Suri,Abstract Fault tolerant distributed protocols are typically designed using a homogeneousfault model; either crash-only or Byzantine; where all processors are assumed to fail in thesame manner. The Byzantine model entails a higher degree of replication; together with lessefficient coordination protocols; but is often required as the complexity of the participatingnodes makes the removal of vulnerabilities impossible. We propose a heterogeneousarchitectural model where the system includes two classes of nodes: complex executionnodes; which can fail in a Byzantine manner and contain heavy application logic; andlightweight; dedicated and thoroughly validated coordination nodes executing only restrictedcoordination functionalities. To discuss the usefulness and practicality of the approach weintroduce HeterTrust; an intrusion-and DoS-tolerant service replication protocol which …,*,*,*
