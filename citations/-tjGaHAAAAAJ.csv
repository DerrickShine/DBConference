Bloom filter based routing for content-based publish/subscribe,Zbigniew Jerzak; Christof Fetzer,Abstract Achieving expressive and efficient content-based routing in publish/subscribesystems is a difficult problem. Traditional approaches prove to be either inefficient orseverely limited in their expressiveness and flexibility. We present a novel routing method;based on Bloom filters; which shows high efficiency while simultaneously preserving theflexibility of content-based schemes. The resulting implementation is a fast; flexible and fullydecoupled content-based publish/subscribe system.,Proceedings of the second international conference on Distributed event-based systems,2008,82
The DEBS 2012 grand challenge,Zbigniew Jerzak; Thomas Heinze; Matthias Fehr; Daniel Gröber; Raik Hartung; Nenad Stojanovic,Abstract The goal of the DEBS Grand Challenge series is to contribute to the EventProcessing Grand Challenge; that serves as a common goal and mechanism forcoordinating research focusing on event processing. DEBS Grand Challenge seriesprovides a common ground and evaluation criteria for a competition aimed at both researchand industrial event-based systems. The goal of the DEBS Grand Challenge participants isto implement a solution to a specific problem provided by the DEBS Grand Challengeorganizers. In this paper we present a description of the DEBS 2012 Grand Challengeproblem focusing on the high-tech manufacturing domain. Moreover we provide a set ofboth:(1) real-life data and (2) queries which can be used by the DEBS 2012 GrandChallenge participants as well as research community at large.,Proceedings of the 6th ACM International Conference on Distributed Event-Based Systems,2012,76
Auto-scaling techniques for elastic data stream processing,Thomas Heinze; Valerio Pappalardo; Zbigniew Jerzak; Christof Fetzer,An elastic data stream processing system is able to handle changes in workload bydynamically scaling out and scaling in. This allows for handling of unexpected load spikeswithout the need for constant overprovisioning. One of the major challenges for an elasticsystem is to find the right point in time to scale in or to scale out. Finding such a point isdifficult as it depends on constantly changing workload and system characteristics. In thispaper we investigate the application of different auto-scaling techniques for solving thisproblem. Specifically:(1) we formulate basic requirements for an auto-scaling techniqueused in an elastic data stream processing system (2) we use the formulated requirements toselect the best auto scaling techniques and (3) we perform evaluation of the selected autoscaling techniques using the real world data. Our experiments show that the auto scaling …,Data Engineering Workshops (ICDEW); 2014 IEEE 30th International Conference on,2014,58
The DEBS 2013 grand challenge,Christopher Mutschler; Holger Ziekow; Zbigniew Jerzak,Abstract The ACM DEBS 2013 Grand Challenge is the third in a series of challenges whichseek to provide a common ground and evaluation criteria for a competition aimed at bothresearch and industrial event-based systems. The goal of the Grand Challenge competitionis to implement a solution to a real-world problem provided by the Grand Challengeorganizers. The 2013 edition of the Grand Challenge focuses on real-time; event-basedsports analytics. The 2013 Grand Challenge data set was collected during a football matchcarried out at a Nuremberg Stadium in Germany and is complemented with a set ofcontinuous analytical queries which provide detailed insight into the match statistics for bothteam managers and spectators.,Proceedings of the 7th ACM international conference on Distributed event-based systems,2013,48
Latency-aware elastic scaling for distributed data stream processing systems,Thomas Heinze; Zbigniew Jerzak; Gregor Hackenbroich; Christof Fetzer,Abstract Elastic scaling allows a data stream processing system to react to a dynamicallychanging query or event workload by automatically scaling in or out. Thereby; bothunpredictable load peaks as well as underload situations can be handled. However; eachscaling decision comes with a latency penalty due to the required operator movements.Therefore; in practice an elastic system might be able to improve the system utilization;however it is not able to provide latency guarantees defined by a service level agreement(SLA). In this paper we introduce an elastic scaling system; which optimizes the utilizationunder certain latency constraints defined by a SLA. Specifically; we present a model; whichestimates the latency spike created by a set of operator movements. We use this model tobuilt a latency-aware elastic operator placement algorithm; which minimizes the number …,Proceedings of the 8th ACM International Conference on Distributed Event-Based Systems,2014,43
M4: a visualization-oriented time series data aggregation,Uwe Jugel; Zbigniew Jerzak; Gregor Hackenbroich; Volker Markl,Abstract Visual analysis of high-volume time series data is ubiquitous in many industries;including finance; banking; and discrete manufacturing. Contemporary; RDBMS-basedsystems for visualization of high-volume time series data have difficulty to cope with the hardlatency requirements and high ingestion rates of interactive visualizations. Existing solutionsfor lowering the volume of time series data disregard the semantics of visualizations andresult in visualization errors. In this work; we introduce M4; an aggregation-based timeseries dimensionality reduction technique that provides error-free visualizations at high datareduction rates. Focusing on line charts; as the predominant form of time series visualization;we explain in detail the drawbacks of existing data reduction techniques and how ourapproach outperforms state of the art; by respecting the process of line rasterization.,Proceedings of the VLDB Endowment,2014,38
A novel approach to qos monitoring in the cloud,Luigi Romano; Danilo De Mari; Zbigniew Jerzak; Christof Fetzer,The availability of a dependable (ie reliable and timely) QoS monitoring facility is key for thereal take up of cloud computing; since-by allowing organizations to receive the full value ofcloud computing services-it would increase the level of trust they would place in thisemerging technology. In this paper; we present a dependable QoS monitoring facility whichrelies on the" as a Service" paradigm; and can thus be made available to virtually all cloudusers in a seamless way. Such a facility is called QoS-MONaaS; which stands for" Quality ofService MONitoring as a Service". Details are given about the internal design; currentimplementation; and experimental validation of the service.,Data Compression; Communications and Processing (CCP); 2011 First International Conference on,2011,36
Fault tolerance based query execution,*,Various embodiments of systems and methods for a fault tolerance based query executionare described herein. Queries are received from users; the queries including operators. Amulti-query optimization is performed on the operators included in the queries to obtain aquery plan. A fault tolerance degree is determined for the operators included in the queryplan. Based on the fault tolerance degree of the operators; nodes are assigned to theoperators included in the query plan. The assigned nodes execute the operators included inthe query plan to execute the queries. In one aspect; the nodes simultaneously execute theoperators included in the query plan.,*,2016,32
Cost monitoring and cost-driven optimization of complex event processing system,*,A cost monitoring system can monitor a cost of queries executing in a complex eventprocessing system; running on top of a pay-as-you-go cloud infrastructure. Certainembodiments may employ a generic; cloud-platform independent cost model; multi-queryoptimization; cost calculation; and/or operator placement techniques; in order to monitor andexplain query cost down to an operator level. Certain embodiments may monitor costs innear real-time; as they are created. Embodiments may function independent of anunderlying complex event processing system and the underlying cloud platform.Embodiments can optimize a work plan of the cloud-based system so as to minimize cost forthe end user; matching the cost model of the underlying cloud platform.,*,2015,28
Cloud-based data stream processing,Thomas Heinze; Leonardo Aniello; Leonardo Querzoni; Zbigniew Jerzak,Abstract In this tutorial we present the results of recent research about the cloud enablementof data streaming systems. We illustrate; based on both industrial as well as academicprototypes; new emerging uses cases and research trends. Specifically; we focus on novelapproaches for (1) scalability and (2) fault tolerance in large scale distributed streamingsystems. In general; new fault tolerance mechanisms strive to be more robust and at thesame time introduce less overhead. Novel load balancing approaches focus on elasticscaling over hundreds of instances based on the data and query workload. Finally; wepresent open challenges for the next generation of cloud-based data stream processingengines.,Proceedings of the 8th ACM International Conference on Distributed Event-Based Systems,2014,28
Online parameter optimization for elastic data stream processing,Thomas Heinze; Lars Roediger; Andreas Meister; Yuanzhen Ji; Zbigniew Jerzak; Christof Fetzer,Abstract Elastic scaling allows data stream processing systems to dynamically scale in andout to react to workload changes. As a consequence; unexpected load peaks can behandled and the extent of the overprovisioning can be reduced. However; the strategiesused for elastic scaling of such systems need to be tuned manually by the user. This is anerror prone and cumbersome task; because it requires a detailed knowledge of theunderlying system and workload characteristics. In addition; the resulting quality of servicefor a specific scaling strategy is unknown a priori and can be measured only during runtime.In this paper we present an elastic scaling data stream processing prototype; which allows totrade off monetary cost against the offered quality of service. To that end; we use an onlineparameter optimization; which minimizes the monetary cost for the user. Using our …,Proceedings of the Sixth ACM Symposium on Cloud Computing,2015,26
The DEBS 2016 grand challenge,Vincenzo Gulisano; Zbigniew Jerzak; Spyros Voulgaris; Holger Ziekow,Abstract The DEBS Grand Challenge is a series of challenges which address problems inevent stream processing. The focus of the Grand Challenge in 2016 is on processing of datastreams that originate from social networks. Hence; the data represents an evolving graphstructure. With this challenge we take up the general scenario and data source from the2014 SIGMOD contest. However; in contrasts to the SIGMOD contest; the DEBS grandchallenge explicitly focuses on continuous processing of streaming data and thus dynamicchanges in graphs. This paper describes the specifics of the data streams and continuousqueries that define the DEBS Grand Challenge 2016.,Proceedings of the 10th ACM International Conference on Distributed and Event-based Systems,2016,22
Elastic scaling of a high-throughput content-based publish/subscribe engine,Raphaël Barazzutti; Thomas Heinze; André Martin; Emanuel Onica; Pascal Felber; Christof Fetzer; Zbigniew Jerzak; Marcelo Pasin; Etienne Rivière,Publish/subscribe (pub/sub) infrastructures running as a service on cloud environments offersimplicity and flexibility for composing distributed applications. Provisioning themappropriately is however challenging. The amount of stored subscriptions and incomingpublications varies over time; and the computational cost depends on the nature of theapplications and in particular on the filtering operation they require (eg; content-based vs.topic-based; encrypted vs. non-encrypted filtering). The ability to elastically adapt theamount of resources required to sustain given throughput and delay requirements is key toachieving cost-effectiveness for a pub/sub service running in a cloud environment. In thispaper; we present the design and evaluation of an elastic content-based pub/sub system: E-STREAMHUB. Specific contributions of this paper include:(1) a mechanism for dynamic …,Distributed Computing Systems (ICDCS); 2014 IEEE 34th International Conference on,2014,22
Prefix forwarding for publish/subscribe,Zbigniew Jerzak; Christof Fetzer,Abstract We present a prefix forwarding algorithm for content-based publish/subscribesystems. Our algorithm performs only one content-based match per message regardless ofthe number of routers (hops) traversed from the source to the destination. Moreover; prefixforwarding preserves the decoupling properties of publish/subscribe system. Prefixforwarding does not put any restriction on the content of the messages. The presentedalgorithm does not introduce any false negatives and allows to tune the false positive rate tobalance the bandwidth and processing overheads. We provide experimental resultsconfirming the properties of the proposed approach.,Proceedings of the 2007 inaugural international conference on Distributed event-based systems,2007,17
An adaptive replication scheme for elastic data stream processing systems,Thomas Heinze; Mariam Zia; Robert Krahn; Zbigniew Jerzak; Christof Fetzer,Abstract A major challenge for cloud-based systems is to be fault tolerant to cope with anincreasing probability of faults in cloud environments. This is especially true for in-memorycomputing solutions like data stream processing systems; where a single host failure mightresult in an unrecoverable information loss. In state of the art data streaming systems eitheractive replication or upstream backup are applied to ensure fault tolerance; which have ahigh resource overhead or a high recovery time respectively. This paper combines these twofault tolerance mechanisms in one system to minimize the number of violations of a user-defined recovery time threshold and to reduce the overall resource consumption comparedto active replication. The system switches for individual operators between both replicationtechniques dynamically based on the current workload characteristics. Our approach is …,Proceedings of the 9th ACM International Conference on Distributed Event-Based Systems,2015,16
Fail-aware publish/subscribe,Zbigniew Jerzak; Robert Fach; Christof Fetzer,In this paper we present a wide area distributed system using a content-basedpublish/subscribe communication middleware which can deterministically detect and reportfailures with respect to timely message delivery and message omission. Our approach doesnot require external clock synchronization nor does it impose any constraints on thepublish/subscribe middleware. We show that our system performs better and is safer thanwhen using NTP for external clock synchronization. We provide a proof of conceptimplementation and present results of experiments carried out in the PlanetLabenvironment.,Network Computing and Applications; 2007. NCA 2007. Sixth IEEE International Symposium on,2007,16
Handling overload in publish/subscribe systems,Zbigniew Jerzak; Christof Fetzer,A new approach for handling overload in Publish/Subscribe systems is presented. Weaddress the issues of how to cope (1) with the limitations imposed by the externalenvironment (eg; network congestion or link failures) and (2) the limitations resulting directlyfrom within the service itself (eg; high message load). These two issues are handled in agraceful way while ensuring that the most valuable information is given the highest chanceof a successful delivery.,Distributed Computing Systems Workshops; 2006. ICDCS Workshops 2006. 26th IEEE International Conference on,2006,16
Elastic Complex Event Processing under Varying Query Load.,Thomas Heinze; Yuanzhen Ji; Yinying Pan; Franz Josef Grueneberger; Zbigniew Jerzak; Christof Fetzer,ABSTRACT Distributed data stream processing systems; like Twitter Storm or Yahoo! S4;have been primarily focusing on adapting to varying event rates. However; as these systemsare becoming increasingly multi-tenant; adaptation to the varying query load is becoming anequally important problem. In this paper we present FUGU–an elastic allocator for ComplexEvent Processing systems. FUGU uses bin packing to allocate continuous queries to avarying set of nodes. Driven by elasticity requirements FUGU maximizes the overall systemutilization while trying to maintain stable processing latencies. The specific contributions ofthis paper are:(1) introduction of a re-balancing scheme for bin packing allowing FUGU toincrease overall system utilization by six percent and (2) a detailed study of achievablesystem utilization and latency under real-life workload from Frankfurt Stock Exchange.,BD3@ VLDB,2013,12
VDDA: automatic visualization-driven data aggregation in relational databases,Uwe Jugel; Zbigniew Jerzak; Gregor Hackenbroich; Volker Markl,Abstract Contemporary RDBMS-based systems for visualization of high-volume numericaldata have difficulty to cope with the hard latency requirements and high ingestion rates ofinteractive visualizations. Existing solutions for lowering the volume of large data setsdisregard the spatial properties of visualizations; resulting in visualization errors. In thiswork; we introduce VDDA; a visualization-driven data aggregation that models visualaggregation at the pixel level as data aggregation at the query level. Based on the M4aggregation for producing pixel-perfect line charts from highly reduced data subsets; wedefine a complete set of data reduction operators that simulate the overplotting behavior ofthe most frequently used chart types. Relying only on the relational algebra and the commondata aggregation functions; our approach is generic and applicable to any visualization …,The VLDB Journal,2016,11
Quality-driven processing of sliding window aggregates over out-of-order data streams,Yuanzhen Ji; Hongjin Zhou; Zbigniew Jerzak; Anisoara Nica; Gregor Hackenbroich; Christof Fetzer,Abstract One fundamental challenge in data stream processing is to cope with the ubiquity ofdisorder of tuples within a stream caused by network latency; operator parallelization;merging of asynchronous streams; etc. High result accuracy and low result latency are twoconflicting goals in out-of-order stream processing. Different applications may prefer differentextent of trade-offs between the two goals. However; existing disorder handling solutionseither try to meet one goal to the extreme by sacrificing the other; or try to meet both goalsbut have shortcomings including unguaranteed result accuracy or increased complexity inoperator implementation and application logic. To meet different application requirementson the latency versus result accuracy trade-off in out-of-order stream processing; in thispaper; we propose to make this trade-off user-configurable. Particularly; focusing on …,Proceedings of the 9th ACM International Conference on Distributed Event-Based Systems,2015,9
Ginseng for sustainable energy awareness: flexible energy monitoring using wireless sensor nodes,Anja Klein; Zbigniew Jerzak,Abstract To ensure sustainable manufacturing the energy consumption of productionprocesses must be minimized. SAP Research is active in two European Community'sSeventh Framework Program (FP7) projects: GINSENG and KAP. The combined aim ofGINSENG and KAP projects is to allow for event-based monitoring of the ProductionPerformance Indicators (PPI) that can be used to; eg; shut down idle machines or to optimizethe material flow. In this demo we illustrate how the energy consumption for lightening andheating can be controlled with the use of wireless sensor nodes that measure temperature;light and humidity. Events describing the indoor climate; originating from TelosB motes; areprocessed using the middleware developed within the GINSENG project and subsequentlyvisualized using a dashboard. Visualization includes also warnings regarding excessive …,Proceedings of the Fourth ACM International Conference on Distributed Event-Based Systems,2010,9
Soft state in publish/subscribe,Zbigniew Jerzak; Christof Fetzer,Abstract Building survivable content-based publish/subscribe systems is difficult. Every nodein a distributed publish/subscribe system stores a significant amount of routing state whichcan be easily corrupted due to message omissions; link and node failures. In this paper; weshow how to build a soft state content-based publish/subscribe system where the wholestate is stored at the edge of the publish/subscribe network; at the entity which is utilizing thestate. This results in a robust and resilient system; as the routing state is permanently lost orcorrupted only if the endpoint entity associated with the given state permanently fails.,Proceedings of the Third ACM International Conference on Distributed Event-Based Systems,2009,9
XSiena: The Content-Based Publish/Subscribe System,Zbigniew Jerzak,Just as packet switched networks constituted a major breakthrough in our perception of theinformation exchange in computer networks so have the decoupling properties ofpublish/subscribe systems revolutionized the way we look at networking in the context oflarge scale distributed systems. The decoupling of the components of publish/subscribesystems in time; space and synchronization has created an appealing platform for theasynchronous information exchange among anonymous information producers andconsumers. Moreover; the content-based nature of publish/subscribe systems provides agreat degree of flexibility and expressiveness as far as construction of data flows isconsidered. However; a number of challenges and not yet addressed issued still exists inthe area of the publish/subscribe systems. One active area of research is directed toward …,*,2009,9
BFSiena: a communication substrate for StreamMine,Zbigniew Jerzak; Christof Fetzer,Abstract StreamMine is a scalable middleware for massive real-time data streaming. In thispaper we present the BF Siena: a communication substrate for the StreamMine. BFSiena isa content-based; publish/subscribe communication system which provides support forarbitrary predicate based messaging in the acyclic peer to peer networks. BF Siena is a lowlatency; high throughput communication system which is well suited for the processingframeworks; like Stream-Mine.,Proceedings of the second international conference on Distributed event-based systems,2008,9
Faster visual analytics through pixel-perfect aggregation,Uwe Jugel; Zbigniew Jerzak; Gregor Hackenbroich; Volker Markl,Abstract State-of-the-art visual data analysis tools ignore bandwidth limitations. They fetchmillions of records of high-volume time series data from an underlying RDBMS to eventuallydraw only a few thousand pixels on the screen. In this work; we demonstrate a pixel-awarebig data visualization system that dynamically adapts the number of data points transmittedand thus the data rate; while preserving pixel-perfect visualizations. We show how tocarefully select the data points to fetch for each pixel of a visualization; using a visualization-driven data aggregation that models the visualization process. Defining all required datareduction operators at the query level; our system trades off a few milliseconds of queryexecution time for dozens of seconds of data transfer time. The results are significantlyreduced response times and a near real-time visualization of millions of data points.,Proceedings of the VLDB Endowment,2014,8
Quality-driven continuous query execution over out-of-order data streams,Yuanzhen Ji; Hongjin Zhou; Zbigniew Jerzak; Anisoara Nica; Gregor Hackenbroich; Christof Fetzer,Abstract Executing continuous queries over out-of-order data streams; where tuples are notordered according to timestamps; is challenging; because high result accuracy and lowresult latency are two conflicting performance metrics. Although many applications allowtrading exact query results for lower latency; they still expect the produced results to meet acertain quality requirement. However; none of existing disorder handling approaches haveconsidered minimizing the result latency while meeting user-specified requirements on thequality of query results. In this demonstration; we showcase AQ-K-slack; an adaptive; buffer-based disorder handling approach; which supports executing sliding window aggregatequeries over out-of-order data streams in a quality-driven manner. By adapting techniquesfrom the field of sampling-based approximate query processing and control theory; AQ-K …,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,7
Elastic complex event processing,*,Systems and methods according to embodiments provide elasticity for complex eventprocessing (CEP) systems. Embodiments may comprise at least the following threecomponents:(1) incremental query optimization;(2) operator placement; and (3) costexplanation. Incremental query optimization allows avoiding simultaneous computation ofidentical results by performing operator-level query reuse and subsumption. Usingautomatic operator placement; a centralized CEP engine can be transformed into adistributed one by dynamically distributing and adjusting the execution according tounpredictable changes in data and query load. Cost explanation functionality can provideend users with near real-time insight into the monetary cost of the whole system; down tooperator level granularity. Combination of these components allows a CEP system to be …,*,2015,6
Quality-driven disorder handling for concurrent windowed stream queries with shared operators,Yuanzhen Ji; Anisoara Nica; Zbigniew Jerzak; Gregor Hackenbroich; Christof Fetzer,Abstract Handling timestamp-disorder among stream tuples is a basic requirement for datastream processing; and involves an inevitable tradeoff between the latency and the quality ofstream query results. To meet the tradeoff requirements of diverse streaming applications;the approach of buffer-based; quality-driven disorder handling (QDDH) was proposedrecently; which aims to minimize sizes of stream-sorting buffers; thus the result latency; whilehonoring user-specified result-quality requirements. Previous work on QDDH focuses onlyon individual stream queries. However; streaming systems often run multiple queriesconcurrently; and may exploit sharing opportunities across the concurrent queries. Undersuch shared query execution; stream-sorting buffers can be shared across queries as well;which can potentially reduce the overall memory cost incurred by the sorting buffers. In …,Proceedings of the 10th ACM International Conference on Distributed and Event-based Systems,2016,5
Measuring and estimating monetary cost for cloud-based data stream processing,Thomas Heinze; Patrick Meyer; Zbigniew Jerzak; Christof Fetzer,Abstract In recent time due to the availability of cloud-based data streaming systems likeYahoo! S4 or Twitter Storm and virtually unlimited resources using a public cloudinfrastructure it is possible to run stream processing tasks with a new dimension ofcomputational complexity. However; the required resources in terms of CPU; memory; andnetwork bandwidth differ depending on the use case and applied data streaming system.For the user of such a system this is directly visible in the monetary cost he has to spent forthe used resources. Therefore; he would like to maximize the ratio between gainedperformance and his monetary cost. In our demonstration we present an approach tomeasure and estimate the monetary cost for data streaming systems. We present a generalscheme to model monetary cost for any combination of a cloud-based data streaming …,Proceedings of the 7th ACM international conference on Distributed event-based systems,2013,5
Fault-tolerant complex event processing using customizable state machine-based operators,Thomas Heinze; Zbigniew Jerzak; André Martin; Lenar Yazdanov; Christof Fetzer,Abstract Modern Complex Event Processing (CEP) systems often need an high degree ofcustomization in order to implement required application logic. The use of declarativelanguages; such as CQL; often leads to complicated and hard to maintain application code.In this demo; we show how state machine-based CEP operators help to cope with theseproblems. State machine-based CEP operators allow for a high flexibility as well as a re-usability of application logic components. A major benefit of the presented solution is itseasy integration with existing streaming engines; which we demonstrate using StreamMine;a highly parallel and faulttolerant streaming engine prototype. In this demo we show:(1) howstate machine-based operators allow for an easy definition of custom; reusable CEPoperators;(2) how resulting state machines can be easily combined with existing …,Proceedings of the 15th International Conference on Extending Database Technology,2012,5
GINSENG data processing framework,Zbigniew Jerzak; Anja Klein; Gregor Hackenbroich,Abstract For many applications guided by sensor networks; such as production automationand health monitoring; an efficient data processing with performance assurance is crucial;especially for metrics such as delay and reliability. Our study of current middlewareapproaches showed that they do not allow a sophisticated complex event processing;neither the performance monitoring. In this chapter we present the GINSENG middlewarearchitecture that provides a 3-tier data processing framework to exploit the benefits of basicpublish/subscribe systems; traditional event stream processing and complex business ruleprocessing. Furthermore; the GINSENG middleware architecture provides performancecontrol mechanisms; ie; monitoring metrics and improvement methods; both of theunderlying sensor network and the middleware itself. Finally; it supports the constraints of …,*,2011,5
Streammine,Christof Fetzer; Andrey Brito; Robert Fach; Zbigniew Jerzak,Abstract StreamMine is a novel distributed event processing system that we are currentlydeveloping. It is architected for running on large clusters and uses content-basedpublish/subscribe middleware for the communication between event processingcomponents. Event processing components need to enforce application-specific orderingconstraints; eg; all events need to be processed in order of some given time stamp. Toharness the power of modern multi-core computers; we support the speculative execution ofevents. Ordering conflicts are detected dynamically and rolled backed using a SoftwareTransactional Memory.,*,2010,4
The ginseng middleware for performance control in sensor networks,Anja Klein; Zbigniew Jerzak,Abstract For many applications guided by sensor networks; such as production automationand health monitoring; an efficient data processing with performance assurance is crucial;especially for metrics such as delay and reliability. Current middleware approaches do notallow complex event processing or performance monitoring. Therefore; this paper presentsthe GINSENG middleware architecture that provides a 3-tier data processing framework toexploit the benefits of publish/subscribe systems; event stream processing and business ruleprocessing. Furthermore; it provides the performance control; ie monitoring metrics andimprovement methods; both of the underlying sensor network and the middleware itself.Finally; it supports the constraints of industrial environments by allowing for the distributedmiddleware deployment and data processing.,IFAC Proceedings Volumes,2010,4
The acm debs 2013 grand challenge,Z Jerzak; H Ziekow,*,h ttp://www. orgs. ttu. edu/debs2013/index. php,*,4
Quality-driven disorder handling for m-way sliding window stream joins,Yuanzhen Ji; Jun Sun; Anisoara Nica; Zbigniew Jerzak; Gregor Hackenbroich; Christof Fetzer,Sliding window join is one of the most important operators for stream applications. Toproduce high quality join results; a stream processing system must deal with the ubiquitousdisorder within input streams which is caused by network delay; parallel processing; etc.Disorder handling involves an inevitable tradeoff between the latency and the quality ofproduced join results. To meet different requirements of stream applications; it is desirable toprovide a user-configurable result-latency vs. result-quality tradeoff. Existing disorderhandling approaches either do not provide such configurability; or support only user-specified latency constraints. In this work; we advocate the idea of quality-driven disorderhandling; and propose a buffer-based disorder handling approach for sliding window joins;which minimizes sizes of input-sorting buffers; thus the result latency; while respecting …,Data Engineering (ICDE); 2016 IEEE 32nd International Conference on,2016,3
HUGO: real-time analysis of component interactions in high-tech manufacturing equipment (industry article),Yuanzhen Ji; Thomas Heinze; Zbigniew Jerzak,Abstract One of the major problems faced by the high-tech manufacturing industry is theneed for automated and timely detection of anomalies which can lead to failures of themanufacturing equipment. Failures of the high-tech manufacturing equipment have a directnegative impact on the operating margin and consequently profit of the high-techmanufacturing industry. Automated and timely detection of anomalies is a difficult problem;the major challenge being the need to understand the interactions between large amount ofmachine components. Even very experienced system engineers are not aware of allinteractions; especially if those need to be derived from high velocity sensor data. This; inturn; makes it impossible to recognize early warning signals and take action before failurehappens. In this paper we present HUGO--a system for real-time analysis of component …,Proceedings of the 7th ACM international conference on Distributed event-based systems,2013,3
Evaluation of IP Transmission Jitter Estimators Using One-Way Active Measurement Protocol (OWAMP),Przemysław Skurowski; Robert Wójcicki; Zbigniew Jerzak,Abstract Network transmission with real-time constraints appears to be very sensitive to thejitter–short time packet delivery delay. In this paper we describe several methods forestimating that phenomenon. We perform quantitative and qualitative analyses for thegathered data using modern measurement tool called OWAMP (one way ping) and stratum1 Network Time Protocol (NTP) time server.,International Conference on Computer Networks,2010,3
Adaptive internal clock synchronization,Zbigniew Jerzak; Robert Fach; Christof Fetzer,Existing clock synchronization algorithms assume a bounded clock reading error. This; inturn; results in an inflexible design that typically requires node crashes whenever the givenbound might be violated. We propose a novel; adaptive internal clock synchronizationalgorithm which allows to compute the deviation between the clocks during runtime. Thecomputed deviation can be propagated to the application layer to allow it to adapt itsbehavior according to the current clock deviation. The contributions of this paper are:(1) anew specification of a relaxed clock synchronization problem; and (2) a new clocksynchronization algorithm with a novel approach to dealing with crash failures.,Reliable Distributed Systems; 2008. SRDS'08. IEEE Symposium on,2008,3
MMPP-based HTTP traffic generation with multiple emulated sources,Grzegorz Hryn; Zbigniew Jerzak; Andrzej Chydzinski,Abstract In this article we propose a new tool; named Raw Packet Sender (RPS); for testingthe performance of WWW servers. Our solution allows for testing with arbitrary number ofsource IP addresses although the traffic originates from only one physical NIC. In order tobetter mimic the real life environment we implemented an HTTP session interarrival timegenerator based on Markov Modulated Poisson Process (MMPP); which can closely matchauto-covariance and the marginal distribution of recorded web traffic traces.,Archiwum Informatyki Teoretycznej i Stosowanej,2004,3
Pixel-aware query rewriting,*,A query rewriter associated with a database management system or visualization clientrewrites a database query based on properties; characteristics; etc. of the visualization to berendered by the visualization client. For example; the query rewriter receives an initial queryand one or more visualization parameters (such as width; height and/or type of visualization)for the visualization client. The query rewriter rewrites the initial query based on thevisualization parameter (s); so as to produce a data-reducing query; and then outputs thedata-reducing query for execution. The query rewriter can selectively rewrite the initial querydepending on size of query results of the initial query. In some example implementations;the query rewriting models a process of rasterization of geometric primitives by thevisualization client; so as to facilitate error-free visualization. In many cases; the query …,*,2015,2
Adaptive bandwidth driven content delivery for WWW clients,GRZEGORZ Hryń; ZBIGNIEW Jerzak,Summary The user-perceived web server performance has a strong bearing on popularity ofa portal; site or service as users may choose not to return to a particular web page if it takesa long time to retrieve its content. We present a new approach to how a server can identifyincoming clients that suffer from a poor performance and how can it react in order to improvea user-perceived connection quality based on that identification.,XII Konferencja Sieci i Systemy Informatyczne,2004,2
Integrated event processing and database management,*,Methods; systems; computer program products; and articles of manufacture for processingevents and managing a database; are described. The events may be processed and thedatabase may be managed using the same administrative tools. A database operation isperformed based on a database query statement being a database operation statement typeand an event processing project is managed based on the database query statement beinga non-database operation statement type.,*,2016,1
FUGU: Elastic Data Stream Processing with Latency Constraints.,Thomas Heinze; Yuanzhen Ji; Lars Roediger; Valerio Pappalardo; Andreas Meister; Zbigniew Jerzak; Christof Fetzer,Abstract Elasticity describes the ability of any distributed system to scale to a varying numberof hosts in response to workload changes. It has become a mandatory architectural propertyfor state of the art cloud-based data stream processing systems; as it allows treatment ofunexpected load peaks and cost-efficient execution at the same time. Although suchsystems scale automatically; the user still needs to set configuration parameters of a scalingpolicy. This configuration is cumbersome and error-prone. In this paper we propose anapproach that tries to remove this burden from the user. We present our data streamprocessing system FUGU; which optimizes the selected scaling policy automatically usingan online parameter optimization approach. In addition; we demonstrate how our systemconsiders user-defined end to end latency constraints during the scaling process.,IEEE Data Eng. Bull.,2015,1
Optimization of continuous queries in federated database and stream processing systems,Yuanzhen Ji; Zbigniew Jerzak; Anisoara Nica; Gregor Hackenbroich; Christof Fetzer,The constantly increasing number of connected devices and sensors results in increasingvolume and velocity of sensor-based streaming data. Traditional approaches for processinghigh velocity sensor data rely on stream processing engines. However; the increasingcomplexity of continuous queries executed on top of high velocity data has resulted ingrowing demand for federated systems composed of data stream processing engines anddatabase engines. One of major challenges for such systems is to devise the optimal queryexecution plan to maximize the throughput of continuous queries. In this paper we present ageneral framework for federated database and stream processing systems; and introducethe design and implementation of a cost-based optimizer for optimizing relational continuousqueries in such systems. Our optimizer uses characteristics of continuous queries and …,Datenbanksysteme für Business; Technologie und Web (BTW 2015),2015,1
Highly available publish/subscribe,Zbigniew Jerzak,The rapid growth of the Internet and local area networks has contributed to the increasing sizeand importance of the distributed systems. Distributed systems span thousands of loosely coupledentities whose behaviour and location varies during the system's lifetime. Moreover; due to thenetwork component failures and the limited capabilities of different devices; the point-to-pointsyn- chronous communication model does not meet the high availability requirements.Therefore; we believe publish/subscribe (P/S) scheme to pose an alternative to the current approachto the construction of the highly available distributed systems. AP/S scheme and the recentlyintroduced content-based network- ing [1]; [2] permit the construction of fully decoupled systemsas far as time; space and synchronisation are concerned [3]. This makes the P/S scheme a perfectcandidate for information dissemination in loosely coupled networks where no process …,HASE,2007,1
Quality-driven processing of out-of-order data streams,*,The present disclosure involves systems; software; and computer implemented methods forproviding quality-driven processing of out-of-order data streams based on a configurablequality metric. In one example; the method includes identifying a configurable quality metricdefined by a user or application for executing continuous queries over a sliding window; themetric specifying a user requirement for the quality of the continuous query result. A qualitythreshold metric is calculated based on the configurable quality metric; the configurablequality metric associated with a size of an adaptation buffer for incoming tuples of the query.In response to receiving a signal indicating a new query result; a sliding window prior to acurrent time is identified. A runtime quality metric associated with the incoming tuples for thesliding window is measured; and the adaptation buffer is modified based on a difference …,*,2017,*
Optimization of continuous queries in hybrid database and stream processing systems,*,The present disclosure involves systems; software; and computer implemented methods foroptimizing continuous queries for hybrid execution over a stream processing engine and anin-memory database. In one example; a method may include identifying a continuous queryexecuted at a stream processing engine; the continuous query including a plurality ofoperators. An optimal plan for execution of the identified continuous query at the streamprocessing engine is determined. For each of the plurality of operators in the determinedoptimal plan; an optimized placement decision for executing a particular operator in thestream processing engine or at a database system is determined. An optimized continuousquery is generated from the identified continuous query based on the determined optimalplacement decisions for each of the plurality of operators in the determined optimal plan …,*,2017,*
Visualization-driven data aggregation,Uwe Jugel,Eine visuelle Analyse großer numerischer Datenmengen ist herkömmlich notwendig; umSensordaten aus Konstruktions-und Fertigungsprozessen auszuwerten und zu verstehen.Heute ist die visuelle Analyse jeglicher Art von großen Datenmengen (Big Data)allgegenwärtig und eine meistgesuchte Funktion von Softwareprodukten zur Datenanalyse.Sie ist unverzichtbar für den Handelsverkehr; das Finanzwesen; den Einzelhandel und einerständig wachsenden Anzahl an Branchen; deren Daten herkömmlich in relationalenDatenbankmanagementsystemen (RDBMS) gespeichert werden. Leider habengegenwärtige RDBMS-basierte Datenvisualisierungs-und DatenanalysesystemeSchwierigkeiten mit den hohen Anforderungen an Latenzzeiten und den hohenDateneingangsraten fertig zu werden. Sie missachten die räumlichen Eigenschaften der …,*,2017,*
Big data on a few pixels,Uwe Jugel; Zbigniew Jerzak; Volker Markl,Data aggregation techniques help to reduce large data volumes in data visualizationsystems and are particularly effective when incorporating the spatial properties of the finalvisualization. One such technique is the Visualization-Driven Data Aggregation (VDDA) thatmodels the pixel-level overplotting as data reduction query inside the database. In thispaper; we extend VDDA with a novel approach to prepare high-dimensional data for thevisualization in chart matrices. Incorporating properties of human perception; we introduceand formalize visual capacity functions for the most common chart types and use thesefunctions for automatically configuring the best-perceivable visualization to contain theacquired data. We demonstrate how the introduced capacity functions can be used forVDDA-precedent pruning using real-world data in a relational database.,Big Data (Big Data); 2016 IEEE International Conference on,2016,*
Event stream processing partitioning,*,In an example embodiment; event stream processing is performed by first parsing an inputquery into a directed acyclic graph (DAG) including a plurality of operator nodes. Then agrouping of one or more of the operator nodes is created. One or more partitions arecreated; either by the user or automatically; in the DAG by forming one or more duplicates ofthe grouping. A splitter node is created in the DAG; the splitter node splits data from one ormore event streams and distributes it among the grouping and the duplicates of thegrouping. Then; the input query is resolved by processing data from one or more eventstreams using the DAG.,*,2016,*
Contemporary RDBMS-based systems for visualization of high-volume numerical data have difficulty to cope with the hard latency requirements and high ingestion r...,HV Jagadish; Aoying Zhou; Uwe Jugel; Zbigniew Jerzak; Gregor Hackenbroich; Volker Markl,The Big Data problem is characterized by the so-called 3V features: volume—a hugeamount of data; velocity—a high data ingestion rate; and variety—a mix of structured data;semi-structured data; and unstructured data. The state-of-the-art solutions to the Big Dataproblem are largely based on the MapReduce framework (aka its open sourceimplementation Hadoop). Although Hadoop handles the data volume...,The VLDB Journal,2016,*
An Adaptive Replication Scheme For Elastic Data Stream Processing,Thomas Heinze; M Zia; R Krahn; Z Jerzak; C Fetzer,Page 1. An Adaptive Replication Scheme For Elastic Data Stream Processing Thomas Heinze;Mariam Zia; Robert Krahn; Zbigniew Jerzak; Christof Fetzer July 02; 2015 Page 2. Public Elasticity ▪Utilization below 30% in most cloud data centers ▪ Users needs to reserve required resources ▪Limited understanding of system performance ▪ Limited knowledge of workload characteristicsWorkload/ Resources Load Static Provisioning Elastic Provisioning time UnderprovisioningOverprovisioning 02.07.2015 An Adaptive Replication Scheme 2 Page 3. Public Enabling FaultTolerance ▪ Elasticity requires horizontal scaling → need fault tolerance ▪ Two mechanisms: ActiveReplication vs. Upstream Backup User-defined Threshold Financial 0.0 2.5 5.0 7.5 10.0 12.5 0.00.5 1.0 1.5 2.0 Monetary Cost($) R e co ve ry T im e (in se c.) Active Upstream 02.07.2015 AnAdaptive Replication Scheme 4 Page 4. Public Outline …,Proceedings of the 9th ACM International Conference on Distributed Event-Based Systems (DEBS'15),2015,*
Self-configuring system for real-time health monitoring of manufacturing equipment,*,Data is received that comprises at least one data stream derived from each of a plurality ofsensors that each characterize one or more attributes of equipment components. Thereafter;using the received data and a density-based clustering algorithm that produces micro-clusters for each pair of sensors; correlated sensors having component correlations above apre-defined threshold are identified. It can then be determined that data from two or morecorrelated sensors triggers at least one alert event. Subsequently; data is provided thatcharacterizes the at least one alert event. Related apparatus; systems; techniques andarticles are also described.,*,2015,*
Coordinating execution of a collaborative business process,*,Various embodiments of systems and methods for coordinating execution of a collaborativebusiness process are described herein. An internal process included in a parentcollaborative business process is executed to receive a process plan for the collaborativebusiness process. Based on the received process plan; business entity types areinstantiated to create child collaborative business entities. The execution of the created childcollaboration business entities is coordinated to execute the collaborative business process.The business entity types include predefined internal process which is executed during theexecution of the child collaborative business entities. In one embodiment; the parentcollaborative business entity synchronizes the execution of the child collaborative businessentities.,*,2013,*
Christof Fetzer,Andrey Brito; Robert Fach; Zbigniew Jerzak,ABSTRACT StreamMine is a novel distributed event processing system that we are currentlydeveloping. It is architected for running on large clusters and uses content-basedpublish/subscribe middleware for the communication between event processingcomponents. Event processing components need to enforce application-specific orderingconstraints; eg; all events need to be processed in order of some given time stamp. Toharness the power of modern multi-core computers; we support the speculative execution ofevents. Ordering conflicts are detected dynamically and rolled backed using a SoftwareTransactional Memory.,*,2010,*
Scheduling,Valentin Cristea; Ciprian Dobre; Corina Stratan; Florin Pop,Abstract This chapter presents the scheduling problem in large scale distributed systems.Most parts of the chapter are devoted to discussion of scheduling algorithms and models.The main challenges of scheduling problem are approached here. The implementationissues are also covered. The chapter has three parts. The first part covers basics likescheduling models; scheduling algorithms for independent tasks and DAG schedulingAlgorithms for tasks with dependencies. The first part of the chapter presents a classificationof scheduling problems; methods that are relevant for the solution procedures; andcomputational complexity. The scheduling models are presented based on systemsarchitecture described in Resource Management chapter. This firs part also provides acritical analysis of most important algorithms from different points of view; such as static …,*,2010,*
Soft state in the XSiena publish/subscribe system,Zbigniew Jerzak; Christof Fetzer; Robert Wojcicki,Abstract This paper presents our experiences with building of the soft state XSienapublish/subscribe system. We provide a brief overview of our approach towards the soft statein publish/subscribe systems along with the detailed discussion of the liveness and safetyissues as well as the choice of the API and handling of the unsubscription andunadvertisement messages.,Proceedings of the Third ACM International Conference on Distributed Event-Based Systems,2009,*
Xtreme Systems Engineering,Zbigniew Jerzak,*,*,2005,*
2011 First International Conference on Data Compression; Communications and Processing (CCP),Luigi Romano; Danilo De Mari; Zbigniew Jerzak; Christof Fetzer,The availability of a dependable (ie reliable and timely) QoS monitoring facility is key for thereal take up of cloud computing; since-by allowing organizations to receive the full value ofcloud computing services-it would increase the level of trust they would place in thisemerging technology. In this paper; we present a dependable QoS monitoring facility whichrelies on the" as a Service"...,*,*,*
Revisiting content-based publish/subscribe Costin Raiciu; David S. Rosenblum and Mark Handley On Quality-of-Service and Publish-Subscribe,Stefan Behnel; Ludger Fiege; Helge Parzyjegla; Gero Mühl; Michael A Jaeger; Bogumil Zieba; Marten van Sinderen; R Baldoni; G Cortese; F Morabito; L Querzoni; S Tucci Piergiovanni; A Virgillito; Zbigniew Jerzak; Christof Fetzer; Roger S Barga; Gueorgui Chkodrov; Sven Bittner; Annika Hinze; Robert Henjes; Michael Menth; Christian Zepfel; Anton Michlmayr; Pascal Fenkam; Schahram Dustdar,Page 1. Fifth International Workshop on Distributed Event-Based Systems (DEBS'06) Day1: Monday Session 1: General Publish/Subscribe Considerations Revisiting content-basedpublish/subscribe Costin Raiciu; David S. Rosenblum and Mark Handley On Quality-of-Serviceand Publish-Subscribe Stefan Behnel; Ludger Fiege and Gero Mühl Session 2: SystemReconfiguration Reconfiguring Publish/Subscribe Overlay Topologies Helge Parzyjegla;Gero Mühl and Michael A. Jaeger Preservation of Correctness During System Reconfigurationin Data Distribution Service for Real-Time Systems (DDS) (short) Bogumil Zieba and Martenvan Sinderen Session 3: Accuracy and Quality On The Accuracy of Event Distribution Listsfor Publish/Subscribe in Dynamic Distributed Systems R. Baldoni; G. Cortese; F. Morabito;L. Querzoni; S. Tucci Piergiovanni and A. Virgillito …,*,*,*
Data Engineering,Michael Barry Ramasamy; Andrew Jorgensen; Christopher Kellogg; Neng Lu; Bill Graham; Jingwei Wu; Paris Carbone; Stephan Ewen; Seif Haridi; Asterios Katsifodimos; Volker Markl; Kostas Tzoumas; Michael J Franklin; Sailesh Krishnamurthy; Amit Bhat; Madhu Kumar; Robert Lerche; Kim Macpherson; Badrish Chandramouli; Jonathan Goldstein; Mike Barnett; James F Terwilliger; Yuanzhen Ji Heinze; Lars Roediger; Valerio Pappalardo; Andreas Meister; Zbigniew Jerzak; Christof Fetzer; Elke A Rundensteiner; Olga Poppe; Chuan Lei; Medhabi Ray; Lei Cao; Yingmei Qi; Mo Liu; Di Wang; Stan Zdonik; John Meehan; Cansu Aslantas; Michael Stonebraker; Kristin Tufte; Chris Giossi; Hong Quach; Michael Grossniklaus; Marc H Scholl; Andreas Weiler,This December; 2015 issue of the Bulletin is; as some of you may notice; being published inJuly of 2016; after the March and June; 2016 issues have been published. Put simply; theissue is late; and the March and June issues were published in their correct time slots. Theformatting of the issue; and the surrounding editorial material; eg the inside front cover andcopyright notice; are set to the December; 2015 timeframe. Indeed; the only mention of thisinverted ording of issues is in this paragraph. Things do not always go as planned. However;I am delighted that the current issue is being published; and I have high confidence that youwill enjoy reading about next-generation stream processing; the topic of the issue.,*,*,*
Możliwości poprawy postrzeganej jakości połączenia klientów WWW z wykorzystaniem pośredniczącego serwera proxy.,HRYŃ Grzegorz; Zbigniew JERZAK,*,*,*,*
Exercise–Systems Engineering 2,Zbigniew Jerzak; Ute Wappler,*,*,*,*
Reverse Engineering Apache,Zbigniew Jerzak; Ute Wappler,*,*,*,*
NCA 2005 Symposium Referees,Carlos Aguilar-Melchor; Luciana Arantes; Filipe Araujo; Mark Astley; Lasaro Camargos; Julien Cartigny; Yanninck Chevalier; Neha Dhar; Richard Ekwall; Tirthankar Ghosh; Yongsheng He; Jung-Rim Hyun; Z Jerzak; Andrew Jiang; Anxiao Jiang; Marc-Olivier Killijian; Turgay Korkmaz; Andrea Matsunaga; Peter Musial; Vincent Nicomette; Fabio Picconi; Francesco Quaglia; Miroslava Raspopvic; Paolo Romano; Sania Salahuddin; Rodrigo Schmidt; Robert Sheahan; Alexander Sprintson; Peter Sobe; Martin Suesskraut; Krishnan Sugavanam; Caimu Tang; Ali Saman Tosun; Goce Trajcevski; Mauricio Tsugawa; Radek Vingralek; Ute Wappler; Marcin Wieloch; Ning Wu; Jing Xu; Vaide Zuikeviciute,Proceedings of the 2005 Fourth IEEE International Symposium on Network Computing and Applications(NCA'05) 0-7695-2326-9/05 $20.00 © 2005 IEEE,*,*,*
Symposium referees,Carsten Albrecht; Filipe Araujo; Stefano Basagni; M Beck; L Bhuyan; Ken Birman; A Bode; D Brady; Surendra Byna; A Chronopoulos; Bruno Ciciani; I Colloff; A Couch; P Cremonesi; Roberto Di Pietro; Klaus Echtle; Richard Ekwall; C Fetzer; J Foag; J Fortes; O Frieder; JL Gaudiot; A Ghosh; M Goenne; D Grossman; Daniel Grosu; R Hagenau; Diane Hecht; B Horst; Z Jerzak; Song Jiang; C Katsinis; Aggelos Kiayias; T Kikuno; Turgay Korkmaz; M Krause; Arnas Kupšys; C Landwehr; Lester Lipsky; E Maehle; K Makki; P Mehra; Alessandro Mei; Sergio Mena; Hugo Miranda; H Pals; F Petrini; C Petrioli; G Pfeifer; J Plank; Francesco Quaglia; S Ren; L Rodrigues; Paolo Romano; Mehmet Sayal; P Scheuermann; A Schiper; A Shvartsman; Peter Sobe; D Stefanesku; T Strayer; M Suesskraut; H Sun; Ali Saman Tosun; Radek Vingralek; Ming Wu; Shouhuai Xu; Zhiyong Xu; Joshua S Young; Ki Hwan Yum; Ming Zhu,Carsten Albrecht Filipe Araujo Stefano Basagni M. Beck L. Bhuyan Ken Birman A. Bode D. BradySurendra Byna A. Chronopoulos Bruno Ciciani I. Colloff A. Couch P. Cremonesi Roberto Di PietroKlaus Echtle Richard Ekwall C. Fetzer J. Foag J. Fortes O. Frieder J.-L. Gaudiot A. Ghosh M.Goenne D. Grossman Daniel Grosu R. Hagenau Diane Hecht B. Horst Z. Jerzak Song JiangC. Katsinis Aggelos Kiayias T. Kikuno Turgay Korkmaz M. Krause … Arnas Kupšys C. LandwehrLester Lipsky E. Maehle K. Makki P. Mehra Alessandro Mei Sergio Mena Hugo Miranda H. PalsF. Petrini C. Petrioli G. Pfeifer J. Plank Francesco Quaglia S. Ren L. Rodrigues Paolo RomanoMehmet Sayal P. Scheuermann A. Schiper A. Shvartsman Peter Sobe D. Stefanesku T. StrayerM. Suesskraut H. Sun Ali Saman Tosun Radek Vingralek Ming Wu Shouhuai Xu Zhiyong XuJoshua S. Young Ki Hwan Yum Ming Zhu,*,*,*
Web Client Characterization Using Forwarding Proxy Server,Grzegorz Hryń; Zbigniew Jerzak,*,*,*,*
Testing–TDD & Code Coverage,Zbigniew Jerzak,*,*,*,*
