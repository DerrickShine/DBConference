CrowdScreen: Algorithms for Filtering Data with Humans,Aditya Parameswaran; Hector Garcia-Molina; Hyunjung Park; Neoklis Polyzotis; Aditya Ramesh; Jennifer Widom,Abstract Given a large set of data items; we consider the problem of filtering them based ona set of properties that can be verified by humans. This problem is commonplace incrowdsourcing applications; and yet; to our knowledge; no one has considered the formaloptimization of this problem.(Typical solutions use heuristics to solve the problem.) Weformally state a few different variants of this problem. We develop deterministic andprobabilistic algorithms to optimize the expected cost (ie; number of questions) andexpected error. We experimentally show that our algorithms provide definite gains withrespect to other strategies. Our algorithms can be applied in a variety of crowdsourcingscenarios and can form an integral part of any query processor that uses humancomputation.,ACM SIGMOD International Conference on Management of Data,2012,193
Deco: Declarative Crowdsourcing,Aditya Parameswaran; Hyunjung Park; Hector Garcia-Molina; Neoklis Polyzotis; Jennifer Widom,Abstract Crowdsourcing enables programmers to incorporate" human computation" as abuilding block in algorithms that cannot be fully automated; such as text analysis and imagerecognition. Similarly; humans can be used as a building block in data-intensiveapplications--providing; comparing; and verifying data used by applications. Building uponthe decades-long success of declarative approaches to conventional data management; weuse a similar approach for data-intensive applications that incorporate humans. Specifically;declarative queries are posed over stored relational data as well as data computed on-demand from the crowd; and the underlying system orchestrates the computation of queryanswers. We present Deco; a database system for declarative crowdsourcing. We describeDeco's data model; query language; and our prototype. Deco's data model was designed …,21st ACM International Conference on Information and Knowledge Management (CIKM),2012,92
Provenance for Generalized Map and Reduce Workflows,Robert Ikeda; Hyunjung Park; Jennifer Widom,We consider a class of workflows; which we call generalized map and reduce workflows(GMRWs); where input data sets are processed by an acyclic graph of map and reducefunctions to produce output results. We show how data provenance (also sometimes calledlineage) can be captured for map and reduce functions transparently. The capturedprovenance can then be used to support backward tracing (finding the input subsets thatcontributed to a given output element) and forward tracing (determining which outputelements were derived from a particular input element). We provide formal underpinnings forprovenance in GMRWs; and we identify properties that are guaranteed to hold whenprovenance is applied recursively. We have built a prototype system that supportsprovenance capture and tracing as an extension to Hadoop. Our system uses a wrapper …,Fifth Biennial Conference on Innovative Data Systems Research (CIDR),2011,72
Deco: A System for Declarative Crowdsourcing,Hyunjung Park; Richard Pang; Aditya Parameswaran; Hector Garcia-Molina; Neoklis Polyzotis; Jennifer Widom,Abstract Deco is a system that enables declarative crowdsourcing: answering SQL queriesposed over data gathered from the crowd as well as existing relational data. Decoimplements a novel push-pull hybrid execution model in order to support a flexible datamodel and a precise query semantics; while coping with the combination of latency;monetary cost; and uncertainty of crowdsourcing. We demonstrate Deco using twocrowdsourcing platforms: Amazon Mechanical Turk and an in-house platform; to show howDeco provides a convenient means of collecting and querying crowdsourced data.,38th International Conference on Very Large Data Bases (VLDB),2012,63
RAMP: A System for Capturing and Tracing Provenance in MapReduce Workflows,Hyunjung Park; Robert Ikeda; Jennifer Widom,RAMP (Reduce And Map Provenance) is an extension to Hadoop that supports provenancecapture and tracing for workflows of MapReduce jobs. RAMP uses a wrapper-basedapproach; requiring little if any user intervention in most cases; while retaining Hadoop'sparallel execution and fault tolerance. We demonstrate RAMP on a real-world MapReduceworkflow generated from a Pig script that performs sentiment analysis over Twitter data. Weshow how RAMP's automatic provenance capture and tracing capabilities provide aconvenient and efficient means of drilling-down and verifying output elements.,37th International Conference on Very Large Data Bases (VLDB),2011,51
CrowdFill: Collecting Structured Data from the Crowd,Hyunjung Park; Jennifer Widom,Abstract We present CrowdFill; a system for collecting structured data from the crowd. Whilea typical microtask-based approach would pose specific questions to each worker andassemble the answers; CrowdFill shows a partially-filled table to all participating workers.Workers contribute by filling in empty cells; as well as upvoting and downvoting data enteredby other workers. The system's synchronization scheme; based on a careful model ofprimitive operations; enables workers to collaboratively complete the table without latencyoverhead. CrowdFill allows the specification of constraints on the collected data; and hasmechanisms for resolving inconsistencies. Its compensation scheme takes into accounteach worker's contribution to the final table; and the varying difficulty of data entry tasks. Thepaper includes some preliminary experimental results.,ACM SIGMOD International Conference on Management of Data,2014,40
Query Optimization over Crowdsourced Data,Hyunjung Park; Jennifer Widom,Abstract Deco is a comprehensive system for answering declarative queries posed overstored relational data together with data obtained on-demand from the crowd. In this paperwe describe Deco's cost-based query optimizer; building on Deco's data model; querylanguage; and query execution engine presented earlier. Deco's objective in queryoptimization is to find the best query plan to answer a query; in terms of estimated monetarycost. Deco's query semantics and plan execution strategies require several fundamentalchanges to traditional query optimization. Novel techniques incorporated into Deco's queryoptimizer include a cost model distinguishing between" free" existing data versus paid newdata; a cardinality estimation algorithm coping with changes to the database state duringquery execution; and a plan enumeration algorithm maximizing reuse of common …,39th International Conference on Very Large Data Bases (VLDB),2013,34
An Overview of the Deco System: Data Model and Query Language; Query Processing and Optimization,Hyunjung Park; Richard Pang; Aditya Parameswaran; Hector Garcia-Molina; Neoklis Polyzotis; Jennifer Widom,Abstract Deco is a comprehensive system for answering declarative queries posed overstored relational data together with data obtained on-demand from the crowd. In thisoverview paper; we describe Deco's data model; query language; and system prototype;summarizing material from earlier papers. Deco's data model was designed to be general;flexible; and principled. Deco's query language extends SQL with simple constructsnecessary for crowdsourcing; and has a precise semantics for arbitrary queries. Deco'squery execution engine and cost-based query optimizer incorporate many novel techniquesto address the limitations of traditional query processing techniques in the crowdsourcingsetting. Query processing is guided by the objective of minimizing monetary cost andreducing latency.,ACM SIGMOD Record,2012,32
Query Processing over Crowdsourced Data,Hyunjung Park; Aditya Parameswaran; Jennifer Widom,We are building Deco; a comprehensive system for answering declarative queries posedover stored relational data together with data gathered from the crowd. In this paper wepresent Deco's query processor; building on Deco's data model and query languagepresented earlier. In general; it has been observed that query processing overcrowdsourced data must contend with issues and tradeoffs involving cost; latency; anduncertainty that don't arise in traditional query processing. Deco's overall objective in queryexecution is to maximize parallelism while fetching data from the crowd (to keep latencylow); but only when the parallelism will not issue too many tasks (which would increasecost). Meeting this objective requires a number of changes from traditional query execution.First; Deco's query processor uses a hybrid execution model; which respects Deco …,*,2012,12
The SIGMOD 2010 Programming Contest: A Distributed Query Engine,Clément Genzmer; Volker Hudlet; Hyunjung Park; Daniel Schall; Pierre Senellart,Abstract We report on the second annual ACM SIGMOD programming contest; whichconsisted in building an efficient distributed query engine on top of an in-memory index. Thisarticle is co-authored by the organizers of the competition (Clément Genzmer; PierreSenellart) and the students who built the two leading implementations (Volker Hudlet;Hyunjung Park; Daniel Schall).,ACM SIGMOD Record,2010,6
Trio-ER: The Trio system as a workbench for entity-resolution,Parag Agrawal; Robert Ikeda; Hyunjung Park; Jennifer Widom,Entity-resolution was one of the original motivating applications for the Trio system; whichhas been under development at Stanford over the past several years. Trio-ER is a newvariant of the Trio system tailored specifically as a workbench for entity-resolution. Trio-ERenables rapid prototyping of an important basic class of entity-resolution algorithms. Webegin by showing several new (and some old) constructs in Trio's data model and querylanguage; and how they enable easy specification and refinement of entity-resolutionmatching and merging. We then show how iterative entity-resolution algorithms areperformed using Trio; how Trio's lineage capabilities are integral to the process; and howconfidence values are incorporated at several levels.,*,2009,5
A Demonstration of SQLVM: Performance Isolation in Multi-Tenant Relational Database-as-a-Service,Vivek Narasayya; Sudipto Das; Manoj Syamala; Surajit Chaudhuri; Feng Li; Hyunjung Park,Abstract Sharing resources of a single database server among multiple tenants is commonin multi-tenant Database-as-a-Service providers; such as Microsoft SQL Azure. Multi-tenancy enables cost reduction for the cloud service provider which it can pass on assavings to the tenants. However; resource sharing can adversely affect a tenant'sperformance due to other tenants' workloads contending for shared resources. Serviceproviders today do not provide any assurances to a tenant in terms of isolating itsperformance from other co-located tenants. SQLVM; a project at Microsoft Research; is anabstraction for performance isolation which is built on a promise of reserving key databaseserver resources; such as CPU; I/O and memory; for each tenant. The key challenge is insupporting this abstraction within a RDBMS without statically allocating resources to …,ACM SIGMOD International Conference on Management of Data,2013,4
Automatic Workload Driven Index Defragmentation,Vivek Narasayya; Hyunjung Park; Manoj Syamala,ABSTRACT Queries that scan a B-Tree index can suffer significant I/O performancedegradation due to index fragmentation. The task of determining if an index should bedefragmented is challenging for database administrators (DBAs) since today's databaseengines offer no support for quantifying the impact of defragmenting an index on query I/Operformance. Furthermore; DBMSs only support defragmentation at the granularity of anentire B-Tree; which can be very restrictive since defragmentation is an expensive operationand workloads typically access different ranges of an index non-uniformly. We havedeveloped techniques to address the above two challenges; and implemented a prototypeof automatic workload driven index defragmentation functionality in Microsoft SQL Server.We demonstrate this functionality by showing (a) how the system tracks the potential …,37th International Conference on Very Large Data Bases (VLDB),2011,4
CrowdFill: A System for Collecting Structured Data from the Crowd,Hyunjung Park; Jennifer Widom,Abstract CrowdFill is a system for collecting structured data from the crowd. Unlike a typicalmicrotask-based approach; CrowdFill shows an entire partially-filled table to all participatingworkers; workers collaboratively complete the table by filling in empty cells; as well asupvoting and downvoting data entered by other workers; using CrowdFill's intuitive dataentry interface. CrowdFill ensures data entry is leading to a final table that satisfiesprespecified constraints; and its compensation scheme encourages workers to submituseful; high-quality work. We demonstrate how CrowdFill collects structured data from thecrowd; from the perspective of a user as well as from the perspective of workers.,23rd International World Wide Web Conference (WWW),2014,2
Isolating Resources and Performance in a Database Management System,*,Techniques for tenant performance isolation in a multiple-tenant database managementsystem are described. These techniques may include providing a reservation of serverresources. The server resources reservation may include a reservation of a centralprocessing unit (CPU); a reservation of Input/Output throughput; and/or a reservation ofbuffer pool memory or working memory. The techniques may also include a meteringmechanism that determines whether the resource reservation is satisfied. The meteringmechanism may be independent of an actual resource allocation mechanism associatedwith the server resource reservation.,*,2013,2
Crowdsourcing Structured Data,Hyunjung Park,Crowdsourcing can be used to incorporate human computation into a variety of data-intensive tasks that are difficult for computers alone to solve well. Crowd-powered algorithmstreat humans as processing units; while crowdsourced data uses humans as a data source.We present two different approaches to the second problem: collecting data from the crowd.We first present Deco; a system for" declarative crowdsourcing." Given a declarative queryposed over a relational database; Deco uses the microtask approach to ask specificquestions to the crowd; augmenting existing data to produce the query result. After brieflydescribing Deco's data model and query language; we focus on how Deco's queryexecution engine and query optimizer work together to produce high-quality query resultswhile minimizing monetary cost and reducing latency. Second; we present CrowdFill; an …,*,2014,*
Online and Workload Driven Index Defragmentation,*,The subject disclosure is directed towards defragmenting one or more ranges of a databaseindex based upon actual usage statistics and policy. A range tracker tracks and usesstatistics corresponding to actual I/O operations to determine whether the benefit ofdefragmenting a range sufficiently (based upon the policy) exceeds its cost. If so; the onlinerange defragmenter automatically defragments the range in an online manner. The rangetracker may be configurable to monitor less than all ranges of the index.,*,2012,*
