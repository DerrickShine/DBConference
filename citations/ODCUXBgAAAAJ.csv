AppsPlayground: Automatic Security Analysis of Smartphone Applications,Vaibhav Rastogi; Yan Chen; William Enck,Abstract Today's smartphone application markets host an ever increasing number ofapplications. The sheer number of applications makes their review a daunting task. Wepropose AppsPlayground for Android; a framework that automates the analysis smartphoneapplications. AppsPlayground integrates multiple components comprising different detectionand automatic exploration techniques for this purpose. We evaluated the system usingmultiple large scale and small scale experiments involving real benign and maliciousapplications. Our evaluation shows that AppsPlayground is quite effective at automaticallydetecting privacy leaks and malicious functionality in applications.,Proceedings of the third ACM conference on Data and application security and privacy,2013,291
Droidchameleon: Evaluating Android Anti-malware against Transformation Attacks,Vaibhav Rastogi; Yan Chen; Xuxian Jiang,Abstract Mobile malware threats have recently become a real concern. In this paper; weevaluate the state-of-the-art commercial mobile antimalware products for Android and testhow resistant they are against various common obfuscation techniques (even with knownmalware). Such an evaluation is important for not only measuring the available defenseagainst mobile malware threats but also proposing effective; next-generation solutions. Wedeveloped DroidChameleon; a systematic framework with various transformationtechniques; and used it for our study. Our results on ten popular commercial anti-malwareapplications for Android are worrisome: none of these tools is resistant against commonmalware transformation techniques. Moreover; the transformations are simple in most casesand anti-malware tools make little effort to provide transformation-resilient detection …,Proceedings of the 8th ACM SIGSAC symposium on Information; computer and communications security,2013,223
Catch Me if You Can: Evaluating Android Anti-malware against Transformation Attacks,Vaibhav Rastogi; Yan Chen; Xuxian Jiang,Mobile malware threats (eg; on Android) have recently become a real concern. In this paper;we evaluate the state-of-the-art commercial mobile anti-malware products for Android andtest how resistant they are against various common obfuscation techniques (even withknown malware). Such an evaluation is important for not only measuring the availabledefense against mobile malware threats; but also proposing effective; next-generationsolutions. We developed DroidChameleon; a systematic framework with varioustransformation techniques; and used it for our study. Our results on 10 popular commercialanti-malware applications for Android are worrisome: none of these tools is resistant againstcommon malware transformation techniques. In addition; a majority of them can be triviallydefeated by applying slight transformation over known malware with little effort for …,IEEE Transactions on Information Forensics and Security,2014,100
Autocog: Measuring the description-to-permission fidelity in android applications,Zhengyang Qu; Vaibhav Rastogi; Xinyi Zhang; Yan Chen; Tiantian Zhu; Zhong Chen,Abstract The booming popularity of smartphones is partly a result of application marketswhere users can easily download wide range of third-party applications. However; due tothe open nature of markets; especially on Android; there have been several privacy andsecurity concerns with these applications. On Google Play; as with most other markets; usershave direct access to natural-language descriptions of those applications; which give anintuitive idea of the functionality including the security-related information of thoseapplications. Google Play also provides the permissions requested by applications toaccess security and privacy-sensitive APIs on the devices. Users may use such a list toevaluate the risks of using these applications. To best assist the end users; the descriptionsshould reflect the need for permissions; which we term description-to-permission fidelity …,Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security,2014,84
WebShield: Enabling Various Web Defense Techniques without Client Side Modifications.,Zhichun Li; Yi Tang; Yinzhi Cao; Vaibhav Rastogi; Yan Chen; Bin Liu; Clint Sbisa,Abstract Today; web attacks are increasing in frequency; severity and sophistication.Existing solutions are either hostbased which suffer deployment problems or middleboxapproaches that can only accommodate certain security protection mechanisms with limitedprotection. In this paper; we propose four design principles for general middleboxframeworks of web protection; and apply these principles to design WebShield; which canenable various host-based security mechanisms. In particular; we run all the JavaScript fromremote web servers only at shadow browser instances inside the middlebox; and only runour trusted JavaScript rendering agent at client browsers. The trusted rendering agent turnsbrowsers into a thin web terminal by reconstructing the encoded DOM of a webpage. Weimplement a prototype of WebShield. Evaluation demonstrates that a general JavaScript …,NDSS,2011,31
Detecting Hidden Attacks through the Mobile App-Web Interfaces,Vaibhav Rastogi; Rui Shao; Yan Chen; Xiang Pan; Shihong Zou; Ryan Riley,Abstract Mobile users are increasingly becoming targets of malware infections and scams.Some platforms; such as Android; are more open than others and are therefore easier toexploit than other platforms. In order to curb such attacks it is important to know how theseattacks originate. We take a previously unexplored step in this direction and look for theanswer at the interface between mobile apps and the Web. Numerous in-appadvertisements work at this interface: when the user taps on an advertisement; she is led toa web page which may further redirect until the user reaches the final destination. Similarly;applications also embed web links that again lead to the outside Web. Even though theoriginal application may not be malicious; the Web destinations that the user visits couldplay an important role in propagating attacks.,*,2016,19
Uranine: Real-time privacy leakage monitoring without system modification for android,Vaibhav Rastogi; Zhengyang Qu; Jedidiah McClurg; Yinzhi Cao; Yan Chen,Abstract Mobile devices are becoming increasingly popular. One reason for their popularityis the availability of a wide range of third-party applications; which enrich the environmentand increase usability. There are however privacy concerns centered around theseapplications–users do not know what private data is leaked by the applications. Previousworks to detect privacy leakages are either not accurate enough or require operating systemchanges; which may not be possible due to users' lack of skills or locked devices. Wepresent Uranine (Uranine is a dye; which finds applications as a flow tracer in medicine andenvironmental studies.); a system that instruments Android applications to detect privacyleakages in real-time. Uranine does not require any platform modification nor does it needthe application source code. We designed several mechanisms to overcome the …,International Conference on Security and Privacy in Communication Systems,2015,15
Virtual browser: a virtualized browser to sandbox third-party javascripts with enhanced security,Yinzhi Cao; Zhichun Li; Vaibhav Rastogi; Yan Chen; Xitao Wen,Abstract Third party JavaScripts not only offer much richer features to the web and itsapplications but also introduce new threats. These scripts cannot be completely trusted andexecuted with the privileges given to host web sites. Due to incomplete virtualization andlack of tracking all the data flows; all existing approaches without native sandbox supportcan secure only a subset of third party JavaScripts; and they are vulnerable to attacksencoded in non-standard HTML/-JavaScript (browser quirks) as these approaches will parsethird party JavaScripts independently at server side without considering client-side non-standard parsing quirks. At the same time; native sandboxes are vulnerable to attacks basedon unknown native JavaScript engine bugs. In this paper; we propose Virtual Browser; a fullbrowser-level virtualized environment within existing browsers for executing untrusted …,Proceedings of the 7th ACM Symposium on Information; Computer and Communications Security,2012,15
Vetting SSL usage in applications with SSLint,Boyuan He; Vaibhav Rastogi; Yinzhi Cao; Yan Chen; VN Venkatakrishnan; Runqing Yang; Zhenrui Zhang,Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols have become thesecurity backbone of the Web and Internet today. Many systems including mobile anddesktop applications are protected by SSL/TLS protocols against network attacks. However;many vulnerabilities caused by incorrect use of SSL/TLS APIs have been uncovered inrecent years. Such vulnerabilities; many of which are caused due to poor API design andinexperience of application developers; often lead to confidential data leakage or man-in-the-middle attacks. In this paper; to guarantee code quality and logic correctness of SSL/TLSapplications; we design and implement SSLINT; a scalable; automated; static analysissystem for detecting incorrect use of SSL/TLS APIs. SSLINT is capable of performingautomatic logic verification with high efficiency and good accuracy. To demonstrate it; we …,Security and Privacy (SP); 2015 IEEE Symposium on,2015,14
Redefining web browser principals with a configurable origin policy,Yinzhi Cao; Vaibhav Rastogi; Zhichun Li; Yan Chen; Alexander Moshchuk,With the advent of Web 2.0; web developers have designed multiple additions to break SOPboundary; such as splitting and combining traditional web browser protection boundaries(security principals). However; these newly generated principals lack a new label torepresent its security property. To address the inconsistent label problem; this paperproposes a new way to define a security principal and its labels in the browser. In particular;we propose a Configurable Origin Policy (COP); in which a browser's security principal isdefined by a configurable ID rather than a fixed triple<; scheme; host; port>. The server-sideand client-side code of a web application can create; join; and destroy its own principals. Weperform a formal security analysis on COP to ensure session integrity. Then we also showthat COP is compatible with legacy web sites; and those sites utilizing COP are also …,Dependable Systems and Networks (DSN); 2013 43rd Annual IEEE/IFIP International Conference on,2013,13
Evaluating Android Anti-malware against Transformation Attacks,Vaibhav Rastogi; Yan Chen; Xuxian Jiang,Abstract Mobile malware threats (eg; on Android) have recently become a real concern. Inthis paper; we evaluate the state-of-the-art commercial mobile anti-malware products forAndroid and test how resistant they are against various common obfuscation techniques(even with known malware). Such an evaluation is important for not only measuring theavailable defense against mobile malware threats but also proposing effective; next-generation solutions. We developed DroidChameleon; a systematic framework with varioustransformation techniques; and used it for our study. Our results on ten popular commercialanti-malware applications for Android are worrisome: none of these tools is resistant againstcommon malware transformation techniques. Moreover; a majority of them can be triviallydefeated by applying slight transformation over known malware with little effort for …,*,2013,9
DroidNative: Automating and optimizing detection of Android native code malware variants,Shahid Alam; Zhengyang Qu; Ryan Riley; Yan Chen; Vaibhav Rastogi,Abstract According to the Symantec and F-Secure threat reports; mobile malwaredevelopment in 2013 and 2014 has continued to focus almost exclusively (~ 99%) on theAndroid platform. Malware writers are applying stealthy mutations (obfuscations) to createmalware variants; thwarting detection by signature-based detectors. In addition; the plethoraof more sophisticated detectors making use of static analysis techniques to detect suchvariants operate only at the bytecode level; meaning that malware embedded in native codegoes undetected. A recent study shows that 86% of the most popular Android applicationscontain native code; making native code malware a plausible threat vector. This paperproposes DroidNative; an Android malware detector that uses specific control flow patternsto reduce the effect of obfuscations and provides automation. As far as we know …,computers & security,2017,8
Virtual browser: a web-level sandbox to secure third-party JavaScript without sacrificing functionality,Yinzhi Cao; Zhichun Li; Vaibhav Rastogi; Yan Chen,Abstract Third-party JavaScript offers much more diversity to Web and its applications butalso introduces new threats. Those scripts cannot be completely trusted and executed withthe privileges given to host web sites. Due to incomplete virtualization and lack of tracking allthe data flows; all the existing works in this area can secure only a subset of third-partyJavaScript. At the same time; because of the existence of not so well documented browserquirks; attacks may be encoded in non standard HTML/JavaScript so that they can bypassexisting approaches as these approaches will parse third-party JavaScript twice; at bothserver and client side. In this paper; we propose Virtual Browser; a completely virtualizedenvironment within existing browsers for executing untrusted third-party code. We securecomplete JavaScript; including all the hard-to-secure functions of JavaScript programs …,Proceedings of the 17th ACM conference on Computer and communications security,2010,8
Measurements in OLPC mesh networks,Vaibhav Rastogi; Vinay J Ribeiro; Aditya D Nayar,The ease of deployment and the self configurable aspect of wireless mesh networks hasgenerated lot of interest in them during the recent years. The One Laptop per Child (OLPC)project uses mesh networking; closely adhering to IEEE 802.11 s WLAN mesh standard; toprovide networking in a classroom environment. Our work measures and analyzes theperformance of OLPC mesh networks. It includes several experiments concerningperformance of UDP and TCP across a range of network topologies. Our experimentsprovide useful information about several aspects of these networks; including connectivityrange; effect of RTS/CTS and Tx/Rx capabilities.,Modeling and Optimization in Mobile; Ad Hoc; and Wireless Networks; 2009. WiOPT 2009. 7th International Symposium on,2009,5
All your Google and Facebook logins are belong to us: A case for single sign-off,Vaibhav Rastogi; Ankit Agrawal,The websites of the modern Web integrate content from multiple parties to provide anenriched user experience. The so-called single sign-on forms part of this integrationwhereby a relying website enables a user to use her credentials on a third-party provider(such as Google or Facebook) to authenticate with itself and; if desired; authorize itself touse her resources on the provider. The user benefits by not remembering credentials fordifferent websites separately and by allowing controlled use of her resources with a providerby other website. However; we observe that the current protocols for single sign-on do nothave any provision of what we call single sign-off: once the user logs out of a relyingwebsite; the user still remains signed into the provider website. This can leave the uservulnerable if she forgets to sign out of the provider website after signing out of the relying …,Contemporary Computing (IC3); 2015 Eighth International Conference on,2015,3
Cimplifier: automatically debloating containers,Vaibhav Rastogi; Drew Davidson; Lorenzo De Carli; Somesh Jha; Patrick McDaniel,Abstract Application containers; such as those provided by Docker; have recently gainedpopularity as a solution for agile and seamless software deployment. These light-weightvirtualization environments run applications that are packed together with their resourcesand configuration information; and thus can be deployed across various software platforms.Unfortunately; the ease with which containers can be created is oftentimes a double-edgedsword; encouraging the packaging of logically distinct applications; and the inclusion ofsignificant amount of unnecessary components; within a single container. These practicesneedlessly increase the container sizeâ sometimes by orders of magnitude. They alsodecrease the overall security; as each included componentâ necessary or notâ may bring insecurity issues of its own; and there is no isolation between multiple applications …,Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering,2017,2
System and method for determining description-to-permission fidelity in mobile applications,*,Modern operating systems such as mobile; iOS; and Windows 8 have brought about the adventof big; centralized application stores that host third-party applications for users to view andinstall. Google Play; the official application store for mobile; hosts both free and paid applicationstogether with a variety of metadata including the title and description; reviews; ratings; and soon. Additionally; it also provides the user with the ability to study the permissions requested byan application … In association with the following detailed description; reference is made tothe accompanying drawings; where like numerals in different figures can refer to the sameelement … FIG. 1 is an exemplary architecture for the system and method … FIG. 2 is an exemplaryoutput of a parser … FIG. 3 is a flowchart of an exemplary description-to-permission relatednessconstruction … FIG. 4 is an exemplary interpretation of metrics in evaluation.,*,2015,2
Appshield: Enabling multi-entity access control cross platforms for mobile app management,Zhengyang Qu; Guanyu Guo; Zhengyue Shao; Vaibhav Rastogi; Yan Chen; Hao Chen; Wangjun Hong,Abstract Bring-your-own-device (BYOD) is getting popular. Diverse personal devices areused to access enterprise resources; and deployment of the solutions with customizedoperating system (OS) dependency will thus be restricted. Moreover; device utilization forboth business and personal purposes creates new threats involving leakage of sensitivedata. As for functionalities; a BYOD solution should isolate an arbitrary number of entities;such as those relating to business and personal uses and provide fine-grained accesscontrol on multi-entity management. Existing BYOD solutions lack in these aspects; wepropose a system; called AppShield; which supports multi-entity management and role-based access control with file-level granularity; apart from local data sharing/isolation.AppShield includes (1) application rewriting framework for Android apps; which builds …,International Conference on Security and Privacy in Communication Systems,2016,1
New Directions for Container Debloating,Vaibhav Rastogi; Chaitra Niddodi; Sibin Mohan; Somesh Jha,Abstract Application containers; such as Docker containers; are light-weight virtualizationenvironments that" contain" applications together with their resources and configurationinformation. While they are becoming increasingly popular as a method for agile softwaredeployment; current techniques for preparing containers add unnecessary bloat into them:they often include unneeded files that increase the container size by several orders ofmagnitude. This not only leads to storage and network transfer issues but also securityconcerns. The problem is well-recognized but available solutions are mostly ad-hoc and notlargely deployed. Our previous work; Cimplifier; on debloating containers uses dynamicanalysis to identify the resources necessary to a container and then debloat it. However; thedynamic analysis uses model executions or test runs; which if incomplete; may not allow …,Proceedings of the 2017 Workshop on Forming an Ecosystem Around Software Transformation,2017,*
System and method for proxy-based data access mechanism in enterprise mobility management,*,A system and method include a shield application executing on a processor. The shieldapplication can convert a business application to provide data isolation between thebusiness application and personal applications; and data sharing between the businessapplication and other business applications; eg; in the bring-your-own-device and enterprisemobility management scenarios.,*,2017,*
System and Method for Privacy Leakage Detection and Prevention System without Operating System Modification,*,A system and method detect privacy leaks in applications of an operating system of a mobiledevice. An instrumentation module permits tracking of privacy-sensitive information without modificationof a middleware of the operating system and a process virtual machine … This application claimspriority benefit from US Provisional Application Ser. No. 61/936;934; which was filed on Feb.7; 2014; which is incorporated by reference in its entirety … Mobile computing is becomingincreasingly popular with the advent of smartphones and tablets. Third party applications canplay an important role in the mobile computing ecosystem by providing enriched functionalityand enhanced user experience. Unfortunately; some of these applications may be maliciousor may not operate according to users' expectations … FIGS. 1A and 1B are block diagramsof exemplary device information leakage detection and prevention systems.,*,2015,*
Abusing Browser Address Bar for Fun and Profit-An Empirical Investigation of Add-on Cross Site Scripting Attacks,Yinzhi Cao; Chao Yang; Vaibhav Rastogi; Yan Chen; Guofei Gu,Abstract Add-on JavaScript originating from users' inputs to the browser brings newfunctionalities such as debugging and entertainment; however it also leads to a new type ofcross-site scripting attack (defined as add-on XSS by us); which consists of two parts: asnippet of JavaScript in clear text; and a spamming sentence enticing benign users to inputthe previous JavaScript. In this paper; we focus on the most common add-on XSS; the onecaused by browser address bar JavaScript. To measure the severity; we conduct threeexperiments:(i) analysis on real-world traces from two large social networks;(ii) a user studyby means of recruiting Amazon Mechanical Turks [4]; and (iii) a Facebook experiment with afake account. We believe as the first systematic and scientific study; our paper can ring a bellfor all the browser vendors and shed a light for future researchers to find an appropriate …,International Conference on Security and Privacy in Communication Systems,2014,*
Enhancing Android Security through App Splitting,Drew Davidson; Vaibhav Rastogi; Mihai Christodorescu; Somesh Jha,Abstract. The Android operating system provides a rich security model that specifies over100 distinct permissions. Before performing a sensitive operation; an app must obtain thecorresponding permission through a request to the user. Unfortunately; an app is treated asan opaque; monolithic security principal; which is granted or denied permission as a whole.This blunts the effectiveness of the permissions model. Even the recent enhancements inAndroid do not account for the interactions between multiple permissions or for multiple usesof a single permission for disparate functionality. We describe app splitting; a technique thatpartitions a monolithic Android app into a number of collaborating minion apps. Thistechnique exposes information flows inside an application to OS-level mediationmechanisms to allow more expressive security and privacy policies. We implement app …,*,*,*
