MapReduce online.,Tyson Condie; Neil Conway; Peter Alvaro; Joseph M Hellerstein; Khaled Elmeleegy; Russell Sears,Abstract MapReduce is a popular framework for data-intensive distributed computing ofbatch jobs. To simplify fault tolerance; many implementations of MapReduce materialize theentire output of each map and reduce task before it can be consumed. In this paper; wepropose a modified MapReduce architecture that allows data to be pipelined betweenoperators. This extends the MapReduce programming model beyond batch processing; andcan reduce completion times and improve system utilization for batch jobs as well. Wepresent a modified version of the Hadoop MapReduce framework that supports onlineaggregation; which allows users to see “early returns” from a job as it is being computed.Our Hadoop Online Prototype (HOP) also supports continuous queries; which enableMapReduce programs to be written for applications such as event monitoring and stream …,Nsdi,2010,899
Implementing declarative overlays,Boon Thau Loo; Tyson Condie; Joseph M Hellerstein; Petros Maniatis; Timothy Roscoe; Ion Stoica,Abstract Overlay networks are used today in a variety of distributed systems ranging from file-sharing and storage systems to communication infrastructures. However; designing; buildingand adapting these overlays to the intended application and the target environment is adifficult and time consuming process. To ease the development and the deployment of suchoverlay networks we have implemented P2; a system that uses a declarative logic languageto express overlay networks in a highly compact and reusable form. P2 can express aNarada-style mesh network in 16 rules; and the Chord structured overlay in only 47 rules. P2directly parses and executes such specifications using a dataflow architecture to constructand maintain overlay networks. We describe the P2 approach; how our implementationworks; and show by experiment its promising trade-off point between specification …,ACM SIGOPS Operating Systems Review,2005,422
ROFL: routing on flat labels,Matthew Caesar; Tyson Condie; Jayanthkumar Kannan; Karthik Lakshminarayanan; Ion Stoica; Scott Shenker,Abstract It is accepted wisdom that the current Internet architecture conflates networklocations and host identities; but there is no agreement on how a future architecture shoulddistinguish the two. One could sidestep this quandary by routing directly on host identitiesthemselves; and eliminating the need for network-layer protocols to include any mention ofnetwork location. The key to achieving this is the ability to route on flat labels. In this paperwe take an initial stab at this challenge; proposing and analyzing our ROFL routingalgorithm. While its scaling and efficiency properties are far from ideal; our results suggestthat the idea of routing on flat labels cannot be immediately dismissed.,ACM SIGCOMM Computer Communication Review,2006,401
Declarative networking: language; execution and optimization,Boon Thau Loo; Tyson Condie; Minos Garofalakis; David E Gay; Joseph M Hellerstein; Petros Maniatis; Raghu Ramakrishnan; Timothy Roscoe; Ion Stoica,Abstract The networking and distributed systems communities have recently explored avariety of new network architectures; both for application-level overlay networks; and asprototypes for a next-generation Internet architecture. In this context; we have investigateddeclarative networking: the use of a distributed recursive query engine as a powerful vehiclefor accelerating innovation in network architectures [23; 24; 33]. Declarative networkingrepresents a significant new application area for database research on recursive queryprocessing. In this paper; we address fundamental database issues in this domain. First; wemotivate and formally define the Network Datalog (NDlog) language for declarative networkspecifications. Second; we introduce and prove correct relaxed versions of the traditionalsemi-naïve query evaluation technique; to overcome fundamental problems of the …,Proceedings of the 2006 ACM SIGMOD international conference on Management of data,2006,280
LSH forest: self-tuning indexes for similarity search,Mayank Bawa; Tyson Condie; Prasanna Ganesan,Abstract We consider the problem of indexing high-dimensional data for answering(approximate) similarity-search queries. Similarity indexes prove to be important in a widevariety of settings: Web search engines desire fast; parallel; main-memory-based indexes forsimilarity search on text data; database systems desire disk-based similarity indexes for high-dimensional data; including text and images; peer-to-peer systems desire distributedsimilarity indexes with low communication cost. We propose an indexing scheme called LSHForest which is applicable in all the above contexts. Our index uses the well-knowntechnique of locality-sensitive hashing (LSH); but improves upon previous designs by (a)eliminating the different data-dependent parameters for which LSH must be constantly hand-tuned; and (b) improving on LSH's performance guarantees for skewed data distributions …,Proceedings of the 14th international conference on World Wide Web,2005,266
Simulating a file-sharing p2p network,Mario Schlosser; Tyson Condie; Sepandar Kamvar,Assessing the performance of peer-to-peer algorithms is impossible without simulationssince testing new algorithms by deploying them in an existing P2P network is prohibitivelyexpensive. However; some P2P algorithms are sensitive to the network and traffic modelsthat are used in the simulations. In order to produce realistic results; we therefore requiresimultations that resemble real-world P2P networks as closely as possible. We describe theQuery Cycle Simulator; a simulator for file-sharing P2P networks. We link the Query-CycleSimulator to measurements on existing P2P networks and discuss open issues in simulatingthese networks.,*,2003,237
Declarative networking,Boon Thau Loo; Tyson Condie; Minos Garofalakis; David E Gay; Joseph M Hellerstein; Petros Maniatis; Raghu Ramakrishnan; Timothy Roscoe; Ion Stoica,Abstract Declarative Networking is a programming methodology that enables developers toconcisely specify network protocols and services; which are directly compiled to a dataflowframework that executes the specifications. This paper provides an introduction to basicissues in declarative networking; including language design; optimization; and dataflowexecution. We present the intuition behind declarative programming of networks; includingroots in Datalog; extensions for networked environments; and the semantics of long-runningqueries over network state. We focus on a sublanguage we call Network Datalog (NDlog);including execution strategies that provide crisp eventual consistency semantics withsignificant flexibility in execution. We also describe a more general language called Overlog;which makes some compromises between expressive richness and semantic guarantees …,Communications of the ACM,2009,170
Online aggregation and continuous query support in mapreduce,Tyson Condie; Neil Conway; Peter Alvaro; Joseph M Hellerstein; John Gerth; Justin Talbot; Khaled Elmeleegy; Russell Sears,Abstract MapReduce is a popular framework for data-intensive distributed computing ofbatch jobs. To simplify fault tolerance; the output of each MapReduce task and job ismaterialized to disk before it is consumed. In this demonstration; we describe a modifiedMapReduce architecture that allows data to be pipelined between operators. This extendsthe MapReduce programming model beyond batch processing; and can reduce completiontimes and improve system utilization for batch jobs as well. We demonstrate a modifiedversion of the Hadoop MapReduce framework that supports online aggregation; whichallows users to see" early returns" from a job as it is being computed. Our Hadoop OnlinePrototype (HOP) also supports continuous queries; which enable MapReduce programs tobe written for applications such as event monitoring and stream processing. HOP retains …,Proceedings of the 2010 ACM SIGMOD International Conference on Management of data,2010,164
Online aggregation for large mapreduce jobs,Niketan Pansare; Vinayak R Borkar; Chris Jermaine; Tyson Condie,ABSTRACT In online aggregation; a database system processes a user's aggregation queryin an online fashion. At all times during processing; the system gives the user an estimate ofthe final query result; with the confidence bounds that become tighter over time. In thispaper; we consider how online aggregation can be built into a MapReduce system for large-scale data processing. Given the MapReduce paradigm's close relationship with cloudcomputing (in that one might expect a large fraction of MapReduce jobs to be run in thecloud); online aggregation is a very attractive technology. Since large-scale cloudcomputations are typically pay-as-you-go; a user can monitor the accuracy obtained in anonline fashion; and then save money by killing the computation early once sufficientaccuracy has been obtained.,Proc. VLDB Endow,2011,141
Boom analytics: exploring data-centric; declarative programming for the cloud,Peter Alvaro; Tyson Condie; Neil Conway; Khaled Elmeleegy; Joseph M Hellerstein; Russell Sears,Abstract Building and debugging distributed software remains extremely difficult. Weconjecture that by adopting a data-centric approach to system design and by employingdeclarative programming languages; a broad range of distributed software can be recastnaturally in a data-parallel programming model. Our hope is that this model can significantlyraise the level of abstraction for programmers; improving code simplicity; speed ofdevelopment; ease of software evolution; and program correctness. This paper presents ourexperience with an initial large-scale experiment in this direction. First; we used the Overloglanguage to implement a" Big Data" analytics stack that is API-compatible with Hadoop andHDFS and provides comparable performance. Second; we extended the system withcomplex distributed features not yet available in Hadoop; including high availability …,Proceedings of the 5th European conference on Computer systems,2010,128
Adaptive peer-to-peer topologies,Tyson Condie; Sepandar D Kamvar; Hector Garcia-Molina,We present a peer-level protocol for forming adaptive; self-organizing topologies for data-sharing P2P networks. This protocol is based on the idea that a peer should directly connectto those peers from which it is most likely to download satisfactory content. We show that theresulting topologies are more efficient than standard Gnutella topologies. Furthermore; weshow that these adaptive topologies have the added benefits of increased resistance tocertain types of attacks; intrinsic rewards for active peers and punishments for maliciouspeers and free riders.,Peer-to-Peer Computing; 2004. Proceedings. Proceedings. Fourth International Conference on,2004,105
Induced Churn as Shelter from Routing-Table Poisoning.,Tyson Condie; Varun Kacholia; Sriram Sank; Joseph M Hellerstein; Petros Maniatis,Abstract Structured overlays are an important and powerful class of overlay networks thathas emerged in recent years. They are typically targeted at peer-to-peer deploymentsinvolving millions of user-managed machines on the Internet. In this paper we addressrouting-table poisoning attacks against structured overlays; in which adversaries attempt tointercept traffic and control the system by convincing other nodes to use compromised nodesas their overlay network neighbors. In keeping with the fully-decentralized goals ofstructured overlay design; we propose a defense mechanism that makes minimal use ofcentralized infrastructure. Our approach; induced churn; utilizes periodic routing-tableresets; unpredictable identifier changes; and a rate limit on routing-table updates. Inducedchurn leaves adversaries at the mercy of chance: they have little opportunity to strategize …,NDSS,2006,85
Pregelix: Big (ger) graph analytics on a dataflow engine,Yingyi Bu; Vinayak Borkar; Jianfeng Jia; Michael J Carey; Tyson Condie,Abstract There is a growing need for distributed graph processing systems that are capableof gracefully scaling to very large graph datasets. Unfortunately; this challenge has not beeneasily met due to the intense memory pressure imposed by process-centric; messagepassing designs that many graph processing systems follow. Pregelix is a new open sourcedistributed graph processing system that is based on an iterative dataflow design that isbetter tuned to handle both in-memory and out-of-core workloads. As such; Pregelix offersimproved performance characteristics and scaling properties over current open sourcesystems (eg; we have seen up to 15X speedup compared to Apache Giraph and up to 35Xspeedup compared to distributed GraphLab); and more effective use of available machineresources to support Big (ger) Graph Analytics.,Proceedings of the VLDB Endowment,2014,71
Evita raced: metacompilation for declarative networks,Tyson Condie; David Chu; Joseph M Hellerstein; Petros Maniatis,Abstract Declarative languages have recently been proposed for many new applicationsoutside of traditional data management. Since these are relatively early research efforts; it isimportant that the architectures of these declarative systems be extensible; in order toaccommodate unforeseen needs in these new domains. In this paper; we apply the lessonsof declarative systems to the internals of a declarative engine. Specifically; we describe ourdesign and implementation of Evita Raced; an extensible compiler for the OverLoglanguage used in our declarative networking system; P2. Evita Raced is a metacompiler: anOverLog compiler written in OverLog. We describe the minimalist architecture of EvitaRaced; including its extensibility interfaces and its reuse of P2's data model and runtimeengine. We demonstrate that a declarative language like OverLog is well-suited to …,Proceedings of the VLDB Endowment,2008,56
Scaling datalog for machine learning on big data,Yingyi Bu; Vinayak Borkar; Michael J Carey; Joshua Rosen; Neoklis Polyzotis; Tyson Condie; Markus Weimer; Raghu Ramakrishnan,Abstract: In this paper; we present the case for a declarative foundation for data-intensivemachine learning systems. Instead of creating a new system for each specific flavor ofmachine learning task; or hardcoding new optimizations; we argue for the use of recursivequeries to program a variety of machine learning systems. By taking this approach; databasequery optimization techniques can be utilized to identify effective execution plans; and theresulting runtime plans can be executed on a single unified data-parallel query processingengine. As a proof of concept; we consider two programming models--Pregel and IterativeMap-Reduce-Update---from the machine learning domain; and show how they can becaptured in Datalog; tuned for a specific task; and then compiled into an optimized physicalplan. Experiments performed on a large computing cluster with real data demonstrate that …,arXiv preprint arXiv:1203.0160,2012,47
Machine learning on big data,Tyson Condie; Paul Mineiro; Neoklis Polyzotis; Markus Weimer,Statistical Machine Learning has undergone a phase transition from a pure academicendeavor to being one of the main drivers of modern commerce and science. Even more so;recent results such as those on tera-scale learning [1] and on very large neural networks [2]suggest that scale is an important ingredient in quality modeling. This tutorial introducescurrent applications; techniques and systems with the aim of cross-fertilizing researchbetween the database and machine learning communities. The tutorial covers current largescale applications of Machine Learning; their computational model and the workflow behindbuilding those. Based on this foundation; we present the current state-of-the-art in systemssupport in the bulk of the tutorial. We also identify critical gaps in the state-of-the-art. Thisleads to the closing of the seminar; where we introduce two sets of open research …,Data Engineering (ICDE); 2013 IEEE 29th International Conference on,2013,45
Titian: Data provenance support in spark,Matteo Interlandi; Kshitij Shah; Sai Deep Tetali; Muhammad Ali Gulzar; Seunghyun Yoo; Miryung Kim; Todd Millstein; Tyson Condie,Abstract Debugging data processing logic in Data-Intensive Scalable Computing (DISC)systems is a difficult and time consuming effort. Today's DISC systems offer very little toolingfor debugging programs; and as a result programmers spend countless hours collectingevidence (eg; from log files) and performing trial and error debugging. To aid this effort; webuilt Titian; a library that enables data provenance---tracking data through transformations---in Apache Spark. Data scientists using the Titian Spark extension will be able to quicklyidentify the input data at the root cause of a potential bug or outlier result. Titian is builtdirectly into the Spark platform and offers data provenance support at interactive speeds---orders-of-magnitude faster than alternative solutions---while minimally impacting Spark jobperformance; observed overheads for capturing data lineage rarely exceed 30% above …,Proceedings of the VLDB Endowment,2015,39
Iterative mapreduce for large scale machine learning,Joshua Rosen; Neoklis Polyzotis; Vinayak Borkar; Yingyi Bu; Michael J Carey; Markus Weimer; Tyson Condie; Raghu Ramakrishnan,Abstract: Large datasets (" Big Data") are becoming ubiquitous because the potential valuein deriving insights from data; across a wide range of business and scientific applications; isincreasingly recognized. In particular; machine learning-one of the foundational disciplinesfor data analysis; summarization and inference-on Big Data has become routine at mostorganizations that operate large clouds; usually based on systems such as Hadoop thatsupport the MapReduce programming paradigm. It is now widely recognized that whileMapReduce is highly scalable; it suffers from a critical weakness for machine learning: itdoes not support iteration. Consequently; one has to program around this limitation; leadingto fragile; inefficient code. Further; reliance on the programmer is inherently flawed in a multi-tenanted cloud environment; since the programmer does not have visibility into the state …,arXiv preprint arXiv:1303.3517,2013,37
I do declare: consensus in a logic language,Peter Alvaro; Tyson Condie; Neil Conway; Joseph M Hellerstein; Russell Sears,Abstract The Paxos consensus protocol can be specified concisely; but is notoriously difficultto implement in practice. We recount our experience building Paxos in Overlog; a distributeddeclarative programming language. We found that the Paxos algorithm is easily translated todeclarative logic; in large part because the primitives used in consensus protocolspecifications map directly to simple Overlog constructs such as aggregation and selection.We discuss the programming idioms that appear frequently in our implementation; and theapplicability of declarative programming to related application domains.,ACM SIGOPS Operating Systems Review,2010,34
Declarative Systems for Large-Scale Machine Learning.,Vinayak R Borkar; Yingyi Bu; Michael J Carey; Joshua Rosen; Neoklis Polyzotis; Tyson Condie; Markus Weimer; Raghu Ramakrishnan; G Dror; N Koenigstein,Abstract In this article; we make the case for a declarative foundation for data-intensivemachine learning systems. Instead of creating a new system for each specific flavor ofmachine learning task; or hardcoding new optimizations; we argue for the use of recursivequeries to program a variety of machine learning algorithms. By taking this approach;database query optimization techniques can be utilized to identify effective execution plans;and the resulting runtime plans can be executed on a single unified data-parallel queryprocessing engine.,IEEE Data Eng. Bull.,2012,32
Non-cooperation in competitive p2p networks,Beverly Yang; Tyson Condie; Sepandar Kamvar; Hector Garcia-Molina,Large-scale competitive P2P networks are threatened by the non-cooperation problem;where peers do not forward queries to potential competitors. Non-cooperation will be agrowing problem in such applications as pay-per-transaction file-sharing; P2P auctions; andP2P service discovery networks; where peers are in competition with each other to provideservices. Here; the authors showed how non-cooperation causes unacceptable degradationin quality of results; and present an economic protocol to address this problem. Thisprotocol; called the RTR protocol; is based on the buying and selling of the right-to-respond(RTR) to each query in the network. Through simulations it is shown how the RTR protocolnot only overcomes non-cooperation by providing proper incentives to peers; but alsoresults in a network that is even more effective and efficient through intelligent; incentive …,Distributed Computing Systems; 2005. ICDCS 2005. Proceedings. 25th IEEE International Conference on,2005,31
Reef: Retainable evaluator execution framework,Byung-Gon Chun; Tyson Condie; Carlo Curino; Chris Douglas; Sergiy Matusevych; Brandon Myers; Shravan Narayanamurthy; Raghu Ramakrishnan; Sriram Rao; Josh Rosen; Russell Sears; Markus Weimer,Abstract In this demo proposal; we describe REEF; a framework that makes it easy toimplement scalable; fault-tolerant runtime environments for a range of computationalmodels. We will demonstrate diverse workloads; including extract-transform-loadMapReduce jobs; iterative machine learning algorithms; and ad-hoc declarative queryprocessing. At its core; REEF builds atop YARN (Apache Hadoop 2's resource manager) toprovide retainable hardware resources with lifetimes that are decoupled from those ofcomputational tasks. This allows us to build persistent (cross-job) caches and cluster-wideservices; but; more importantly; supports high-performance iterative graph processing andmachine learning algorithms. Unlike existing systems; REEF aims for composability of jobsacross computational models; providing significant performance and usability gains; even …,Proceedings of the VLDB Endowment,2013,27
Machine learning in ScalOps; a higher order cloud computing language,Markus Weimer; Tyson Condie; Raghu Ramakrishnan,Machine learning practitioners are increasingly interested in applying their algorithms to BigData. Unfortunately; current high-level languages for data analytics in the cloud (eg;[2; 15;16; 5]) do not fully cover this domain. One key missing ingredient is means to expressiteration over the data (eg;[19]). Zaharia et al.; were the first to answer this call from asystems perspective with Spark [20]. Spark is built on a data abstraction called resilientdistributed datasets (RDDs) that reference immutable data collections. The Spark domain-specific language (DSL) defines standard relational algebra transformations—selection;join; group by; etc.—and mechanisms to cache RDDs in memory. The Spark runtime isoptimized for in-memory computation and has published speedups of 30× over HadoopMapReduce for many machine learning and graph algorithms; which is in line with the …,NIPS 2011 Workshop on parallel and large-scale machine learning (BigLearn),2011,26
BOOM: Data-centric programming in the datacenter,Peter Alvaro; Tyson Condie; Neil Conway; Khaled Elmeleegy; Joseph M Hellerstein; Russell C Sears,ABSTRACT Cloud computing makes datacenter clusters a commodity; potentially enabling awide range of programmers to develop new scalable services. However; current cloudplatforms do little to simplify truly distributed systems development. In this paper; we explorethe use of a declarative; data-centric programming model to achieve this simplicity. Wedescribe our experience using Overlog and Java to implement a “Big Data” analytics stackthat is API-compatible with Hadoop and HDFS; with equivalent performance. We extendedthe system with complex features not yet available in Hadoop; including availability;scalability; and unique monitoring and debugging facilities. We present our experience tovalidate the enhanced programmer productivity afforded by declarative programming; andinform the design of new development environments for distributed programming.,EECS Department; University of California; Berkeley; Tech. Rep. UCB/EECS-2009-113,2009,24
Big data analytics with datalog queries on spark,Alexander Shkapsky; Mohan Yang; Matteo Interlandi; Hsuan Chiu; Tyson Condie; Carlo Zaniolo,Abstract There is great interest in exploiting the opportunity provided by cloud computingplatforms for large-scale analytics. Among these platforms; Apache Spark is growing inpopularity for machine learning and graph analytics. Developing efficient complex analyticsin Spark requires deep understanding of both the algorithm at hand and the Spark API orsubsystem APIs (eg; Spark SQL; GraphX). Our BigDatalog system addresses the problem byproviding concise declarative specification of complex queries amenable to efficientevaluation. Towards this goal; we propose compilation and optimization techniques thattackle the important problem of efficiently supporting recursion in Spark. We perform anexperimental comparison with other state-of-the-art large-scale Datalog systems and verifythe efficacy of our techniques and effectiveness of Spark in supporting Datalog-based …,Proceedings of the 2016 International Conference on Management of Data,2016,23
Finally; a use for componentized transport protocols,Tyson Condie; Joseph M Hellerstein; Petros Maniatis; Sean Rheaand Timothy Roscoe,Abstract This paper argues a new relevance for an old idea: decomposing transportprotocols into a set of resuable building blocks that can be recomposed in different waysdepending on application requirements. We conjecture that point-to-point applications maywell be adequately served by the existing suite of monolithic protocol implementations; butwidely-distributed peer-to-peer systems such as overlays are not: the design space oftransport protocols between nodes in a large; highly coordinated system is much larger. Weprovide several examples of existing systems that have implemented a diverse range oftransport protocols; and show how a building-block approach covers these systems well;enabling simple specification of hybrids and variants of the protocols. In particular; we showhow all of our examples can be implemented in the networking stack of P2; a …,HotNets IV,2005,21
Bigdebug: Debugging primitives for interactive big data processing in spark,Muhammad Ali Gulzar; Matteo Interlandi; Seunghyun Yoo; Sai Deep Tetali; Tyson Condie; Todd Millstein; Miryung Kim,Abstract Developers use cloud computing platforms to process a large quantity of data inparallel when developing big data analytics. Debugging the massive parallel computationsthat run in today's datacenters is time consuming and error-prone. To address thischallenge; we design a set of interactive; real-time debugging primitives for big dataprocessing in Apache Spark; the next generation data-intensive scalable cloud computingplatform. This requires rethinking the notion of step-through debugging in a traditionaldebugger such as gdb; because pausing the entire computation across distributed workernodes causes significant delay and naively inspecting millions of records using a watchpointis too time consuming for an end user. First; B ig D ebug's simulated breakpoints and on-demand watchpoints allow users to selectively examine distributed; intermediate data on …,Proceedings of the 38th International Conference on Software Engineering,2016,19
Center of excellence for mobile sensor data-to-knowledge (MD2K),Santosh Kumar; Gregory D Abowd; William T Abraham; Mustafa al’Absi; J Gayle Beck; Duen Horng Chau; Tyson Condie; David E Conroy; Emre Ertin; Deborah Estrin; Deepak Ganesan; Cho Lam; Benjamin Marlin; Clay B Marsh; Susan A Murphy; Inbal Nahum-Shani; Kevin Patrick; James M Rehg; Moushumi Sharmin; Vivek Shetty; Ida Sim; Bonnie Spring; Mani Srivastava; David W Wetter,Abstract Mobile sensor data-to-knowledge (MD2K) was chosen as one of 11 Big DataCenters of Excellence by the National Institutes of Health; as part of its Big Data-to-Knowledge initiative. MD2K is developing innovative tools to streamline the collection;integration; management; visualization; analysis; and interpretation of health data generatedby mobile and wearable sensors. The goal of the big data solutions being developed byMD2K is to reliably quantify physical; biological; behavioral; social; and environmentalfactors that contribute to health and disease risk. The research conducted by MD2K istargeted at improving health through early detection of adverse health events and byfacilitating prevention. MD2K will make its tools; software; and training materials widelyavailable and will also organize workshops and seminars to encourage their use by …,Journal of the American Medical Informatics Association,2015,16
Programming and runtime support to blaze FPGA accelerator deployment at datacenter scale,Muhuan Huang; Di Wu; Cody Hao Yu; Zhenman Fang; Matteo Interlandi; Tyson Condie; Jason Cong,Abstract With the end of CPU core scaling due to dark silicon limitations; customizedaccelerators on FPGAs have gained increased attention in modern datacenters due to theirlower power; high performance and energy efficiency. Evidenced by Microsoft's FPGAdeployment in its Bing search engine and Intel's 16.7 billion acquisition of Altera; integratingFPGAs into datacenters is considered one of the most promising approaches to sustainfuture datacenter growth. However; it is quite challenging for existing big data computingsystems---like Apache Spark and Hadoop---to access the performance and energy benefitsof FPGA accelerators. In this paper we design and implement Blaze to provide programmingand runtime support for enabling easy and efficient deployments of FPGA accelerators indatacenters. In particular; Blaze abstracts FPGA accelerators as a service (FaaS) and …,Proceedings of the Seventh ACM Symposium on Cloud Computing,2016,14
Reef: Retainable evaluator execution framework,Markus Weimer; Yingda Chen; Byung-Gon Chun; Tyson Condie; Carlo Curino; Chris Douglas; Yunseong Lee; Tony Majestro; Dahlia Malkhi; Sergiy Matusevych; Brandon Myers; Shravan Narayanamurthy; Raghu Ramakrishnan; Sriram Rao; Russel Sears; Beysim Sezgin; Julia Wang,Abstract Resource Managers like Apache YARN have emerged as a critical layer in thecloud computing system stack; but the developer abstractions for leasing cluster resourcesand instantiating application logic are very low-level. This flexibility comes at a high cost interms of developer effort; as each application must repeatedly tackle the same challenges(eg; fault-tolerance; task scheduling and coordination) and re-implement commonmechanisms (eg; caching; bulk-data transfers). This paper presents REEF; a developmentframework that provides a control-plane for scheduling and coordinating task-level (data-plane) work on cluster resources obtained from a Resource Manager. REEF providesmechanisms that facilitate resource re-use for data caching; and state managementabstractions that greatly ease the development of elastic data processing work-flows on …,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,13
Maelstrom: Churn as shelter,Tyson Condie; Varun Kacholia; Sriram Sankararaman; Petros Maniatis; Joseph M Hellerstein,Abstract Structured overlays are an important and powerful class of overlay networks thathas emerged in recent years. They are typically targeted at peer-to-peer deploymentsinvolving millions of user-managed machines on the Internet. In this paper we addressrouting-table poisoning attacks against structured overlays; in which adversaries attempt tointercept traffic and control the system by convincing other nodes to use compromised nodesas their overlay network neighbors. In keeping with the fully-decentralized goals ofstructured overlay design; we propose a defense mechanism that makes minimal use ofcentralized infrastructure. Our approach; induced churn; utilizes periodic routing-tableresets; unpredictable identifier changes; and a rate limit on routing-table updates. Inducedchurn leaves adversaries at the mercy of chance: they have little opportunity to strategize …,University of California at Berkeley Technical Report No. UCB/EECS-2005-11 (November 2005),2005,13
Towards resource-elastic machine learning,Shravan Narayanamurthy; Markus Weimer; Dhruv Mahajan; Tyson Condie; Sundararajan Sellamanickam; S Sathiya Keerthi,The availability of powerful distributed data platforms and the widespread success ofMachine Learning (ML) has led to a virtuous cycle wherein organizations are investing ingathering a wider range of (even bigger!) datasets and addressing an even broader range oftasks. The Hadoop Distributed File System (HDFS) is being provisioned to capture anddurably store these datasets. Along side HDFS; resource managers like Mesos [10]; Corona[8] and YARN [16] enable the allocation of compute resources “near the data;” whereframeworks like REEF [3] can cache it and support fast iterative computations. Unfortunately;most ML algorithms are not tuned to operate on these new cloud platforms; where two newchallenges arise: 1) scale-up: the need to acquire more resources dedicated to a particularalgorithm; and 2) scale-down: the need to react to resource preemption. This paper …,NIPS 2013 BigLearn Workshop,2013,12
Public Health for the Internet φ Towards A New Grand Challenge for Information Management,Joseph M Hellerstein; Tyson Condie; Minos Garofalakis; Boon Thau Loo; Petros Maniatis; Timothy Roscoe; Nina A Taft,Abstract Business incentives have brought us within a small factor of achieving the databasecommunity's Grand Challenge set out in the Asilomar Report of 1998. This paper makes thecase for a new; focused Grand Challenge: Public Health for the Internet. The goal of PHI (orφ) is to enable collectives of hosts on the Internet to jointly monitor and promote networkhealth by sharing information on network conditions in a peer-to-peer fashion. We argue thatthis will be a positive effort for the research community for a variety of reasons; both in termsof its technical reach and its societal impact.,*,2007,11
Declarative networking with distributed recursive query processing,Boon Thau Loo; Tyson Condie; Minos Garofalakis; DE Gay; Joseph M Hellerstein; Petros Maniatis; Raghu Ramakrishnan; Timothy Roscoe; Ion Stoica,ABSTRACT There have been recent proposals in the networking and distributed systemsliterature on declarative networking; where network protocols are declaratively specifiedusing a recursive query language. This represents a significant new application area forrecursive query processing technologies from databases. In this paper; we extend uponthese recent proposals in the following ways. First; we motivate and formally define theNDlog language for declarative network specifications. We introduce the concept of link-restricted rules; which can be syntactically guaranteed to be executable via single-nodederivations and message passing on an underlying network graph. Second; we introduceand prove correct relaxed versions of the traditional semi-naive execution technique thatovercome fundamental problems of traditional semi-naıve evaluation in an asynchronous …,ACM SIGMOD International Conference on Management of Data,2006,8
Optimizing interactive development of data-intensive applications,Matteo Interlandi; Sai Deep Tetali; Muhammad Ali Gulzar; Joseph Noor; Tyson Condie; Miryung Kim; Todd Millstein,Abstract Modern Data-Intensive Scalable Computing (DISC) systems are designed toprocess data through batch jobs that execute programs (eg; queries) compiled from a high-level language. These programs are often developed interactively by posing ad-hoc queriesover the base data until a desired result is generated. We observe that there can besignificant overlap in the structure of these queries used to derive the final program. Yet;each successive execution of a slightly modified query is performed anew; which cansignificantly increase the development cycle. Vega is an Apache Spark framework that wehave implemented for optimizing a series of similar Spark programs; likely originating from adevelopment or exploratory data analysis session. Spark developers (eg; data scientists)can leverage Vega to significantly reduce the amount of time it takes to re-execute a …,Proceedings of the Seventh ACM Symposium on Cloud Computing,2016,5
Bigdebug: Interactive debugger for big data analytics in apache spark,Muhammad Ali Gulzar; Matteo Interlandi; Tyson Condie; Miryung Kim,Abstract To process massive quantities of data; developers leverage data-intensive scalablecomputing (DISC) systems in the cloud; such as Google's MapReduce; Apache Hadoop;and Apache Spark. In terms of debugging; DISC systems support post-mortem log analysisbut do not provide interactive debugging features in realtime. This tool demonstration papershowcases a set of concrete usecases on how BigDebug can help debug Big DataApplications by providing interactive; realtime debug primitives. To emulate interactive step-wise debugging without reducing throughput; BigDebug provides simulated breakpoints toenable a user to inspect a program without actually pausing the entire computation. Tominimize unnecessary communication and data transfer; BigDebug provides on-demandwatchpoints that enable a user to retrieve intermediate data using a guard and transfer …,Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering,2016,4
Automated debugging in data-intensive scalable computing,Muhammad Ali Gulzar; Matteo Interlandi; Xueyuan Han; Mingda Li; Tyson Condie; Miryung Kim,Abstract Developing Big Data Analytics workloads often involves trial and error debugging;due to the unclean nature of datasets or wrong assumptions made about data. When errors(eg; program crash; outlier results; etc.) arise; developers are often interested in identifying asubset of the input data that is able to reproduce the problem. BigSift is a new faulty datalocalization approach that combines insights from automated fault isolation in softwareengineering and data provenance in database systems to find a minimum set of failure-inducing inputs. BigSift redefines data provenance for the purpose of debugging using a testoracle function and implements several unique optimizations; specifically geared towardsthe iterative nature of automated debugging workloads. BigSift improves the accuracy offault localizability by several orders-of-magnitude (∼ 10 3 to 10 7×) compared to Titian …,Proceedings of the 2017 Symposium on Cloud Computing,2017,1
Debugging big data analytics in spark with bigdebug,Muhammad Ali Gulzar; Matteo Interlandi; Tyson Condie; Miryung Kim,Abstract To process massive quantities of data; developers leverage Data-IntensiveScalable Computing (DISC) systems such as Apache Spark. In terms of debugging; DISCsystems support only post-mortem log analysis and do not provide any debuggingfunctionality. This demonstration paper showcases BigDebug: a tool enhancing ApacheSpark with a set of interactive debugging features that can help users in debug their BigData Applications.,Proceedings of the 2017 ACM International Conference on Management of Data,2017,1
Spark-BDD: Debugging Big Data Applications,Tyson Condie; Muhammad Ali Gulzar; Matteo Interlandi; Miryung Kim; Todd Millstein; S Tetali; Seunghyun Yoo,Apache Spark has become a key platform for Big Data Analytics; yet it lacks completesupport for debugging analytics programs. As a result; the development of a new analyticaltoolkit can be a painstakingly long process [7; 2; 4]. To fill this gap; we are developing Spark-BDD (Big Data Debugger); which brings a traditional interactive debugger experience to theSpark platform. Analytic programmers (eg; data scientists) can leverage Spark-BDDinteractive debugging capabilities to set breakpoints and watchpoints; traceforward/backward through a program execution; perform function hot-swapping at runtime;and many other features that we believe will greatly reduce the overall development cycle.We surveyed several toolkits for debugging large-scale distributed data processingprograms [3; 5; 6; 1]). Slide 1) summarizes debugging features that are currently …,the 16th International Workshop on High Performance Transaction Systems (HPTS),2015,1
How to build a bad research center,David Patterson,A major center just completed; 10 so I finally have time to collect my thoughts on centers. I havebeen part of a dozen centers in computer systems; often as director (see the accompanyingtable). By center; I mean a research project with at least three faculty; a dozen students; and acommon vision. This Viewpoint is from the perspective of an academic in computer systems;but I hope it has wider applicability; even beyond academia. I do not advocate centers for allresearch; a lone researcher is best for many topics. Why care about the Berkeleyexperience? Alas; establishing credentials is a lot like bragging so let me apologize inadvance; which I will also need to do later. The US News and World Report ranked universitiesfor the computer systems field four times since 2002. In every survey; our peers rank UC Berkeleyfirst. In addition; the National Research Council published a study of information …,Communications of the ACM,2014,1
Declarative systems,Tyson Condie,Abstract Building system software is a notoriously complex and arduous endeavor.Developing tools and methodologies for practical system software engineering has longbeen an active area of research. This thesis explores system software development throughthe lens of a declarative; data-centric programming language that can succinctly expresshigh-level system specifications and be directly compiled to executable code. By unifyingspecification and implementation; our approach avoids the common problem ofimplementations diverging from specifications over time. In addition; we show that using adeclarative language often results in drastic reductions in code size (100× and more)relative to procedural languages like Java and C++. We demonstrate these advantages byimplementing a host of functionalities at various levels of the system hierarchy; including …,*,2011,1
Apache REEF: Retainable Evaluator Execution Framework,Byung-Gon Chun; Tyson Condie; Yingda Chen; Brian Cho; Andrew Chung; Carlo Curino; Chris Douglas; Matteo Interlandi; Beomyeol Jeon; Joo Seong Jeong; Gyewon Lee; Yunseong Lee; Tony Majestro; Dahlia Malkhi; Sergiy Matusevych; Brandon Myers; Mariia Mykhailova; Shravan Narayanamurthy; Joseph Noor; Raghu Ramakrishnan; Sriram Rao; Russell Sears; Beysim Sezgin; Taegeon Um; Julia Wang; Markus Weimer; Youngseok Yang,Abstract Resource Managers like YARN and Mesos have emerged as a critical layer in thecloud computing system stack; but the developer abstractions for leasing cluster resourcesand instantiating application logic are very low level. This flexibility comes at a high cost interms of developer effort; as each application must repeatedly tackle the same challenges(eg; fault tolerance; task scheduling and coordination) and reimplement commonmechanisms (eg; caching; bulk-data transfers). This article presents REEF; a developmentframework that provides a control plane for scheduling and coordinating task-level (data-plane) work on cluster resources obtained from a Resource Manager. REEF providesmechanisms that facilitate resource reuse for data caching and state managementabstractions that greatly ease the development of elastic data processing pipelines on …,ACM Transactions on Computer Systems (TOCS),2017,*
Fixpoint semantics and optimization of recursive Datalog programs with aggregates,Carlo Zaniolo; Mohan Yang; Ariyam Das; Alexander Shkapsky; Tyson Condie; Matteo Interlandi,Abstract A very desirable Datalog extension investigated by many researchers in the last 30years consists in allowing the use of the basic SQL aggregates min; max; count and sum inrecursive rules. In this paper; we propose a simple comprehensive solution that extends thedeclarative least-fixpoint semantics of Horn Clauses; along with the optimization techniquesused in the bottom-up implementation approach adopted by many Datalog systems. We startby identifying a large class of programs of great practical interest in which the use of min ormax in recursive rules does not compromise the declarative fixpoint semantics of theprograms using those rules. Then; we revisit the monotonic versions of count and sumaggregates proposed by Mazuran et al.(2013b; The VLDB Journal 22; 4; 471–493) andnamed; respectively; mcount and msum. Since mcount; and also msum on positive …,Theory and Practice of Logic Programming,2017,*
mCerebrum: A Mobile Sensing Software Platform for Development and Validation of Digital Biomarkers and Interventions,Syed Monowar Hossain; Timothy Hnat; Nazir Saleheen; Nusrat Jahan Nasrin; Joseph Noor; Bo-Jhang Ho; Tyson Condie; Mani Srivastava; Santosh Kumar,ABSTRACT The development and validation studies of new multisensory biomarkers andsensor-triggered interventions requires collecting raw sensor data with associated labels inthe natural field environment. Unlike platforms for traditional mHealth apps; a softwareplatform for such studies needs to not only support high-rate data ingestion; but also shareraw high-rate sensor data with researchers; while supporting high-rate sense-analyze-actfunctionality in real-time. We present mCerebrum; a realization of such a platform; whichsupports high-rate data collections from multiple sensors with realtime assessment of dataquality. A scalable storage architecture (with near optimal performance) ensures quickresponse despite rapidly growing data volume. Micro-batching and efficient sharing of dataamong multiple source and sink apps allows reuse of computations to enable real-time …,ACM SenSys,2017,*
Adding data provenance support to Apache Spark,Matteo Interlandi; Ari Ekmekji; Kshitij Shah; Muhammad Ali Gulzar; Sai Deep Tetali; Miryung Kim; Todd Millstein; Tyson Condie,Abstract Debugging data processing logic in data-intensive scalable computing (DISC)systems is a difficult and time-consuming effort. Today's DISC systems offer very little toolingfor debugging programs; and as a result; programmers spend countless hours collectingevidence (eg; from log files) and performing trial-and-error debugging. To aid this effort; webuilt Titian; a library that enables data provenance—tracking data through transformations—in Apache Spark. Data scientists using the Titian Spark extension will be able to quicklyidentify the input data at the root cause of a potential bug or outlier result. Titian is builtdirectly into the Spark platform and offers data provenance support at interactive speeds—orders of magnitude faster than alternative solutions—while minimally impacting Spark jobperformance; observed overheads for capturing data lineage rarely exceed 30% above …,The VLDB Journal,2017,*
Interactive Debugging for Data-Intensive Scalable Computing using Data Provenance,Tyson Condie,Abstract: Data-Intensive Scalable Computing (DISC) systems are being leveraged foranalyzing large datasets. DISC system programs are authored in a domain specificlanguage and submitted for execution on a cluster of machines in the form of jobs. Today;DISC users have limited visibility into the logical operations of their jobs during execution. Assuch; DISC programmers must resort to rudimentary methods—such as; trial and errordebugging—to debug their program logic. BigDebug is our effort to fill this programexecution visibility gap by providing an interactive debugging toolkit for Apache Spark.Interestingly; many of features in BigDebug stem from the use of data provenance. In thistalk; I will present BigDebug and Titian; which augments Apache Spark with interactive dataprovenance query capabilities. More information on the BigDebug project can be found …,*,2017,*
Smart Monitor System For Automatic Anomaly Detection@ Baidu,Xianping Qu,Abstract: Billions of requests are supported by hundreds of thousands of servers in Baidu.So many servers and modules bring a huge challenge to engineers for anomaly detection.When an anomaly occurs; various alarms and incidents are sent to engineers. It is verydifficult to find the root cause based on large non-organized monitoring data and alarms.Thus; we tried to build a smarter monitoring system named BIMS (Baidu IntelligentMonitoring System) to help engineers to analyze the problems and give the most possiblereasons for important anomaly such as revenue loss.,*,2015,*
TRIDENT: VISIONING A SHARED INFRASTRUCTURE FOR DATA RESEARCH AT SCALE,CHAITAN BARU; MICHAEL CAREY; TYSON CONDIE; VAGELIS HRISTIDIS; DAVID LIFKA; RICH WOLSKI; SREERANGA RAJAN; ARNAB ROY,*,Data Science Symposium,2014,*
A need for componentized transport protocols,Tyson Condie; Joseph M Hellerstein; Petros Maniatis; Sean Rhea; Timothy Roscoe,Abstract There has been a steady stream of research over the years into componentizednetwork protocols: protocol implementations assembled from a variety of building blocks. Apromise of such frameworks has generally been flexibility: a protocol stack tailored for aparticular application can be easily assembled; usually without writing any new code; bybinding protocol objects together.,Proceedings of the twentieth ACM symposium on Operating systems principles,2005,*
Simulating a P2P file-sharing network,Mario T Schlosser; Tyson E Condie; Sepandar D Kamvar; Ar D Kamvar,*,First workshop on semantics in p2p and grid computing,2002,*
Declarave Systems for Large Scale Machine Learning,Markus Weimer; Tyson Condie; Raghu Ramakrishnan,Page 1. Declara`ve Systems for Large Scale Machine Learning Markus Weimer; Tyson Condie;Raghu Ramakrishnan Cloud and Informa`on Services Laboratory Microsoft Page 2. Joint workwith … 6/5/12 2 Yingyi Bu; Vinayak Borkar; Michael J. Carey University of California; IrvineJoshua Rosen; Neoklis Polyzo`s University of California; Santa Cruz Page 3. Example: SpamFilter 6/5/12 3 Inbox Spam Spam Filter User Interface Logged Event Page 4. Machine LearningWorkflow • Step I: Example Forma on – Feature Extrac`on – Label Extrac`on • Step II: Modeling •Step III: Deployment (or just Evalua on) 6/5/12 4 Example Forma`on Modeling Evalua`on Page5. Example Forma`on 6/5/12 5 EMail Click Log Bag of Words ID Label ID Bag of Words LabelID Feature Extraction Label Extraction Data Parallel Func`ons Large Scale Join Page 6. Modeling •Many Algorithms are inherently sequen al …,*,*,*
Data Engineering,Amitanand Aiyer; Mikhail Bautin; Guoqiang Jerry Chen; Pritam Damania; Prakash Khemani; Kannan Muthukkaruppan; Karthik Ranganathan; Nicolas Spiegelberg; Liyin Tang; Madhuwanti Vaidya; Arvind Arasu; Surajit Chaudhuri; Zhimin Chen; Kris Ganjam; Raghav Kaushik; Vivek Narasayya; Michael J Carey Bu; Joshua Rosen; Neoklis Polyzotis; Tyson Condie; Markus Weimer; Raghu Ramakrishnan; Ken Goodhope; Joel Koshy; Jay Kreps; Neha Narkhede; Richard Park; Jun Rao; Victor Yang Ye; Sreeram Balakrishnan Madhavan; Kathryn Brisbin; Hector Gonzalez; Nitin Gupta; Alon Halevy; Karen Jacqmin-Adams; Heidi Lam; Anno Langen; Hongrae Lee; Rod McChesney; Rebecca Shapley; Warren Shen,The Data Engineering Bulletin The Bulletin of the Technical Committee on Data Engineeringis published quarterly and is distributed to all TC members. Its scope includes the design;implementation; modelling; theory and application of database systems and theirtechnology. Letters; conference information; and news should be sent to the Editor-in-Chief.Papers for each issue are solicited by and should be sent to the Associate Editorresponsible for the issue. Opinions expressed in contributions are those of the authors anddo not necessarily reflect the positions of the TC on Data Engineering; the IEEE ComputerSociety; or the authors' organizations. The Data Engineering Bulletin web site is at http://tab.computer. org/tcde/bull_about. html.,*,*,*
Reviewer committee,Cecile Åberg; Johan Åberg; Torsten Ackemann; Kevin Almeroth; Gal Badishi; Daniel Bauer; Karlo Berket; Hannes Birck; Sabrina De Capitani di Vimercati; Tyson Condie; Vasilios Darlagiannis; Mayur Deshpande; Ralph Deters; Thomas Dübendorfer; Claudiu Duma; Patrick Eaton; Claus Eikemeier; Viiveke Fåk; George Fankhauser; Karoly Farkas; Prasanna Ganesan; Nitin Garg; Donatien Grolaux; Abhishek Gupta; Emir Halepovic; David Hausheer; Oliver Heckmann; Almut Herzog; Daniel Hughes; Paul Hurley; Evangelia Kalyvianaki; Kostas Katrinis; Christoph Kessler; Patrick Lambrix; Nicolas C Liebau; Tsung-Nan Lin; Dahlia Malkhi; Marco Mamei; Sergio Marti; Carlo Mastroianni; Håkan Mattsson; Martin Mauve; Roie Melamed; Valentin Mesaros; Mirco Musolesi; Kaj Nyström; Luc Onana Alima; Georgios Parissidis; Panayiotis Periorellis; Marius Portmann; Marc Rennhard; Pierangela Samarati; Glenn Scott; Diana Senn; Daniel Sigg; Alan Smith; Juha Takkinen; Dimitrios Tsoumakos; Eduard Turcan; Srikumar Venugopal; James Walkerdine; Honghao Wang; John Wilander; Bai Xiaole; Zhiyong Xu; Keping Zhao; Yue Zhao; Jianjun Zhang; Tingting Zhang; Yingwu Zhu; Gil Zussman,The program committee would like to express thanks to all the additional reviewers who helpedin reviewing the submitted papers … Cecile Åberg Johan Åberg Torsten Ackemann Kevin AlmerothGal Badishi Daniel Bauer Karlo Berket Hannes Birck Sabrina De Capitani di Vimercati TysonCondie Vasilios Darlagiannis Mayur Deshpande Ralph Deters Thomas Dübendorfer ClaudiuDuma Patrick Eaton Claus Eikemeier Viiveke Fåk George Fankhauser Karoly Farkas PrasannaGanesan Nitin Garg Donatien Grolaux Abhishek Gupta Emir Halepovic David Hausheer OliverHeckmann Almut Herzog Daniel Hughes Paul Hurley Evangelia Kalyvianaki Kostas KatrinisChristoph Kessler Patrick Lambrix Nicolas C. Liebau Tsung-Nan Lin … Dahlia Malkhi MarcoMamei Sergio Marti Carlo Mastroianni Håkan Mattsson Martin Mauve Roie Melamed ValentinMesaros Mirco Musolesi Kaj Nyström Luc Onana Alima Georgios Parissidis Panayiotis …,*,*,*
