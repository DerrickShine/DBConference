Learning linear regression models over factorized joins,Maximilian Schleich; Dan Olteanu; Radu Ciucanu,Abstract We investigate the problem of building least squares regression models overtraining datasets defined by arbitrary join queries on database tables. Our key observation isthat joins entail a high degree of redundancy in both computation and data representation;which is not required for the end-to-end solution to learning over joins. We propose a newparadigm for computing batch gradient descent that exploits the factorized computation andrepresentation of the training datasets; a rewriting of the regression objective function thatdecouples the computation of cofactors of model parameters from their convergence; andthe commutativity of cofactor computation with relational union and projection. We introducethree flavors of this approach: F/FDB computes the cofactors in one pass over thematerialized factorized join; Favoids this materialization and intermixes cofactor and join …,Proceedings of the 2016 International Conference on Management of Data,2016,34
gMark: schema-driven generation of graphs and queries,Guillaume Bagan; Angela Bonifati; Radu Ciucanu; George HL Fletcher; Aurélien Lemay; Nicky Advokaat,Massive graph data sets are pervasive in contemporary application domains. Hence; graphdatabase systems are becoming increasingly important. In the experimental study of thesesystems; it is vital that the research community has shared solutions for the generation ofdatabase instances and query workloads having predictable and controllable properties. Inthis paper; we present the design and engineering principles of gMark; a domainand querylanguage-independent graph instance and query workload generator. A core contribution ofgMark is its ability to target and control the diversity of properties of both the generatedinstances and the generated workloads coupled to these instances. Further noveltiesinclude support for regular path queries; a fundamental graph query paradigm; and schema-driven selectivity estimation of queries; a key feature in controlling workload chokepoints …,IEEE transactions on knowledge and data engineering,2017,28
Learning path queries on graph databases,Angela Bonifati; Radu Ciucanu; Aurélien Lemay,We investigate the problem of learning graph queries by exploiting user examples. The inputconsists of a graph database in which the user has labeled a few nodes as positive ornegative examples; depending on whether or not she would like the nodes as part of thequery result. Our goal is to handle such examples to find a query whose output is what theuser expects. This kind of scenario is pivotal in several application settings where unfamiliarusers need to be assisted to specify their queries. In this paper; we focus on path queriesdefined by regular expressions; we identify fundamental difficulties of our problem setting;we formalize what it means to be learnable; and we prove that the class of queries understudy enjoys this property. We additionally investigate an interactive scenario where we startwith an empty set of examples and we identify the informative nodes ie; those that …,EDBT 2015,2015,22
Interactive join query inference with JIM,Angela Bonifati; Radu Ciucanu; Slawomir Staworko,Abstract Specifying join predicates may become a cumbersome task in many situations eg;when the relations to be joined come from disparate data sources; when the values of theattributes carry little or no knowledge of metadata; or simply when the user is unfamiliar withquerying formalisms. Such task is recurrent in many traditional data managementapplications; such as data integration; constraint inference; and database denormalization;but it is also becoming pivotal in novel crowdsourcing applications. We present Jim (JoinInference Machine); a system for interactive join specification tasks; where the user infers ann-ary join predicate by selecting tuples that are part of the join result via Booleanmembership queries. The user can label tuples as positive or negative; while the systemallows to identify and gray out the uninformative tuples ie; those that do not add any …,PVLDB,2014,20
Interactive inference of join queries,Angela Bonifati; Radu Ciucanu; Slawomir Staworko,We investigate the problem of inferring join queries from user interactions. The user ispresented with a set of candidate tuples and is asked to label them as positive or negativedepending on whether or not she would like the tuples as part of the join result. The goal isto quickly infer an arbitrary n-ary join predicate across two relations by keeping the numberof user interactions as minimal as possible. We assume no prior knowledge of the integrityconstraints between the involved relations. This kind of scenario occurs in severalapplication settings; such as data integration; reverse engineering of database queries; andconstraint inference. In such scenarios; the database instances may be too big to beskimmed. We explore the search space by using a set of strategies that let us prune what wecall" uninformative" tuples; and directly present to the user the informative ones ie; those …,EDBT 2014,2014,20
Learning Join Queries from User Examples,Angela Bonifati; Radu Ciucanu; Slawek Staworko,Abstract We investigate the problem of learning join queries from user examples. The user ispresented with a set of candidate tuples and is asked to label them as positive or negativeexamples; depending on whether or not she would like the tuples as part of the join result.The goal is to quickly infer an arbitrary n-ary join predicate across an arbitrary number m ofrelations while keeping the number of user interactions as minimal as possible. We assumeno prior knowledge of the integrity constraints across the involved relations. Inferring the joinpredicate across multiple relations when the referential constraints are unknown may occurin several applications; such as data integration; reverse engineering of database queries;and schema inference. In such scenarios; the number of tuples involved in the join istypically large. We introduce a set of strategies that let us inspect the search space and …,ACM Transactions on Database Systems,2015,16
The iBench Integration Metadata Generator,Patricia C Arocena; Boris Glavic; Radu Ciucanu; Renée J Miller,Abstract Given the maturity of the data integration field it is surprising that rigorous empiricalevaluations of research ideas are so scarce. We identify a major roadblock for empiricalwork-the lack of comprehensive metadata generators that can be used to createbenchmarks for different integration tasks. This makes it difficult to compare integrationsolutions; understand their generality; and understand their performance. We presentiBench; the first metadata generator that can be used to evaluate a wide-range of integrationtasks (data exchange; mapping creation; mapping composition; schema evolution; amongmany others). iBench permits control over the size and characteristics of the metadata itgenerates (schemas; constraints; and mappings). Our evaluation demonstrates that iBenchcan efficiently generate very large; complex; yet realistic scenarios with different …,PVLDB,2015,15
Generating flexible workloads for graph databases,Guillaume Bagan; Angela Bonifati; Radu Ciucanu; George HL Fletcher; Aurélien Lemay; Nicky Advokaat,Abstract Graph data management tools are nowadays evolving at a great pace. Key driversof progress in the design and study of data intensive systems are solutions for syntheticgeneration of data and workloads; for use in empirical studies. Current graph generators;however; provide limited or no support for workload generation or are limited to fixed use-cases. Towards addressing these limitations; we demonstrate gMark; the first domain-andquery language-independent framework for synthetic graph and query workload generation.Its novel features are:(i) fine-grained control of graph instance and query workloadgeneration via expressive user-defined schemas;(ii) the support of expressive graph querylanguages; including recursion among other features; and;(iii) selectivity estimation of thegenerated queries. During the demonstration; we will showcase the highly tunable …,Proceedings of the VLDB Endowment,2016,12
Simple schemas for unordered XML,Iovka Boneva; Radu Ciucanu; Slawek Staworko,Abstract: We consider unordered XML; where the relative order among siblings is ignored;and propose two simple yet practical schema formalisms: disjunctive multiplicity schemas(DMS); and its restriction; disjunction-free multiplicity schemas (MS). We investigate theircomputational properties and characterize the complexity of the following static analysisproblems: schema satisfiability; membership of a tree to the language of a schema; schemacontainment; twig query satisfiability; implication; and containment in the presence ofschema. Our research indicates that the proposed formalisms retain much of theexpressiveness of DTDs without an increase in computational complexity.,WebDB 2013,2013,12
A paradigm for learning queries on big data,Angela Bonifati; Radu Ciucanu; Aurélien Lemay; Sławek Staworko,Abstract Specifying a database query using a formal query language is typically achallenging task for non-expert users. In the context of big data; this problem becomes evenharder as it requires the users to deal with database instances of big sizes and hencedifficult to visualize. Such instances usually lack a schema to help the users specify theirqueries; or have an incomplete schema as they come from disparate data sources. In thispaper; we propose a novel paradigm for interactive learning of queries on big data; withoutassuming any knowledge of the database schema. The paradigm can be applied to differentdatabase models and a class of queries adequate to the database model. In particular; inthis paper we present two instantiations that validated the proposed paradigm for learningrelational join queries and for learning path queries on graph databases. Finally; we …,Data4U 2014,2014,10
Learning schemas for unordered XML,Radu Ciucanu; Slawek Staworko,Abstract: We consider unordered XML; where the relative order among siblings is ignored;and we investigate the problem of learning schemas from examples given by the user. Wefocus on the schema formalisms proposed in [10]: disjunctive multiplicity schemas (DMS)and its restriction; disjunction-free multiplicity schemas (MS). A learning algorithm takes asinput a set of XML documents which must satisfy the schema (ie; positive examples) and aset of XML documents which must not satisfy the schema (ie; negative examples); andreturns a schema consistent with the examples. We investigate a learning frameworkinspired by Gold [18]; where a learning algorithm should be sound ie; always return aschema consistent with the examples given by the user; and complete ie; able to produceevery schema with a sufficiently rich set of examples. Additionally; the algorithm should …,DBPL 2013,2013,10
Graph data exchange with target constraints,Iovka Boneva; Angela Bonifati; Radu Ciucanu,Data exchange is the problem of translating data structured under a source schemaaccording to a target schema and a set of source-to-target constraints known as schemamappings. In this paper; we investigate the problem of data exchange in a heterogeneoussetting; where the source is a relational database; the target is a graph database; and theschema mappings are defined across them. We study the classical problems considered indata exchange; namely the existence of solutions and query answering. We show that bothproblems are intractable in the presence of target constraints; already under significantrestrictions.,EDBT/ICDT 2015 Workshops–GraphQ,2015,7
Schemas for unordered XML on a DIME,Iovka Boneva; Radu Ciucanu; Sławek Staworko,Abstract We investigate schema languages for unordered XML having no relative orderamong siblings. First; we propose unordered regular expressions (UREs); essentiallyregular expressions with unordered concatenation instead of standard concatenation; thatdefine languages of unordered words to model the allowed content of a node (ie; collectionsof the labels of children). However; unrestricted UREs are computationally too expensive aswe show the intractability of two fundamental decision problems for UREs: membership ofan unordered word to the language of a URE and containment of two UREs. Consequently;we propose a practical and tractable restriction of UREs; disjunctive interval multiplicityexpressions (DIMEs). Next; we employ DIMEs to define languages of unordered trees andpropose two schema languages: disjunctive interval multiplicity schema (DIMS); and its …,Theory of Computing Systems,2015,6
Interactive path query specification on graph databases,Angela Bonifati; Radu Ciucanu; Aurélien Lemay,Graph databases are becoming pervasive in several application scenarios such as theSemantic Web; social and biological networks; and geographical databases; to name a few.However; specifying a graph query is a cumbersome task for non-expert users becausegraph databases (i) are usually of large size hence difficult to visualize and (ii) do not carryproper metadata as there is no clear distinction between the instances and the schemas. Wepresent GPS; a system for interactive path query specification on graph databases; whichassists the user to specify path queries defined by regular expressions. The user isinteractively asked to visualize small fragments of the graph and to label nodes of interest aspositive or negative; depending on whether or not she would like the nodes as part of thequery result. After each interaction; the system prunes the uninformative nodes ie; those …,EDBT 2015,2015,5
Gain control over your integration evaluations,Patricia C Arocena; Radu Ciucanu; Boris Glavic; Renée J Miller,Abstract Integration systems are typically evaluated using a few real-world scenarios (eg;bibliographical or biological datasets) or using synthetic scenarios (eg; based on star-schemas or other patterns for schemas and constraints). Reusing such evaluations is acumbersome task because their focus is usually limited to showcasing a specific feature ofan approach. This makes it difficult to compare integration solutions; understand theirgenerality; and understand their performance for different application scenarios. Based onthis observation; we demonstrate some of the requirements for developing integrationbenchmarks. We argue that the major abstractions used for integration problems haveconverged in the last decade which enables the application of robust empirical methods tointegration problems (from schema evolution; to data exchange; to answering queries …,PVLDB,2015,3
Learning queries for relational; semi-structured; and graph databases,Radu Ciucanu,Abstract Web applications store their data within various database models; such asrelational; semi-structured; and graph data models to name a few. We study learningalgorithms for queries for the above mentioned models. As a further goal; we aim to applythe results to learning cross-model database mappings; which can also be seen as queriesacross different schemas.,SIGMOD/PODS 2013 PhD Symposium,2013,3
EGG: A Framework for Generating Evolving RDF Graphs,Karim Alami; Radu Ciucanu; Mephu Nguifo Engelbert,Abstract. We demonstrate EGG (Evolving Graph Generator); an opensource framework forgenerating evolving RDF graphs based on finelytuned temporal constraints given by theuser. During the demonstration; we will showcase the highly-expressive constraints that theuser can specify in EGG to generate evolving graphs over various real-world use cases; theaccuracy and scalability of the generator; and the ease of using EGG in performancecomparisons of evolving graph processing systems.,ISWC 2017 (International Semantic Web Conference); system demo,2017,*
Synthetic Graph Generation from Finely-Tuned Temporal Constraints,Karim Alami; Radu Ciucanu; Engelbert Mephu Nguifo,Abstract. Large-scale graphs are at the core of a plethora of modern applications such associal networks; transportation networks; or the Semantic Web. Such graphs are naturallyevolving over time; which makes particularly challenging graph processing tasks eg; graphmining. To be able to realize rigorous empirical evaluations of research ideas; the graphprocessing community needs finely-tuned generators of synthetic time-evolving graphs;which are particularly useful whenever real-world graphs are unavailable for public use. Thegoal of this paper is to report on an ongoing project that aims at generating synthetic time-evolving graphs satisfying finely-tuned temporal constraints specified by the user.,TDLSG 2017 (Advances in Mining Large-Scale Time-Dependent Graphs). Collocated with ECML/PKDD 2017,2017,*
Secure Matrix Multiplication with MapReduce,Xavier Bultel; Radu Ciucanu; Matthieu Giraud; Pascal Lafourcade,Abstract The MapReduce programming paradigm allows to process big data sets in parallelon a large cluster of commodity machines. The MapReduce users often outsource their dataand computations to a public cloud provider. We focus on the fundamental problem of matrixmultiplication; and address the inherent security and privacy concerns that occur whenoutsourcing to a public cloud. Our goal is to enhance the two state-of-the-art algorithms forMapReduce matrix multiplication with privacy guarantees such as: none of the nodes storingan input matrix can learn the other input matrix or the output matrix; and moreover; none ofthe nodes computing an intermediate result can learn the input or the output matrices. Toachieve our goal; we rely on the well-known Paillier's cryptosystem and we use its partiallyhomomorphic property to develop efficient algorithms that satisfy our problem statement …,Proceedings of the 12th International Conference on Availability; Reliability and Security,2017,*
gMark: Génération de Graphes et de Requêtes Dirigée par le Schéma,Guillaume Bagan; Angela Bonifati; Radu Ciucanu; George Fletcher; Aurélien Lemay; Nicky Advokaat,Les jeux de données représentés par des graphes de grande taille sont omniprésents dansles domaines applicatifs actuels. C'est pourquoi les bases de données orientées graphesjouent un rôle de plus en plus important. Dans l'étude de ces systèmes; il est vital que lacommunauté scientifique ait à sa disposition des solutions pour générer des jeux dedonnées de référence comprenant des instances de base de données et des requêtesayant des propriétés prévisibles et contrôlables. Dans cet article; nous présentons lesprincipes à la fois théoriques et d'ingénierie de gMark; un système générique de générationde graphes et de requêtes basé sur une gestion flexible des schémas et des requêtes. Unecontribution centrale de gMark est sa capacité à viser et à contrôler la diversité despropriétés à la fois des instances de graphes générés et des requêtes correspondantes à …,32ème Conférence sur la Gestion de Données-Principes; Technologies et Applications-BDA 2016,2016,*
Génération de Requêtes pour les Bases de Données Orientées Graphes,Guillaume Bagan; Angela Bonifati; Radu Ciucanu; George Fletcher; Aurélien Lemay; Nicky Advokaat,Les outils de gestion de bases de données orientées graphes sont actuellement enévolution permanente. Dans ce contexte; les outils permettant une génération de donnéesainsi que de scénarios de travail sont des éléments clés dans les études empiriques.Néanmoins; les générateurs actuels de graphe fournissent un support limité; voireinexistant; dans la génération de scénarios d'usage; ou s' en tiennent à un nombre fixe decas d'études. Afin de dépasser ces limitations; nous présentons gMark; le premierenvironnement de génération de graphes synthétiques et de scénarios d'utilisationindépendant à la fois du domaine et du langage de requête. Ses principales innovationssont:(i) un contrôle précis de l'instance de graphe généré et des requêtes correspondantesà partir de schémas définis par l'utilisateur;(ii) le support d'un langage de requête …,32ème Conférence sur la Gestion de Données-Principes; Technologies et Applications-BDA 2016,2016,*
Cross-Model Queries and Schemas: Complexity and Learning,Radu Ciucanu,Specifying a database query using a formal query language is typically a challenging taskfor non-expert users. In the context of big data; this problem becomes even harder becauseit requires the users to deal with database instances of large size and hence difficult tovisualize. Such instances usually lack a schema to help the users specify their queries; orhave an incomplete schema as they come from disparate data sources. In this thesis; weaddress the problem of query specification for non-expert users. We identify two possibleapproaches for tackling this problem: learning queries from examples and translating thedata in a format that the user finds easier to query. Our contributions are aligned with thesetwo complementary directions and span over three of the most popular data models: XML;relational; and graph. This thesis consists of two parts; dedicated to (i) schema definition …,*,2015,*
Learning Path Queries on Graph Databases,Radu Ciucanu,Page 1. Learning Path Queries on Graph Databases Radu Ciucanu joint work with Angela Bonifatiand Aurélien Lemay University of Lille; France INRIA Lille – Nord Europe Links ProjectEDBT'15 March 24; 2015 Radu Ciucanu (INRIA Lille) Learning Path Queries on Graph DatabasesEDBT'15 1 / 25 Page 2. Motivation Specifying a database query is a challenging task fornon-expert users. ► Unfamiliar with language formalisms. In the context of graph databases;the problem becomes even harder: ► There is no clear distinction between instances andschemas. ► The instances do not carry proper metadata. ► The instances are usually of largesize and difficult to visualize. Traditional query specification paradigms for non-expert users eg;query by example1 become unfeasible. 1Zloof. Query by example. AFIPS'75. Radu Ciucanu(INRIA Lille) Learning Path Queries on Graph Databases EDBT'15 2 / 25 Page 3 …,*,2015,*
To cite this version,Angela Bonifati; Radu Ciucanu; Slawomir Staworko,ABSTRACT Specifying join predicates may become a cumbersome task in many situationseg; when the relations to be joined come from disparate data sources; when the values ofthe attributes carry little or no knowledge of metadata; or simply when the user is unfamiliarwith querying formalisms. Such task is recurrent in many traditional data managementapplications; such as data integration; constraint inference; and database denormalization;but it is also becoming pivotal in novel crowdsourcing applications. We present Jim (JoinInference Machine); a system for interactive join specification tasks; where the user infers ann-ary join predicate by selecting tuples that are part of the join result via Booleanmembership queries. The user can label tuples as positive or negative; while the systemallows to identify and gray out the uninformative tuples ie; those that do not add any …,Proceedings of the VLDB Endowment,2014,*
