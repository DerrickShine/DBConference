Fast and accurate estimation of shortest paths in large graphs,Andrey Gubichev; Srikanta Bedathur; Stephan Seufert; Gerhard Weikum,Abstract Computing shortest paths between two given nodes is a fundamental operationover graphs; but known to be nontrivial over large disk-resident instances of graph data.While a number of techniques exist for answering reachability queries and approximatingnode distances efficiently; determining actual shortest paths (ie the sequence of nodesinvolved) is often neglected. However; in applications arising in massive online socialnetworks; biological networks; and knowledge graphs it is often essential to find out many; ifnot all; shortest paths between two given nodes. In this paper; we address this problem andpresent a scalable sketch-based index structure that not only supports estimation of nodedistances; but also computes corresponding shortest paths themselves. Generating theactual path information allows for further improvements to the estimation accuracy of …,Proceedings of the 19th ACM international conference on Information and knowledge management,2010,128
The LDBC social network benchmark: Interactive workload,Orri Erling; Alex Averbuch; Josep Larriba-Pey; Hassan Chafi; Andrey Gubichev; Arnau Prat; Minh-Duc Pham; Peter Boncz,Abstract The Linked Data Benchmark Council (LDBC) is now two years underway and hasgathered strong industrial participation for its mission to establish benchmarks; andbenchmarking practices for evaluating graph data management systems. The LDBCintroduced a new choke-point driven methodology for developing benchmark workloads;which combines user input with input from expert systems architects; which we outline. Thispaper describes the LDBC Social Network Benchmark (SNB); and presents databasebenchmarking innovation in terms of graph query functionality tested; correlated graphgeneration techniques; as well as a scalable benchmark driver on a workload with complexgraph dependencies. SNB has three query workloads under development: Interactive;Business Intelligence; and Graph Algorithms. We describe the SNB Interactive Workload …,Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data,2015,89
How good are query optimizers; really?,Viktor Leis; Andrey Gubichev; Atanas Mirchev; Peter Boncz; Alfons Kemper; Thomas Neumann,Abstract Finding a good join order is crucial for query performance. In this paper; weintroduce the Join Order Benchmark (JOB) and experimentally revisit the main componentsin the classic query optimizer architecture using a complex; real-world data set and realisticmulti-join queries. We investigate the quality of industrial-strength cardinality estimators andfind that all estimators routinely produce large errors. We further show that while estimatesare essential for finding a good join order; query performance is unsatisfactory if the queryengine relies too heavily on these estimates. Using another set of experiments that measurethe impact of the cost model; we find that it has much less influence on query performancethan the cardinality estimates. Finally; we investigate plan enumeration techniquescomparing exhaustive dynamic programming with heuristic algorithms and find that …,Proceedings of the VLDB Endowment,2015,57
Exploiting the query structure for efficient join ordering in SPARQL queries.,Andrey Gubichev; Thomas Neumann,ABSTRACT The join ordering problem is a fundamental challenge that has to be solved byany query optimizer. Since the high-performance RDF systems are often implemented astriple stores (ie; they represent RDF data as a single table with three attributes; at leastconceptually); the query optimization strategies employed by such systems are oftenadopted from relational query optimization. In this paper we show that the techniquesborrowed from traditional SQL query optimization (such as Dynamic Programming algorithmor greedy heuristics) are not immediately capable of handling large SPARQL queries. Weintroduce a new join ordering algorithm that performs a SPARQL-tailored querysimplification. Furthermore; we present a novel RDF statistical synopsis that accuratelyestimates cardinalities in large SPARQL queries. Our experiments show that this …,EDBT,2014,41
Sparqling kleene: fast property paths in RDF-3X,Andrey Gubichev; Srikanta J Bedathur; Stephan Seufert,Abstract As Semantic Web efforts continue to gather steam; the RDF engines are faced withgraphs with millions of nodes and billions of edges. While much recent work in addressingthe resulting scalability issues in processing queries over these datasets have mainlyconsidered SPARQL 1.0; the next-generation query language recommendations haveproposed the addition of regular expression restricted navigation queries into SPARQL. Weaddress the problem of supporting efficient processing of property paths into RDF-3X--a high-performance RDF engine. In this paper; we restrict our attention to a restricted definition ofproperty paths that is not only tractable but also most commonly used--instead ofenumerating all paths that satisfy the given query; we focus on regular expression basedreachability queries. Based on this; we make the following three major technical …,First International Workshop on Graph Data Management Experiences and Systems,2013,27
Path Query Processing on Very Large RDF Graphs.,Andrey Gubichev; Thomas Neumann,ABSTRACT Finding the shortest path between two nodes in an RDF graph is a fundamentaloperation that allows to discover complex relationships between entities. In this paper weconsider the path queries over graphs from a database perspective. We provide the full-fledge database solution to execute path queries over very large RDF graphs. We presentlow-level techniques to speed-up shortest paths algorithms; and a robust method to estimateselectivities of path queries. We perform extended experiments on several large RDFcollections; including the UniProt collection; demonstrating that our approach outperformsthe path query capabilities of modern systems by a large margin.,WebDB,2011,25
Graph Pattern Matching: Do We Have to Reinvent the Wheel?,Andrey Gubichev; Manuel Then,Abstract This paper presents an empirical study of how a wide spectrum of systems handlethe graph pattern matching problem. Our approach is to take the well-known LUBMbenchmark; model it across various domains (relational; RDF; property graph); and executethe benchmark queries on the corresponding systems. We evaluate the systems using alarge data instance on a single machine (the largest dataset is LUBM-8000; which containsover 1 billion RDF triples). Additionally; we provide a brief analysis of how different cases ofgraph pattern matching problem are stressed by the benchmark queries. Our main finding isthat; contrary to popular belief and various vendors' claims; modern native graph stores donot necessarily offer a competitive advantage over traditional relational and RDF stores;even for the graph-specific problem of pattern matching. To the best of our knowledge …,Proceedings of Workshop on GRAph Data management Experiences and Systems,2014,17
The linked data benchmark council project,Peter Boncz; Irini Fundulaki; Andrey Gubichev; Josep Larriba-Pey; Thomas Neumann,Abstract Despite the fast growth and increasing popularity; the broad field of RDF and Graphdatabase systems lacks an independent authority for developing benchmarks; and forneutrally assessing benchmark results through industry-strength auditing which would allowto quantify and compare the performance of existing and emerging systems. Inspired by theimpact of the Transaction Processing Performance Council (TPC) Benchmarks on relationaldatabases; the LDBC consortium formed by University and Industry researchers andpractitioners has recently launched a European Commision sponsored project that will offerthe first comprehensive set of open and vendor-independent benchmarks for RDF andGraph technologies. The consortium will incorporate the Linked Data Benchmark Council(LDBC) which will survive the project and will supervise the process of obtaining and …,Datenbank-Spektrum,2013,17
Parameter curation for benchmark queries,Andrey Gubichev; Peter Boncz,Abstract In this paper we consider the problem of generating parameters for benchmarkqueries so these have stable behavior despite being executed on datasets (real-world orsynthetic) with skewed data distributions and value correlations. We show that uniformrandom sampling of the substitution parameters is not well suited for such benchmarks;since it results in unpredictable runtime behavior of queries. We present our approach ofParameter Curation with the goal of selecting parameter bindings that have consistently low-variance intermediate query result sizes throughout the query plan. Our solution is illustratedwith IMDB data and the recently proposed LDBC Social Network Benchmark (SNB).,Technology Conference on Performance Evaluation and Benchmarking,2014,8
Fast approximation of steiner trees in large graphs,Andrey Gubichev; Thomas Neumann,Abstract Finding the minimum connected subtree of a graph that contains a given set ofnodes (ie; the Steiner tree problem) is a fundamental operation in keyword search in graphs;yet it is known to be NP-hard. Existing approximation techniques either make use of theheavy indexing of the graph; or entirely rely on online heuristics.,Proceedings of the 21st ACM international conference on Information and knowledge management,2012,8
Cardinality Estimation Done Right: Index-Based Join Sampling.,Viktor Leis; Bernharde Radke; Andrey Gubichev; Alfons Kemper; Thomas Neumann,ABSTRACT After four decades of research; today's database systems still suffer from poorquery execution plans. Bad plans are usually caused by poor cardinality estimates; whichhave been called the “Achilles Heel” of modern query optimizers. In this work we proposeindexbased join sampling; a novel cardinality estimation technique for main-memorydatabases that relies on sampling and existing index structures to obtain accurate estimates.Results on a real-world data set show that this approach significantly improves estimation aswell as overall plan quality. The additional sampling effort is quite low and can be configuredto match the desired application profile. The technique can be easily integrated into mostsystems.,CIDR,2017,4
Query Processing and Optimization in Graph Databases.,Andrey Gubichev; Peter Boncz; Sihem Amer-Yahia,A data management problem becomes a graph problem when it concerns not only analysisof the values; but also discovering and exploiting connections between them. The lastdecade has seen the rise of interest in graph data management problems; both in academiaand in industry. The interest was caused by the rapid spread of graph-shaped data comingfrom multiple domains with the two main examples being (i) the Linked Data initiative; whichexploits cross-domain techniques from data mining; natural language processing andmachine learning to construct web-scale knowledge bases; and (ii) Social Media; where theusers and their generated content form a quickly growing graph; the availability of large-scale social networks has motivated numerous Social Network Analysis projects. Theinformation needs in the two domains are best expressed in terms of graph problems …,*,2015,2
Query optimization through the looking glass; and what we found running the Join Order Benchmark,Viktor Leis; Bernhard Radke; Andrey Gubichev; Atanas Mirchev; Peter Boncz; Alfons Kemper; Thomas Neumann,Abstract Finding a good join order is crucial for query performance. In this paper; weintroduce the Join Order Benchmark that works on real-life data riddled with correlations andintroduces 113 complex join queries. We experimentally revisit the main components in theclassic query optimizer architecture using a complex; real-world data set and realistic multi-join queries. For this purpose; we describe cardinality-estimate injection and extractiontechniques that allow us to compare the cardinality estimators of multiple industrial SQLimplementations on equal footing; and to characterize the value of having perfect cardinalityestimates. Our investigation shows that all industrial-strength cardinality estimators routinelyproduce large errors: though cardinality estimation using table samples solves the problemfor single-table queries; there are still no techniques in industrial systems that can deal …,The VLDB Journal,2017,1
Hochperformante analyse von graph-datenbanken,Moritz Kaufmann; Tobias Mühlbauer; Manuel Then; Andrey Gubichev; Alfons Kemper; Thomas Neumann,Ziel des ACM SIGMOD Programming Contest 2014 war es ein hochperformantes System fürdie Analyse von großen Graph-Daten zu entwickeln. Insbesondere die unregelmäßigenSpeicherzugriffsmuster und Kontrollflussverzweigungen von Graphalgorithmen stellendabei eine große Herausforderung dar; da diese bisher nicht effizient auf moderndensuperskalaren Mehrkern-Prozessoren ausgeführt werden können. Um diese Prozessorenoptimal auszulasten bedarf es zudem der Nutzung aller parallelen Ausführungseinheiten. Inder vorliegenden Arbeit präsentieren wir das Gewinnersystem des Wettbewerbs. Der Erfolgunseres Systems beruht; neben gutem Engineering; auf den folgenden Entwicklungen:(i)Daten-parallelisierte Graph-Breitensuche; welche Cache-Misses effizient amortisiert;(ii)Heuristiken zur Reduzierung des Suchraums bei Top-k-Anfragen;(iii) schnelles …,Datenbanksysteme für Business; Technologie und Web (BTW 2015),2015,1
Efficient Computation of Relationship-Centrality in Large Entity-Relationship Graphs.,Stephan Seufert; Srikanta J Bedathur; Johannes Hoffart; Andrey Gubichev; Klaus Berberich,Abstract. Given two sets of entities–potentially the results of two queries on a knowledge-graph like YAGO or DBpedia–characterizing the relationship between these sets in the formof important people; events and organizations is an analytics task useful in many domains.In this paper; we present an intuitive and efficiently computable vertex centrality measurethat captures the importance of a node with respect to the explanation of the relationshipbetween the pair of query sets. Using a weighted link graph of entities contained in theEnglish Wikipedia; we demonstrate the usefulness of the proposed measure.,International Semantic Web Conference (Posters & Demos),2013,1
Some Thoughts on OWL-Empowered SPARQL Query Optimization,Andrey Gubichev,Abstract. The discovery of optimal or close to optimal query plans for SPARQL queries is adifficult and challenging problem for query optimisers of RDF engines. Despite the growingvolume of work on optimising SPARQL query answering; using heuristics or data statistics(such as cardinality estimations) there is little effort on the use of OWL constructs for queryoptimisation. OWL axioms can be the basis for the development of schema-awareoptimisation techniques that will allow significant improvements in the performance of RDFquery engines when used in tandem with data statistics or other heuristics. The aim of thispaper is to show the potential of this idea; by discussing a diverse set of cases that depicthow schema information can assist SPARQL query optimisers.,The Semantic Web: ESWC 2016 Satellite Events; Heraklion; Crete; Greece; May 29–June 2; 2016; Revised Selected Papers,2016,*
Some Thoughts on OWL-Empowered SPARQL Query Optimization,Vassilis Papakonstantinou; Giorgos Flouris; Irini Fundulaki; Andrey Gubichev,Abstract The discovery of optimal or close to optimal query plans for SPARQL queries is adifficult and challenging problem for query optimisers of RDF engines. Despite the growingvolume of work on optimising SPARQL query answering; using heuristics or data statistics(such as cardinality estimations) there is little effort on the use of OWL constructs for queryoptimisation. OWL axioms can be the basis for the development of schema-awareoptimisation techniques that will allow significant improvements in the performance of RDFquery engines when used in tandem with data statistics or other heuristics. The aim of thispaper is to show the potential of this idea; by discussing a diverse set of cases that depicthow schema information can assist SPARQL query optimisers.,International Semantic Web Conference,2016,*
How to generate query parameters in RDF benchmarks?,Andrey Gubichev; Renzo Angles; Peter Boncz,In this paper we consider the problem of generating parameters for queries in RDFbenchmarks. We show that uniform random sampling of the substitution parameters is notwell suited for RDF benchmarks; since it results in unpredictable runtime behavior ofqueries. We formulate a formal problem of parameter generation to ensure stable andstatistically significant benchmark results.,Data Engineering Workshops (ICDEW); 2014 IEEE 30th International Conference on,2014,*
Efficient Query Processing in RDF Databases.,Andrey Gubichev; Thomas Neumann; José Ramalho,Page 1. Efficient Query Processing in RDF Databases AUTORES: Andrey Gubichev Munich;Germany Thomas Neumann Munich; Germany José Ramalho Apresentação capítulo 5 Curitiba;10 de novembro de 2016 Page 2. Introdução Itens Abordados: • Análise das consultas SPARQL.• Tipos de indexação de dados RDF. • Formas de armazenamento. • Exemplos de sistemasRDF. Page 3. Introdução Considerações Iniciais: • Aumento expressivo na web nos últimosanos do Linked Data. • Existência de diversos conjuntos de dados contendo milhões de triplas:biomedicina (Uniprot; PubMed); bases de conhecimento (DBpedia; YAGO); governo(Data.gov); entretenimento (MusicBrainz); etc. Page 4. 31 bilhões de triplas publicadas onlineDe acordo com Linked Open Data existem mais de Page 5. Introdução Motivação: • Númerosexpressivos de recursos RDF indicando a …,*,2014,*
RDF-3X,Andrey Gubichev; Stephan Seufert; MPI Srikanta Bedathur,▶ RDF data is a graph ▶ SPARQL 1.1 has introduced the property paths ▶ select * where 1Munichyago:isLocatedIn* ?place l ▶ What entities are reached from Munich via yago:isLocatedIn? ▶We could use joins and unions over the triple store to answer it ▶ Can we do better with a bitof indexing … ▶ Originally; one could also count the number of paths between start and endpoint … ▶ However; this semantics leads to #P-hard problems (M.Arenas; WWW'12) … ▶Now; W3C standard only allows to check for reachability; not counting paths … ▶ a triple store▶ extensive indexing ▶ join ordering with Dynamic Programming ▶ accurate cardinality estimationfor common types of queries ▶ T.Neumann et al; SIGMOD 2009 … ▶ FERRARI index: basedon tree interval labeling; assigns exact and approximate labels to nodes (ICDE'2013) … ▶Runtime: use index plus limited DFS ▶ FERRARI: ► indexes 100 Mln triples of YAGO in …,*,2013,*
Online-routing on the butterfly network: probabilistic analysis,Andrey Gubichev,Definition 1 (Butterfly). The r-dimensional butterfly consists of (r+ 1) 2r nodes and r2r+ 1edges. A node is a pair〈 w; i〉; i is the level of the node; w is the row number (r-bit). An edgelinks two nodes〈 w; i〉 and〈 w; i〉 if and only if i= i+ 1 and either w= w; or w and w differs inthe ith bit.,*,2008,*
