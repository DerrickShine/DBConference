Bidirectional transformations: A cross-discipline perspective,Krzysztof Czarnecki; J Nathan Foster; Zhenjiang Hu; Ralf Lämmel; Andy Schürr; James F Terwilliger,Abstract The GRACE International Meeting on Bidirectional Transformations was held inDecember 2008 near Tokyo; Japan. The meeting brought together researchers andpractitioners from a variety of sub-disciplines of computer science to share research effortsand help create a new community. In this report; we survey the state of the art andsummarize the technical presentations delivered at the meeting. We also describe someinsights gathered from our discussions and introduce a new effort to establish a benchmarkfor bidirectional transformations.,International Conference on Theory and Practice of Model Transformations,2009,255
Towards automatic model synchronization from model transformations,Yingfei Xiong; Dongxi Liu; Zhenjiang Hu; Haiyan Zhao; Masato Takeichi; Hong Mei,Abstract The metamodel techniques and model transformation techniques provide astandard way to represent and transform data; especially the software artifacts in softwaredevelopment. However; after a transformation is applied; the source model and the targetmodel usually co-exist and evolve independently. How to propagate modifications acrossmodels in different formats still remains as an open problem. In this paper we propose anautomatic approach to synchronizing models that are related by model transformations.Given a unidirectional transformation between metamodels; we can automaticallysynchronize models in the metamodels by propagating modifications across the models. Wehave implemented a model synchronization system supporting the Atlas TransformationLanguage (ATL) and have successfully tested our implementation on several ATL …,Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering,2007,176
Deriving structural hylomorphisms from recursive definitions,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Abstract In functional programming; small programs are often glued together to construct acomplex program. Program fusion is an optimizing process whereby these small programsare fused into a single one and intermediate data structures are removed. Recent work hasmade it clear that this process is especially successful if the recursive definitions areexpressed in terms of hylomorphisms. In this paper; we propose an algorithm which canautomatically turn all practical recursive definitions into structural hylomorphisms makingprogram fusion be easily applied.,ACM Sigplan Notices,1996,122
Bidirectionalization transformation based on automatic derivation of view complement functions,Kazutaka Matsuda; Zhenjiang Hu; Keisuke Nakano; Makoto Hamana; Masato Takeichi,Abstract Bidirectional transformation is a pair of transformations: a view function and abackward transformation. A view function maps one data structure called source ontoanother called view. The corresponding backward transformation reflects changes in theview to the source. Its practically useful applications include replicated data synchronization;presentation-oriented editor development; tracing software development; and view updatingin the database community. However; developing a bidirectional transformation is hard;because one has to give two mappings that satisfy the bidirectional properties for systemconsistency. In this paper; we propose a new framework for bidirectionalization that canautomatically generate a useful backward transformation from a view function whileguaranteeing that the two transformations satisfy the bidirectional properties. Our …,ACM SIGPLAN Notices,2007,116
Tupling calculation eliminates multiple data traversals,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi; Akihiko Takano,Abstract Tupling is a well-known transformation tactic to obtain new efficient recursivefunctions by grouping some recursive functions into a tuple. It may be applied to eliminatemultiple traversals over the common data structure. The major difficulty in tuplingtransformation is to find what functions are to be tupled and how to transform the tupledfunction into an efficient one. Previous approaches to tupling transformation are essentiallybased on fold/unfold transformation. Though general; they suffer from the high cost ofkeeping track of function calls to avoid infinite unfolding; which prevents them from beingused in a compiler. To remedy this situation; we propose a new method to expose recursivestructures in recursive definitions and show how this structural information can be exploredfor calculating out efficient programs by means of tupling. Our new tupling calculation …,ACM Sigplan Notices,1997,112
A calculational fusion system HYLO,Yoshiyuki Onoue; Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Abstract Fusion; one of the most useful transformation tactics for deriving efficient programs;is the process whereby separate pieces of programs are fused into a single one; leading toan efficient program without intermediate data structures produced. In this paper; we reportour on-going investigation on the design and implementation of an automatic transformationsystem HYLO which performs fusion transformation in a more systematic and more generalway than any other systems. The distinguished point of our system is its calculational featurebased on simple application of transformation laws rather than traditional search-basedtransformations.,*,1997,102
Bidirectionalizing graph transformations,Soichiro Hidaka; Zhenjiang Hu; Kazuhiro Inaba; Hiroyuki Kato; Kazutaka Matsuda; Keisuke Nakano,Abstract Bidirectional transformations provide a novel mechanism for synchronizing andmaintaining the consistency of information between input and output. Despite manypromising results on bidirectional transformations; these have been limited to the context ofrelational or XML (tree-like) databases. We challenge the problem of bidirectionaltransformations within the context of graphs; by proposing a formal definition of a well-behaved bidirectional semantics for UnCAL; ie; a graph algebra for the known UnQL graphquery language. The key to our successful formalization is full utilization of both therecursive and bulk semantics of structural recursion on graphs. We carefully refine theexisting forward evaluation of structural recursion so that it can produce sufficient traceinformation for later backward evaluation. We use the trace information for backward …,ACM Sigplan Notices,2010,100
A library of constructive skeletons for sequential style of parallel programming,Kiminori Matsuzaki; Hideya Iwasaki; Kento Emoto; Zhenjiang Hu,Abstract With the increasing popularity of parallel programming environments such as PCclusters; more and more sequential programmers; with little knowledge about parallelarchitectures and parallel programming; are hoping to write parallel programs. Numerousattempts have been made to develop high-level parallel programming libraries that useabstraction to hide low-level concerns and reduce difficulties in parallel programming.Among them; libraries of parallel skeletons have emerged as a promising way towards thisdirection. Unfortunately; these libraries are not well accepted by sequential programmers;because of incomplete elimination of lower-level details; ad-hoc selection of libraryfunctions; unsatisfactory performance; or lack of convincing application examples. Thispaper addresses principle of designing skeleton libraries of parallel programming and …,Proceedings of the 1st international conference on Scalable information systems,2006,99
A programmable editor for developing structured documents based on bidirectional transformations,Zhenjiang Hu; Shin-Cheng Mu; Masato Takeichi,Abstract This paper presents a novel editor supporting interactive refinement in thedevelopment of structured documents. The user performs a sequence of editing operationson the document view; and the editor automatically derives an efficient and reliabledocument source and a transformation that produces the document view. The editor isunique in its programmability; in the sense that the transformation can be obtained throughediting operations. The main tricks behind are the utilization of the view-updating techniquedeveloped in the database community; and a new bidirectional transformation language thatcannot only describe the relationship between the document source and its view; but alsodata dependency in the view.,Proceedings of the 2004 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation,2004,97
An algebraic approach to bi-directional updating,Shin-Cheng Mu; Zhenjiang Hu; Masato Takeichi,Abstract In many occasions would one encounter the task of maintaining the consistency oftwo pieces of structured data that are related by some transform—synchronising bookmarksin different web browsers; the source and the view in an editor; or views in databases; toname a few. This paper proposes a formal model of such tasks; basing on a programminglanguage allowing injective functions only. The programmer designs the transformation as ifshe is writing a functional program; while the synchronisation behaviour is automaticallyderived by algebraic reasoning. The main advantage is being able to deal with duplicationand structural changes. The result will be integrated to our structure XML editor in theProgrammable Structured Document project.,Asian Symposium on Programming Languages and Systems,2004,93
Supporting automatic model inconsistency fixing,Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Hui Song; Masato Takeichi; Hong Mei,Abstract Modern development environments often involve models with complex consistencyrelations. Some of the relations can be automatically established through" fixingprocedures". When users update some parts of the model and cause inconsistency; a fixingprocedure dynamically propagates the update to other parts to fix the inconsistency. Existingfixing procedures are manually implemented; which requires a lot of efforts and thecorrectness of a fixing procedure is not guaranteed. In this paper we propose a newlanguage; Beanbag; to support the development of fixing procedures. A Beanbag programdefines and checks a consistency relation similarly to OCL; but the program can also beexecuted in a fixing mode; taking user updates on the model and producing new updates tomake the model satisfy the consistency relation. In this way Beanbag significantly eases …,Proceedings of the the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering,2009,90
Parallelization in calculational forms,Zhenjiang Hu; Masato Takeichi; Wei-Ngan Chin,Abstract The problems involved in developing efficient parallel programs have provedharder than those in developing efficient sequential ones; both for programmers and forcompilers. Although program calculation has been found to be a promising way to solvethese problems in the sequential world; we believe that it needs much more effort to study itseffective use in the parallel world. In this paper; we propose a calculational framework for thederivation of efficient parallel programs with two main innovations:.¿ We propose a novelinductive synthesis lemma based on which an elementary but powerful parallelizationtheorem is developed.¿ We make the first attempt to construct a calculational algorithm forparallelization; deriving associative operators from data type definition and making full useof existing fusion and tupling calculations. Being more constructive; our method is not …,Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages,1998,84
An injective language for reversible computation,Shin-Cheng Mu; Zhenjiang Hu; Masato Takeichi,Abstract Erasure of information incurs an increase in entropy and dissipates heat. Therefore;information-preserving computation is essential for constructing computers that use energymore effectively. A more recent motivation to understand reversible transformations alsocomes from the design of editors where editing actions on a view need to be reflected backto the source data. In this paper we present a point-free functional language; with arelational semantics; in which the programmer is allowed to define injective functions only.Non-injective functions can be transformed into a program returning a history. The languageis presented with many examples; and its relationship with Bennett's reversible Turingmachine is explained. The language serves as a good model for program construction andreasoning for reversible computers; and hopefully for modelling bi-directional updating in …,International Conference on Mathematics of Program Construction,2004,79
Formal derivation of efficient parallel programs by construction of list homomorphisms,Zhenjiang Hu; Hideya Iwasaki; Masato Takechi,Abstract It has been attracting much attention to make use of list homomorphisms in parallelprogramming because they ideally suit the divide-and-conquer parallel paradigm. However;they have been usually treated rather informally and ad hoc in the development of efficientparallel programs. What is worse is that some interesting functions; eg; the maximumsegment sum problem; are basically not list homomorphisms. In this article; we propose asystematic and formal way for the construction of a list homomorphism for a given problemso that an efficient parallel program is derived. We show; with several well-known butnontrivial problems; how a straightforward; and “obviously” correct; but quite inefficientsolution to the problem can be successfully turned into a semantically equivalent “almost listhomomorphism.” The derivation is based on two transformations; namely tupling and …,ACM Transactions on Programming Languages and Systems (TOPLAS),1997,73
A programmable editor for developing structured documents based on bidirectional transformations,Zhenjiang Hu; Shin-Cheng Mu; Masato Takeichi,Abstract This paper presents an application of bidirectional transformation to the design andimplementation of a novel editor supporting interactive refinement in the development ofstructured documents. The user performs a sequence of editing operations on a view of thedocument; and the editor automatically derives an efficient and reliable document sourceand a transformation that produces the document view. The editor is unique in itsprogrammability; in the sense that transformations can be obtained through editingoperations. It uses the view-updating technique developed in the database community and anew bidirectional transformation language that can describe not only the relationshipbetween the document source and its view; but also the data dependency in the view.,Higher-Order and Symbolic Computation,2008,70
Automatic inversion generates divide-and-conquer parallel programs,Kazutaka Morita; Akimasa Morihata; Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Divide-and-conquer algorithms are suitable for modern parallel machines; tendingto have large amounts of inherent parallelism and working well with caches and deepmemory hierarchies. Among others; list homomorphisms are a class of recursive functionson lists; which match very well with the divide-and-conquer paradigm. However; directprogramming with list homomorphisms is a challenge for many programmers. In this paper;we propose and implement a novel systemthat can automatically derive cost-optimal listhomomorphisms from a pair of sequential programs; based on the third homomorphismtheorem. Our idea is to reduce extraction of list homomorphisms to derivation of weak rightinverses. We show that a weak right inverse always exists and can be automaticallygenerated from a wide class of sequential programs. We demonstrate our system with …,ACM SIGPLAN Notices,2007,66
Supporting runtime software architecture: A bidirectional-transformation-based approach,Hui Song; Gang Huang; Franck Chauvel; Yingfei Xiong; Zhenjiang Hu; Yanchun Sun; Hong Mei,Abstract Runtime software architectures (RSA) are architecture-level; dynamicrepresentations of running software systems; which help monitor and adapt the systems at ahigh abstraction level. The key issue to support RSA is to maintain the causal connectionbetween the architecture and the system; ensuring that the architecture represents thecurrent system; and the modifications on the architecture cause proper system changes. Themain challenge here is the abstraction gap between the architecture and the system. In thispaper; we investigate the synchronization mechanism between architecture configurationsand system states for maintaining the causal connections. We identify four requiredproperties for such synchronization; and provide a generic solution satisfying theseproperties. Specifically; we utilize bidirectional transformation to bridge the abstraction …,Journal of Systems and Software,2011,64
GRoundTram: An integrated framework for developing well-behaved bidirectional model transformations,Soichiro Hidaka; Zhenjiang Hu; Kazuhiro Inaba; Hiroyuki Kato; Keisuke Nakano,Bidirectional model transformation is useful for maintaining consistency between twomodels; and has many potential applications in software development including modelsynchronization; round-trip engineering; and software evolution. Despite these attractiveuses; the lack of a practical tool support for systematic development of well-behaved andefficient bidirectional model transformation prevents it from being widely used. In this paper;we solve this problem by proposing an integrated framework called GRoundTram; which iscarefully designed and implemented for compositional development of well-behaved andefficient bidirectional model transformations. GRoundTram is built upon a well-foundedbidirectional framework; and is equipped with a user-friendly language for codingbidirectional model transformation; a new tool for validating both models and bidirectional …,Automated Software Engineering (ASE); 2011 26th IEEE/ACM International Conference on,2011,53
Generating synchronization engines between running systems and their model-based views,Hui Song; Yingfei Xiong; Franck Chauvel; Gang Huang; Zhenjiang Hu; Hong Mei,Abstract The key point to leverage model-based techniques on runtime system managementis to ensure the correct synchronization between the running system and its model-basedview. In this paper; we present a generative approach; and the supporting tool; to makesystematic the development of synchronization engines between running systems andmodels. We require developers to specify “what kinds of elements to manage” as a MOFmeta-model and “how to manipulate those elements using the system's management API”as a so-called access model. From these two specifications; our SM@ RT tool automaticallygenerates the synchronization engine to reflect the running system as a MOF-compliantmodel. We have applied this approach on several practical systems; including the JOnASJEE server.,International Conference on Model Driven Engineering Languages and Systems,2009,53
Make it practical: a generic linear-time algorithm for solving maximum-weightsum problems,Isao Sasano; Zhenjiang Hu; Masato Takeichi; Mizuhito Ogawa,Abstract In this paper we propose a new method for deriving a practical linear-time algorithmfrom the specification of a maximum-weightsum problem: From the elements of a datastructure x; find a subset which satisfies a certain property p and whose weightsum ismaximum. Previously proposed methods for automatically generating linear-time algorithmsare theoretically appealing; but the algorithms generated are hardly useful in practice due toa huge constant factor for space and time. The key points of our approach are to express theproperty p by a recursive boolean function over the structure x rather than a usual logicalpredicate and to apply program transformation techniques to reduce the constant factor. Wepresent an optimization theorem; give a calculational strategy for applying the theorem; anddemonstrate the effectiveness of our approach through several nontrivial examples which …,ACM SIGPLAN Notices,2000,53
Diffusion: Calculating E cient Parallel Programs,Zhenjiang Hu; Masato Takeichi; Hideya Iwasaki,Abstract Parallel primitives (skeletons) intend to encourage programmers to build a parallelprogram from ready-made components for which e cient implementations are known to exist;making the parallelization process easier. However; programmers often su er from the diculty to choose a combination of proper parallel primitives so as to construct efcient parallelprograms. To overcome this di culty; we shall propose a new transformation; called di usion;which can e ciently decompose a recursive de nition into several functions such that eachfunction can be described by some parallel primitive. This allows programmers to describealgorithms in a more natural recursive form. We demonstrate our idea with severalinteresting examples. Our di usion transformation should be signi cant not only indevelopment of new parallel algorithms; but also in construction of parallelizing compilers.,Partial Evaluation and Semantics-Based Program Manipulation PEPM’99,1999,52
Bidirectional interpretation of XQuery,Dongxi Liu; Zhenjiang Hu; Masato Takeichi,Abstract XQuery is a powerful functional language to query XML data. This paper gives abidirectional interpretation of XQuery to address the problem of updating XML data throughmaterialized XQuery views. We first design an expressive bidirectional transformationlanguage; and then translate XQuery expressions into the code of this language. As a result;an XQuery expression can execute in two directions: in the forward direction; it generates amaterialized view from the source XML data; while in the backward direction; it updates thesource data by putting back the updates on the view. we have implemented our approachand applied it to some XQuery use cases from a W3C draft; which confirms the practicabilityof this approach.,Proceedings of the 2007 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation,2007,50
The third homomorphism theorem on trees: downward & upward lead to divide-and-conquer,Akimasa Morihata; Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Parallel programs on lists have been intensively studied. It is well known thatassociativity provides a good characterization for divide-and-conquer parallel programs. Inparticular; the third homomorphism theorem is not only useful for systematic development ofparallel programs on lists; but it is also suitable for automatic parallelization. The theoremstates that if two sequential programs iterate the same list leftward and rightward;respectively; and compute the same value; then there exists a divide-and-conquer parallelprogram that computes the same value as the sequential programs. While there have beenmany studies on lists; few have been done for characterizing and developing of parallelprograms on trees. Naive divide-and-conquer programs; which divide a tree at the root andcompute independent subtrees in parallel; take time that is proportional to the height of …,ACM SIGPLAN Notices,2009,49
Towards a compositional approach to model transformation for software development,Soichiro Hidaka; Zhenjiang Hu; Hiroyuki Kato; Keisuke Nakano,Abstract Model transformation plays an important role in model-driven software developmentthat aims to introduce significant efficiencies and rigor to the theory and practice of softwaredevelopment. Although models may have different notations and representations; they arebasically graphs; and model transformations are thus nothing but graph transformations.Despite a large amount of theoretical work and a lot of experience with research prototypeson graph-based model transformations; it remains an open issue how to compose modeltransformations. In this paper; we report our first attempt at a compositional framework forgraph-based model transformations using the graph querying language UnQL. The mainidea of UnQL is that graph queries are fully captured by structural recursion that is suitablefor efficient composition. We show that the idea can be applied to graph-based model …,Proceedings of the 2009 ACM symposium on Applied Computing,2009,45
A fusion-embedded skeleton library,Kiminori Matsuzaki; Kazuhiko Kakehi; Hideya Iwasaki; Zhenjiang Hu; Yoshiki Akashi,Abstract This paper addresses a new framework for designing and implementing skeletonlibraries; in which each skeleton should not only be efficiently implemented as is usuallydone; but also be equipped with a structured interface to combine it efficiently with otherskeletons. We illustrate our idea with a new skeleton library for parallel programming in C++.It is simple and efficient to use just like other C++ libraries. A distinctive feature of the libraryis its modularity: Our optimization framework treats newly defined skeletons equally toexisting ones if the interface is given. Our current experiments are encouraging; indicatingthat this approach is promising both theoretically and in practice.,European Conference on Parallel Processing,2004,42
An accumulative parallel skeleton for all,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Abstract Parallel skeletons intend to encourage programmers to build a parallel programfrom ready-made components for which efficient implementations are known to exist; makingthe parallelization process simpler. However; it is neither easy to develop efficient parallelprograms using skeletons nor to use skeletons to manipulate irregular data; and moreoverthere lacks a systematic way to optimize skeletal parallel programs. To remedy this situation;we propose a novel parallel skeleton; called accumulate; which not only efficiently describesdata dependency in computation but also exhibits nice algebraic properties formanipulation. We show that this skeleton significantly eases skeletal parallel programmingin practice; efficiently manipulating both regular and irregular data; and systematicallyoptimizing skeletal parallel programs.,European Symposium on Programming,2002,42
Maintaining invariant traceability through bidirectional transformations,Yijun Yu; Yu Lin; Zhenjiang Hu; Soichiro Hidaka; Hiroyuki Kato; Lionel Montrieux,Abstract Following the``convention over configuration" paradigm; model-driven development(MDD) generates code to implement the``default''behaviour that has been specified by atemplate separate from the input model; reducing the decision effort of developers. Forflexibility; users of MDD are allowed to customise the model and the generated code inparallel. A synchronisation of changed model or code is maintained by reflecting them onthe other end of the code generation; as long as the traceability is unchanged. However;such invariant traceability between corresponding model and code elements can be violatedeither when (a) users of MDD protect custom changes from the generated code; or when (b)developers of MDD change the template for generating the default behaviour. A mismatchbetween user and template code is inevitable as they evolve for their own purposes. In …,Proceedings of the 34th International Conference on Software Engineering,2012,41
Calculating accumulations,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Abstract The accumulation strategy consists of generalizing a function over an algebraicdata structure by inclusion of an extra parameter; an accumulating parameter; for reusingand propagating intermediate results. However; there remain two major difficulties in thisaccumulation strategy. One is to determine where and when to generalize the originalfunction. The other; surprisingly not yet receiving its worthy consideration; is how tomanipulate accumulations. To overcome these difficulties; we propose to formulateaccumulations as higher order catamorphisms; and provide several general transformationrules for calculating accumulations (ie; finding and manipulating accumulations) bycalculation-based (rather than a search-based) program transformation methods. Someexamples are given for illustration.,New Generation Computing,1999,40
Supporting parallel updates with bidirectional model transformations,Yingfei Xiong; Hui Song; Zhenjiang Hu; Masato Takeichi,Abstract Model-driven software development often involves several related models. Whenmodels are updated; the updates need to be propagated across all models to make themconsistent. A bidirectional model transformation keeps two models consistent by updatingone model in accordance with the other. However; it does not work when the two models aremodified at the same time. In this paper we propose a new algorithm that wraps anybidirectional transformation into a synchronizer with the help of a model differenceapproach. The synchronizer enables parallel updates by taking the two original models; thetwo updated models as input and producing two new models where the updates aresynchronized. We also examine the requirements for synchronizing parallel updates; anddemonstrate that our algorithm satisfies the requirements if the bidirectional …,International Conference on Theory and Practice of Model Transformations,2009,39
Dagstuhl seminar on bidirectional transformations (BX),Zhenjiang Hu; Andy Schurr; Perdita Stevens; James F Terwilliger,The Dagstuhl BX seminar; held January 16–21; 2011; brought together researchers from 13countries across disciplines that study bidirectional transformations. It was a follow-up of theGRACE International Meeting on Bidirectional Transformations held in December 2008 nearTokyo; Japan [5]. This consisted of short introductions from each of the participants on theirbackground and work; followed by presentations and demonstrations on representativetechnologies from each field; and some open discussion time. A major benefit of the GRACEmeeting was the opportunity for the disciplines to get some initial exposure to each other.The Dagstuhl seminar intended to go a step further and begin to identify commonalitiesbetween the disciplines and start to set a cross-disciplinary research agenda. The first part ofthe seminar consisted of tutorials from each of the four represented disciplines. The …,ACM SIGMOD Record,2011,38
Parallelization via context preservation,Wei-Ngan Chin; Akihiko Takano; Zhenjiang Hu,Abstract program schemes; such as scan or homomorphism; can capture a wide range ofdata parallel programs. While versatile; these schemes are of limited practical use on theirown. A key problem is that the more natural sequential specifications may not haveassociative combine operators required by these schemes. As a result; they often fail to beimmediately identified. To resolve this problem; the authors propose a method tosystematically derive parallel programs from sequential definitions. This method is special inthat it can automatically invent auxiliary functions needed by associative combine operators.Apart from a formalisation; they also provide new theorems; based on the notion of contextpreservation; to guarantee parallelization for a precise class of sequential programs.,Computer Languages; 1998. Proceedings. 1998 International Conference on,1998,38
Combining syntactic and semantic bidirectionalization,Janis Voigtländer; Zhenjiang Hu; Kazutaka Matsuda; Meng Wang,Abstract Matsuda et al.[2007; ICFP] and Voigtländer [2009; POPL] introduced twotechniques that given a source-to-view function provide an update propagation functionmapping an original source and an updated view back to an updated source; subject tostandard consistency conditions. Being fundamentally different in approach; both techniqueshave their respective strengths and weaknesses. Here we develop a synthesis of the twotechniques to good effect. On the intersection of their applicability domains we achieve morethan what a simple union of applying the techniques side by side delivers.,ACM Sigplan Notices,2010,37
Systematic development of correct bulk synchronous parallel programs,Louis Gesbert; Zhenjiang Hu; Frédéric Loulergue; Kiminori Matsuzaki; Julien Tesson,With the current generalisation of parallel architectures arises the concern of applying formalmethods to parallelism. The complexity of parallel; compared to sequential; programs makesthem more error-prone and difficult to verify. Bulk Synchronous Parallelism (BSP) is a modelof computation which offers a high degree of abstraction like PRAM models but yet a realisticcost model based on a structured parallelism. We propose a framework for refining asequential specification toward a functional BSP program; the whole process being donewith the help of the Coq proof assistant. To do so we define BH; a new homomorphicskeleton; which captures the essence of BSP computation in an algorithmic level; and alsoserves as a bridge in mapping from high level specification to low level BSP parallelprograms.,Parallel and Distributed Computing; Applications and Technologies (PDCAT); 2010 International Conference on,2010,34
Ministry of education,Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Hui Song; Masato Takeichi; Hong Mei,Abstract Modern development environments often involve models with complex consistencyrelations. Some of the relations can be automatically established through “fixingprocedures”. When users update some parts of the model and cause inconsistency; a fixingprocedure dynamically propagates the update to other parts to fix the inconsistency. Existingfixing procedures are manually implemented; which requires a lot of efforts and thecorrectness of a fixing procedure is not guaranteed. In this paper we propose a newlanguage; Beanbag; to support the development of fixing procedures. A Beanbag programdefines and checks a consistency relation similarly to OCL; but the program can also beexecuted in a fixing mode; taking user updates on the model and producing new updates tomake the model satisfy the consistency relation. In this way Beanbag significantly eases …,*,2008,34
Parallel skeletons for manipulating general trees,Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Trees are important datatypes that are often used in representing structured datasuch as XML. Though trees are widely used in sequential programming; it is hard to writeefficient parallel programs manipulating trees; because of their irregular and ill-balancedstructures. In this paper; we propose a solution based on the skeletal approach. Weformalize a set of skeletons (abstracted computational patterns) for rose trees (general treesof arbitrary shapes) based on the theory of Constructive Algorithmics. Our skeletons for rosetrees are extensions of those proposed for lists and binary trees. We show that we canimplement the skeletons efficiently in parallel; by combining the parallel binary-treeskeletons for which efficient parallel implementations are already known. As far as we areaware; we are the first who have formalized and implemented a set of simple but …,Parallel Computing,2006,31
Feature-based classification of bidirectional transformation approaches,Soichiro Hidaka; Massimo Tisi; Jordi Cabot; Zhenjiang Hu,Abstract Bidirectional model transformation is a key technology in model-driven engineering(MDE); when two models that can change over time have to be kept constantly consistentwith each other. While several model transformation tools include at least a partial support tobidirectionality; it is not clear how these bidirectional capabilities relate to each other and tosimilar classical problems in computer science; from the view update problem in databasesto bidirectional graph transformations. This paper tries to clarify and visualize the space ofdesign choices for bidirectional transformations from an MDE point of view; in the form of afeature model. The selected list of existing approaches are characterized by mapping themto the feature model. Then; the feature model is used to highlight some unexplored researchlines in bidirectional transformations.,Software & Systems Modeling,2016,30
Towards automatic parallelization of tree reductions in dynamic programming,Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Tree contraction algorithms; whose idea was first proposed by Miller and Reif; areimportant parallel algorithms to implement efficient parallel programs manipulating trees.Despite their efficiency; the tree contraction algorithms have not been widely used due to thedifficulties in deriving the tree contracting operations. In particular; the derivation of the treecontracting operations is much difficult when multiple values are referred and updated ineach step of the contractions. Such computations often appear in dynamic programmingproblems on trees. In this paper; we propose an algebraic approach to deriving treecontraction programs from recursive tree programs; by focusing on the properties ofcommutative semirings. We formalize a new condition for implementing tree reductions withthe tree contraction algorithms; and give a systematic derivation of the tree contracting …,Proceedings of the eighteenth annual ACM symposium on Parallelism in algorithms and architectures,2006,30
Towards systematic parallel programming over mapreduce,Yu Liu; Zhenjiang Hu; Kiminori Matsuzaki,Abstract MapReduce is a useful and popular programming model for data-intensivedistributed parallel computing. But it is still a challenge to develop parallel programs withMapReduce systematically; since it is usually not easy to derive a proper divide-and-conquer algorithm that matches MapReduce. In this paper; we propose a homomorphism-based framework named Screwdriver for systematic parallel programming with MapReduce;making use of the program calculation theory of list homomorphisms. Screwdriver isimplemented as a Java library on top of Hadoop. For any problem which can be resolved bytwo sequential functions that satisfy the requirements of the third homomorphism theorem;Screwdriver can automatically derive a parallel algorithm as a list homomorphism andtransform the initial sequential programs to an efficient MapReduce program. Users need …,European Conference on Parallel Processing,2011,29
Parallelization with tree skeletons,Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Trees are useful data structures; but to design efficient parallel programs over treesis known to be more difficult than to do over lists. Although several important tree skeletonshave been proposed to simplify parallel programming on trees; few studies have beenreported on how to systematically use them in solving practical problems; it is neither clearhow to make a good combination of skeletons to solve a given problem; nor obvious evenhow to find suitable operators used in a single skeleton. In this paper; we report our firstattempt to resolve these problems; proposing two important transformations; the treediffusion transformation and the tree context preservation transformation. The tree diffusiontransformation allows one to use familiar recursive definitions to develop his parallelprograms; while the tree context preservation transformation shows how to derive …,European Conference on Parallel Processing,2003,29
Systematic derivation of tree contraction algorithms,Kiminori Matsuzaki; Zhenjiang Hu; Kazuhiko Kakehi; Masato Takeichi,While tree contraction algorithms play an important role in efficient tree computation inparallel; it is difficult to develop such algorithms due to the strict conditions imposed oncontracting operators. In this paper; we propose a systematic method of deriving efficienttree contraction algorithms from recursive functions on trees. We identify a general recursiveform that can be parallelized into efficient tree contraction algorithms; and present aderivation strategy for transforming general recursive functions to the parallelizable form. Weillustrate our approach by deriving a novel parallel algorithm for the maximum connected-setsum problem on arbitrary trees; the tree-version of the well-known maximum segment sumproblem.,Parallel Processing Letters,2005,26
Monadic combinators for putback style bidirectional programming,Hugo Pacheco; Zhenjiang Hu; Sebastian Fischer,Abstract Bidirectional transformations; in particular lenses; are programs with a forward gettransformation and a backward putback transformation that keep source and view data typessynchronized. Several bidirectional programming languages exist to aid programmers inwriting a (sort of) forward transformation; and deriving a backward transformation for free.However; the maintainability offered by such languages comes at the cost of expressivenessand (more importantly) predictability because the ambiguity of synchronization" handled bythe putback transformation" is solved by default strategies over which programmers havelittle control. In this paper; we argue that controlling such ambiguity is essential forbidirectional transformations and propose a novel language in which programmers write a(sort of) putback transformation; and get the unique get transformation for free. Like …,Proceedings of the acm sigplan 2014 workshop on partial evaluation and program manipulation,2014,25
Synchronizing concurrent model updates based on bidirectional transformation,Yingfei Xiong; Hui Song; Zhenjiang Hu; Masato Takeichi,Abstract Model-driven software development often involves several related models. Whenmodels are updated; the updates need to be propagated across all models to make themconsistent. A bidirectional model transformation keeps two models consistent by updatingone model in accordance with the other. However; it does not work when the two models aremodified at the same time. In this paper we first examine the requirements for synchronizingconcurrent updates. We view a synchronizer for concurrent updates as a function taking thetwo original models and the two updated models as input; and producing two new modelswhere the updates are synchronized. We argue that the synchronizer should satisfy threeproperties that we define to ensure a reasonable synchronization behavior. We thenpropose a new algorithm to wrap any bidirectional transformation into a synchronizer with …,Software & Systems Modeling,2013,25
Delta lenses over inductive types,Hugo Pacheco; Alcino Cunha; Zhenjiang Hu,Abstract Existing bidirectional languages are either state-based or operation-based;depending on whether they represent updates as mere states or as sequences of editoperations. In-between both worlds are delta-based frameworks; where updates arerepresented using alignment relationships between states. In this paper; we formalize deltalenses over inductive types using dependent type theory and develop a point-free delta lenslanguage with an explicit separation of shape and data. In contrast with the already knownissue of data alignment; we identify the new problem of shape alignment and solve it bylifting standard recursion patterns such as folds and unfolds to delta lenses that usealignment to infer meaningful shape updates.,Electronic Communications of the EASST,2012,25
Graph-transformation verification using monadic second-order logic,Kazuhiro Inaba; Soichiro Hidaka; Zhenjiang Hu; Hiroyuki Kato; Keisuke Nakano,Abstract This paper presents a new approach to solving the problem of verification of graphtransformation; by proposing a new static verification algorithm for the Core UnCAL; thequery algebra for graph-structured databases proposed by Bunemann et al. Given a graphtransformation annotated with schema information; our algorithm statically verifies that anygraph satisfying the input schema is converted by the transformation to a graph satisfying theoutput schema. We tackle the problem by first reformulating the semantics of UnCAL intomonadic second-order logic (MSO). The logic-based foundation allows to express theschema satisfaction of transformations as the validity of MSO formulas over graph structures.Then by exploiting the two established properties of UnCAL called bisimulation-genericityand compactness; we reduce the problem to the validity of MSO over trees; which has a …,Proceedings of the 13th international ACM SIGPLAN symposium on Principles and practices of declarative programming,2011,25
A compositional approach to bidirectional model transformation,Soichiro Hidaka; Zhenjiang Hu; Hiroyuki Kato; Keisuke Nakano,Bidirectional model transformation plays an important role in maintaining consistencybetween two models; and has many potential applications in software development;including model synchronization; round-trip engineering; software evolution; multiple-viewsoftware development; and reverse engineering. However; unclear bidirectional semantics;domain-specific bidirectionalization method; and lack of systematic development frameworkare known problems that prevent it from being practically used. In this paper; we propose anovel compositional framework for bidirectional model transformation based on an existinggraph querying language UnQL; so that one can develop various useful bidirectional modeltransformation by combination of a fixed number of primitive bidirectional modeltransformations. We have implemented a prototype system; and the experimental results …,Software Engineering-Companion Volume; 2009. ICSE-Companion 2009. 31st International Conference on,2009,25
Construction of list homomorphisms by tupling and fusion,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Abstract List homomorphisms are functions which can be efficiently computed in parallelsince they ideally suit the divide-sand-conquer paradigm. However; some interestingfunctions; eg; the maximum segment sum problem; are not list homomorphisms. In thispaper; we propose a systematic way of embedding them into list homomorphisms so thatparallel programs are derived. We show; with an example; how a simple; and “obviously”correct; but possibly inefficient solution to the problem can be successfully turned into asemantically equivalent almost homomorphism by means of two transformations: tupling andfusion.,International Symposium on Mathematical Foundations of Computer Science,1996,24
Toward bidirectionalization of ATL with GRoundTram,Isao Sasano; Zhenjiang Hu; Soichiro Hidaka; Kazuhiro Inaba; Hiroyuki Kato; Keisuke Nakano,Abstract ATL is a language for describing model transformations currently in uni-direction. Inour previous work we have shown that transformations of graph structures given in someform can be bidirectionalized and have implemented a system called GRoundTram systemfor bidirectional graph transformations. We say a transformation t is bidirectionalized whenwe obtain a backward transformation t′ so that the pair (t; t′) of transformations satisfiescertain well-behavedness properties. Bidirectional model transformation is used to reflectthe changes in the target model back to the source model; and vice versa. In this paper; as afirst step toward realizing practical bidirectional model transformations; we presentbidirectionalization of core part of the ATL by encoding it in the UnQL language; which isused as a transformation language in the GRoundTram system. We give the algorithm for …,International Conference on Theory and Practice of Model Transformations,2011,23
A compositional framework for developing parallel programs on two-dimensional arrays,Kento Emoto; Zhenjiang Hu; Kazuhiko Kakehi; Masato Takeichi,Computations on two-dimensional arrays such as matrices and images are one of the mostfundamental and ubiquitous things in computational science and its vast application areas;but development of efficient parallel programs on two-dimensional arrays is known to behard. In this paper; we propose a compositional framework that supports users; even withlittle knowledge about parallel machines; to develop both correct and efficient parallelprograms on dense two-dimensional arrays systematically. The key feature of our frameworkis a novel use of the abide-tree representation of two-dimensional arrays. The presentationnot only inherits the advantages of tree representations of matrices where recursive blockedalgorithms can be defined to achieve better performance; but also supports transformationaldevelopment of parallel programs and architecture-independent implementation owing to …,International Journal of Parallel Programming,2007,23
Domain-specific optimization strategy for skeleton programs,Kento Emoto; Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Skeletal parallel programming enables us to develop parallel programs easily bycomposing ready-made components called skeletons. However; a simply-composedskeleton program often lacks efficiency due to overheads of intermediate data structures andcommunications. Many studies have focused on optimizations by fusing successiveskeletons to eliminate the overheads. Existing fusion transformations; however; are toogeneral to achieve adequate efficiency for some classes of problems. Thus; a specific fusionoptimization is needed for a specific class. In this paper; we propose a strategy for domain-specific optimization of skeleton programs. In this strategy; one starts with a normal form thatabstracts the programs of interest; then develops fusion rules that transform a skeletonprogram into the normal form; and finally makes efficient parallel implementation of the …,European Conference on Parallel Processing,2007,22
Deriving parallel codes via invariants,Wei-Ngan Chin; Siau-Cheng Khoo; Zhenjiang Hu; Masato Takeichi,Abstract Systematic parallelization of sequential programs remains a major challenge inparallel computing. Traditional approaches using program schemes tend to be narrower inscope; as the properties which enable parallelism are difficult to capture via ad-hocschemes. In [CTH98]; a systematic approach to parallelization based on the notion ofpreserving the context of recursive sub-terms has been proposed. This approach can beused to derive a class of divide-and-conquer algorithms. In this paper; we enhance themethodology by using invariants to guide the parallelization process. The enhancementenables the parallelization of a class of recursive functions with conditional and tupledconstructs; which were not possible previously. We further show how such invariants can bediscovered and verified systematically; and demonstrate the power of our methodology by …,International Static Analysis Symposium,2000,22
Calculating a New Data Mining Algorithm for,Zhenjiang Hu; Wei-Ngan Chin; Masato Takeichi,Abstract The general goal of data mining is to extract interesting correlated information fromlarge collection of data. A key computationally-intensive subproblem of data mining involvesfinding frequent sets in order to help mine association rules for market basket analysis.Given a bag of sets and a probability; the frequent set problem is to determine which subsetsoccur in the bag with some minimum probability. This paper provides a convincingapplication of program calculation in the derivation of a completely new and fast algorithmfor this practical problem. Beginning with a simple but inefficient specifocation expressed ina functional language; the new algorithm is calculated in a systematic manner from thespecification by applying a sequence of known calculation techniques.,International Symposium on Practical Aspects of Declarative Languages,2000,22
Enforcing a security pattern in stakeholder goal models,Yijun Yu; Haruhiko Kaiya; Hironori Washizaki; Yingfei Xiong; Zhenjiang Hu; Nobukazu Yoshioka,Abstract Patterns are useful knowledge about recurring problems and solutions. Detecting asecurity problem using patterns in requirements models may lead to its early solution. Inorder to facilitate early detection and resolution of security problems; in this paper; weformally describe a role-based access control (RBAC) as a pattern that may occur instakeholder requirements models. We also implemented in our goal-oriented modeling toolthe formally described pattern using model-driven queries and transformations. Applied to anumber of requirements models published in literature; the tool automates the detection andresolution of the security pattern in several goal-oriented stakeholder requirements.,Proceedings of the 4th ACM Workshop on Quality of Protection,2008,21
Gradual refinement,Meng Wang; Jeremy Gibbons; Kazutaka Matsuda; Zhenjiang Hu,Abstract Pattern matching is advantageous for understanding and reasoning about functiondefinitions; but it tends to tightly couple the interface and implementation of a datatype.Significant effort has been invested in tackling this loss of modularity; however; decouplingpatterns from concrete representations while maintaining soundness of reasoning has beena challenge. Inspired by the development of invertible programming; we propose anapproach to abstract datatypes based on a right-invertible language rinv—every functionhas a right (or pre-) inverse. We show how this new design is able to permit a smoothincremental transition from programs with algebraic datatypes and pattern matching; to oneswith proper encapsulation (implemented as abstract datatypes); while maintaining simpleand sound reasoning.,International Conference on Mathematics of Program Construction,2010,20
A new parallel skeleton for general accumulative computations,Hideya Iwasaki; Zhenjiang Hu,Abstract Skeletal parallel programming enables programmers to build a parallel programfrom ready-made components (parallel primitives) for which efficient implementations areknown to exist; making both the parallel program development and the parallelizationprocess easier. Constructing efficient parallel programs is often difficult; however; due todifficulties in selecting a proper combination of parallel primitives and in implementing thiscombination without having unnecessary creations and exchanges of data among parallelprimitives and processors. To overcome these difficulties; we propose a powerful andgeneral parallel skeleton; accumulate; which can be used to naturally code efficientsolutions to problems as well as be efficiently implemented in parallel using MessagePassing Interface (MPI).,International Journal of Parallel Programming,2004,20
BiGUL: a formally verified core language for putback-based bidirectional programming,Hsiang-Shang Ko; Tao Zan; Zhenjiang Hu,Abstract Putback-based bidirectional programming allows the programmer to write only oneputback transformation; from which the unique corresponding forward transformation isderived for free. The logic of a putback transformation is more sophisticated than that of aforward transformation and does not always give rise to well-behaved bidirectionalprograms; this calls for more robust language design to support development of well-behaved putback transformations. In this paper; we design and implement a concise corelanguage BiGUL for putback-based bidirectional programming to serve as a foundation forhigher-level putback-based languages. BiGUL is completely formally verified in thedependently typed programming language Agda to guarantee that any putbacktransformation written in BiGUL is well-behaved.,Proceedings of the 2016 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation,2016,19
Generate; test; and aggregate,Kento Emoto; Sebastian Fischer; Zhenjiang Hu,Abstract MapReduce; being inspired by the map and reduce primitives available in manyfunctional languages; is the de facto standard for large scale data-intensive parallelprogramming. Although it has succeeded in popularizing the use of the two primitives forhiding the details of parallel computation; little effort has been made to emphasize theprogramming methodology behind; which has been intensively studied in the functionalprogramming and program calculation fields. We show that MapReduce can be equippedwith a programming theory in calculational form. By integrating the generate-and-testprograming paradigm and semirings for aggregation of results; we propose a novel parallelprogramming framework for MapReduce. The framework consists of two importantcalculation theorems: the shortcut fusion theorem of semiring homomorphisms bridges …,European Symposium on Programming,2012,19
Generation of efficient programs for solving maximum multi-marking problems,Isao Sasano; Zhenjiang Hu; Masato Takeichi,Abstract Program generation has seen an important role in a wide range of softwaredevelopment processes; where effective calculation rules are critical. In this paper; wepropose a more general calculation rule for generation of efficient programs for solvingmaximum marking problems. Easy to use and implement; our new rule gives a significantextension of the rule proposed by Sasano et al.; allowing multiple kinds of marks as well asmore general description of the property of acceptable markings. We illustrate itseffectiveness using several interesting problems.,International Workshop on Semantics; Applications; and Implementation of Program Generation,2001,19
BiFluX: A bidirectional functional update language for XML,Hugo Pacheco; Tao Zan; Zhenjiang Hu,Abstract Different XML formats are widely used for data exchange and processing; beingoften necessary to mutually convert between them. Standard XML transformation languages;like XSLT or XQuery; are unsatisfactory for this purpose since they require writing a separatetransformation for each direction. Existing bidirectional transformation languages mean tocover this gap; by allowing programmers to write a single program that denotes bothtransformations. However; they often 1) induce a more cumbersome programming style thantheir traditionally unidirectional relatives; to establish the link between source and targetformats; and 2) offer limited configurability; by making implicit assumptions about howmodifications to both formats should be translated that may not be easy to predict. Thispaper proposes a bidirectional XML update language called BIFLUX (BIdirectional …,Proceedings of the 16th International Symposium on Principles and Practice of Declarative Programming,2014,18
A dynamic-priority based approach to fixing inconsistent feature models,Bo Wang; Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Wei Zhang; Hong Mei,Abstract In feature models' construction; one basic task is to ensure the consistency offeature models; which often involves detecting and fixing of inconsistencies in featuremodels. Several approaches have been proposed to detect inconsistencies; but few focuson the problem of fixing inconsistent feature models. In this paper; we propose a dynamic-priority based approach to fixing inconsistent feature models; with the purpose of helpingdomain analysts find solutions to inconsistencies efficiently. The basic idea of our approachis to first recommend a solution automatically; then gradually reach the desirable solution bydynamically adjusting priorities of constraints. To this end; we adopt the constraint hierarchytheory to express the degree of domain analysts' confidence on constraints (ie the prioritiesof constraints) and resolve inconsistencies among constraints. Two case studies have …,International Conference on Model Driven Engineering Languages and Systems,2010,18
Deterministic second-order patterns,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,Abstract Second-order patterns; together with second-order matching; enable concisespecification of program transformation; and have been implemented in several programtransformation systems. However; second-order matching in general is nondeterministic;and the matching algorithm is so expensive that the matching is NP-complete. It is orthodoxto impose constraints on the form of higher-order patterns so as to obtain the desirablematches satisfying certain properties such as decidability and finiteness. In the context ofunification; Miller's higher-order patterns have a single most-general unifier. In this paper;we relax the restriction of his patterns without changing determinism in the context ofmatching instead of unification. As a consequence; our deterministic second-order patternscover a wide class of useful patterns for program transformation. The time-complexity of …,Information Processing Letters,2004,18
Program transformation in calculational form,Akihiko Takano; Zhenjiang Hu; Masato Takeichi,Correctness-preserving program transformation has recently received a particular attentionfor compiler optimization in functional programming [Kelsey and Hudak 1989; Appel 1992;Peyton Jones 1996]. By implementing a compiler using many passes; each of which is atransformation for a particular optimization; one can attain a modular compiler. It is nosurprise that the modularity would increase if transformations are structured; ie constructedin a modular way. Indeed; the program transformation in calculational form (or programcalculation) can help us to attain this goal. Program calculation is a kind of programtransformation based on the theory of Constructive Algorithmics [Bird 1987; Malcolm 1990;Meijer et al. 1991; Fokkinga 1992]; which is a calculus of program derivation based on thetheory of algebra of programming [Bird and De Moor 1997]. In Constructive Algorithmics …,ACM Computing Surveys (CSUR),1998,18
Program calculation in Coq,Julien Tesson; Hideki Hashimoto; Zhenjiang Hu; Frédéric Loulergue; Masato Takeichi,Abstract Program calculation; being a programming technique that derives programs fromspecification by means of formula manipulation; is a challenging activity. It requires humaninsights and creativity; and needs systems to help human to focus on clever parts of thederivation by automating tedious ones and verifying correctness of transformations. Differentfrom many existing systems; we show in this paper that Coq; a popular theorem prover;provides a cheap way to implement a powerful system to support program calculation; whichhas not been recognized so far. We design and implement a set of tactics for the Coq proofassistant to help the user to derive programs by program calculation and to write proofs incalculational form. The use of these tactics is demonstrated through program calculations inCoq based on the theory of lists.,International Conference on Algebraic Methodology and Software Technology,2010,17
Consistent Web site updating based on bidirectional transformation,Keisuke Nakano; Zhenjiang Hu; Masato Takeichi,Abstract A transformation-based Web site can keep the contents of a Web site consistent byfurnishing a single database and a set of transformation programs; each generating a Webpage from the database. However; when someone notices an error or stale content on aWeb page in this style of Web site construction; the Web site maintainer must access apossibly huge database to update the corresponding content. In this paper; we propose anew approach to Web site construction based on bidirectional transformation; and report ourdesign and implementation of a practical updating system called Vu-X. We bring the idea ofbidirectional transformation to Web site construction; describing not only a forwardtransformation for generating Web pages from the database but also a backwardtransformation for reflecting modifications on the Web pages to the database. By use of …,International journal on software tools for technology transfer,2009,17
Ptype system: A featherweight parallelizability detector,Dana N Xu; Siau-Cheng Khoo; Zhenjiang Hu,Abstract Parallel programming is becoming an important cornerstone of general computing.In addition; type systems have significant impact on program analysis. In this paper; wedemonstrate an automated type-based system that soundly detects parallelizability ofsequential functional programs. Our type inference system discovers the parallelizabilityproperty of a sequential program in a modular fashion; by exploring a ring structure amongthe program's operators. It handles self-recursive functions with accumulating parameters;as well as a class of non-linear mutual-recursive functions. Programs whose types areinferred to be parallelizable can be automatically transformed to parallel code in amutumorphic form–a succint model for parallel computation. Transforming into such a form isan important step towards constructing efficient data parallel programs.,Asian Symposium on Programming Languages and Systems,2004,17
TreeCalc: towards programmable structured documents,Masato Takeichi; Zhenjiang Hu; Kazuhiko Kakehi; Yasushi Hayashi; Shin-Cheng Mu; Keisuke Nakano,Abstract A programmable structured document is a structured document with dynamicallycalculated components that can be specified by users in a functional programminglanguage. TreeCalc; a tree version of spreadsheet; is an experimental system demonstratingthe notion; basing on the XML viewer and editor; Fungus; developed by Justsystem.TreeCalc takes an XML document representing; for example; a math expression anddisplays the expression together with the computed result; or a document with taggedchapter and section titles and computes the table of contents of the document. The result ofthe expression or the table of contents is automatically updated when the user edits thedocument.,The 20th Conference of Japan Society for Software Science and Technology,2003,17
An extension of the acid rain theorem,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,ABSTRACT Program fusion (or deforestation) is a well-known transformation whereby compositions of several pieces of code are fused into a single one; resulting in an efficientfunctional program without intermediate data structures. Recent work has made it clear thatfusion transformation is especially successful if recursions are expressed in terms ofhylomorphisms. The point of this success is that fusion transformation proceeds merelybased on a simple but effective rule called Acid Rain Theorem [10]. However; there remainsa problem. The Acid Rain Theo rem can only handle hylomorphisms inducting over a singledata structure. For hylomorphisms; like zip; which induct over multiple data structures; it willleave some of the data structures remained which should be removed. In this paper; weextend the Acid Rain Theorem so that it can deal with such hylomorphisms; enabling …,Functional and Logic Programming,1996,17
Structural recursion for querying ordered graphs,Soichiro Hidaka; Kazuyuki Asada; Zhenjiang Hu; Hiroyuki Kato; Keisuke Nakano,Abstract Structural recursion; in the form of; for example; folds on lists and catamorphisms onalgebraic data structures including trees; plays an important role in functional programming;by providing a systematic way for constructing and manipulating functional programs. It is;however; a challenge to define structural recursions for graph data structures; the mostubiquitous sort of data in computing. This is because unlike lists and trees; graphs areessentially not inductive and cannot be formalized as an initial algebra in general. In thispaper; we borrow from the database community the idea of structural recursion on how torestrict recursions on infinite unordered regular trees so that they preserve the finitenessproperty and become terminating; which are desirable properties for query languages. Wepropose a new graph transformation language called lambdaFG for transforming and …,ACM SIGPLAN Notices,2013,16
Marker-directed optimization of uncal graph transformations,Soichiro Hidaka; Zhenjiang Hu; Kazuhiro Inaba; Hiroyuki Kato; Kazutaka Matsuda; Keisuke Nakano; Isao Sasano,Abstract Buneman et al. proposed a graph algebra called UnCAL (Unstructured CALculus)for compositional graph transformations based on structural recursion; and we have recentlyapplied to model transformations. The compositional nature of the algebra greatly enhancesthe modularity of transformations. However; intermediate results generated betweencomposed transformations cause overhead. Buneman et al. proposed fusion rules thateliminate the intermediate results; but auxiliary rewriting rules that enable the actualapplication of the fusion rules are not apparent so far. UnCAL graph model includes theconcept of markers; which correspond to recursive function call in the structural recursion.We have found that there are many optimization opportunities at rewriting level based onstatic analysis; especially focusing on markers. The analysis can safely eliminate …,International Symposium on Logic-Based Program Synthesis and Transformation,2011,15
Optimization for iterative queries on MapReduce,Makoto Onizuka; Hiroyuki Kato; Soichiro Hidaka; Keisuke Nakano; Zhenjiang Hu,Abstract We propose OptIQ; a query optimization approach for iterative queries in distributedenvironment. OptIQ removes redundant computations among different iterations byextending the traditional techniques of view materialization and incremental view evaluation.First; OptIQ decomposes iterative queries into invariant and variant views; and materializesthe former view. Redundant computations are removed by reusing the materialized viewamong iterations. Second; OptIQ incrementally evaluates the variant view; so that redundantcomputations are removed by skipping the evaluation on converged tuples in the variantview. We verify the effectiveness of OptIQ through the queries of PageRank and k-meansclustering on real datasets. The results show that OptIQ achieves high efficiency; up to fivetimes faster than is possible without removing the redundant computations among …,Proceedings of the VLDB Endowment,2013,14
A grammar-based approach to invertible programs,Kazutaka Matsuda; Shin-Cheng Mu; Zhenjiang Hu; Masato Takeichi,Abstract Program inversion has many applications such as in the implementation ofserialization/deserialization and in providing support for redo/undo; and has been studied bymany researchers. However; little attention has been paid to two problems: how tocharacterize programs that are easy or hard to invert and whether; for each class ofprograms; efficient inverses can be obtained. In this paper; we propose an inversionframework that we call grammar-based inversion; where a program is associated with anunambiguous grammar describing the range of the program. The complexity of the grammarindicates how hard it is to invert the program; while the complexity is related to how efficientan inverse can be obtained.,European Symposium on Programming,2010,14
Program optimizations and transformations in calculation form,Zhenjiang Hu; Tetsuo Yokoyama; Masato Takeichi,Abstract The world of program optimization and transformation takes on a new fascinationwhen viewed through the lens of program calculation. Unlike the traditional fold/unfoldapproach to program transformation on arbitrary programs; the calculational approachimposes restrictions on program structures; resulting in some suitable calculational formssuch as homomorphisms and mutumorphisms that enjoy a collection of generic algebraiclaws for program manipulation. In this tutorial; we will explain the basic idea of programcalculation; demonstrate that many program optimizations and transformations; such as theoptimization technique known as loop fusion and the parallelization transformation; can beconcisely reformalized in calculational form; and show that program transformation incalculational forms is of higher modularity and more suitable for efficient implementation.,International Summer School on Generative and Transformational Techniques in Software Engineering,2005,14
Formal derivation of parallel program for 2-dimensional maximum segment sum problem,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Abstract It has been attracting much attention to make use of list homomorphisms in parallelprogramming because they ideally suit the divide-and-conquer parallel paradigm. However;they have been usually treated rather informally and ad-hoc in the development of efficientparallel programs. This paper reports a case study on systematic and formal development ofa new parallel program for the 2-dimensional maximum segment problem. We show how astraightforward; and “obviously” correct; but quite inefficient solution to the problem can besuccessfully turned into a semantically equivalent “almost list homomorphism” based on twotransformations; namely tupling and fusion; which are defined according to the specificrecursive structures of list homomorphisms.,European Conference on Parallel Processing,1996,14
Enhancing semantic bidirectionalization via shape bidirectionalizer plug-ins,Janis Voigtländer; Zhenjiang Hu; Kazutaka Matsuda; Meng Wang,Abstract Matsuda et al.(Matsuda; K.; Hu; Z.; Nakano; K.; Hamana; M. & Takeichi; M.(2007)Bidirectionalization transformation based on automatic derivation of view complementfunctions. In Proceedings of the International Conference on Functional Programming. ACMPress; pp. 47–58) and Voigtländer (Voigtländer; J.(2009) Bidirectionalization for free! InProceedings of Principles of Programming Languages. ACM Press; pp. 165–176) haveintroduced two techniques that given a source-to-view function provide an updatepropagation function mapping an original source and an updated view back to an updatedsource; subject to standard consistency conditions. Previously; we developed a synthesis ofthe two techniques; based on a separation of shape and content aspects (Voigtländer; J.;Hu; Z.; Matsuda; K. & Wang; M.(2010) Combining syntactic and semantic …,Journal of Functional Programming,2013,13
Filter-embedding semiring fusion for programming with MapReduce,Kento Emoto; Sebastian Fischer; Zhenjiang Hu,Abstract We show that MapReduce; the de facto standard for large scale data-intensiveparallel programming; can be equipped with a programming theory in calculational form. Byintegrating the generate-and-test programming paradigm and semirings for aggregation ofresults; we propose a novel parallel programming framework for MapReduce. Theframework consists of two important calculation theorems: the shortcut fusion theorem ofsemiring homomorphisms bridges the gap between specifications and efficientimplementations; and the filter-embedding theorem helps to develop parallel programs in asystematic and incremental way.,Formal Aspects of Computing,2012,13
Bidirectional transformation" bx"(dagstuhl seminar 11031),Zhenjiang Hu; Andy Schürr; Perdita Stevens; James Terwilliger,Abstract Bidirectional transformations bx are a mechanism for maintaining the consistency oftwo (or more) related sources of information. Researchers from many different areas ofcomputer science including databases (DB); graph transformations (GT); softwareengineering (SE); and programming languages (PL) are actively investigating the use of bxto solve a diverse set of problems. Although researchers have been actively working onbidirectional transformations in the above mentioned communities for many years already;there has been very little cross-discipline interaction and cooperation so far. The purpose ofa first International Meeting on Bidirectional Transformations (GRACE-BX); held inDecember 2008 near Tokyo; was therefore to bring together international elites; promisingyoung researchers; and leading practitioners to share problems; discuss solutions; and …,Dagstuhl Reports,2011,13
Maximum marking problems with accumulative weight functions,Isao Sasano; Mizuhito Ogawa; Zhenjiang Hu,Abstract We present a new derivation of efficient algorithms for a class of optimizationproblems called maximum marking problems. We extend the class of weight functions usedin the specification to allow for weight functions with accumulation; which is particularlyuseful when the weight of each element depends on adjacent elements. This extension ofweight functions enables us to treat more interesting optimization problems such as a variantof the maximum segment sum problem and the fair bonus distribution problem. Thecomplexity of the derived algorithm is linear with respect to the size of the input data.,International Colloquium on Theoretical Aspects of Computing,2005,13
Diff: A powerful parallel skeleton,Seiichi Adachi; Hideya Iwasaki; Zhenjiang Hu,Abstract Skeleton parallel programming encourages programmers to build a parallelprogram from ready-made components for which efficient implementations are known toexist; making both the parallel program development and the parallelization process easier.However; programmers often suffer from the difficulty to chooseaproper combination ofparallel primitives so as to construct efficient parallel programs. To overcome this difficulty;we propose a new powerful parallel skeleton diff derived from the diffusion theorem;showing how it can be used to naturally code efficient solutions to problems; and how it canbe efficiently implementedin parallel using MPI (Message Passing Interface). Keywords:Parallel Skeleton; Bird--Meertens Formalism; Program Transformation; MPI. 1 IntroductionParallel programming has proved to be a difficult task; requiring expert knowledge of both …,In: The 2000 International Conference on Parallel and Distributed Processing Techniques and Application. Volume 4.; Las Vegas; CSREA,2000,12
Promotional transformation of monadic programs,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,ABSTRACT Monads are becoming an increasingly important tool for structural functionalprogramming; because they provide a uniform framework for describing a wide range ofprogramming language features. To facilitate program transformation; Fokkinga derived asufficient assumption under which there is a kind of so-called monadic catamorphisms whichsatisfy several general laws useful for the transformation of monadic programs. However; histheory is too restrictive to be applied. In this paper; we propose a new theory on monadiccatamorphism by moving Fokkinga's assumption on the monad to the condition on a mapbetween monadic algebras so that our theory is valid for arbitrary monads including; forexample; the state monad that is not allowed in Fokkinga's theory. Our theory coversFokkinga's as a special case but can be applied to a wider class of monadic programs …,Fuji International Workshop on Functional and Logic Programming,1995,12
Determination of BrO3− by Flow Injection Analysis with 5-Br-PADAP AND SCN−,Chen Xingguo; Zhou Xingwei; Hu Zhide; Kou Zongyan,Abstract An original method is established to determine microamounts of BrO3− in KC103 byflow injection analysis. A cooperative reaction mechanism is also proposed based on theformation of a red-violet and metastable triatomic ion association 5-Br-PADAPH2 2. BrO3−.SCN−; which shows maximum absorbence at 550 nm. The method offers the advantages ofsimplicity; rapidity and sensitivity. Beer's law obeyed from 0.25 to 2.56 μg/mL of BrO3−; and90 determinations per hour is permitted under optimized variables by a modified simplexmethod.,Analytical letters,1990,12
How functional programming mattered,Zhenjiang Hu; John Hughes; Meng Wang,Abstract In 1989 when functional programming was still considered a niche topic; Hugheswrote a visionary paper arguing convincingly 'why functional programming matters'. Morethan two decades have passed. Has functional programming really mattered? Our answer isa resounding 'Yes!'. Functional programming is now at the forefront of a new generation ofprogramming technologies; and enjoying increasing popularity and influence. In this paper;we review the impact of functional programming; focusing on how it has changed the waywe may construct programs; the way we may verify programs; and fundamentally the way wemay think about programs.,National Science Review,2015,11
The essence of bidirectional programming,Sebastian Fischer; Zhenjiang Hu; Hugo Pacheco,Abstract Bidirectional transformations (BXs); programs with a forward transformation and abackward transformation that maintain consistency between input and output; are routinelywritten in ways that do not let programmers specify their behavior completely. Severalbidirectional programming languages exist to aid programmers in writing BXs with increasedmaintainability but decreased expressiveness. Such languages allow programmers to writeBXs as one program for both directions; which is easier to maintain than separate programsfor each direction. However; the maintainability provided by existing bidirectional languagescomes at the cost of expressiveness because the ambiguity of synchronization is solved bydefault strategies which are hidden from programmers. The programmers' inability toinfluence synchronization strategies has led to the proposal of a vast number of …,Science China Information Sciences,2015,11
Efficient query evaluation on distributed graphs with Hadoop environment,Le-Duc Tung; Quyet Nguyen-Van; Zhenjiang Hu,Abstract Graph has emerged as a powerful data structure to describe various data. Queryevaluation on distributed graphs takes much cost due to the complexity of links among sites.Dan Suciu has proposed algorithms for query evaluation on semistructured data that is arooted; edge-labeled graph; and algorithms are proved to be efficient in terms ofcommunication steps and data transferring during the evaluation. However; onedisadvantage is that communication data are collected to one single site; which leads to abottleneck in the evaluation for real-life data. In this paper; we propose two algorithms toimprove Dan Suciu's algorithms: one-pass algorithm is to significantly reduce a largeamount of redundant data in the evaluation; and iter_acc algorithm is to resolve thebottleneck. Then; we design an efficient implementation with only one MapReduce job for …,Proceedings of the Fourth Symposium on Information and Communication Technology,2013,11
Towards Manipulation of Mutually Recursive Functions.,Hideya Iwasaki; Zhenjiang Hu; Masato Takeichi,In functional programming; Constructive Algorithmics is one of the promising approaches toprogram transformation; especially to fusion; in which a concept called hylomorphism playsquite an important role. However; previous studies have mainly focused on programsconstructed by single recursive functions; whereas pro grams constructed by mutualrecursion have been little investigated; particularly with respect to their practical use foroptimizing functional programs. In this paper; we shall formalize mutual recursive data typesin terms of bifunctors and extend hylomorphisms to describe mutual recursive functions onthis type. It is shown that theorems (transformation rules) for original hylomorphisms alsohold while keeping the same form for extended (mutual) hylomorphisms. As a result;program transformation by calculation; which mechanically applies these theorems; is …,Fuji International Symposium on Functional and Logic Programming,1998,11
A parameterized graph transformation calculus for finite graphs with monadic branches,Kazuyuki Asada; Soichiro Hidaka; Hiroyuki Kato; Zhenjiang Hu; Keisuke Nakano,Abstract We introduce a lambda calculus λ T FG for transformations of finite graphs bygeneralizing and extending an existing calculus UnCAL. Whereas UnCAL can treat onlyunordered graphs; λ T FG can treat a variety of graph models: directed edge-labeled graphswhose branch styles are represented by monads T. For example; λ T FG can treat unorderedgraphs; ordered graphs; weighted graphs; probability graphs; and so on; by using thepowerset monad; list monad; multiset monad; probability monad; respectively. In λ T FG;graphs are considered as extension of tree data structures; ie as infinite (regular) trees; sothe semantics is given with bisimilarity. A remarkable feature of UnCAL and λ T FG isstructural recursion for graphs; which gives a systematic programming basis like that fortrees. Despite the non-well-foundedness of graphs; by suitably restricting the structural …,Proceedings of the 15th Symposium on Principles and Practice of Declarative Programming,2013,10
Calculation rules for warming-up in fusion transformation,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,Abstract Warm-up transformation is an important preprocess for shortcut fusion. In this paper;we formalize the warm-up transformation by proposing a set of general and powerfulcalculation rules that can be directly implemented with higher-order pattern matching. Thenewly formalized warm-up transformation can deal with programs that existing methods mayfail; and have been efficiently implemented with the Yicho calculation system. One importantadvantage of our calculational approach is its compatibility with other calculations; such asfusion; tupling; accumulation; and parallelization. Therefore; warm-up transformation in thisform can coexist well with many other calculations in the same system.,Trends in Func. Programming,2005,10
Refactoring pattern matching,Meng Wang; Jeremy Gibbons; Kazutaka Matsuda; Zhenjiang Hu,Abstract Defining functions by pattern matching over the arguments is advantageous forunderstanding and reasoning; but it tends to expose the implementation of a datatype.Significant effort has been invested in tackling this loss of modularity; however; decouplingpatterns from concrete representations while maintaining soundness of reasoning has beena challenge. Inspired by the development of invertible programming; we propose anapproach to program refactoring based on a right-invertible language rinv—every functionhas a right (or pre-) inverse. We show how this new design is able to permit a smoothincremental transition from programs with algebraic datatypes and pattern matching; to oneswith proper encapsulation; while maintaining simple and sound reasoning.,Science of Computer Programming,2013,9
Issues in representing domain-specific concerns in model-driven engineering,Lionel Montrieux; Yijun Yu; Michel Wermelinger; Zhenjiang Hu,The integration of domain-specific concepts in a model-driven engineering (MDE) approachraises a number of interesting research questions. There are two possibilities to representthese concepts. The first one focuses on models that contain domain-specific concepts only;ie domain-specific modelling languages (DSML). The second one advocates the integrationof domain-specific concepts in general-purpose models; using what we will refer to in thispaper as domain-specific modelling annotation languages (DSMAL). In this position paper;we argue that each approach is particularly suited for specific activities and specific actors;and show how they can be developed and used together. We also highlight the challengescreated by the use of two representations; such as the evaluation of models OCL constraintsand the synchronisation between the two representations. As an illustration; we present …,Modeling in Software Engineering (MiSE); 2013 5th International Workshop on,2013,9
A Java library for bidirectional XML transformation,Dongxi Liu; Zhenjiang Hu; Masato Takeichi; Kazuhiko Kakehi; Hao Wang,We propose a Java library BiXJ for bidirectional XML transformation. A bidirectionaltransformation generates target XML documents from source XML documents in forwardtransformations; and updates source documents in backward transformations by reflectingback modifications on target documents. The benefit of using BiXJ is that users can get thecorresponding backward transformation automatically just by writing one forwardtransformation. BiXJ has addressed several limitations of the existing bidirectionaltransformation languages; and can be used for general purpose XML processing. Forexample; bidirectional XPath expressions written in BiXJ can be used to locate and extractdata from XML documents. To validate the usability and expressiveness of BiXJ; we havebidirectionalized some typical examples of XQuery and XSLT with this library. The results …,Information and Media Technologies,2007,9
Bidirectionalizing tree transformation languages: A case study,Shin-Cheng Mu; Zhenjiang Hu; Masato Takeichi,抄録 A transformation from the source data to a target view is said to be bidirectional if; whenthe target is altered; the transformation somehow induces a way to reflect the changes backto the source; with the updated source satisfying certain healthiness conditions. Severalbidirectional transformation languages have been proposed. In this paper; on the otherhand; we aim at making existing transformations bidirectional. As a case study we chose theHaskell combinator library; HaXML; and embed it into Inv; a language the authors previouslydeveloped to deal with bidirectional updating. With the embedding; existing HaXMLtransformations gain bidirectionality.,Information and Media Technologies,2007,9
Iterative-free program analysis,Mizuhito Ogawa; Zhenjiang Hu; Isao Sasano,Abstract Program analysis is the heart of modern compilers. Most control flow analyses arereduced to the problem of finding a fixed point in a certain transition system; and such fixedpoint is commonly computed through an iterative procedure that repeats tracing untilconvergence. This paper proposes a new method to analyze programs through recursivegraph traversals instead of iterative procedures; based on the fact that most programs(without spaghetti GOTO) have well-structured control flow graphs; graphs with boundedtree width. Our main techniques are; an algebraic construction of a control flow graph; calledSP Term; which enables control flow analysis to be defined in a natural recursive form; andthe Optimization Theorem; which enables us to compute optimal solution by dynamicprogramming. We illustrate our method with two examples; dead code detection and …,ACM SIGPLAN Notices,2003,9
Similarity based retrieval from sequence databases using automata as queries,A Prasad Sistla; Tao Hu; Vikas Chowdhry,Abstract Similarity based retrieval from sequence databases is of importance in manyapplications such as time-series; video and textual databases. In this paper; automata basedformalisms are introduced for specifying queries over such databases. Various measuresdefining the distance of a database sequence from an automaton are defined. Efficientmethods for similarity based retrieval are presented for each of the distance measures.These methods answer nearest neighbor queries (ie retrieval of k closest subsequences); orrange queries (ie; retrieval of all sequences with in a given distance).,Proceedings of the eleventh international conference on Information and knowledge management,2002,9
Implementation of Parallel Tree Skeletons on Distributed Systems.,Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract. Trees are useful data types; but developing efficient parallel programsmanipulating trees is known to be difficult; because of their irregular and imbalancestructure. Parallel tree skeletons are designed to ease parallel programming by encouragingprogrammers to build parallel programs by combining them. However; for distributedsystems; efficient implementations of these parallel tree skeletons are known to be hard. Inthis paper; we propose an implementation of parallel tree skeletons that run efficiently ondistributed systems. Our approach is as follows; first we partition a tree by using m-bridgetechnique; and locally compute by composing functions; then propagate the results over thetree. The results of several experiments shows that our approach is promising; even if thetree is imbalanced. Furthermore; we present the conditions for efficient implementation....,APLAS,2002,9
Impact of substrate bias on radiation-induced edge effects in MOSFETs,Hu Zhi-Yuan; Liu Zhang-Li; Zhang Zheng-Xuan; Ning Bing-Xu; Chen Ming; Bi Da-Wei; Zou Shi-Chang,Abstract This paper investigates the effects of gamma-ray irradiation on the Shallow-TrenchIsolation (STI) leakage currents in 180-nm complementary metal oxide semiconductortechnology. No hump effect in the subthreshold region is observed after irradiation; which isconsidered to be due to the thin STI corner oxide thickness. A negative substrate bias couldeffectively suppress the STI leakage; but it also impairs the device characteristics. The three-dimensional simulation is introduced to understand the impact of substrate bias. Moreover;we propose a simple method for extracting the best substrate bias value; which not onlyeliminates the STI leakage but also has the least impact on the device characteristics.,Chinese Physics B,2011,8
Total ionizing dose effect of 0.18 μm nMOSFETs,Zhang-Li Liu; Zhi-Yuan Hu; Zheng-Xuan Zhang; Hua Shao; Bing-Xu Ning; Da-Wei Bi; Ming Chen; Shi-Chang Zou,辐照前后关态漏电流尧阈值电压尧跨导尧栅电流尧亚阈值斜率等特性参数的变化袁研究深亚微米器件的总剂量效应援通过在隔离氧化物中引入等效陷阱电荷袁三维模拟结果与实验结果符合很好援深亚微米器件栅氧化层对总剂量辐照不敏感袁浅沟槽隔离氧化物是导致器件性能退化的主要因素援,*,2011,8
Generators-of-generators library with optimization capabilities in fortress,Kento Emoto; Zhenjiang Hu; Kazuhiko Kakehi; Kiminori Matsuzaki; Masato Takeichi,Abstract A large number of studies have been conducted on parallel skeletons andoptimization theorems over skeleton programs to resolve difficulties with parallelprogramming. However; two nontrivial tasks still remain unresolved when we need nesteddata structures: The first is composing skeletons to generate and consume them; and thesecond is applying optimization theorems to obtain efficient parallel programs. In this paper;we propose a novel library called Generators of Generators (GoG) library. It provides a set ofprimitives; GoGs; to produce nested data structures. A program developed with these GoGsis automatically optimized by the optimization mechanism in the library; so that its asymptoticcomplexity can be improved. We demonstrate its implementation on the Fortress languageand report some experimental results.,European Conference on Parallel Processing,2010,8
Bidirectionalizing tree transformations,Zhenjiang Hu; Kento Emoto; Shin-Cheng Mu; Masato Takeichi,Abstract. A transformation from the source data to a target view is said to be bidirectional if;when the target is altered; the transformation somehow induces a way to reflect the changesback to the source. Several domain-specific bidirectional transformation languages havebeen proposed. In this paper; we intend to show that most existing unidirectional treetransformations can be made bidirectional. Therefore it may be not really necessary todesign new domain-specific languages for bidirectional transformation. As a case study; weconsider the combinator library HaXML; which has been widely used in the Haskellcommunity for generating; editing; and transforming XML documents. We show that anytransformation in HaXML can be fully compiled into a bidirectional transformation.,Workshop on New Approaches to Software Construction (WNASC 2004),2004,8
An Algebraic Interface for GETA Search Engine,Takuma Murakami; Zhenjiang Hu; Shingo Nishioka; Akihiko Takano; Masato Takeichi,Abstract GETA is a library that implements high performance method for associativecomputation to be used as a basis of various document processing including searching orclustering. We proposed an algebraic view for the GETA engine with concreteimplementation of an interface which connects the high level view with the underlyingefficient library. Users can write highly abstract programs in a calculational way through theinterface and utilize program transformation techniques formalized as algebraic laws. Theinterface incorporates the algebraic operations into GETA basic operations which can beexecuted quite efficiently.,Proceedings of Program and Programming Language Workshop; Japan,2004,8
Towards a modular program derivation via fusion and tupling,Wei-Ngan Chin; Zhenjiang Hu,Abstract We show how programming pearls can be systematically derived via fusion;followed by tupling transformations. By focusing on the elimination of intermediate datastructures (fusion) followed by the elimination of redundant calls (tupling); we systematicallyrealise both space and time efficient algorithms from naive specifications. We illustrate ourapproach using a well-known maximum segment sum (MSS) problem; and a less-knownmaximum segment product (MSP) problem. While the two problems share similarspecifications; their optimised codes are significantly different. This divergence in thetransformed codes do not pose any difficulty. By relying on modular techniques; we are ableto systematically reuse both code and transformation in our derivation.,International Conference on Generative Programming and Component Engineering,2002,8
BiYacc: Roll your parser and reflective printer into one,Zirun Zhu; Hsiang-Shang Ko; Pedro Miguel Ribeiro Martins; João Alexandre Saraiva; Zhenjiang Hu,Language designers usually need to implement parsers and printers. Despite being tworelated programs; in practice they are designed and implemented separately. This approachhas an obvious disadvantage: as a language evolves; both its parser and printer need to beseparately revised and kept synchronised. Such tasks are routine but complicated and error-prone. To facilitate these tasks; we propose a language called BiYacc; whose programsdenote both a parser and a printer. In essence; BiYacc is a domain-speciﬁc language forwriting putback-based bidirectional transformations—the printer is a putback transformation;and the parser is the corresponding get transformation. The pairs of parsers and printersgenerated by BiYacc are thus always guaranteed to satisfy the usual round-trip properties.The highlight that distinguishes this reﬂective printer from others is that the printer—being …,4th International Workshop on Bidirectional Transformations co-located with Software Technologies: Applications and Foundations (STAF 2015),2015,7
Writing bidirectional model transformations as intentional updates,Tao Zan; Hugo Pacheco; Zhenjiang Hu,Abstract Model synchronization plays an important role in model-driven softwaredevelopment. Bidirectional model transformation approaches provide techniques fordevelopers to specify the bidirectional relationship between source and target models; whilekeeping related models synchronized for free. Since models of interest are usually not in aone-to-one correspondence; this synchronization process is inherently ambiguous.Nevertheless; existing bidirectional model trans-formation tools focus mainly on enforcingconsistency and provide developers only limited control over how models are synchronized;solving the latent ambiguity via default strategies whose behavior is unclear to developers.In this paper; we propose a novel approach in which developers write update programs thatsuccinctly describe how a target model can be used to update a source model; such that …,Companion Proceedings of the 36th International Conference on Software Engineering,2014,7
Validity checking of putback transformations in bidirectional programming,Zhenjiang Hu; Hugo Pacheco; Sebastian Fischer,Abstract A bidirectional transformation consists of pairs of transformations—a forwardtransformation get produces a target view from a source; while a putback transformation putputs back modifications on the view to the source—satisfying sensible roundtrip properties.Existing bidirectional approaches are get-based in that one writes (an artifact resembling) aforward transformation and a corresponding backward transformation can be automaticallyderived. However; the unavoidable ambiguity that stems from the underspecification of putoften leads to unpredictable bidirectional behavior; making it hard to solve nontrivialpractical synchronization problems with existing bidirectional transformation approaches.Theoretically; this ambiguity problem could be solved by writing put directly and deriving get;but differently from programming with get it is easy to write invalid put functions. An open …,International Symposium on Formal Methods,2014,7
Towards co-evolution in model-driven development via bidirectional higher-order transformation,Bernhard Hoisl; Zhenjiang Hu; Soichiro Hidaka,In model-Driven development (MDD); metamodels; models; and model transformations areinterdependent. A change in one artifact must be reflected in all other related artifacts.Regardless of their dependencies;(meta) models and transformations can evolveautonomously rendering referenced artifacts invalid. Coupling the evolution of models totheir corresponding metamodels tries to prevent such mismatches; but is currently limited toone-way adaptations and does not take model transformations into account. To eliminatethese short-comings; we combine first-class transformation models with bidirectionaltransformations (BX). Our generic approach integrates BX into well-established Eclipse-based MDD tools; thereby neither being restricted to a specific modeling nor modeltransformation language.,Model-Driven Engineering and Software Development (MODELSWARD); 2014 2nd International Conference on,2014,7
Programming with BSP homomorphisms,Joeffrey Legaux; Zhenjiang Hu; Frédéric Loulergue; Kiminori Matsuzaki; Julien Tesson,Abstract Algorithmic skeletons in conjunction with list homomorphisms play an important rolein formal development of parallel algorithms. We have designed a notion of homomorphismdedicated to bulk synchronous parallelism. In this paper we derive two application using thistheory: sparse matrix vector multiplication and the all nearest smaller values problem. Weimplement a support for BSP homomorphism in the Orléans Skeleton Library andexperiment it with these two applications.,European Conference on Parallel Processing,2013,7
Beanbag: Operation-based Synchronization with IntraRelations,Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Song Hui; Hong Mei; Masato Takeichi,Abstract Proceedings The GRACE technical reports are published as a means to ensuretimely dissemi-nation of scholarly and technical work on a non-commercial basis. Copyrightand all rights therein are maintained by the authors or by other copyright holders; notwith-standing that they have offered their works here electronically. It is understood that allpersons copying this information will adhere to the terms and constraints invoked by eachauthor's copyright. These works may not be reposted without the explicit permission of thecopyright holder.,Grace Technical Reports; GRACE-TR-2008–04; National Institute of Informatics,2008,7
Calculation carrying programs-how to code program transformations,Masato Takeichi; Zhenjiang Hu,Proposes a new mechanism called" calculation-carrying programs" that can relax thetension between efficiency and clarity in programming. The idea is to accompany clearprograms with some calculation specifying the intention of how to manipulate the programsto be efficient. This calculation specification can be executed automatically by our compilerto derive efficient programs. As a result; each calculation-carrying program becomes acomplete document; including a concise specification of the given problem; as well as aneffective way to derive both efficient and correct code.,Principles of Software Evolution; 2000. Proceedings. International Symposium on,2000,7
Catamorphism-based transformation of functional programs,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Summary. Accumulations are operators on structured object that proceed their computationon each element of the object keeping some intermediate results. Accumulations are widelyused in the design of e cient sequential and parallel programs. The purpose of this paper isto deal with the transformation on accumulations so that more ecient programs can bederived. We formulate accumulations by means of higher order catamorphisms and proposea promotion theorem for accumulations. Some examples are given to explain our method.,Technique report METR,1994,7
Towards systematic parallelization of graph transformations over Pregel,Le-Duc Tung; Zhenjiang Hu,Abstract Graphs can be used to model many kinds of data; from traditional datasets to socialnetworks or semi-structured datasets. To process large graphs; many systems have beenproposed. The Pregel programming model is popular; thanks to its scalability. AlthoughPregel is simple to understand and use; it is of low-level in programming and requiresdevelopers to write programs that are hard to maintain and need to be carefully optimized.On the other hand; structural recursion is powerful to systematically construct efficientparallel programs on lists; arrays and trees; but it has not yet been applied to graphs. In thispaper; we propose an efficient method for parallel evaluation of structural recursion ongraphs; which is suitable for Pregel. We design and implement a high-level parallelprogramming framework where a domain-specific language (DSL) is provided to ease the …,International Journal of Parallel Programming,2017,6
A clear picture of lens laws,Sebastian Fischer; Zhenjiang Hu; Hugo Pacheco,Abstract A lens is an optical device which refracts light. Properly adjusted; it can be used toproject sharp images of objects onto a screen—a principle underlying photography as wellas human vision. Striving for clarity; we shift our focus to lenses as abstractions forbidirectional programming. By means of standard mathematical terminology as well asintuitive properties of bidirectional programs; we observe different ways to characterizelenses and show exactly how their laws interact. Like proper adjustment of optical lenses isessential for taking clear pictures; proper organization of lens laws is essential for forming aclear picture of different lens classes. Incidentally; the process of understanding bidirectionallenses clearly is quite similar to the process of taking a good picture. By showing that it isexactly the backward computation which defines lenses of a certain standard class; we …,International Conference on Mathematics of Program Construction,2015,6
Formal derivation and extraction of a parallel program for the all nearest smaller values problem,Frédéric Loulergue; Simon Robillard; Julien Tesson; Joeffrey Legaux; Zhenjiang Hu,Abstract The All Nearest Smaller Values (ANSV) problem is an important problem forparallel programming as it can be used to solve several problems and is one of the phasesof several other parallel algorithms. We formally develop by construction a functional parallelprogram for solving the ANSV problem using the theory of Bulk Synchronous Parallel (BSP)homomorphisms within the Coq proof assistant. The performances of the Bulk SynchronousParallel ML program obtained from Coq is compared to a version derived without softwaresupport (pen-and-paper) and implemented using the Orléans Skeleton Library of algorithmicskeletons; and to a (unproved correct) direct implementation of the BSP algorithm of He andHuang.,Proceedings of the 29th Annual ACM Symposium on Applied Computing,2014,6
Supporting feature model refinement with updatable view,Bo Wang; Zhenjiang Hu; Qiang Sun; Haiyan Zhao; Yingfei Xiong; Wei Zhang; Hong Mei,Abstract In the research of software reuse; feature models have been widely adopted tocapture; organize and reuse the requirements of a set of similar applications in a softwaredomain. However; the construction; especially the refinement; of feature models is a labor-intensive process; and there lacks an effective way to aid domain engineers in refiningfeature models. In this paper; we propose a new approach to support interactive refinementof feature models based on the view updating technique. The basic idea of our approach isto first extract features and relationships of interest from a possibly large and complicatedfeature model; then organize them into a comprehensible view; and finally refine the featuremodel through modifications on the view. The main characteristics of this approach aretwofold: a set of powerful rules (as the slicing criterion) to slice the feature model into a …,Frontiers of Computer Science,2013,6
Total ionizing dose effect in an input/output device for flash memory,Liu Zhang-Li; Hu Zhi-Yuan; Zhang Zheng-Xuan; Shao Hua; Chen Ming; Bi Da-Wei; Ning Bing-Xu; Zou Shi-Chang,Abstract Input/output devices for flash memory are exposed to gamma ray irradiation. Totalionizing dose has been shown great influence on characteristic degradation of transistorswith different sizes. In this paper; we observed a larger increase of off-state leakage in theshort channel device than in long one. However; a larger threshold voltage shift is observedfor the narrow width device than for the wide one; which is well known as the radiationinduced narrow channel effect. The radiation induced charge in the shallow trench isolationoxide influences the electric field of the narrow channel device. Also; the drain biasdependence of the off-state leakage after irradiation is observed; which is called theradiation enhanced drain induced barrier lowing effect. Finally; we found that substrate biasvoltage can suppress the off-state leakage; while leading to more obvious hump effect.,Chinese Physics B,2011,6
A practicable framework for tree reduction under distributed memory environments,Kazuhiko Kakehi; Kiminori Matsuzaki; Kento Emoto; Zhenjiang Hu,Abstract Besides intensive research toward matrices or one dimensional arrays; anotherimportant data structure; namely trees; are calling for efficient parallel treatments. Paralleltree contractions are fundamental to realize efficient computation over the inherentlyimbalanced structures. However; we sometimes fail to practically benefit from the techniquesunder current computer architectures. This is because data representations matter not onlyto distributed memory environments under which data is kept separately among processors;but also to current processor designs on which linked structures gain poorly. Theassumption of linked structures spoils parallel complexity as well. This paper proposes anew approach for fast parallel computation on trees over distributed memory environments.The characteristics of our approach is the internal data representation. We employ the …,*,2006,6
Swapping arguments and results of recursive functions,Akimasa Morihata; Kazuhiko Kakehi; Zhenjiang Hu; Masato Takeichi,Abstract Many useful calculation rules; such as fusion and tupling; rely on well-structuredfunctions; especially in terms of inputs and outputs. For instance; fusion requires that well-produced outputs should be connected to well-consumed inputs; so that unnecessaryintermediate data structures can be eliminated. These calculation rules generally fail to workunless functions are well-structured. In this paper; we propose a new calculation rule calledIO swapping. IO swapping exchanges call-time computations (occurring in the arguments)and return-time computations (occurring in the results) of a function; while guaranteeing thatthe original and resulting function compute the same value. IO swapping enables us torearrange inputs and outputs so that the existing calculation rules can be applied. Wepresent new systematic derivations of efficient programs for detecting palindromes; and a …,International Conference on Mathematics of Program Construction,2006,6
An environment for maintaining computation dependency in XML documents,Dongxi Liu; Zhenjiang Hu; Masato Takeichi,Abstract In the domain of XML authoring; there have been many tools to help users to editXML documents. These tools make it easier to produce complex documents by using suchtechnologies as syntax-directed or presentation-oriented editing; etc. However; when anXML document contains data with some computation dependency among them; these toolscannot free users from the burden of maintaining this dependency relationship. Bycomputation dependency; we mean that some data are gotten by computing from other datain the same document. In this paper; we present an environment for authoring XMLdocument; in which users can express the data dependency relationship in one documentexplicitly rather than implicitly in their minds. Under this environment; the dependent parts ofthe document are represented as expressions; which in turn can be evaluated to …,Proceedings of the 2005 ACM symposium on Document engineering,2005,6
List Homomorphism with Accumulation.,Kazuhiko Kakehi; Zhenjiang Hu; Masato Takeichi,Abstract This paper introduces accumulation into list homomorphisms for systematicdevelopment of both efficient and correct parallel programs. New parallelizable recursivepattern called H-homomorphism is given; and transformations from sequential patterns inthe H-form and H′-form into (H-) homomorphism are shown. We illustrate the power of ourformalization by developing a novel and general parallel program for a class of interestingand challenging problems; known as maximum marking problems.,SNPD,2003,6
Segmented Diffusion Theorem,Zhenjiang Hu; Tomonari Takahashi; Hideya Iwasaki; Masato Takeichi,Abstract—Skeletal parallel programming ease parallel programming by providing efficientready-made skeletons. However; nested use of skeletons are difficult to be implemented inan efficiently and load unbalanced way. In this paper; we propose a novel transformationtheorem called the segmented diffusion theorem; an extension of the diffusion theorem;which can flatten many nested uses of skeletons into more efficient skeletal parallelprograms. This theorem is not only useful for guiding construction of efficient skeletal parallelprograms; but also suitable for optimizing skeletal parallel programs in compilers.,IEEE International Conference on Systems; Man and Cybernetics (SMC 02),2002,6
Think like a vertex; behave like a function! A functional DSL for vertex-centric big graph processing,Kento Emoto; Kiminori Matsuzaki; Zhenjiang Hu; Akimasa Morihata; Hideya Iwasaki,Abstract The vertex-centric programming model; known as “think like a vertex”; is being usedmore and more to support various big graph processing methods through iterativesupersteps that execute in parallel a user-defined vertex program over each vertex of agraph. However; the imperative and message-passing style of existing systems makesdefining a vertex program unintuitive. In this paper; we show that one can benefit more from“Thinking like a vertex” by “Behaving like a function” rather than “Acting like a procedure”with full use of side effects and explicit control of message passing; state; and termination.We propose a functional approach to vertex-centric graph processing in which thecomputation at every vertex is abstracted as a higher-order function and present Fregel; anew domain-specific language. Fregel has clear functional semantics; supports …,ACM SIGPLAN Notices,2016,5
Comprehending ringads,Jeremy Gibbons,Abstract List comprehensions are a widely used programming construct; in languages suchas Haskell and Python and in technologies such as Microsoft's Language Integrated Query.They generalize from lists to arbitrary monads; yielding a lightweight idiom of imperativeprogramming in a pure functional language. When the monad has the additional structure ofa so-called ringad; corresponding to 'empty'and 'union'operations; then it can be seen assome kind of collection type; and the comprehension notation can also be extended toincorporate aggregations. Ringad comprehensions represent a convenient notation forexpressing database queries. The ringad structure alone does not provide a goodexplanation or an efficient implementation of relational joins; but by allowing heterogeneouscomprehensions; involving both bag and indexed table ringads; we show how to …,*,2016,5
Swin: Towards type-safe java program adaptation between apis,Jun Li; Chenglong Wang; Yingfei Xiong; Zhenjiang Hu,Abstract Java program adaptation between different APIs is a common task in softwaredevelopment. When an old API is upgraded to an incompatible new version; or when wewant to migrate an application from one platform to another platform; we need to adaptprograms between different APIs. Although different program transformation tools have beendeveloped to automate the program adaptation task; no tool ensures type safety intransforming Java programs: given a transformation program and any well-typed Javaprogram; the transformed result is still well-typed. As a matter of fact; it is often observed thata dedicated adaptation tool turns a working application into a set of incompatible programs.We address this problem by providing a type-safe transformation language; SWIN; for Javaprogram adaptation between different APIs. SWIN is based on Twinning; a modern …,Proceedings of the 2015 Workshop on Partial Evaluation and Program Manipulation,2015,5
Accumulative computation on MapReduce,Yu Liu; Kento Emoto; Kiminori Matsuzaki; Zhenjiang Hu,Abstract: MapReduce programming model attracts a lot of enthusiasm among both industryand academia; largely because it simplifies the implementations of many data parallelapplications. In spite of the simplicity of the programming model; there are many applicationsthat are hard to be implemented by MapReduce; due to their innate characters ofcomputational dependency. In this paper we propose a new approach of using theprogramming pattern accumulate over MapReduce; to handle a large class of problems thatcannot be simply divided into independent sub-computations. Using this accumulate pattern;many problems that have computational dependency can be easily expressed; and then theprograms will be transformed to MapReduce programs executed on large clusters. Userswithout much knowledge of MapReduce can also easily write programs in a sequential …,IPSJ Online Transactions,2014,5
Tolerating inconsistency in feature models,Bo Wang; Zhenjiang Hu; Yingfei Xiong; Haiyan Zhao; Wei Zhang; Hong Mei,ABSTRACT Feature models have been widely adopted to reuse the requirements of a set ofsimilar products in a domain. When constructing feature models; it is difficult to alwaysensure the consistency of feature models. Therefore; tolerating inconsistencies is importantduring the construction of feature models. The usual way of tolerating inconsistencies is tofind the minimal unsatisfiable core. However; identifying the minimal unsatisfiable core istime-consuming; which decreases itself the practicability. In this paper; we propose a prioritybased approach to tolerating inconsistencies in feature models efficiently. The basic idea ofour approach is to find the weaker unsatisfied constraints; while keeping the rest of thefeature model consistent. Our approach tolerates inconsistencies with the help of prioritybased operations while building feature models. To this end; we adopt the constraint …,3rd Workshop on Living With Inconsistency in Software Development; held with 25th IEEE/ACM International Conference on Automated Software Engineering,2010,5
Type-based specialization of XML transformations,Kazutaka Matsuda; Zhenjiang Hu; Masato Takeichi,Abstract It is often convenient to write a function and apply it to a specific input. However; aprogram developed in this way may be inefficient to evaluate and difficult to analyze due toits generality. In this paper; we propose a technique of new specialization for a class of XMLtransformations; in which no output of a function can be decomposed or traversed. Ourspecialization is type-based in the sense that it uses the structures of input types; types aredescribed by regular hedge grammars and subtyping is defined set-theoretically. Thespecialization always terminates; resulting in a program where every function is fullyspecialized and only accepts its rigid input. We present several interesting applications ofour new specialization; especially for injectivity analysis.,Proceedings of the 2009 ACM SIGPLAN workshop on Partial evaluation and program manipulation,2009,5
Yicho: A system for programming program calculations,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,*,*,2002,5
A loop optimization technique based on quasi-invariance,Litong Song; Yoshihiko Futamura; Robert Glück; Zhenjiang Hu,Abstract Loop optimization plays an important role in compiler optimization and programtransformation. Many sophisticated techniques such as loopinvariance code motion; looprestructuring and loop fusion have been developed. This paper introduces a noveltechnique called loop quasi-invariance code motion. It is a generalization of standardloopinvariance code motion; but based on loop quasiinvariance analysis. Loop quasi-invariance is similar to standard loop-invariance but allows for a finite number of iterationsbefore computations in a loop become invariant. In this paper we define the notion of loopquasi-invariance; present an algorithm for statically computing the optimal unfolding lengthin While-programs and give a transformation method. Our method can increase the accuracyof program analyses and improve the efficiency of programs by making loops smaller and …,Proceedings of IFIP Conference on Software: Theory and Practice (16th World Computer Congress 2000); Beijing,2000,5
Calculation carrying programs,Zhenjiang Hu; Masato Takeichi,Abstract this paper; we propose a new mechanism called calculation carrying programs thatcan relax the tension between efficiency and clarity in programming. The idea is toaccompany clear programs with some calculation specifying our intention ofhowtomanipulate programs to be efficient. And this calculation specification can be executedautomatically by our compiler to derive efficient programs. As a result; each calculationcarrying program makes itself be a complete document including a concise specification ofgiven problem as well as an effective way to derive both efficient and correct code,*,1999,5
Parsing and reflective printing; bidirectionally,Zirun Zhu; Yongzhe Zhang; Hsiang-Shang Ko; Pedro Martins; João Saraiva; Zhenjiang Hu,Abstract Language designers usually need to implement parsers and printers. Despite beingtwo intimately related programs; in practice they are often designed separately; and thenneed to be revised and kept consistent as the language evolves. It will be more convenient ifthe parser and printer can be unified and developed in one single program; with theirconsistency guaranteed automatically. Furthermore; in certain scenarios (like showingcompiler optimisation results to the programmer); it is desirable to have a more powerfulreflective printer that; when an abstract syntax tree corresponding to a piece of program textis modified; can reflect the modification to the program text while preserving layouts;comments; and syntactic sugar.,Proceedings of the 2016 ACM SIGPLAN International Conference on Software Language Engineering,2016,4
基于轮廓跟踪的虹膜定位算法,刘元宁， 胡宗星， 朱晓冬， 何飞,提出一种基于轮廓跟踪算法的虹膜定位算法. 该算法先通过像素点扫描查找二值虹膜图像中轮廓的起始点; 然后由起始点进行轮廓查找; 轮廓编码; 轮廓筛选确定虹膜内轮廓;再通过虹膜外轮廓和巩膜间的灰度突变点到内轮廓圆心距离的平均值确定外轮廓半径;实现虹膜内; 外轮廓的定位. 实验结果表明; 该算法具有较快的定位速度; 较高的准确率;性能稳定.,吉林大学学报: 理学版,2011,4
Programming Languages and Systems,Zhenjiang Hu,This volume contains the proceedings of the 7th Asian Symposium on ProgrammingLanguages and Systems (APLAS 2009) held in Seoul; Korea; December 14–16; 2009. Thesymposium was sponsored by the Asian Association for Foundation of Software (AAFS);Research on Software Analysis for Error-free Computing (ROSAEC) Center of SeoulNational University; and SIGPL of Korean Institute of Information Scientists and Engineers.Following our call for papers; 56 full submissions from 18 countries were received. Eachpaper was reviewed by at least three Program Committee members with the help of externalreviewers. The Program Committee meeting was conducted electronically over a period oftwo weeks in August 2009. As a result of active discussions; 21 papers (37.5%) wereselected. I would like to thank all the members of the APLAS 2009 Program Committee for …,7th Asian Symposium; APLAS,2009,4
On-site synchronization of software artifacts,Yingfei Xiong; Zhenjiang Hu; Masato Takeichi; Haiyan Zhao; Hong Mei,Abstract Software development often involves multiple artifacts; such as feature models;UML models and code; which are in different formats but share a certain amount ofinformation. When users change one artifact or change several artifacts simultaneously; weneed to propagate these changes across all artifacts to ensure them consistent. Existingapproaches focus on off-site synchronization; that is; manipulating application data onexternal copies. However; in many software development tools; synchronization happens“on-site”. The synchronization is tightly integrated into the tool and manipulates the internaldata. In this paper we propose a new approach to on-site synchronization; which takesmodification operations on artifacts and produces new modification operations to make themconsistent. The synchronization is incremental; ensuring short response time. We …,Department of Mathematical Informatics; University of Tokyo,2008,4
Generator-based GG Fortress library,Kento Emoto; Zhenjiang Hu; Kazuhiko Kakehi; Kiminori Matsuzaki; Masato Takeichi,Abstract This report proposes a new library on Fortress to deal with computation withcomplex dependency such as prefix sums; which cannot be efficiently dealt with by simplecomprehensions or generator-reduction patterns. The library provides a set of generator-of-generators that abstract generation of nested data structures; for allowing users to write theirprograms in an easy and uniform way. The library also provides an automatic optimizationmechanism that dispatches correct and efficient implementation to those user programs.Thus; users can easily make correct parallel programs without losing efficiency. Theproposed library is implemented on Fortress; and techniques used here can be reused forother libraries on Fortress.,*,2008,4
A web service architecture for bidirectional XML updating,Yasushi Hayashi; Dongxi Liu; Kento Emoto; Kazutaka Matsuda; Zhenjiang Hu; Masato Takeichi,Abstract A Web service architecture is described for bidirectional XML updating. Theupdating mechanism exploits the power of bidirectional transformation so that users canupdate remote XML data by editing a view on the local machine that is generated by atransformation of the XML data. This architecture consists of three tiers: data viewer clients; abidirectional transformation engine; and content servers accessible through the Internet.Due to the use of standard Web service technologies; the data viewer clients and contentservers can be easily replaced with ones chosen by the user. Users can use this architectureto implement their own applications that exploit the power of bidirectional transformationwithout the burden of installing and maintaining a bidirectional language package.,*,2007,4
Parallel dynamic programming using data-parallel skeletons,Kazuhiko Kakehi; Kiminori Matsuzaki; Akimasa Morihata; Kento Emoto; Zhenjiang Hu,*,22nd Conference of the Japan Society for Software Science and Technology,2005,4
Reversing iterations: IO swapping leads you there and back again,Akimasa Morihata; Kazuhiko Kakehi; Zhenjiang Hu; Masato Takeichi,Abstract TABA (There And Back Again)[DG02]; proposed by Danvy and Goldberg; is aspecial but powerful programming pattern where a recursive function traverses lists at returntime. They showed the TABA programs; but neither derivation nor manipulation of the TABAprograms were presented. We propose a novel program transformation rule called IOswapping. The rule swaps input and output values of functions and introduces iteration atreturn times. Using this rule three stories of TABA are played out in this paper: systematicderivation of a basic TABA program; manipulation of TABA programs including palindromethrough function fusion; and extension of the rule to deal with circular dependency of inputsand outputs like repmin function; introduced by Bird [Bir84]; and with structures other thanlists like binary trees.,Techn. Report METR,2005,4
Deterministic higher-order patterns for program transformation,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,Abstract Higher-order patterns; together with higher-order matching; enable concisespecification of program transformation; and have been implemented in several programtransformation systems. However; higher-order matching in general is nondeterministic; andthe matching algorithm is so expensive that even second-order matching is NP-complete. Itis orthodox to impose constraint on the form of patterns to obtain the desirable matchessatisfying certain properties such as decidability and finiteness. In the context of unification;Miller's higher-order patterns have a single most general unifier. We relax the restrictions inhis patterns without changing determinism within the context of matching instead ofunification. As a consequence; the new class of patterns covers a wide class of usefulpatterns for program transformation. The time-complexity of the matching algorithm is …,International Symposium on Logic-Based Program Synthesis and Transformation,2003,4
Derivation of linear algorithm for mining optimized gain association rules,Isao Sasano; Zhenjiang Hu; Masato Takeichi; Mizuhito Ogawa,Abstract... this paper presents that an efficient linear time algorithm for mining optimized gainassociation rules can be systematically derived from a simple specication by reducing it toan instance of a maximum marking problem. Our approach not only automaticallyguarantees the correctness of the derived algorithm; but also is easy to derive newalgorithms for modication of the problem.,*,2001,4
Loop quasi-invariance code motion,Litong Song; Yoshihiko Futamura; Robert Gluck; Zhenjiang Hu,Loop optimization plays an important role in compiler optimization and programtransformation. Many sophisticated techniques such as loop-invariance code motion; looprestructuring and loop fusion have been developed. This paper introduces a noveltechnique called loop quasi-invariance code motion. It is a generalization of standard loop-invariance code motion; but based on loop quasi-invariance analysis. Loop quasi-invariance is similar to standard loop-invariance but allows for a finite number of iterationsbefore computations in a loop become invariant. In this paper we define the notion of loopquasi-invariance; present an algorithm for statically computing the optimal unfolding lengthin While-programs and give a transformation method. Our method can increase the accuracyof program analyses and improve the efficiency of programs by making loops smaller and …,IEICE TRANSACTIONS on Information and Systems,2000,4
Calculating an optimal homomorphic algorithm for bracket matching,Zhenjiang Hu; Masato Takeichi,It is widely recognized that a key problem of parallel computation is in the development ofboth efficient and correct parallel software. Although many advanced language features andcompilation techniques have been proposed to alleviate the complexity of parallelprogramming; much effort is still required to develop parallelism in a formal and systematicway. In this paper; we intend to clarify this point by demonstrating a formal derivation of acorrect but efficient homomorphic parallel algorithm for a simple language recognitionproblem known as bracket matching. To the best of our knowledge; our formal derivationleads to a novel divide-and-conquer parallel algorithm for bracket matching.,Parallel Processing Letters,1999,4
Massive chest wall resection and reconstruction for malignant disease,Christophoros N Foroulis; Athanassios D Kleontas; George Tagarakis; Chryssoula Nana; Ioannis Alexiou; Vasilis Grosomanidis; Paschalis Tossios; Elena Papadaki; Ioannis Kioumis; Sofia Baka; Paul Zarogoulidis; Kyriakos Anastasiadis,Objective Malignant chest wall tumors are rare neoplasms. Resection with wide-freemargins is an important prognostic factor; and massive chest wall resection andreconstruction are often necessary. A recent case series of 20 consecutive patients isreported in order to find any possible correlation between tumor histology; extent ofresection; type of reconstruction; and adjuvant treatment with short-and long-term outcomes.Methods Twenty patients were submitted to chest wall resection and reconstruction formalignant chest wall neoplasms between 2006 and 2014. The mean age (ten males) was59±4 years. The size and histology of the tumor; the technique of reconstruction; and theshort-and long-term follow-up records were noted. Results The median maximum diameterof tumors was 10 cm (5.4–32 cm). Subtotal sternal resection was performed in nine cases …,OncoTargets and therapy,2016,3
Brul: A Putback-Based Bidirectional Transformation Library for Updatable Views.,Tao Zan; Li Liu; Hsiang-Shang Ko; Zhenjiang Hu,Abstract In work on relational databases; the view-update problem is about how to translateupdate operations on the view table to corresponding update operations on the source tableproperly. It is a problem that the translation policies are not unique in many situations.Relational lenses try to solve this problem by providing a list of combinators that let the userwrite get functions (queries) with specified updated policies for put functions (updates);however this can only provide limited control of update policies which still may not satisfy theuser's real needs. In this paper; we implement a library Brul that provides putback-basedbasic combinators for the user to write the put function with flexible update policies easily;from the put function; a unique get function can be derived automatically. Brul isimplemented in terms of BiGUL; a core bidirectional programming language which has …,Bx@ ETAPS,2016,3
Bias dependence of a deep submicron NMOSFET response to total dose irradiation,Liu Zhang-Li; Hu Zhi-Yuan; Zhang Zheng-Xuan; Shao Hua; Chen Ming; Bi Da-Wei; Ning Bing-Xu; Zou Shi-Chang,Abstract Deep submicron n-channel metal-oxide-semiconductor field-effect transistors(NMOSFETs) with shallow trench isolation (STI) are exposed to ionizing dose radiationunder different bias conditions. The total ionizing dose radiation induced subthresholdleakage current increase and the hump effect under four different irradiation bias conditionsincluding the worst case (ON bias) for the transistors are discussed. The high electric fieldsat the corners are partly responsible for the subthreshold hump effect. Charge trapped in theisolation oxide; particularly at the Si/SiO 2 interface along the sidewalls of the trench oxidecreates a leakage path; which becomes a dominant contributor to the off-state drain-to-source leakage current in the NMOSFET. Non-uniform charge distribution is introduced intoa three-dimensional (3D) simulation. Good agreement between experimental and …,Chinese Physics B,2011,3
NO sub (x) Storage-Reduction Catalysis and Structure-Performance Relationship of Pt-BaO Catalyst,Z Hu; K Sun; B Xu,*,Cuihua Xuebao/Chinese Journal of Catalysis,2011,3
Context-preserving XQuery fusion,Hiroyuki Kato; Soichiro Hidaka; Zhenjiang Hu; Keisuke Nakano; Yasunori Ishihara,Abstract XQuery is a DBPL for querying XML databases. The semantics of XQuery is contextsensitive and requires preservation of document order. In this paper; we propose; as far aswe are aware; the first XQuery fusion that can deal with both the document order and thecontext of XQuery expressions. More specifically; we carefully design a contextrepresentation of XQuery expressions based on the Dewey order encoding; develop acontext-preserving XQuery fusion for ordered trees by static emulation of the XML store; andprove that our fusion is correct. Our XQuery fusion has been implemented; and all theexamples in this paper have passed the system.,Asian Symposium on Programming Languages and Systems,2010,3
Calculational parallel programming: parallel programming with homomorphism and mapreduce,Zhenjiang Hu,Abstract Parallel skeletons are designed to encourage programmers to build parallelprograms from ready-made components for which efficient implementations are known toexist; making both parallel programming and parallelization process simpler.Homomorphism and mapReduce are two known parallel skeletons. Homomorphism; widelystudied in the program calculation community for more than twenty years; ideally suits thedivide-and-conquer parallel computation paradigm over lists; trees; and other generalalgebraic data types. In addition; it is also equipped with a set of useful theorems formanipulation of homomorphism. On the other hand; mapReduce is a relatively new skeletonbut has emerged as one of the most widely used parallel programming platforms forprocessing data on terabyte and petabyte scales. It allows for easy parallelization of data …,Proceedings of the fourth international workshop on High-level parallel programming and applications,2010,3
Bidirectionalizing structural recursion on graphs,Soichiro Hidaka; Zhenjiang Hu; Kazuhiro Inaba; Hiroyuki Kato; Kazutaka Matsuda; Keisuke Nakano,Abstract The GRACE technical reports are published as a means to ensure timelydissemination of scholarly and technical work on a non-commercial basis. Copyright and allrights therein are maintained by the authors or by other copyright holders; notwithstandingthat they have offered their works here electronically. It is understood that all personscopying this information will adhere to the terms and constraints invoked by each author'scopyright. These works may not be reposted without the explicit permission of the copyrightholder.,*,2009,3
Groundtram version 0.9. 3 user manual,Soichiro Hidaka; Zhenjiang Hu; Kazuhiro Inaba; Hiroyuki Kato; Kazutaka Matsuda; Keisuke Nakano,Bidirectional model transformation plays an important role in maintaining consistencybetween two models; and has many potential applications in software development;including model synchronization; round-trip engineering; software evolution; multiple-viewsoftware development; and reverse engineering. The GRoundTram system was developedby the BiG team of the National Institute of Informatics for supporting systematic developmentof bidirectional model transformation. Figure 1. 1 depicts an architecture (the basic idea) ofthe GRoundTram system. A model transformation is described in UnQL+; which is functional(rather than rule-based as in many existing tools) and compositional with high modularity forreuse and maintenance. The model transformation is then desugared to a core graphalgebra which consists of a set of constructors for building graphs and a powerful …,*,2008,3
A compositional approach to bidirectional model transformation,Zhenjiang Hu; Dongxi Liu; Hong Mei; Masato Takeichi; Yingfei Xiong; Haiyan Zhao,Page 1 …,*,2006,3
Surrounding theorem: developing parallel programs for matrix-convolutions,Kento Emoto; Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Computations on two-dimensional arrays such as matrices and images are one ofthe most fundamental and ubiquitous things in computational science and its vastapplication areas; but development of efficient parallel programs on two-dimensional arraysis known to be hard. To solve this problem; we have proposed a skeletal framework on two-dimensional arrays based on the theory of constructive algorithmics. It supports users; evenwith little knowledge about parallel machines; to develop systematically both correct andefficient parallel programs on two-dimensional arrays. In this paper; we apply our frameworkto the matrix-convolutions often used in image filters and difference methods. We show theefficacy of the framework by giving a general parallel program for the matrix-convolutionsdescribed with the skeletons; and a theorem that optimizes the general program into an …,European Conference on Parallel Processing,2006,3
A type-based approach to parallelization,Dana N Xu; KHOO Siau Cheng; CHIN Wei Ngan; HU Zhenjiang,Parallel functional programming plays an important role in parallel programming [16]. Typesystem has signi. cant impact on program analysis [23]. In this paper; we show how toautomatically and correctly synthesize parallel programs from sequential functional programbased on the concept of a type system. Our type system captures the parallelizability of aprogram; in a modular fashion; by exploring the ring structures of the programs operators. Ithandles programs de. ned by self-recursive functions with accumulating parameters; as wellas a limited form of non-linear mutual-recursive functions. In contrast to the Damas-Milnertype system (the typical type system) that is constructed from the evaluation rules of theunderlying language; our type system is constructed from a set of meta-rules that are used totransform sequential programs into a special normal form suitable for parallelization. The …,*,2003,3
Deterministic second-order patterns in program transformation,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,Abstract. Higher-order patterns; together with higher-order matching; enable concisespecification of program transformation; and have been implemented in several programtransformation systems. However; higherorder matching generally generatesnondeterministic matches; and the matching algorithm is so expensive that even second-order matching is NP-complete. It is orthodox to impose constraint on the form of patterns soas to obtain the desirable matches satisfying certain properties such as decidability andfiniteness. In the context of unification; Miller's higher-order patterns have a single mostgeneral unifier; while unification of general patterns is nondeterministic (and evenundecidable). We relax the restriction of his patterns without changing determinism in thecontext of matching instead of unification. As a consequence; our deterministic second …,nKatholieke Universiteit Leuven,2003,3
A compositional framework for mining longest ranges,Haiyan Zhao; Zhenjiang Hu; Masato Takeichi,Abstract This paper proposes a compositional framework for discovering interesting rangeinformation from huge databases; where a domain specific query language is provided tospecify the range of interest; and a general algorithm is given to mine the range specified inthis language efficiently. A wide class of longest range problems; including the intensivelystudied optimized support range problem [FMMT96]; can be solved systematically in thisframework. Experiments with real world databases show that our framework is efficient notonly in theory but also in practice.,International Conference on Discovery Science,2002,3
Towards polytypic parallel programming,Zhenjiang Hu; Masato Takeichi; Hideya Iwasaki,Summary. Data parallelism is currently one of the most successful models for programmingmassively parallel computers. The central idea is to evaluate a uniform collection of data inparallel by simultaneously manipulating each data element in the collection. Despite manyof its promising features; the current approach su ers from two problems. First; the mainparallel data structures that most data parallel languages currently support are restricted tosimple collection data types like lists; arrays or similar structures. But other useful datastructures like trees have not been well addressed. Second; parallel programming relies ona set of parallel primitives that capture parallel skeletons of interest. However; theseprimitives are not well structured; and e cient parallel programming with these primitives is dicult. In this paper; we propose a polytypic framework for developing ecient parallel …,*,1998,3
Discovery of N-(3-(5-((3-acrylamido-4-(morpholine-4-carbonyl) phenyl) amino)-1-methyl-6-oxo-1; 6-dihydropyridin-3-yl)-2-methylphenyl)-4-(tert-butyl) benzamide (C...,Qianmao Liang; Yongfei Chen; Kailin Yu; Cheng Chen; Shouxiang Zhang; Aoli Wang; Wei Wang; Hong Wu; Xiaochuan Liu; Beilei Wang; Li Wang; Zhenquan Hu; Wenchao Wang; Tao Ren; Shanchun Zhang; Qingsong Liu; Cai-Hong Yun; Jing Liu,Abstract Currently there are several irreversible BTK inhibitors targeting Cys481 residueunder preclinical or clinical development. However; most of these inhibitors also targetedother kinases such as BMX; JAK3; and EGFR that bear the highly similar active cysteineresidues. Through a structure-based drug design approach; we discovered a highly potent(IC 50: 7 nM) irreversible BTK inhibitor compound 9 (CHMFL-BTK-01); which displayed ahigh selectivity profile in KINOMEscan (S score (35)= 0.00) among 468 kinases/mutants atthe concentration of 1 μM. Compound 9 completely abolished BMX; JAK3 and EGFR'sactivity. Both X-ray crystal structure and cysteine-serine mutation mediated rescueexperiment confirmed 9's irreversible binding mode. 9 also potently inhibited BTK Y223 auto-phosphorylation (EC 50:< 30 nM); arrested cell cycle in G0/G1 phase and induced …,European journal of medicinal chemistry,2017,2
A Framework for Synchronization between Feature Configurations and Use Cases based on Bidirectional Programming,Weize Zhao; Haiyan Zhao; Zhenjiang Hu,Model-Driven Development (MDD) is a widely adopted approach to RequirementEngineering (RE). One basic research issue in Model-Driven Requirement Engineering(MoDRE) is requirements validation; which focuses on how to validate whether therequirements models meet stakeholders' needs or not. Several lines of work have beenperformed on the transformation between feature configurations; which are responsible forspecifying a software in feature-oriented approach; and use cases; which are easy tounderstand and often used to describe system behaviors to stakeholders. However; most ofthe existing automated derivation methods about feature configurations and use cases areeither in one direction or the other. Therefore; after validating the use cases; the adjustmentmade by stakeholders cannot be traced back to feature configurations automatically. In …,Requirements Engineering Conference Workshops (REW); IEEE International,2016,2
Supporting selective undo for refactoring,Xiao Cheng; Yuting Chen; Zhenjiang Hu; Tao Zan; Mengyu Liu; Hao Zhong; Jianjun Zhao,Due to various considerations; programmers often need to backtrack their code.Furthermore; as the most recent edit may not be the wrong edit; programmers sometimeshave to backtrack their code for arbitrary edits; which is referred as selective undo in thispaper. To meet the needs; researchers have proposed various approaches to supportselective undo. However; to the best of our knowledge; these approaches can support onlysimple edits; and cannot handle refactoring; although most code editors already providevarious refactoring actions. Indeed; it is challenging to support selective undo for refactoring;since multiple code elements and complicated actions can be involved. In this paper; wepresent a novel approach that leverages Bidirectional Transformation (BX) to supportselective undo for refactoring. We evaluate our approach on a recent refactoring tool that …,Software Analysis; Evolution; and Reengineering (SANER); 2016 IEEE 23rd International Conference on,2016,2
Towards attribute-based authorisation for bidirectional programming,Lionel Montrieux; Zhenjiang Hu,Abstract Bidirectional programming allows developers to write programs that will producetransformations that extract data from a source document into a view. The sametransformations can then be used to update the source in order to propagate the changesmade to the view; provided that the transformations satisfy two essential properties.Bidirectional transformations can provide a form of authorisation mechanism. From a sourcecontaining sensitive data; a view can be extracted that only contains the information to beshared with a subject. The subject can modify the view; and the source can be updatedaccordingly; without risk of release of the sensitive information to the subject. However; theauthorisation model afforded by bidirectional transformations is limited. Implementing anattribute-based access control (ABAC) mechanism directly in bidirectional transformations …,Proceedings of the 20th ACM Symposium on Access Control Models and Technologies,2015,2
Context-preserving XQuery fusion,Hiroyuki Kato; Soichiro Hidaka; Zhenjiang Hu; Keisuke Nakano; Yasunori Ishihara,Abstract This paper solves the known problem of elimination of unnecessary internalelement construction as well as variable elimination in XML processing with (a subset of)XQuery without ignoring the issues of document order. The semantics of XQuery is contextsensitive and requires preservation of document order. In this paper; we propose; as far aswe are aware; the first XQuery fusion that can deal with both the document order and thecontext of XQuery expressions. More specifically; we carefully design a contextrepresentation of XQuery expressions based on the Dewey order encoding; develop acontext-preserving XQuery fusion for ordered trees by static emulation of the XML store; andprove that our fusion is correct. Our XQuery fusion has been implemented; and all theexamples in this paper have passed through the system.,Mathematical Structures in Computer Science,2015,2
Decontamination of 2-chloroethyl ethyl sulfide by pulsed corona plasma,Li Zhanguo; HU Zhen; Cao Peng; Zhao Hongjie,Abstract Decontamination of 2-chloroethyl ethyl sulfide (2-CEES; CH 3 CH 2 SCH 2 CH 2 Cl)by pulsed corona plasma was investigated. The results show that 212.6 mg/m 3 of 2-CEES;with the gas flow rate of 2 m 3/h; can be decontaminated to 0.09 mg/m 3. According to thevariation of the inlet and outlet concentration of 2-CEES vapor with retention time; it is foundthat the reaction of 2-CEES in a pulsed corona plasma system follows the first order reaction;with the reaction rate constant of 0.463 s− 1. The decontamination mechanism is discussedbased on an analysis of the dissociation energy of chemical bonds and decontaminationproducts. The C–S bond adjacent to the Cl atom will be destroyed firstly to form CH 3 CH 2 Scenterdot and centerdot CH 2 CH 2 Cl radicals. CH 3 CH 2 S centerdot can be decomposedto centerdot C 2 H 5 and centerdot S. centerdot S can be oxidized to SO 2; while …,Plasma Science and Technology,2014,2
Game theory based false negative probability of embedded watermark under unintentional and steganalysis attacks,Hu Ziquan; She Kun; Wang Jianghua; Tang Jianguo,Steganalysis attack is to statistically estimate the embedded watermark in the watermarkedmultimedia; and the estimated watermark may be destroyed by the attacker. The existingmethods of false negative probability; however; do not consider the influence of steganalysisattack. This paper proposed the game theory based false negative probability to estimate theimpacts of steganalysis attack; as well as unintentional attack. Specifically; game theory wasused to model the collision between the embedment and steganalysis attack; and derive theoptimal building/embedding/attacking strategy. Such optimal playing strategies devote tocalculating the attacker destructed watermark; used for calculation of the game theory basedfalse negative probability. The experimental results show that watermark detection reliabilitymeasured using our proposed method; in comparison; can better reflect the real scenario …,China Communications,2014,2
Validity checking of putback transformations in bidirectional programming (invited paper,Zhenjiang Hu; Hugo Pacheco; Sebastian Fischer,Abstract. A bidirectional transformation consists of pairs of transfor-mations—a forwardtransformation get produces a target view from a source; while a putback transformation putputs back modifications on the view to the source—satisfying sensible roundtrip properties.Ex-isting bidirectional approaches are get-based in that one writes (an arti-fact resembling)a forward transformation and a corresponding backward transformation can be automaticallyderived. However; the unavoidable ambiguity that stems from the underspecification of putoften leads to unpredictable bidirectional behavior; making it hard to solve nontriv-ialpractical synchronization problems with existing bidirectional trans-formation approaches.Theoretically; this ambiguity problem could be solved by writing put directly and deriving get;but differently from pro-gramming with get it is easy to write invalid put functions. An open …,In FM 2014,2014,2
Minimizing data transfers for regular reachability queries on distributed graphs,Quyet Nguyen-Van; Le-Duc Tung; Zhenjiang Hu,Abstract Nowadays; there is an explosion of Internet information; which is normallydistributed on different sites. Hence; efficient finding information becomes difficult. Efficientquery evaluation on distributed graphs is an important research topic since it can be used inreal applications such as: social network analysis; web mining; ontology matching; etc. Awidely-used query on distributed graphs is the regular reachability query (RRQ). A RRQverifies whether a node can reach another node by a path satisfying a regular expression.Traditionally RRQs are evaluated by distributed depth-first search or distributed breadth-firstsearch methods. However; these methods are restricted by the total network traffic and theresponse time on large graphs. Recently; Wenfei Fan et al. proposed an approach forimproving reachability queries by visiting each site only once; but it has a communication …,Proceedings of the Fourth Symposium on Information and Communication Technology,2013,2
Parameterized graph transformation languages with monads,Kazuyuki Asada; Soichiro Hidaka; Hiroyuki Kato; Zhenjiang Hu; Keisuke Nakano,*,*,2012,2
blinkit: Maintaining invariant traceability through bidirectional transformations–a technical report,Yijun Yu; Yu Lin; Zhenjiang Hu; Soichiro Hidaka; Hiroyuki Kato; Lionel Montrieux,Abstract—Following the “convention over configuration” paradigm; model-drivendevelopment (MDD) generates code to implement the “default” behaviour that has beenspecified by a template separate from the input model; reducing the effort of decisions fordevelopers. For flexibility; users of MDD are allowed to customise the model and thegenerated code in parallel. A synchronisation of changed model or code is maintained byreflecting them on the other end of the code generation; as long as the traceability isunchanged. However; such invariant traceability between corresponding model and codeelements can be violated either when (a) users of MDD would protect custom changes fromthe generated code; or when (b) developers of MDD would change the template forgenerating the default behaviour. A mismatch between user and template code is …,The Open University; Tech. Rep. TR2011/09,2011,2
Marker-directed Optimization of UnCAL Graph Transformations (revised version,Soichiro Hidaka; Zhenjiang Hu; Kazuhiro Inaba; Hiroyuki Kato; Keisuke Nakano; Isao Sasano,Abstract. Buneman et al. proposed a graph algebra called UnCAL (Unstructured CALculus)for compositional graph transformations based on structural recursion; and we have recentlyapplied to model transformations. The compositional nature of the algebra greatly enhancesthe modularity of transformations. However; intermediate results generated betweencomposed transformations cause overhead. Buneman et al. proposed fusion rules thateliminate the intermediate results; but auxiliary rewriting rules that enable the actualapplication of the fusion rules are not apparent so far. UnCAL graph model includes theconcept of markers; which correspond to recursive function call in the structural recursion.We have found that there are many optimization opportunities at rewriting level based onstatic analysis; especially focusing on markers. The analysis can safely eliminate …,*,2011,2
Sound and complete validation of graph transformations,Kazuhiro Inaba; Soichiro Hidaka; Zhenjiang Hu; Hiroyuki Kato; Keisuke Nakano,Abstract The GRACE technical reports are published as a means to ensure timelydissemination of scholarly and technical work on a non-commercial basis. Copyright and allrights therein are maintained by the authors or by other copyright holders; notwithstandingthat they have offered their works here electronically. It is understood that all personscopying this information will adhere to the terms and constraints invoked by each author'scopyright. These works may not be reposted without the explicit permission of the copyrightholder.,*,2010,2
Translucent Abstraction: Safe Views through Invertible Programming,Meng Wang; Jeremy Gibbons; Kazutaka Matsuda; Zhenjiang Hu,Abstract Despite the distinctive advantages of pattern matching in program understandingand reasoning; the tight coupling of interface and implementation has hampered its wideracceptance. Since the first proposal of views two decades ago; significant effort has beeninvested in tackling this non-modularity; the obvious target has been to decouple datatypeimplementations from separate interfaces used for pattern matching. However; having thisdecoupling to coexist with soundness of reasoning has been a challenge. Inspired by thedevelopment of invertible (bidirectional) programming; we propose a design of views basedon a right-invertible language. The language is sufficiently expressive to program many ofthe existing and some novel view applications; with simple and sound reasoning properties:views can be manipulated as if they were datatypes and equivalent programs with …,Draft available at http://web. comlab. ox. ac. uk/files/2280/total. pdf,2010,2
Generator-based GG Fortress library—collection of GGs and theories—,Kento Emoto; Zhenjiang Hu; Kazuhiko Kakehi; Kiminori Matsuzaki; Masato Takeichi,Abstract We have proposed a novel library called “GG Library” on Fortress in the previousreport. The library supports easy development of correct and efficient parallel programs;allowing users to write naive generate-and-test programs easily and uniformly withgenerator-ofgenerators that abstract generation of nested data structures. The library has anautomatic optimization mechanism by dispatching efficient implementation to a userprogram written with generator-of-generators based on a collection of theories. To enrich thepower of GG library; we need to make collections of generator-of-generators and theirtheories for optimization. This report collects generator-of-generators and their theories foroptimization with formal discussion; as well as their implementations in GG library.,*,2008,2
Calculus of minimals: Deriving dynamic-programming algorithms based on preservation of monotonicity,Akimasa Morihata; Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Constructing efficient algorithms is difficult and often considered to be a privilege ofa few specialists. Program calculation is a methodology for easy construction of efficientalgorithms; where efficient algorithms are systematically derived from naive but obviouslycorrect algorithms by calculational laws. This paper shows an ongoing effort to give a clearand effective methodology to deal with combinatorial optimization problems based onprogram calculation. First; we formalize greedy algorithms and dynamic programmingalgorithms in terms of minimals and the strictly monotone property. Next; we propose a newcalculational law to derive dynamic programming algorithms; which builds on somecalculational laws to construct orders satisfying monotone properties. Our law is not onlyapplicable for a wide class of combinatorial optimization problems; but also suitable for …,*,2007,2
A bidirectional transformation approach towards automatic model synchronization,Yingfei Xiong; Dongxi Liu; Zhenjiang Hu; Masato Takeichi,Model-driven architecture (MDA)[1] is a discipline in software engineering that relies onmodels as first class entities and that aims to develop; maintain and evolve software byperforming model transformations. Refinement; abstraction; refactoring; and integration ofmodels are special cases of model transformations that can be found in many areas ofsoftware engineering [2]. However; there are situations where only a transformation fromone model to another is not enough. Users may change models after the transformation inboth the source side and the target side; causing the maintenance problem. Consider thefollowing scenario: first designers create a UML model to describe the system design; andthen perform a model transformation on the UML model to produce a Java source model forprogrammers to implement the system. Programmers add code and methods to the Java …,Summer school on Generative and Transformational Techniques in Software Engineering 2007 (GTTSE’07),2007,2
Efficient implementation of tree skeletons on distributed-memory parallel computers,Kiminori Matsuzaki; Zhenjiang Hu,Abstract The METR technical reports are published as a means to ensure timelydissemination of scholarly and technical work on a non-commercial basis. Copyright and allrights therein are maintained by the authors or by other copyright holders; notwithstandingthat they have offered their works here electronically. It is understood that all personscopying this information will adhere to the terms and constraints invoked by each author'scopyright. These works may not be reposted without the explicit permission of the copyrightholder.,*,2006,2
IO swapping leads you there and back again,Akimasa Morihata; Kazuhiko Kakehi; Zhenjiang Hu; Masato Takeichi,TABA (“There And Back Again”)[DG02]; proposed by Danvy and Goldberg; is a special butpowerful programming pattern where a recursive function traverses lists at return time. Theiridea is that the recursive calls get us there (typically to a empty list) and the returns get usback again while traversing the list. A typical example is the symbolic convolution functioncnv which accepts two lists;[x0; x1;...; xn] and [y0; y1;...; yn]; and computes a new list [(x0;yn);(x1; yn− 1);...;(xn; y0)]. This can be naively specified as follows. cnv xy= zip x (reverse y)This definition is not satisfactory; the list y is traversed by reverse to produce an intermediatelist which will be again traversed by zip. A clever TABA solution; which avoids generation ofthe intermediate list; is as follows. cnv xy= let ([]; r)= walk x in r where walk []=(y;[]) walk (a:x')= let (b: y'; r)= walk x'in (y';(a; b): r) This program uses a bit unusual auxiliary function …,Workshop on Foundations of Software,2005,2
Design and implementation of general tree skeletons,Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract Trees are important datatypes that are often used in representing structured datasuch as XML. Though trees are widely used in sequential programming; it is hard to writeefficient parallel programs manipulating trees of arbitrary shapes; because of their irregularand ill-balanced structures. In this paper; we propose a solution for them based on theskeletal approach; in particular for general trees of arbitrary shapes; often called rose trees.We formalize a set of skeletons (abstracted computational patterns) for rose trees based onthe theory of Constructive Algorithmics. The formalization of the skeletons is an extension ofthose proposed for other data structures such as lists and binary trees. We then prove thatthe skeletons can be computed efficiently in parallel; by implementing each rose-treeskeleton in terms of parallel binary-tree skeletons for which an efficient parallel …,Department of Mathematical Engineering and Information Physics; University of Tokyo; Tech. Rep. METR2005-30,2005,2
Pruning DOM trees for structured document processing,Y Hayashi; Z Hu; M Takeichi; N Wake; M Hara; N Oshima,*,Proceedings of JSSST,2004,2
Mmpp: Maximum marking problems in parallel,Kazuhiko Kakehi; Zhenjiang Hu; Masato Takeichi,Maximum marking problems (Mmp for short) are to put a mark on the entries of some givendata structure in a way such that a given constraint is satisfied and the sum of the weightsassociated with marked entries is as large as possible. It was shown that the linear timealgorithm can be obtained provided that the characterizing function of the constraint is afinite homomorphism. This paper demonstrates that we can also have the parallelizable formfor solving Mmp through incorporating accumulation into list homomorphisms and focusingon the property of finiteness in the accumulation.,ソフトウェア科学会第 20 回大会 論文集,2003,2
A calculational framework for parallelization of sequential programs,Zhenjiang Hu; Masato Takeichi,Summary. A great deal of e ort has been made on a systematic way for parallelization ofsequential programs; because parallel programs are known to be much more di cult to writethat their sequential counterparts. What seems to be unsatisfactory with current approaches;however; is either too general where many heuristics are needed or too restrictive whereapplication scope is rather limited. In this paper; we propose a calculational framework forderiving parallel divide-and-conquer programs from naive sequential programs in a moresystematic way. Being more constructive; our method is not only helpful in design of e cientparallel programs in general but also promising in construction of parallelization system.Several interesting examples are used for illustration.,*,1997,2
Cheap tupling in calculational form,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Abstract In functional programming; a program prog is usually expressed as compositions oftransformations over data structures while each transformation is defined by a recursion 7£;traversing over its input data structure; namely prog—TZj o••• olZn-This compositional styleof programming allows clearer and more modular programs; but comes at a price of possiblyhigh runtime overhead resulting mainly from the following two categories:(1) Unnecessaryintermediate data structures passed between the composition of two recursions;(2)Inefficiency in a single recursion; such as redundant recursive calls; multiple traversals of thesame data structures; and unnecessary traversals of intermediate data structures. Althoughthis paper is mainly concerned with elimination of the inefficiency in the latter case; thesetwo kinds of inefficiency are much related; for which there are two known tactics; namely …,PLILP,1996,2
Making recursions manipulable by constructing mediotypes,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Summary. A catamorphism; generic version of our familiar foldr on lists; is quite a simplerecursive scheme associated with data type de nitions. It plays a very important role inprogram calculation; since for it there exists a general transformation rule known asPromotion Theorem. However; its structure is so tight that many recursions cannot be specied by catamorphisms because of their irregular reference to compound data structures. Inthis paper; aiming at manipulating functions de ned by more general recursive schemes; wepropose a method to factorize these functions into a composition of a catamorphism and atype reformer based on the construction of a medio-type {suitable intermediate data typeextracted from recursion. Consequently; our method extends the applicability oftransformational techniques specially geared to catamorphisms. Some examples are also …,Technique report METR,1995,2
Generation of program analyzer based on model checking,Yuji Yamaoka; Zhenjiang Hu; Masato Takeichi; Mizuhito Ogawa,*,IPSJ Transactions on Programming,*,2
An axiomatic basis for bidirectional programming,Hsiang-Shang Ko; Zhenjiang Hu,Abstract Among the frameworks of bidirectional transformations proposed for addressingvarious synchronisation (consistency maintenance) problems; Foster et al.'s [2007]asymmetric lenses have influenced the design of a generation of bidirectional programminglanguages. Most of these languages are based on a declarative programming model; andonly allow the programmer to describe a consistency specification with ad hoc and/orawkward control over the consistency restoration behaviour. However; synchronisationproblems are diverse and require vastly different consistency restoration strategies; and tocope with the diversity; the programmer must have the ability to fully control and reasonabout the consistency restoration behaviour. The putback-based approach to bidirectionalprogramming aims to provide exactly this ability; and this paper strengthens the putback …,Proceedings of the ACM on Programming Languages,2017,1
Palgol: A High-Level DSL for Vertex-Centric Graph Processing with Remote Data Access,Yongzhe Zhang; Hsiang-Shang Ko; Zhenjiang Hu,Abstract Pregel is a popular distributed computing model for dealing with large-scalegraphs. However; it can be tricky to implement graph algorithms correctly and efficiently inPregel's vertex-centric model; especially when the algorithm has multiple computationstages; complicated data dependencies; or even communication over dynamic internal datastructures. Some domain-specific languages (DSLs) have been proposed to provide moreintuitive ways to implement graph algorithms; but due to the lack of support for remoteaccess—reading or writing attributes of other vertices through references—they cannothandle the above mentioned dynamic communication; causing a class of Pregel algorithmswith fast convergence impossible to implement. To address this problem; we design andimplement Palgol; a more declarative and powerful DSL which supports remote access …,Asian Symposium on Programming Languages and Systems,2017,1
Towards Variability Management in Bidirectional Model Transformation,Xiao He; Zhenjiang Hu; Yi Liu,The bidirectional model transformation (BX) comprises a forward transformation get and abackward transformation put. Given that get may be an information-loss transformation; thebehavior of put may be uncertain. An uncertain put produces many valid outputs that fitdifferent application scenarios. This paper proposes an approach to variability managementin BX to enable put to generate an output model with several variation points that can beconfigured to adapt this output for different uses. Firstly; this paper proposes a variabilitymetamodel and management framework; which are used to characterize and configurevariation points in a transformation result model. Secondly; this paper extends a BXlanguage to specify a BX with variability. Thirdly; this paper presents a BX engine; which canexecute a BX with variability and generate a model that contains variation points. Lastly …,Computer Software and Applications Conference (COMPSAC); 2017 IEEE 41st Annual,2017,1
Reusable self-adaptation through bidirectional programming,Kevin Colson; Robin Dupuis; Lionel Montrieux; Zhenjiang Hu; Sebastián Uchitel; Pierre-Yves Schobbens,Abstract In self-adaptive systems; an adaptation strategy can apply to severalimplementations of a target system. Reusing this strategy requires models of the targetsystem that are independent of its implementation. In particular; configuration files must betransformed into abstract configurations; but correctly synchronizing these tworepresentations is not trivial. We propose an approach that uses putback-based bidirectionalprogramming to guarantee that this synchronization is correct by construction. Wedemonstrate the correctness of our approach and how it handles typical features ofconfiguration files; such as implicit default values and context overriding. We also show thatour approach can be used to migrate configuration files from one implementation to another.We illustrate our approach with a case study; where we use the same abstract model to …,Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems,2016,1
Derivation of parallel-efficient structural recursive functions from declarative graph queries,Chong Li; Le-Duc Tung; Xiaodong Meng; Zhenjiang Hu,Abstract Graphs play an important role today in managing big data; while structuralrecursion is powerful to process graphs by its flexibility. Designing efficient structuralrecursive functions to query distributed graphs is still a big challenge because of theperformance constraints imposed by the bulk semantics of structural recursion. In this paper;we propose a solution that systematically generates parallel-efficient structural recursivefunctions from high-level declarative graph queries. Therefore; the complexity in developingefficient structural recursive functions is relaxed by our solution.,Proceedings of the 31st Annual ACM Symposium on Applied Computing,2016,1
Let high-level graph queries be parallel efficient: an approach over structural recursion on pregel,Chong Li; Le-Duc Tung; Xiaodong Meng; Zhenjiang Hu,抄録 Graphs play an important role today in managing big data. Supporting declarativegraph queries is one of the most crucial parts for efficiently manipulating graph databases.Structural recursion has been studied for graph querying and graph transformations.However; most of the previous studies about graph structural recursion do not exploit inpractical the power of parallel computing. The bulk semantics; which is used for parallelevaluation of structural recursion; still impose many constraints that limit the performance ofquerying in parallel. In this paper; we propose a framework that systematically generatesstructural recursive functions from high-level declarative graph queries; then the generatedfunctions are evaluated efficiently on our framework on top of the Pregel model. Therefore;the complexity in developing efficient structural recursive functions is relaxed by our …,Journal of Information Processing,2016,1
A Novel Digital Watermark Algorithm Based on a Fingerprint Image,Xiao Hui Yang; Xin Chun Cui; Zhen Liang Cao; Zi Qiang Hu,Abstract: Article Preview Article Preview Article Preview A fingerprint-based digitalwatermark algorithm for image processing is proposed. Firstly; the watermark is done thescrambling by the Arnold transform. Secondly; the digital watermarking is done the chaosencryption by the Tent chaos sequence. Thirdly; the original image is transformed by thediscrete Curvelet transformation. Finally; the watermarking image is embedded into detailscale coefficient matrix of Curvelet transform. The experimental result demonstrated thatwatermarking extraction's effect is acceptable. Moreover; severe image attacks such asnoise; image crop and JPEG compression and so on are survived by the embeddedwatermarking.,Applied Mechanics and Materials,2015,1
Performance in software development-Special issue editorial.,Miroslaw Staron; Jörgen Hansson; Jan Bosch; Laura Kovács; Rosario Pugliese; Josep Silva; Francesco Tiezzi; Meng Wang; Jeremy Gibbons; Kazutaka Matsuda; Zhenjiang Hu,[Show abstract][Hide abstract] ABSTRACT: Context: While the ISD process and in particularRequirement Elicitation has been defined as a collaborative social interaction; visualisationsfail to accurately capture the multifaceted nature of the social process. Instead; ISDvisualisations focus...,Information & Software Technology,2014,1
A Generate-Test-Aggregate parallel programming library for systematic parallel programming,Yu Liu; Kento Emoto; Zhenjiang Hu,Abstract The Generate-Test-Aggregate (GTA for short) algorithm is modeled following asimple and straightforward programming pattern; for combinatorial problems. First; generateall candidates; second; test and filter out invalid ones; finally; aggregate valid ones to makethe final result. These three processing steps can be specified by three building blocksnamely; generator; tester; and aggregator. Despite the simplicity of algorithm design;implementing the GTA algorithm naively following the three processing steps; ie; brute-force;will result in an exponential-cost computation; and thus it is impractical for processing largedata. The theory of GTA illustrates that if the definitions of generator; tester; and aggregatorsatisfy certain conditions; an efficient (usually near-linear cost) MapReduce program can beautomatically derived from the GTA algorithm. The principle of GTA is attractive but how to …,Parallel Computing,2014,1
Towards Bidirectional Higher-Order Transformation for Model-Driven Co-evolution,Bernhard Hoisl; Zhenjiang Hu; Soichiro Hidaka,Abstract In model-driven development (MDD); numerous metamodels; models; and modeltransformations need to be taken into account. These MDD-based artifacts—although highlyinterdependent—are autonomously maintained. Changes in one artifact (eg; in a model) arenot automatically reflected in other dependent artifacts (eg; in a model transformation). Thebarrier for a tight integration of MDD-based artifacts stems from two limitations of currentapproaches. On the one hand; model transformations are unidirectional and changes canbe propagated in one direction only. On the other hand; changes can only be propagatedinto output artifacts of transformations; not into transformation definitions themselves. Inorder to overcome these co-evolution problems; our approach is based on establishingbidirectional transformations (BX) between modeling artifacts and on applying higher …,International Conference on Model-Driven Engineering and Software Development,2014,1
A generate-test-aggregate parallel programming library: systematic parallel programming for MapReduce,Yu Liu; Kento Emoto; Zhenjiang Hu,Abstract Generate-Test-Aggregate (GTA for short) is a novel programming model forMapReduce; dramatically simplifying the development of efficient parallel algorithms. Underthe GTA model; a parallel computation is encoded into a simple pattern: generate allcandidates; test them to filter out invalid ones; and aggregate valid ones to make the result.Once users specify their parallel computations in the GTA style; they get efficientMapReduce programs for free owing to an automatic optimization given by the GTA theory.In this paper; we report our implementation of a GTA library to support programming in theGTA model. In this library; we provide a compact programming interface for hiding thecomplexity of GTA's internal transformation; so that many problems can be encoded in theGTA style easily and straightforwardly. The GTA transformation and optimization …,Proceedings of the 2013 International Workshop on Programming Models and Applications for Multicores and Manycores,2013,1
Simulink モデルの保守性向上に向けたクラスタリングおよび UML モデルとの双方向変換に関する研究,小澤貴之， 鷲崎弘宜， 深澤良彰,Simulink モデルは組み込みソフトウェア開発に適している. 一方; 大規模で煩雑なモデルになりやすく検討・修正が困難である. サブシステムによるモデルを抽象化は属人性が強いためにモデルの理解性が低い. そこで; 我々は Simulink モデルの保守性の向上を目指して; クラスタリング手法を適用し; 属人性の無い適切な抽象化を行う. さらに; Simulink モデルと UML モデルの双方向変換を提案する. UML モデルの静的・動的なモデルに変換する事で; 責務等を明らかにして理解性を向上させる. 及び; 双方向変換でモデル間の対応関係を維持する.,組込みシステムシンポジウム 2012 論文集,2012,1
Manipulating accumulative functions by swapping call-time and return-time computations,Akimasa Morihata; Kazuhiko Kakehi; Zhenjiang Hu; Masato Takeichi,Abstract Functional languages are suitable for transformational developments of programs.However; accumulative functions; or in particular tail-recursive functions; are known to beless suitable for manipulation. In this paper; we propose a program transformation named“IO swapping” that swaps call-time and return-time computations. It moves computations inaccumulative parameters to results and thereby enables interesting transformations. Wedemonstrate effectiveness of IO swapping by several applications: deforestation; higherorder removal; program inversion; and manipulation of circular programs.,Journal of Functional Programming,2012,1
Systematic Development of Functional Bulk Synchronous Parallel Programs,Julien Tesson; Zhenjiang Hu; Kiminori Matsuzaki; Frédéric Loulergue; Louis Gesbert,With the current generalization of parallel architectures arises the concern of applying formalmethods to parallelism; which allows specifications of parallel programs to be preciselystated and the correctness of an implementation to be verified. However; the complexity ofparallel; compared to sequential; programs makes them more error-prone and difficult toverify. This calls for a strongly structured form of parallelism; which should not only easeprogramming by providing abstractions that conceal much of the complexity of parallelcomputation; but also provide a systematic way of developing practical programs fromspecification. Bulk Synchronous Parallelism (BSP) is a model of computation which offers ahigh degree of abstraction like PRAM models but yet a realistic cost model based on astructured parallelism. We propose a framework for refining a sequential specification …,*,2010,1
From bidirectional model transformation to model synchronization,Yingfei Xiong; Song Hui; Zhenjiang Hu; Masato Takeichi,Abstract In model-driven engineering; it is common that there are several related models co-existing. When one model is updated or several models are updated at the same time; weneed to propagate the updates across all models to make them consistent. This process iscalled synchronization. Bidirectional model transformation partially supports thesynchronization of two models by updating one model according to the other models.However; it does not work when the two models are modified at the same time. In this workwe propose a new algorithm that wraps any bidirectional transformation into a synchronizer;and this synchronizer allows simultaneous updates on the two models. We propose ageneral algebraic framework for model synchronization; and prove that our algorithm canensure the synchronization properties if the bidirectional transformation satisfies the …,GRACE TECHNICAL REPORTS,2009,1
A Coq Library for Program Calculation,Hideki Hashimoto; Zhenjiang Hu; Julien Tesson; Frédéric Loulergue; Masato Takeichi,Program calculation; being a programming technique that derives programs fromspecification by means of formula manipulation; is a challenging activity. It requires humaninsights and creativity; and needs systems to help human to focus on clever parts of thederivation by automating tedious ones and verifying correctness of transformations. Differentfrom many existing systems; we show in this paper that Coq; a popular theorem prover;provides a cheap way to implement a powerful system to support program calculation; whichhas not been recognized so far. We design and implement a set of tactics for the Coq proofassistant to help the user to derive programs by program calculation and to write proofs incalculational form. The use of these tactics is demonstrated through program calculations inCoq based on the theory of lists.,JSSST Conference on Software Science and Technology,2009,1
On-site synchronizers for multi-view applications,Yingfei Xiong; Zhenjiang Hu; Song Hui; Masato Takeichi; Haiyan Zhao; Hong Mei,In this paper we propose a new approach to on-site synchronization; which takesmodifications on all data and produces new modifications to make them consistent. Wededuce the propagation direction from the modifications; and achieve incrementalsynchronization by only computing the modified part. We have applied our approach toconstruct an EJB modeling tool and our experiments show that our synchronizers arehundred times faster than existing off-site synchronizers.,Proceedings of the 25th JSSST Conference,2008,1
Domain-specific optimization for skeleton programs involving neighbor elements,Kento Emoto; Kiminori Matsuzaki; Zhenjiang Hu; Masato Takeichi,Abstract. Skeletal parallel programming enables us to develop parallel programs easily bycomposing ready-made components called skeletons. However; a simply-composedskeleton program often lacks efficiency due to overheads of intermediate data structures andcommunications. Many studies have focused on optimizations by fusing successiveskeletons to eliminate the overheads. Existing fusion transformations; however; are toogeneral to achieve adequate efficiency for some classes of problems. Thus; a specific fusionoptimization is needed for a specific class. In this paper; we propose a specific optimizationof skeleton programs involving neighbor elements; which is often seen in scientificcomputations. We start with a normal form that abstracts the programs of interest. Then; wedevelop fusion rules that transform a skeleton program into the normal form. Finally; we …,*,2007,1
Bidirectionalizing Xquery: Updating XML Through Materialized Xquery View,Dongxi Liu; Zhenjiang Hu; Masato Takeichi,*,*,2006,1
In situ growth of BN nanocages,M Yeadon; M Lin; CB Boothroyd; H Zheng; KP Loh,The growth of a variety of novel nanostructured carbon-based materials have been achievedin recent years following the discovery of fullerene molecules [1] and related nanostructures[2; 3]. The formation of 'chains' of hollow spheres or 'nanocages' of C (eg [4; 5]) has beenobserved; together with nanocages of hexagonal BN (eg [6]). Using a modified highresolution ultrahigh vacuum transmission electron microscope we have succeeded inmaking direct observations of the formation of chains of h-BN nanocages by nitridation ofFeB nanoparticles in NH3 under high vacuum conditions. Nanoparticles of FeB wereprepared by ball-milling water-free FeCl3 and NaBH4 (1: 3: 3 in mole ratio) for 8h followedby annealing in Ar at 500ºC for 3hr [7] The FeB particles were then ultrasonicated in ethanoland cast onto Si supports; 6mm x 2mm x 0.2 mm. One side of the support was uniaxially …,Microsc Microanal,2003,1
Functional and Logic Programming: 6th International Symposium; FLOPS 2002; Aizu; Japan; September 15-17; 2002. Proceedings,Zhenjiang Hu; Mario Rodriquez-Artalejo,This volume contains the proceedings of the Sixth Fuji International Symposium onFunctional and Logic Programming (FLOPS 2002); held in Aizu; Japan; September 15–17;2002; hosted by the University of Aizu; and colocated with the First Asian Symposium onPartial Evaluation Semantics-Based Program Manipulation (ASIA-PEPM 2002); which washeld on September 12–14. FLOPS is a forum for research on all issues concerningfunctional programming and logic programming. In particular; it aims to stimulate thecrossfertilization as well as the integration of the two paradigms. The previous FLOPSmeetings took place in Fuji-Susono (1995); Shonan (1996); Kyoto (1998); Tsukuba (1999);and Tokyo (2001). The proceedings of FLOPS'99 and FLOPS 2001 were published bySpringer-Verlag as Lecture Notes in Computer Science; Vols. 1722 and 2024 …,*,2002,1
Calculating linear time algorithms for solving maximum weightsum problems,Isao Sasano; Zhenjiang Hu; Masato Takeichi; Mizuhito Ogawa,Abstract In this paper; we propose a new method to derive practical linear time algorithms formaximum weightsum problems. A maximum weightsum problem is specified as follows:given a recursive data x; find an optimal subset of elements of x which not only satisfiescertain property p but also maximizes the sum of the weight of elements of the subset. Thekey point of our approach is to describe the property p as a functional program. This enablesus to use program transformation techniques. Based on this approach; we present theoptimization theorem; with which we construct a systematic framework to calculate efficientlinear time algorithms for maximum weightsum problems on recursive data structures. Wedemonstrate effectiveness of our approach through several interesting and non-trivialexamples; which would be difficult to solve by known approaches.,Computer Software,2001,1
Solving a class of knapsack problems on recursive data structures,Isao Sasano; Zhenjiang Hu; Masato Takeichi; Mizuhito Ogawa,AH9g$;:GE;2=LdBj$NBeI=E*LdBj$N#1$D$G$"$k%J%C%W%5%C%/LdBj$O!" NP :$Fq$G$"$k$;!"=E$_$;@0 ?t$N$_$N>l9g$K$OF0E*7W2hK!$K$h$kB?9'<0;~4V%"%k%4%j%:%'$;CN$i$l$F$$$k!#$7$+$7!"F~NO%G!<%? $K%j%9%H!"LZEy$N9=B$$rF3F~$7$F9=B$$K4X$9$k@)Ls>r7o!J$?$H$($P8_$$$KNY9g$o$J$$Ey!K$r2C … %J%C%W%5%C%/LdBj$H$O!"2ACM!"=E$_$r;}$D N 8D$N 2YJ*$H!"MFNL C $NB^$;F~NO$H$7$FM?$($i$l$?$H$- $K!"=E$_OB$; C $r1[$($J$$$h$&$J2YJ*$NA*$SJ}$NCf $G!"2ACM$NOB$;:GBg$NA*$SJ}$r5a$a$kLdBj$G$"$k!# $3$NLdBj$OAH9g$;:GE;2=LdBj$NBeI=E*LdBj$N#1$D$G $"$j!" NP :$Fq$G$"$k$;!"=E$_$;@0?t$N$_$N> … $JH/E8LdBj$KBP$9$k8zN($N$h$$%"%k%4%j%:%'$NE}0lE*F3=PK!$rDs0F$9$k!#$3$NF3=PK!$N%]%$%s%H$O!":F 5"4X?t$G5-=R$5$l$?@)Ls>r7o$+$i!":GE;2=DjM} [3]$r … E;MQ$9$k$3$H$K$h$j%"%k%4%j%:%'$;F3=P$5$l$k$H$3 …,Computer Software,2001,1
A general recursive form for graph traversals and its transformation,Isao Sasano; Zhenjiang Hu; Masato Takeichi,Sasano; I.; Hu; Z.; & Takeichi; M. (2000). A general recursive form for graph traversals and itstransformation. Computer Software; 17(3); 2-19 … A general recursive form for graph traversalsand its transformation. / Sasano; Isao; Hu; Zhenjiang; Takeichi; Masato … Sasano; I; Hu; Z &Takeichi; M 2000; 'A general recursive form for graph traversals and its transformation' ComputerSoftware; vol 17; no. 3; pp. 2-19 … Sasano I; Hu Z; Takeichi M. A general recursive form forgraph traversals and its transformation. Computer Software. 2000;17(3):2-19 … Powered byPure; Scopus & Elsevier Fingerprint Engine™ © 2017 Elsevier BV.,Computer Software,2000,1
Optimization of acoustic impedance; geometric structure and operating condition of liners mounted in engine duct,Lu Yadong; Wang Qingkuan; Hu Zongan; Cul Jiya,Acoustically absorptive treatment in aircraft engine nacelle is an essential part of the overallaircraft noise reduction effort. The investigation on the optimization of multi-liners plays animportant role in noise reduction. Based upon the mode analysis method of soundpropagation in a circular duct with multiple liners; a flexible tolerance method is used tooptimize the acoustic parameters (impedance); geometric structure parameters (such asopen area ratio; cavity depth and hole diameter) and operating condition parameters (suchas blade passing frequency). The mathematical models for these kinds of optimization arepresented here. The optimum values of the design variables are determined when the in-duct sound suppression approaches a maximum. It can be derived from the optimum resultsthat the emphasis of the engineering optimization design of the perforated plate honey …,Chinese Journal of Aeronautics,1996,1
Goal Modelling for Security Problem Matching and Pattern Enforcement,Yijun Yu; Haruhiko Kaiya; Nobukazu Yoshioka; Zhenjiang Hu; Hironori Washizaki; Yingfei Xiong; Amin Hosseinian-Far,Abstract This article describes how earlier detection of security problems and theimplementation of solutions would be a cost-effective approach for developing securesoftware systems. Developing; gathering and sharing similar repeatable programmingknowledge and solutions has led to the introduction of Patterns in the 90's. The sameconcept has been adopted to realise reoccurring security knowledge and hence securitypatterns. Detecting a security problem using the patterns in requirements models may leadto its early prevention. In this article; the authors have provided an overview of securitypatterns in the past two decades; followed by a summary of i*/Tropos goal modellingframework. Section 2 outlines model-driven development; meta-models and modeltransformation; within the context of requirements engineering. They have summarised …,International Journal of Secure Software Engineering (IJSSE),2017,*
BiFluX: A Bidirectional Functional Update Language for XML,Tao Zan; Hugo Pacheco; Hsiang-Shang Ko; Zhenjiang Hu,抄録 Different XML formats are widely used for data exchange and processing; being oftennecessary to mutually convert between them. Standard XML transformation languages; likeXSLT or XQuery; are unsatisfactory for this purpose since they require writing a separatetransformation for each direction. Existing bidirectional transformation languages mean tocover this gap; by allowing programmers to write a single program that denotes bothtransformations. However; they often 1) induce a more cumbersome programming style thantheir traditionally unidirectional relatives; to establish the link between source and targetformats; and 2) offer limited configurability; by making implicit assumptions about howmodifications to both formats should be translated that may not be easy to predict.,Information and Media Technologies,2017,*
Integrating Goal model into rule-based adaptation,Tianqi Zhao; Tao Zan; Haiyan Zhao; Zhenjiang Hu; Zhi Jin,Goal-oriented adaptation provides a powerful mechanism to develop self-adaptive systems;enabling systems to keep satisfying user goals in a dynamically changing environment. Thegoal-oriented approach normally reduces the adaptation planning as a global optimizationprocess and leaves the system the task of determining the actions required to achieve thegoals. However; the high computation cost of global optimization prevents a self-adaptivesystem from quickly adjusting itself to the dynamically changing environment at runtime;which is intolerable since efficiency of planning is of utmost importance in most self-adaptivesystems. On the other hand; rule-based adaptation has the advantage of efficient planningprocess since it predefines the adaptation logic by rules instead of leaving the system thetask of reasoning. To combine the advantages of both approaches; we propose a novel …,Software Engineering Conference (APSEC); 2016 23rd Asia-Pacific,2016,*
A bidirectional language for parsing and reflective printing,Zirun Zhu; Yongzhe Zhang; Hsiang-Shang Ko; Pedro Martins; Joao Saraiva; Zhenjiang Hu,CiNii 国立情報学研究所 学術情報ナビゲータ[サイニィ]. メニュー 検索 …,日本ソフトウェア科学会大会論文集,2016,*
Rule-directed code clone synchronization,Xiao Cheng; Hao Zhong; Yuting Chen; Zhenjiang Hu; Jianjun Zhao,Code clones are prevalent in software systems due to many factors in softwaredevelopment. Detecting code clones and managing consistency between them along codeevolution can be very useful for reducing clone-related bugs and maintenance costs.Despite some early attempts at detecting code clones and managing the consistencybetween them; the state-of-the-art tool can only handle simple code clones whose structuresare identical or quite similar. However; existing empirical studies show that clones can havequite different structures with their evolution; which can easily go beyond the capability of thestate-of-the-art tool. In this paper; we propose CCSync; a novel; rule-directed approach;which paves the structure differences between the code clones and synchronizes them evenwhen code clones become quite different in their structures. The key steps of this …,Program Comprehension (ICPC); 2016 IEEE 24th International Conference on,2016,*
Transforming Programs between APIs with Many-to-Many Mappings,Chenglong Wang; Jiajun Jiang; Jun Li; Yingfei Xiong; Xiangyu Luo; Lu Zhang; Zhenjiang Hu,Abstract Transforming programs between two APIs or different versions of the same API is acommon software engineering task. However; existing languages supporting for suchtransformation cannot satisfactorily handle the cases when the relations between elementsin the old API and the new API are many-to-many mappings: multiple invocations to the oldAPI are supposed to be replaced by multiple invocations to the new API. Since the multipleinvocations of the original APIs may not appear consecutively and the variables in thesecalls may have different names; writing a tool correctly to cover all such invocation cases isnot an easy task. In this paper we propose a novel guided-normalization approach toaddress this problem. Our core insight is that programs in different forms can be semantics-equivalently normalized into a basic form guided by transformation goals; and developers …,LIPIcs-Leibniz International Proceedings in Informatics,2016,*
Constructing format-preserving printing from syntax-directed definitions 基于语法制导定义构造保留格式的反语法分析,LiChao Wang; GuoQiang Li; ZhenJiang Hu,Abstract Transformations between source codes; such as refactorings and program analysis;are frequently used in software engineering. Typically; transformations are effectivelyimplemented using an abstract syntax tree (AST) on the origin source code. However; acritical limitation of ASTs is the loss of layout information such as whitespace and comments;which can result in poor readability. To overcome this shortcoming; this paper proposes abidirectional transformation (BX) method that maintains consistency in the layout betweenthe origin and transformed. First; a section of origin source code will be translated to aconcrete syntax tree (CST) that includes layout information. Second; to make the BXpractical; a new method is constructed that matches an AST with its respective CST. Finally;to get a reasonable CST; a method to amend the CST is also provided. We prove that the …,Science China Information Sciences,2015,*
Processing UnQL Graph Queries with Pregel,Le-Duc Tung; Chong Li; Xiaodong Meng; Zhenjiang Hu,Pregel is a programming model proposed by Google to process large graphs. It is inspiredby the Bulk Synchronous Parallel model by which the same computation instructions areapplied to every vertex in each iteration. However; Pregel is a so-called low-level model forend users; and it requires much effort on writing efficient programs; even to well-knowngraph algorithms. Similar problems with the MapReduce model have resulted in high-levelquery frameworks such as Hive or Pig on top of MapReduce. Taking the same philosophy; inthis paper; we propose a high-level framework on top of Pregel to allow executing queriesand transformations over large graphs. We borrow UnQL; an SQL-like language overgraphs; as the interface language for our framework. UnQL queries are then automaticallycompiled into efficient Pregel programs that can deal with large graphs. Experimental …,日本ソフトウェア科学会大会論文集,2015,*
1 Stimuli-Responsive Nanostructured Silica Matrix Targeting Drug Delivery Applications,Sanghoon Kim; Nadia Canilho; Andreea Pasc,Nowadays; challenges in drug delivery include engineering intelligent vectors forsimultaneous diagnosis and treatment; vectors that are safe; easily administered; and with areduced cost. Moreover; there is an increasing need for controlling the delivery with respectto the dose and the site level; in order to decrease adverse side effects. As a matter of fact;many important site-selective drugs; such as highly toxic antitumor molecules; require “zerorelease” before reaching the targeted cells or tissues. This chapter underlines,Biological and Pharmaceutical Applications of Nanomaterials,2015,*
Guest editorial to the special section on model transformation,Zhenjiang Hu; Juan de Lara,Modeling is a key element in reducing the complexity of the development and maintenanceof software systems. Software engineering paradigms like model-driven engineering (MDE)consider models as the primary elements in the software construction process. In this setting;model transformations are essential for elevating models from documentation elements tofirst-class artifacts of the development. Model transformation includes model-to-texttransformation to generate code from models; text-to-model transformations to parse textualrepresentations to model representations; model extraction to derive higher-level modelsfrom legacy code; and model-to-model transformations to normalize; weave; optimize;simulate; and refactor models; as well as to translate between modeling languages. Modeltransformation encompasses a variety of technical spaces; including modelware …,Software & Systems Modeling,2015,*
『モデル駆動工学の原理と応用』(2) メタモデリングとモデル変換,日高宗一郎， 胡振江,抄録 モデル駆動工学では; メタモデルはモデルに対する型システムのようなものを提供し;モデルによるシステムの表現を正確に; 定型的かつ強力に支援する. メタモデルは更にメタメタモデルで型付けられ; メタモデルで型付けられるモデルとあわせた三階層構造をなすことは前稿で概説した.本稿では; この構造の形式的な定義を与えるだけでなく; これらがすべて抽象モデルとして統一的に扱えることを示す.,コンピュータ ソフトウェア,2015,*
Engineering Shortest Regular Category-Path Queries,Le-Duc Tung; Kento Emoto; Zhenjiang Hu,CiNii 国立情報学研究所 学術情報ナビゲータ[サイニィ]. メニュー 検索 …,日本ソフトウェア科学会大会論文集,2014,*
Bidirectional Programming in BiFluX-A Tutorial–,Hugo Pacheco; Tao Zan; Zhenjiang Hu,Different XML formats are widely used for data exchange and processing; being oftennecessary to mutually convert between them. Standard XML transformation languages; likeXSLT or XQuery; are unsatisfactory for this purpose since they require writing a separatetransformation for each direction. Existing bidirectional transformation languages mean tocover this gap; by allowing programmers to write a single program that denotes bothtransformations. However; they often 1) induce a more cumbersome programming style thantheir traditionally unidirectional relatives; to establish the link between source and targetformats; and 2) offer limited configurability; by making implicit assumptions about howmodifications to both formats should be translated that may not be easy to predict. BiFluX isa novel bidirectional programming by update paradigm; in which the programmer writes …,*,2014,*
Interactive Inconsistency Fixing in Feature Modeling,Bo Wang; Ying-Fei Xiong; Zhen-Jiang Hu; Hai-Yan Zhao; Wei Zhang; Hong Mei,Abstract Feature models have been widely adopted to reuse the requirements of a set ofsimilar products in a domain. In feature models' construction; one basic task is to ensure theconsistency of feature models; which often involves detecting and fixing of inconsistencies infeature models. While many approaches have been proposed; most of them focus ondetecting inconsistencies rather than fixing inconsistencies. In this paper; we propose anovel dynamic-priority based approach to interactively fixing inconsistencies in featuremodels; and report an implementation of a system that not only automatically recommends asolution to fixing inconsistencies but also supports domain analysts to gradually reach thedesirable solution by dynamically adjusting priorities of constraints. The key technicalcontribution is; as far as we are aware; the first application of the constraint hierarchy …,Journal of Computer Science and Technology,2014,*
Dérivation formelle et extraction d’un programme data-parallele pour le probleme des valeurs inférieures les plus proches,F Loulergue; S Robillard; J Tesson; J Légaux; Z Hu,Le probleme des valeurs inférieures les plus proches (All Nearest Smaller Values ou ANSV)est un probleme important pour la programmation parallele [1] car il peut être utilisé pourrésoudre plusieurs problemes plus spécifiques et il est également l'une des phasesd'algorithmes plus complexes. Le probleme est le suivant: soit xs=[x1; x2;...; xn] une listed'éléments d'un domaine totalement ordonné; pour chaque xi; trouver la valeur la plusprochea gauche de xi et la valeur la plus prochea droite de xi qui sont inférieuresax i. S'il n'ya pas de telle valeur; indiquer⊥a la place. Partant d'une spécification naıve; sous forme d'unprogramme fonctionnel inefficace; nous dérivons pas-a-pas un programme fonctionnelséquentiel plus efficace. Cette derniere formulation utilise une fonction d'ordre supérieureappelée homomorphisme quasi synchrone; dont nous fournissons une implantation …,Actes de la 13eme édition d’AFADL; atelier francophone sur les Approches Formelles dans l’Assistance au Développement de Logiciels; juin 2014.,2014,*
Efficient Query Evaluation on Distributed Graph with Hadoop Environment,Le-Duc Tung; Quyet Nguyen-Van; Zhenjiang Hu,CiNii 国立情報学研究所 学術情報ナビゲータ[サイニィ]. メニュー 検索 …,日本ソフトウェア科学会大会論文集,2013,*
BiFluX: A Bidirectional Functional Update Language for XML,Tao Zan; Hugo Pacheco; Zhenjiang Hu,XML formats are widely used for information exchange and data processing. A common useis to store information in the same way as relational databases; and many XML querylanguages such as XQuery have been developed for this purpose. De facto XML processinglanguages are traditionally unidirectional; in the sense that programmers writetransformations from source formats to view formats; but backward updating; ie; translatingview modifications into the original XML database; is not considered. To cover this gap;existing XML bidirectional languages propose particular linguistic mechanisms that aidprogrammers in writing a forward XML transformation; such that a consistent backwardtransformation can be derived for free. Unfortunately; as the classical view-update problemfor relational databases; backward transformations are generally not unique and existing …,日本ソフトウェア科学会大会論文集,2013,*
An Experimental Implementation of Self-adjusting Bidirectional Transformations,Huu-Phuc Vo; Hiroyuki Kato; Soichiro Hidaka; Zhenjiang Hu,Bidirectional transformations provide a novel mechanism for synchronizing and maintainingthe consistency of information between source and view. Despite many advantages;bidirectional transformations are limited in achieving incremental computing that concernsmaintaining the source-view relationship of a program as the source of a program ischanged. Recent work on incremental computing such as self-adjusting computationdeveloped useful techniques for writing programs which can adapt their view to any small orlarge change in the source. In this article; we realize that bidirectional transformations ontrees can be made more efficient by using self-adjusting techniques. The underlying systemsof forward and backward transformations are represented with dynamic dependence graphsthat record the data dependencies and control dependencies. When the source or the …,日本ソフトウェア科学会大会論文集,2013,*
Engineering Adaptive Software Systems (EASSy),Shinichi Honiden; Zhenjiang Hu; Hausi Müller; John Mylopoulos; Yijun Yu,Objectives As software-intensive systems continue to invade all aspects of personal;business and social life; they are required to operate in ever more open and dynamicenvironments where the one constant is uncertainty. Coping with such uncertainty calls forsystems that monitor their environment and adapt so that they can continue to fulfill theirrequirements. The problem of engineering such systems is being addressed in a number ofresearch communities; including Software Engineering; Systems; Ubiquitous Computing;Service-Oriented Computing; Multi-Agent Systems; Robotics and more. As a result ofresearch efforts within these communities; there have been many proposals on how toengineer such adaptive systems. Some are policy-/requirements-based; others biologically-inspired; still others focus on awareness as the key facility that leads to adaptivity. The …,*,2013,*
Online ISSN: 1349-8606 Progress in Informatics,Akiko AIZAWA; Atsuhiro TAKASU; Daiji FUKAGAWA; Masao TAKAKU; Jun ADACHI,Abstract: We propose a two-layered architecture for information identification that isspecifically targeted towards academic information. We first introduce the basic notion ofinformation identification; or linkage; that connects fragmented information referring to thesame objects or people in the world. We then propose a linkage system that is composed ofbibliography and researcher identification layers. As an illustrative example; the results of acoauthor relationship analysis are also shown.,*,2013,*
EFFICIENT PARALLEL PROGRAMMING WITH BSP HOMOMORPHISMS,Joeffrey Legaux; Zhenjiang Hu; Frédéric Loulergue; Kiminori Matsuzaki; Julien Tesson,Abstract Algorithmic skeletons in conjunction with list homomorphisms play an important rolein formal development of parallel algorithms. We have designed a notion of homomorphismdedicated to bulk synchronous parallelism. In this paper we derive two application using thistheory: sparse matrix vector multiplication and the all nearest smaller values problem. Weimplement a support for BSP homomorphism in the Orléans Skeleton Library andexperiment it with these two applications.,*,2013,*
Practical aspects of bidirectional graph transformations,Zhenjiang Hu,Abstract Bidirectional transformation consists of a pair of transformations; describing not onlya forward transformation from a source to a view; but also a backward transformationshowing how to reflect the changes in the view to the source. Bidirectional transformationprovides a novel mechanism for synchronizing and maintaining the consistency ofinformation between input and output; and has many potential applications in softwaredevelopment; including model synchronization; round-trip engineering; software evolution;multiple-view software development; reverse software engineering; as well as the well-known view updating mechanism which has been intensively studied in the databasecommunity for decades. To support systematical development of well-behaved bidirectionaltransformations; much research has been devoted to design of bidirectional languages …,Proceedings of the ACM SIGPLAN 2013 workshop on Partial evaluation and program manipulation,2013,*
A Generate-Test-Aggregate Parallel Programming Library,Yu Liu; Kento Emoto; Zhenjiang Hu,ABSTRACT Generate-Test-Aggregate (GTA for short) is a novel programming model forMapReduce; dramatically simplifying the development of efficient parallel algorithms. Underthe GTA model; a parallel computation is encoded into a simple pattern: generate allcandidates; test them to filter out invalid ones; and aggregate valid ones to make the result.Once users specify their parallel computations in the GTA style; they get efficientMapReduce programs for free owing to an automatic optimization given by the GTA theory.In this paper; we report our implementation of a GTA library to support programming in theGTA model. In this library; we provide a compact programming interface for hiding thecomplexity of GTA's internal transformation; so that many problems can be encoded in theGTA style easily and straightforwardly. The GTA transformation and optimization …,*,2013,*
MapReduce によるグラフ問い合わせの自動並列化,Tao Zan; Yu Liu; Zhenjiang Hu,CiNii 国立情報学研究所 学術情報ナビゲータ[サイニィ]. メニュー 検索 …,日本ソフトウェア科学会大会論文集,2012,*
Can Graph Transformation be Bidirectionalized? Bidirectional Semantics of Structural Recursion on Graphs,Zhenjiang Hu,Bidirectional transformations provide a novel mechanism for synchronizing and maintainingthe consistency of information between input and output. Despite many promising results onbidirectional transformations; these have been limited to lists and trees. We challenge theproblem of bidirectional transformations on graphs; by proposing a formal definition of a well-behaved bidirectional semantics for UnCAL; a graph algebra. Our key idea is to treat graphsas compactable infinite trees and to manipulate trees by structural recursion. Specifically; wecarefully refine the existing forward evaluation of structural recursion so that it can producesufficient trace information for later backward evaluation; and we use the trace informationfor backward evaluation to reflect updates on the view to the source. We prove ourbidirectional evaluation is well-behaved.,HOR 2012 6th International Workshop on Higher-Order Rewriting,2012,*
Theory and Practice of Model Transformations: 5th International Conference; ICMT 2012; Prague; Czech Republic; May 28-29; 2012. Proceedings,Zhenjiang Hu; Juan de Lara,This book constitutes the refereed proceedings of the 5th International Conference; ICMT2012; held in Prague; Czech Republic; in May 2012; co-located with TOOLS 2012Federated Conferences. The 18 full papers presented together with one invited paper werecarefully revised and selected from numerous submissions. Topics addressed are such astesting; typing and verification; bidirectionality; applications and visualization; transformationlanguages; virtual machines; pattern matching; and transformations in modelling;reutilization.,*,2012,*
View Updatability Checking with Simulation-based Graph Schema,Keisuke NAKANO; Soichiro HIDAKA; Zhenjiang HU; Kazuhiro INABA; Hiroyuki KATO,*,Computer Software,2012,*
Radiation induced inter-device leakage degradation,Hu Zhi-Yuan; Liu Zhang-Li; Shao Hua; Zhang Zheng-Xuan; Ning Bing-Xu; Chen Ming; Bi Da-Wei; Zou Shi-Chang,Abstract The evolution of inter-device leakage current with total ionizing dose in transistorsin 180 nm generation technologies is studied with an N-type poly-gate field device (PFD)that uses the shallow trench isolation as an effective gate oxide. The overall radiationresponse of these structures is determined by the trapped charge in the oxide. The impactsof different bias conditions during irradiation on the inter-device leakage current are studiedfor the first time in this work; which demonstrates that the worst condition is the same astraditional NMOS transistors. Moreover; the two-dimensional technology computer-aideddesign simulation is used to understand the bias dependence.,Chinese Physics C,2011,*
Dagstuhl Reports; Vol. 1; Issue 1 ISSN 2192-5283,Hans J Boehm; Ursula Goltz; Holger Hermanns; Peter Sewell; Sven Apel; William Cook; Krzysztof Czarnecki; Oscar Nierstrasz; Zhenjiang Hu; Andy Schürr; Perdita Stevens; James Terwilliger; Meinard Müller; Masataka Goto; Simon Dixon; Gabi Dreo Rodosek; Aiko Pras; Henning Schulzrinne; Burkhard Stiller; Stephan Dahlke; Michael Elad; Yonina Eldar; Gitta Kutyniok; Gerd Teschke,Multi-Core Memory Models and Concurrency Theory (Dagstuhl Seminar 11011) Hans J.Boehm; Ursula Goltz; Holger Hermanns and Peter Sewell … Feature-Oriented SoftwareDevelopment (FOSD) (Dagstuhl Seminar 11021) Sven Apel; William Cook; Krzysztof Czarneckiand Oscar Nierstrasz ............. 27 … Bidirectional Transformation “bx” (Dagstuhl Seminar11031) Zhenjiang Hu; Andy Schürr; Perdita Stevens and James Terwilliger .............. 42 … MultimodalMusic Processing (Dagstuhl Seminar 11041) Meinard Müller; Masataka Goto and Simon Dixon............................... 68 … Learning from the Past: Implications for the Future Internet and itsManagement? (Dagstuhl Seminar 11042) Gabi Dreo Rodosek; Aiko Pras; Henning Schulzrinneand Burkhard Stiller ........ 102 … Sparse Representations and Efficient Sensing of Data (DagstuhlSeminar 11051) Stephan Dahlke; Michael Elad; Yonina Eldar; Gitta Kutyniok and Gerd …,*,2011,*
Mathematical Structures in Programming,Zhenjiang Hu,Aims 1 Fully understand why algorithm design and programming can be viewed as amathematical activity.,*,2011,*
Proceedings of the 4th DIKU-IST Joint Workshop on Foundations of Software,Fritz Henglein; Zhenjiang Hu; Masato Takeichi,14; 2011. The workshop featured talks and discussions on program optimization andparallel programming; formal semantics and algorithms; reversible and bidirectionalcomputing; and demonstrations of software prototypes. After the success of the first threejoint workshops; which took place at Dragør; Copenhagen (2005); Shonan Village; Japan(2006) and Roskilde; Denmark (2007) with proceedings as DIKU Technical Reports 05/07;06/07 and 07/07; the 4th DIKU-IST workshop took again place in Japan. It aimed to providea forum for presenting the latest research and promoting the research collaboration betweenthe Department of Computer Science (DIKU); University of Copenhagen; and the GraduateSchool of Information Science and Technology,*,2011,*
Complement L-ficolin Binds to Surface Glycans of HCV and Reduces the Viral Infectivity; and Functions as an Antiviral Opsonin,Yinnan Zhao; Yi-dan Zhou; Kun Yang; Xiao-lian Zhang,L-ficolin is a recently identified complement lectin; which recognizes bacterialcarbohydrates; thereby activate lectin complement pathway. However little is known aboutthe role of L-ficolin in viral infections. This report shows that human L-ficolin specificallybinds to surface glycans of HCV; and subsequently activates the lectin complement pathwayand complement mediated cytolytic activity. Moreover; we found that L-ficolin couldsignificantly block the entry and infection of HCV to Huh7. 5.1 cells in vitro in a dosedependent manner; and functioned as an antiviral opsonin in vitro by enhancingphagocytosis of macrophages. These new findings will contribute to the development of L-ficolin as a novel immunotherapy agent against the infection of this important human virus.,Glycobiology,2011,*
Special Issue on Programming Languages and Systems,Zhenjiang Hu,This special issue of New Generation Computing contains 4 papers selected from thepapers presented in the Sixth Seventh Asian Symposium on Programming Languages andSystems (APLAS 2009) held in Seoul; Korea; December 14–16; 2009. APLAS 2009accepted 21 papers out of 56 full paper submissions covering both foundational andpractical issues in programming languages and systems. In addition to the contributedpapers; the symposium also featured three invited talks by Koen Claessen (ChalmersUniversity of Technology; Sweden); Naoki Kobayashi (Tohoku University; Japan); andArmando Solar-Lezama (Massachusetts Institute of Technology; USA). The APLAS series issponsored by the Asian Association for Foundation of Software (AAFS). It aims at stimulatingprogramming language research by providing a forum for the presentation of recent …,New Generation Computing,2011,*
Tolerating Inconsistency in Feature Models,Zhenjiang Hu; Yingfei Xiong; Haiyan Zhao; Wei Zhang,ABSTRACT Feature models have been widely adopted to reuse the requirements of a set ofsimilar products in a domain. When constructing feature models; it is difficult to alwaysensure the consistency of feature models. Therefore; tolerating inconsistencies is importantduring the construction of feature models. The usual way of tolerating inconsistencies is tofind the minimal unsatisfiable core. However; identifying the minimal unsatisfiable core istime-consuming; which decreases itself the practicability. In this paper; we propose a prioritybased approach to tolerating inconsistencies in feature models efficiently. The basic idea ofour approach is to find the weaker unsatisfied constraints; while keeping the rest of thefeature model consistent. Our approach tolerates inconsistencies with the help of prioritybased operations while building feature models. To this end; we adopt the constraint …,*,2010,*
Programming Languages and Systems: 7th Asian Symposium; APLAS 2009; Seoul; Korea; December 14-16; 2009; Proceedings,Zhenjiang Hu,This book constitutes the refereed proceedings of the 7th Asian Symposium onProgramming Languages and Systems; APLAS 2009; held in Seoul; Korea; in December2009. The 21 papers presented in this volume together with 3 invited talks were carefullyreviewed and selected from 56 submissions. The papers are divided into topical sections onprogram analysis; transformation and optimization; type system; separation logic; logic andfoundation theory; software security and verification; and software security and verification.,*,2009,*
Variable weighted learning algorithm and its convergence rate,Yu Fangyuan; Hu Zhenfa,The learning problem — the problem of choosing the de- sired dependence on the basis of empiricaldata is arguably at the very core of the problem of both biological and ar- tifical intelligence; asT. Poggio and CR Sheltion have remarked. The traditional model of learning is to assume thatthe samples z = {(x1;y1); ...; (xm;ym)} ∈ Zm are simple random samples drawn from an unknown(joint) probability measure ρ on Z = X × Y with a compact metric space X and Y = R. The risk fora function f : X → Y is given by risk functional … The function minimizing the risk is called theregression function and is given by … The purpose of the regression problem in learningthe- ory is to find good approximations of the regression func- tion over some function set H fromthe set of random sam- ples z drawn independently according to ρ. The set H is called hypothesisspace. We cannot minimize the risk func- tional directly since the probability distribution …,Natural Computation; 2009. ICNC'09. Fifth International Conference on,2009,*
Software Construction,Zhenjiang Hu; Shin-Cheng Mu; Masato Takeichi,*,*,2009,*
Gettering of TiZrV Coatings on Pipe Inner-Walls of Vacuum System,Meng Jun; Yang Xiaotian; Zhang Junhui; Yang Weishun; He Yuan; Zhao Yungang; Hu Zhenjun; Guo Dizhou; Ma Xiangli; Hou Shengjun,A novel technique was developed to turn the gas-load of the long; narrow stainless-steelpipes in vacuum system into non-evaporation getters (NEG). In the technique; the TiZrV filmswere grown by DC reactive magnetron sputtering on the inner walls of the pipes. Themicrostructures and compositions of the TiZrV coatings were characterized with scanningelectron microscopy (SEM). The impacts of the activation conditions; including the activationtemperature and time; on the gettering characteristics were studied. The results show thatthe TiZrV film; after activation at a lowest temperature of 180℃; is capable of gettering. Thepressures at the remote end of the experimental setup and the pump inlet were found to bealmost the same with a linear pressure distribution.,Chinese Journal of Vacuum Science and Technology,2009,*
Type Specialization for Effective Bidirectionalization,Kazutaka Matsuda; Zhenjiang Hu; Masato Takeichi,Abstract A bidirectional transformation is a pair of transformations; a forward transformationand a backward transformation; where a forward transformation maps one data structurecalled source to another called view; and a corresponding backward transformation reflectschanges on the view to the source. Its practical applications include replicated datasynchronization; presentation-oriented editor development; tracing software development;and document format conversion. It is; however; difficult to develop bidirectionaltransformations; because the forward and backward mappings must satisfy the bidirectionalproperties for consistency. It is even more difficult if we want to obtain “better” bidirectionaltransformations with; for example; clearer consistent semantics between sources and viewsand more updates on views. To resolve this problem; a program transformation named …,*,2008,*
Realizing Bidirectional Graph Transformations From Bidirectional Tree Transformations,熊英飛， 胡振江， 劉東喜， 武市正人， 趙海燕， 梅宏,Abstract Bidirectional transformations are useful to maintain consistency between sourcedata and target data. So far; researchers have proposed several theories and tools forbidirectional transformations on tree structures. However; as far as we know; there is nowidely-recognized theory for bidirectional transformations on graphs. In this paper; wepropose an approach to constructing bidirectional graph transformations from existingbidirectional tree transformations and show how they can be useful to support betterconsistency and traceability between different models in software development.,第 69 回全国大会講演論文集,2007,*
Tensile Properties of Under-aged 3J21 Alloy at Low Temperatures [J],Xiao-ou JIN; Shi-yu HE; Song-yu ZHANG,The tensile properties of under-aged 3J21 alloy at room and low temperatures were studiedon a universal tensile test machine. Moreover; a metallographic microscope and X-raydiffractometer were used to analyze the metallographic structure and physical phase of thealloy in a cold rolled and under-aged state. By employing a transmission electronmicroscope (TEM) the structure of the alloy under the above-cited two states was observedand the X-ray diffraction results being verified. An analysis of the microscopic structure ofdeformation near the tensile fracture of the under-aged alloy at different temperatures wasalso conducted. A scanning electron microscope was used to observe the tensile fracture. Itwas found that the room-temperature fracture of the under-aged 3J21 alloy was of a dimple;while the low-temperature fracture assumed a mixed rupture feature. With decreasing …,Journal of Materials Engineering,2007,*
idocument builder: An environment for building xml-based interactive teaching materials,Yasushi Hayashi; Zhenjiang Hu; Masato Takeichi,ABSTRACT PSD (Programmable Structured Document) is a framework in which structureddocuments are edited efficiently and safely by evaluating embedded codes in themselves.Justsytem's xfy has a technology called Vocabulary Connection; which supports creatingand editing source XML documents on the HTML view. Combining these two technologiesallows us to produce an environment to support creating XML-based interactive teachingmaterials; which generate some outputs dynamically according to user's inputs. The way toproduce the environment is explained and the usefulness of this tool is demonstrated by anexample of an XML-based exam paper.,The 3nd International Conference on Education and Information Systems; Technologies and Applications (EISTA 2005),2005,*
Yicho version 0.1. 0: User Manual,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,Abstract Yicho is a monadic combinator library for supporting declarative specification ofprogram transformation in Haskell. The main features are as follows:• Expressive higher-order patterns and higher-order matchig can be used to specify abstract calculations.• Thepatterns are first-class–they can be named; constructed by smaller ones; and passed asparameters.,*,2005,*
Bidirectionalising HaXML,Shin-Cheng Mu; Zhenjiang Hu; Masato Takeichi,Abstract A transformation from the source data to a target view is said to be bidirectional if;when the target is altered; the transformation somehow induces a way to reflect the changesback to the source; with the updated source satisfying certain healthiness conditions.Several bidirectional transformation languages have been proposed. In this paper; on theother hand; we aim at making existing transformations bidirectional. As a case study wechose the Haskell combinator library; HaXML; and embed it into Inv; a language the authorspreviously developed to deal with bidirectional updating. With the embedding; existingHaXML transformations gain bidirectionality.,*,2005,*
Design and Implementation of Deterministic Higher-order Patterns,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,Abstract. We introduce a class of deterministic higher-order patterns to Template Haskell forsupporting declarative transformational programming with more elegant binding of patternvariables. Higher-order patterns are capable of checking and binding subtrees far from theroot; which is useful for program manipulation. However; there are three major problems.First; it is difficult to explain why a particular desired matching result cannot be obtainedbecause of the complicated higherorder matching algorithm. Second; the general higher-order matching algorithm is of high cost; which may be exponential time at worst. Third; the(possibly infinite) nondeterministic solutions of higher-order matching prevents it from beingused in a functional setting. To resolve these problems; we impose reasonable restrictionson higher-order patterns to gain predictability; efficiency and determinism. We show that …,*,2005,*
Bidirectional Scripting for Structured Documents,穆信成， 胡振江， 武市正人,抄録 In a {\em programmable} structured document; some parts of the document may becomputed from other parts. For example; a table-of-contents may be computed by the bodyof an article. We would wish; for example; that when the table-of-content is edited; the articlebody be changed accordingly. The computed result; however; is usually static and noteditable. Using the {\em birdirectional updating} techniques we developed; we describe howto automatically reflect the changes made to the result back to the source.,Conference Proceedings of Japan Society for Software Science and Technology The 22nd Conference of Japan Society for Software Science and Technology,2005,*
Functional and Logic Programming: 7th International Symposium; FLOPS 2004; Nara; Japan; April 7-9; 2004; Proceedings,Yukiyoshi Kameyama; Peter J Stuckey,This volume contains the proceedings of the 7th International Symposium on Functional andLogic Programming (FLOPS 2004); held in Nara; Japan; April 7–9; 2004 at the New PublicHall; Nara. FLOPS is a forum for research on all issues concerning functional programmingand logic programming. In particular it aims to stimulate the cross-fertilization as well as theintegration of the two paradigms. The previous FLOPS meetings took place in Fuji-Susono(1995); Shonan (1996); Kyoto (1998); Tsukuba (1999); Tokyo (2001) and Aizu (2002). Theproceedings of FLOPS 1999; FLOPS 2001 and FLOPS 2002 were published by Springer-Verlag in the Lecture Notes in Computer Science series; as volumes 1722; 2024 and 2441;respectively. In response to the call for papers; 55 papers were submitted by authors fromAustralia (1); Austria (1); Canada (1); China (4); Denmark (2); Estonia (12); France (312) …,*,2004,*
A Tutorial Implementation of the Diffusion Algorithmic Skeleton with the BSMLlib Library,Frederic Loulergue; Zhenjiang Hu; Kazuhiko Kakehi,Abstract Skeleton programming enables programmers to build parallel programs easier byproviding efficient ready-made parallel algorithms. The diffusion skeleton was proposed(associated with a method for program derivation) to abstract a good combination ofprimitive skeletons; such as map; parallel reduction and parallel prefix sum (scan). TheBSMLLIB library whose design is based on formal semantics is a library for the ObjectiveCaml language to support Bulk Synchronous Parallelism. It offers a small set of primitiveswhich permits to write any deterministic BSP algorithm.,*,2004,*
Calculating Tree Nodes Instead of Table Cells,劉東喜， 林康史， 胡振江， 武市正人,抄録 TreeCalc is an interactive calculator based on tree nodes instead of table cells. One ofits main features is to support higher order generic functions; which provide a powerful andconvenient way to define new computations. In this paper; we illustrate the implementationof generic functions for structured documents; explain novel features for calculating treenodes and demonstrate the ability of TreeCalc by implementing Excel applications inTreeCalc. Calculating tree nodes allows partially evaluated functions and structured valuesas computation results of nodes; which is contrast to calculating table cells.,日本ソフトウェア科学会大会講演論文集 日本ソフトウェア科学会第 21 回大会,2004,*
A Combinator Library for Specifying Program Transformation,横山哲郎， 胡振江， 武市正人,抄録 We present an embedded domain specific language for specifyingprogramtransformations. The language is implemented as a monadic combinatorlibrary in Haskell.The transformations are done at compile time using themechanism of Template Haskell. Thelibrary provides a modular way to structureabstract and intuitive transformation strategies byhigher-order matching andmonadic programming.,日本ソフトウェア科学会大会講演論文集 日本ソフトウェア科学会第 21 回大会,2004,*
A Uniform Approach toward Nested Parallelism,筧一彦， 松崎公紀， 胡振江， 武市正人,抄録 Parallel skeletons and homomorphisms over lists provide successfulmethods forparallelization. The structural regularity of lists helps simple and efficient implementationoftheir systems; which casts a contrast to more irregular; complicateddata structures likenested lists or trees. This paper develops a uniform approach toward such nestedstructuresthrough converting these data structures into lists of tupleswith depth information.Generic parallel computation schemes like reduceand accumulation are analyzed using theparallelization techniquesover lists. We demonstrate its expressiveness andefficacy using aclass of optimization problemscalled maximum marking problems.,日本ソフトウェア科学会大会講演論文集 日本ソフトウェア科学会第 21 回大会,2004,*
An efficient staging algorithm for binding-time analysis,Takuma Murakami; Zhenjiang Hu; Kazuhiko Kakehi; Masato Takeichi,Abstract Binding-Time Analysis (BTA) is one of the compile-time program analyses which isa general framework for program optimization and program generation [1]. The task of BTAis to divide a source program into two parts according to a given binding-time specification[2]. A binding-time specification gives information about availability of data: static data areavailable at compile-time while dynamic data are available at run time. BTA determines;from a binding-time specification of the input; on which parts computation can take place bypropagating information on static data. Partial evaluators specialize the program for thestatic data by using the information from BTA to generate a more efficient program than theoriginal.,International Symposium on Logic-Based Program Synthesis and Transformation,2003,*
the Sixth International Symposium on Functional and Logic Programming.,Zhenjiang Hu; Mario Rodríguez-Artalejo,*,Journal of Functional and Logic Programming,2003,*
Catamorphic Approach to Program Analysis,Mizuhito Ogawa; Zhenjiang Hu; Isao Sasano; Masato Takeichi,Abstract. This paper proposes a new framework for program analysis that regards them asmaximum marking problems: mark the codes of a program under a certain condition suchthat the number of marked nodes is maximum. We show that if one can develop an efficientchecking program (in terms of a finite catamorphism) whether marked programs are correctlymarked; then an efficient and incremental marking algorithm to analyze control flow ofstructured programs (say in C or Java with limited numbers of gotos) is obtained for free. Todescribe catamorphisms on control flow graphs; we present an algebraic construction;called SP Term; for graphs with bounded tree width. The transformation to SP Terms is doneefficiently in linear time. We demonstrate that our framework is powerful to describe variouskinds of control flow analyses. Especially; for analyses in which some optimality is …,*,2003,*
Parallelizing Polytypic Programs with Accumulations,松崎公紀， 筧一彦， 胡振江， 武市正人,抄録 Catamorphism plays an important role when we make a sequential programonrecursive datatypes. In the parallel programming on lists; homomorphism is an importantconcept and Kakehi et al. have extended itto a higher-order one to deal with accumulations.In this paper; we generalize it to on recursive datatypes. Wedefine parallelizable higher-order catamorphism for recursivefunctions with an accumulative parameter; and show thosefunctions can betransformed into equivalent parallel programs in terms ofpolytypicskeletons. Furthermore; we demonstrate the parallelization of recursivefunctionswith accumulations on a finite domain.,日本ソフトウェア科学会大会講演論文集 日本ソフトウェア科学会第 20 回記念大会,2003,*
Algebraic construction of graphs with bounded tree width and its applications--Catamorphic Approach to Program Analyses,Mizuhito Ogawa; Zhenjiang Hu; Isao Sasano; Masato Takeichi,Ogawa; M.; Hu; Z.; Sasano; I.; & Takeichi; M. (2002). Algebraic construction of graphs with boundedtree width and its applications -- Catamorphic Approach to Program Analyses. The Third AsianWorkshop on Programming Languages and Systems (APLAS 2002); 58-73 … Algebraic constructionof graphs with bounded tree width and its applications -- Catamorphic Approach to ProgramAnalyses. / Ogawa; Mizuhito; Hu; Zhenjiang; Sasano; Isao; Takeichi; Masato … ：: The ThirdAsian Workshop on Programming Languages and Systems (APLAS 2002); 29.11.2002; p.58-73 … Ogawa; M; Hu; Z; Sasano; I & Takeichi; M 2002; 'Algebraic construction of graphs withbounded tree width and its applications -- Catamorphic Approach to Program Analyses' TheThird Asian Workshop on Programming Languages and Systems (APLAS 2002); pp. 58-73 …Ogawa M; Hu Z; Sasano I; Takeichi M. Algebraic construction of graphs with bounded …,The Third Asian Workshop on Programming Languages and Systems (APLAS 2002),2002,*
Fusion Transformation on Functional Programs with Regular Patterns,Kazuhiko KAKEHI; Zhenjiang HU; Masato TAKEICHI,With the increasing popularity of XML for representing structured data; more and moreresearches have been devoted to better functional frameworks for supporting XMLprocessing. Of that; XDuce employs regular expression types and this enables programmersto manipulate XML-based data flexibly. This paper investigates automatic fusion offunctional programs with regular patterns; so that XML data can be manipulated moreefficiently through eliminating intermediate data passed between two functions.,Conference Proceedings of Japan Society for Software Science and Technology Nineteenth Conference of Japan Society for Software Science and Technology,2002,*
An Optimal Staging Algorithm.,Takuma Murakami; Zhenjiang Hu; Masato Takeichi,Abstract. Staging is an alternative approach for binding-time analysis and programspecialization; making some pieces of code dynamic. Tim Sheard and Nathan Lingershowed a search-based algorithm for automated staging. The problems remained areunclear computation complexity and no efficient way to take optimal solutions. In this paper;we propose a linear algorithm to derive optimally staged programs with concreteimplementation. The key point of our approach is to make use of the optimization theorem forsolving multi-marking problem by regarding staging as marking.,APLAS,2002,*
Similarity Based Retrieval from Sequence Data using Automata as Queries,A Prasad Sistla; Tao Hu; Vikas Chowdhry,Abstract Similarity based retrieval from sequence databases is of importance in manyapplications such as timeseries; video and textual databases. In this paper; automata basedformalisms are introduced for specifying queries over such databases. Various measures dening the distance of a database sequence from an automaton are de ned. The distance of adatabase sequence from a query automaton is de ned to be the minimum of its vectordistances from each string accepted by the automaton. E cient methods for similarity basedretrieval are presented for each of the distance measures. These methods employ indicesfor fast retrieval. They retrieve the k closest subsequences; of the database sequence; withrespect to the query automaton. The proposed methods can be built on top of any database;which given an atomic query (ie a query on single items); outputs identities and similarity …,*,2001,*
Solving more general maximum-marking problems on recursive data structures,Isao Sasano; Zhenjiang Hu; Masato Takeichi,Sasano; I.; Hu; Z.; & Takeichi; M. (2001). Solving more general maximum-marking problems onrecursive data structures. The 5th Program Transformation Workshop; 15-18 … Solving moregeneral maximum-marking problems on recursive data structures. / Sasano; Isao; Hu;Zhenjiang; Takeichi; Masato … In: The 5th Program Transformation Workshop; 15.03.2001;p. 15-18 … Sasano; I; Hu; Z & Takeichi; M 2001; 'Solving more general maximum-marking problemson recursive data structures' The 5th Program Transformation Workshop; pp. 15-18 … SasanoI; Hu Z; Takeichi M. Solving more general maximum-marking problems on recursive datastructures. The 5th Program Transformation Workshop. 2001 Mar 15;15-18 … Powered byPure; Scopus & Elsevier Fingerprint Engine™ © 2017 Elsevier BV.,The 5th Program Transformation Workshop,2001,*
Calculating a New Data Mining Algorithm for,Market Basket Analysis; Zhenjiang Hu; Wei-Ngan Chin; Masato Takeichi,The general goal of data mining is to extract interesting correlated information from largecollection of data. A key computationally-intensive subproblem of data mining involvesfinding frequent sets in order to help mine association rules for market basket analysis.Given a bag of sets and a probability; the frequent set problem is to determine which subsetsoccur in the bag with some minimum probability. This paper provides a convincingapplication of program calculation in the derivation of a completely new and fast algorithmfor this practical problem. Beginning with a simple but inefficient specifocation expressed ina functional language; the new algorithm is calculated in a systematic manner from thespecification by applying a sequence of known calculation techniques.,Practical Aspects of Declarative Languages,2000,*
Determination of Peaoniflorin and Naringin for Complex Ganxiankang Oral Liquor by RP-HPLC,X-o Wu; Z-x Hu; Y Xiong,*,WEST CHINA JOURNAL OF PHARMACEUTICAL SCIENCES,2000,*
Calculating a New Data Mining Algorithm for Market Basket Analysis (Program Transformation; Symbolic Computation and Algebraic Manipulation),Zhenjiang Hu; Wei-Ngan Chin; Masato Takeichi,Abstract The general goal of data mining is to extract interesting correlated information fromlarge collection of data. A key computationally-intensive subproblem of data mining involvesfinding frequent sets in order to help mine assoc\^ iation rules for market basket analysis.Given a bag of sets and a probability; the frequent set problem is to determine which subsetsoccur in the bag with some minimum probability. This paper provides a convincingapplication of program calculation in the derivation of a completely new and fast algorithmfor this practical problem. Beginning with a simple but inefficient specification expressed in afunctional language; thenew algorithm is calculated in a systematic manner from thespecification by $\mathrm {a}.\mathrm {p}\mathrm {p}\mathrm {l}\mathrm {y}\mathrm{i}\mathrm {n}\mathrm {g} $ a sequence of known calculation techniques1,*,2000,*
A Case Study on a Modular Transformation Strategy,Zhenjiang Hu; Wei-ngan Chin; Masato Takeichi,Abstract this paper; we show that it is possible to minimize these deep insights. Our thesis isthat the high-level transformation techniques such as fusion; tupling; and generalization/accumulation can be well integrated to help provide a systematic and modular approach tocalculate efficient programs; and thus the mild insights in our transformation are mainlyconfined to meet the conditions to facilitate transformation techniques,*,1999,*
Enhanced Parallelization via Constraints,Wei-ngan Chin; Zhenjiang Hu; Masato Takeichi; Akihiko Takano,Abstract Systematic parallelization of sequential programs remains a major challenge inparallel computing. Traditional approaches using program schemes are somewhat narrowin scope; as the properties which enable parallelism are difficult to capture via ad-hocschemes. We propose a more systematic approach to parallelization based on the notion ofpreserving the context of recursive sub-terms. This approach can be used to derive a classof divide-andconquer programs. To enhance the methodology further; we advocate the useof required constraints to widen the class of programs that could be handled. A uniquefeature of our approach is that it supports both reusability and e ciency. In particular; bothgeneral and specialised contraints are gathered to make this marriage possible.,*,1997,*
Cheap Tupling Transformation,Zhenjiang Hu; Hideya Iwasaki; Masato Takeichi,Summary. Tupling is a well-known transformation tactic to obtain new recursive functionswithout redundant recursive calls and/or multiple traversals of common data; which isachieved by grouping some recursive functions into a tuple. Although being studied for along time based on fold/unfold transformation; it su ers from the high cost of keeping track offunction calls and has to use clever control to avoid in nite unfolding; which prevent it frombeing used in a practical compiler of functional languages. In this paper; we propose acheap tupling based on the theory of constructive algorithmics. We give several simple but eective calculational rules; which not only can be successfully applied to improve a lot ofinteresting recursive functions but also can be implemented e ciently.,METR 96,1996,*
CONDENSED MATTER: STRUCTURE; MECHANICAL AND THERMAL PROPERTIES,Yuan Jiang; Jill Hacker; GW Yoffe; J Brubach; F Karouta; WC van der Vleuten; LMF Kaufmann; JH Wolter; KY Lau; JB Georges; G Khanarian; MA Mortazavi; AJ East; HQ Le; WD Goodhue; S Maki; YH Chen; A Yariv; JL West; Ft B Akins; J Francl; JW Doane; M Ruckschloss; B Landkammer; S Veprek; F Javier Fraile-Pelaez; Miguel Prol; David J Santos; M Jose; JW Bae; H Temkin; SE Swirhun; WE Quinn; P Brusenbach; C Parsons; M Kim; T Uchida; BL Justus; AL Huston; AJ Campillo; Minoru Watanabe; John Rennie; Masaki Okajima; Gen-ichi Hatakoshi; DVGLN Rao; FJ Aranda; BJ Wiley; JA Akkara; DL Kaplan; JF Roach,Andres; R. Reifenberger 1495 Aluminum-arsenide precipitation in an arsenic-implantedaluminum Takamaro Kikkawa; Hiroshi Kitajima; thin film Tatsuo Sato; Keiji Shiotani 1498Scaleable stagnation-flow reactors for uniform materials deposition: KF McCarty; E. Meeks;RJ Kee; Application to combustion synthesis of diamond AE Lutz 1501 Cross-sectionalscanning tunneling microscopy of electrodeposited TD Golden; RP Raffaelle; JA metal oxidesuper-lattices Switzer,Applied Physics Letters,1993,*
3rd Workshop on Living with Inconsistencies in Software Development (LWI 2010),Alexander Egyed; Roberto E Lopez-Herrejon; Bashar Nuseibeh; Goetz Botterweck; Marsha Chechik; Zhenjiang Hu,We; the workshop organisers; are grateful to the members of the program committee and thereviewers. We also would like to thank the organisers of ASE 2010; in particular Tom Mensand Tevfik Bultan; the workshops chairs; for their support and the opportunity to hold LWI2010 in conjunction with this conference.,*,*,*
2013 5th International Workshop on Modeling in Software Engineering (MiSE),Alexander Borgida; Fabiano Dalpiaz; Jennifer Horkoff; John Mylopoulos,In this position paper we review the history of requirements models and conclude that a goal-oriented perspective offers a suitable abstraction for requirements analysis. We stakepositions on the nature of modelling languages in general; and requirements modellinglanguages in particular. We then sketch some of the desirable features (…“requirements”) ofdesign-time and runtime requirements models...,*,*,*
Principles and Practice of Bidirectional Programming in BiGUL,Zhenjiang Hu; Hsiang-Shang Ko,Abstract. Putback-based bidirectional programming allows the programmer to write only onebackward transformation; from which the unique corresponding forward transformation isderived for free. A key distinguishing feature of putback-based bidirectional programming isfull control over the bidirectional behavior; which is important for specifying intendedbidirectional transformations without any ambiguity. In this tutorial; we will introduce BiGUL;a simple yet powerful putback-based bidirectional programming language; explaining theunderlying principles and showing how various kinds of bidirectional application can bedeveloped in BiGUL.,*,*,*
Our thanks to those who have helped with this issue of Expert Review of Molecular Diagnostics. Listed below are the authors; referees and others who have kindly gi...,T Abe; S Alonso; S Anno; D Avard; A Bagg; P Blake; EN Brody; N Brünner; S Canevari; A Castro; F Cheng; M Connolly; J Connor; VA Diaz; E Eklund; R Fisher; J Foekens; S Fredriksson; J Geraedts; A Gkazepis; L Gold; A Goy; N Harbeck; C Henchcliffe; H Howard; D Hughes; P Hui; P Kahle; D Kindelberger; B Knoppers; E Kohorn; S Kulkarni; O Lao; RM Lawn; M Liang; A Lokshin; R Luxton; J Maciejewski; V Magdolen; A Mainous; G Mellick; K Mengele; E Murta; R Napieralski; S Nock; A Ohshima; C Paisan-Ruiz; SW Park; H Patel; N Ramachandran; U Reuning; P Robinson; C Rubio; M Schmitt; GA Siebert; PA Silburn; S Suh; U Surti; GT Sutherland; F Sweep; N Wake; JJ Walker; CD Watt; D Zichi,Our thanks to those who have helped with this issue of Expert Review of MolecularDiagnostics. Listed below are the authors; referees and others who have kindly given theirtime; effort and expertise; their generosity has helped establish this publication … Abe T AlonsoS Anno S Avard D Bagg A Blake P Brody EN Brünner N Canevari S Castro A Cheng F ConnollyM Connor J Diaz VA Eklund E Fisher R … Foekens J Fredriksson S Geraedts J Gkazepis A GoldL Goy A Harbeck N Henchcliffe C Howard H Hughes D Hui P Kahle P Kindelberger D KnoppersB Kohorn E Kulkarni S … Lao O Lawn RM Liang M Lokshin A Luxton R Maciejewski J MagdolenV Mainous A Mellick G Mengele K Murta E Napieralski R Nock S Ohshima A Paisan-Ruiz C ParkSW … Patel H Ramachandran N Reuning U Robinson P Rubio C Schmitt M Siebert GA SilburnPA Suh S Surti U Sutherland GT Sweep F Wake N Walker JJ Watt CD Zichi D,*,*,*
Beanbag: A Language for Automatic Model Inconsistency Fixing,Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Hui Song; Masato Takeichi; Hong Mei,Abstract In this poster we present Beanbag; a language for automatic model inconsistencyfixing. A Beanbag pro-gram defines and checks a consistency relation over a model similarlyto OCL; but the program can also be executed in a fixing mode; taking user updates on themodel and producing new updates to make the model satisfy the consistency relation. 1.,*,*,*
Beanbag: A Language for Automatic Model Inconsistency Fixing Beanbag: A Language for Automatic Model Inconsistency Fixing g gg y g,Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Hui Song; Masato Takeichi; Hong Mei,Model software system often involves models with A language that is syntactically similar toOCL but has Model software system often involves models with A language that issyntactically similar to OCL; but has y complex relations• fixing semantics for fixinginconsistency complex relations.• fixing semantics for fixing inconsistency• enrichedconstructs for customizing fixing behavior,*,*,*
GRACE TECHNICAL REPORTS,Makoto ONIZUKA; Hiroyuki KATO; Soichiro HIDAKA; Keisuke NAKANO; Zhenjiang HU,Abstract Automatic generation of application-specific big graphs is becoming one of the mostimportant features of a benchmark. In this paper; we report our on-going work and partialresults on big graph generation based on reverse query processing. We show how to dealwith iterative queries by transforming iterative query computation to computation of the fixedpoint of a flat query function; from which a set of constraints can be systematically derived forreverse query processing. And we propose three approaches to parallelizing reverse queryprocessing; namely by query rewriting; virtual node introduction and Kronecker's product.,*,*,*
Special Issue: Advances in Modeling and Simulation Guest Editor: Jinrong Zhu,Jinrong Zhu; Zeng-Rong Hu; Dong-Hai Li; Jing Wang; Feng Xue; Xudong Zhu; Zhijing Liu; Juehui Zhang; Jiong Yi; Lei Zhang; Rong Shu; Jianyu Wang; Hui Du; Weiting Yu; Ke Zhang; Shengze Wang; Zhou-hu Wu; Wen Wu; Gui-zhi Wu; Jingli Zheng; Mingdeng Zhao; Linchun Xu; Jie Han; Wenxin Huai; Ying Yan; Guangyu Shi; Peng Zhao; Yongmou Zhang; Feihong Xie; Shuang You; GaoFeng Zhao; HongGuang Ji,Journal of Computers ISSN 1796-203X Volume 6; Number 6; June 2011 Contents SpecialIssue: Advances in Modeling and Simulation Guest Editor: Jinrong Zhu Guest Editorial JinrongZhu 1063 SPECIAL ISSUE PAPERS Analytical Design of PID Decoupling Control for TITO Processeswith Time Delays Zeng-Rong Hu; Dong-Hai Li; Jing Wang; and Feng Xue Human Activity Clusteringfor Online Anomaly Detection Xudong Zhu; Zhijing Liu; and Juehui Zhang Initial Alignment forSINS based on Low-cost IMU Jiong Yi; Lei Zhang; Rong Shu; and Jianyu Wang A MEASURand RUP Combined Business Modeling Method Hui Du and Weiting Yu Kinematics Design ofa Planar Parallel Controllable Mechanism Based on Particle Swarm Optimization Algorithm KeZhang and Shengze Wang Calculation Method of Lateral and Vertical Diffusion Coefficientsin Wide Straight Rivers and Reservoirs Zhou-hu Wu; Wen Wu; and Gui-zhi Wu Enterprise …,*,*,*
all WIT ﬁt? ﬂat at IEAT,Zhenjiang Hu; L Hideya Iwasakii Masato Takeichi’f,List homomorphisms are those functions on ﬁnite lists that promote through listconcatenation—that is; function h for which there exists an associative binary operator assuch that; for all ﬁnite lists 1: 3 and ys; h (3: 5-H—ys)= hrs@ hys where-H-denotes listconcatenation. Intuitively; the deﬁnition of list homomorphisms means that the value of h onthe larger list depends in a particular way (using binary operation EB) on the values of happlied to the pieces of the list. The computations of hzs and h ys are independent eachother and can thus be carried out in parallel. This simple equation can be viewed asexpressing the well-known divideand—conquer paradigm of parallel programming.Therefore; the implications for parallel program development become clear; if the problem isa list homomorphism; then it only remains to define a cheap as in order to produce a …,*,*,*
Symposium Organization,Zhenjiang Hu; Marıa Alpuente; Wei-Ngan Chin; Pierre Deransart; Moreno Falaschi; Michael Hanus; Jan Maluszynski; Aart Middeldorp; Gopalan Nadathur; Susumu Nishimura; Catuscia Palamidessi; Francesca Rossi; Harald Sondergaard; Kwangkeun Yi; Kazunori Ueda,This volume contains the proceedings of the Sixth Fuji International Symposium onFunctional and Logic Programming (FLOPS 2002); held in Aizu; Japan; September 15–17;2002; hosted by the University of Aizu; and colocated with the First Asian Symposium onPartial Evaluation Semantics-Based Program Manipulation (ASIA-PEPM 2002); which washeld on September 12–14. FLOPS is a forum for research on all issues concerningfunctional programming and logic programming. In particular; it aims to stimulate thecrossfertilization as well as the integration of the two paradigms. The previous FLOPSmeetings took place in Fuji-Susono (1995); Shonan (1996); Kyoto (1998); Tsukuba (1999);and Tokyo (2001). The proceedings of FLOPS'99 and FLOPS 2001 were published bySpringer-Verlag as Lecture Notes in Computer Science; Vols. 1722 and 2024 …,*,*,*
Functional Combinators for “Putback” Style Bidirectional Programming,Hugo Pacheco; Zhenjiang Hu; Sebastian Fischer,*,*,*,*
Automatic Parallelization of Graph Queries with MapReduce,Tao Zan; Yu Liu; Zhenjiang Hu,Abstract. The MapReduce programming model has gained attraction for large scaled dataprocessing in recent years. One typical application is graph query parallelization. Although alot of work has been done to parallel graph queries by MapReduce; the data model used forgraphs does not reflect the original graph shape; thus making it difficult to manipulate graphsin a structured way. In this paper; we show a new approach to parallelization of graphqueries in UnQL; a graph query language whose data model is an edge labelled graph. Themost prominent feature of this language is that all UnQL queries can be specified bystructural recursion which can be evaluated in a bulk manner. After carefully examining theproperties of structural recursion; we propose a natural way for parallelizing structuralrecursion by MapReduce automatically in two steps: 1) bulk computing and 2) …,*,*,*
Bidirectional Transformations for Privacy,Huu-Phuc Vo; Hiroyuki Kato; Soichiro Hidaka; Zhenjiang Hu,Bidirectional transformations provide a novel mechanism for synchronizing and maintainingthe consistency of information between source and output. Bidirectional transformations donot only have many promising applications such as model synchronization; softwareevolution; etc; but also support the privacy preservation in many contexts such as privacypreserving data publishing; anonymization approach; etc. GRoundTram system is apowerful tool that was developed by BiG team of National Institute of Informatics; which isdesigned for building a bidirectional transformation between two models (graphs). The inputand output of the system are called the source and target model; respectively; and atransformation between them is described in UnQL+. When applying the forwardtransformation from the source and the target graph; the GRoundTram system can …,*,*,*
Message from Organizers,Mr Chor Khee Yang,The importance of Internal Audit function in a listed company needs no emphasis. Forinvestors to have the comfort of knowing that their investments are safe in the companies inwhich they invest; listed companies must have in place an effective internal audit function.Companies must; therefore; set aside adequate budget to enable internal audit personnel toperform their task assigned effectively. Many public listed companies do not have internalaudit staff of full-time employees and instead use independent contractors. One draw back ofoutsourcing the internal audit function is that the company's audit committee may find itdifficult to obtain the key piece of information which is a sense of the culture of theorganisation. It is; therefore; important to have at least one full-time employee as the head ofinternal audit who can perform the internal function. There must be an effective …,*,*,*
SM@ RT: Supporting Model-Based Runtime Management,Hui Song; Yingfei Xiong; Gang Huang; Zhenjiang Hu; Franck Chauvel; Hong Mei,ABSTRACT We present the SM@ RT tool that supports model-based runtime systemmanagement. Developers provide meta-models describing both the target system and thedesired architecture style; and the SM@ RT tool automatically generates the synchronizerthat reflects the running system as an architecture model.,*,*,*
Generating Infrastructures for Runtime Architectures based on Model Synchronization,Hui Song; Yingfei Xiong; Gang Huang; Zhenjiang Hu; Yanchun Sun; Hong Mei,Abstract. Runtime architecture has become a hot research topic recently; which usesarchitecture models during runtime to monitor and control the running software systems.However; as there are many different kinds of architecture models and runtime systems;manually constructing infrastructures for maintaining the relation between them is a hardmission. In this paper we propose a model-driven approach for generating suchinfrastructures. Developers define the architecture models and runtime states using MOFmeta-model; and define the relation between them using a model transformation program inQVT operational or ATL; and then we generate a runtime architecture infrastructure whichautomatically synchronizes an architecture model and a running system. We have appliedour approach to construct an architecture-based user interface for reconfiguring a J2EE …,*,*,*
A Type-Based Approach to Parallelization Technical Report,Dana N Xu; Siau-Cheng Khoo; Wei-Ngan Chin; Zhenjiang Hu,*,*,*,*
Beanbag: On-Site Synchronization by Update Propagation,Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Masato Takeichi; Song Hui; Hong Mei,Abstract Modern development environment often presents data with complex inter-and intra-relationships. For example; UML models have intra-relationships between diagrams; andalso have inter-relationships with code. When users update some part of the data; we needto propagate these updates to other parts of the data on-site to keep them consistent. Suchon-site synchronization usually has a strict requirement on response time; and has nopredefined propagation direction. In this paper we propose Beanbag; a novel framework foron-site synchronization; which takes updates on all data and produces new updates to makethem consistent. We deduce the propagation direction from the updates; and achieveincremental synchronization by only computing on the updated part. We have successfullyapplied our approach to several applications and have tested its performance by …,*,*,*
FLOPS 2002: functional and logic programming(Aizu; 15-17 September 2002),Zhenjiang Hu; Mario Rodriguez-Artalejo,*,Lecture notes in computer science,*,*
Warm Fusion in Yicho,Tetsuo Yokoyama; Zhenjiang Hu; Masato Takeichi,Abstract Mechanical Implementation of warm fusion by program transformation system Yichois described. Yicho is a monadic combinator library implemented in Haskell using themechanism of meta-programming extension. Warm fusion is formalized as calculation rulesthat are straightforwardly programmed using Yicho with help of higher-order patterns whichhave more expressive power than the patterns in usual functional languages. The mostadvantage of our approach is concise representation of calculations; we reduce warm fusioncode in Yicho into one tenth as long as in an existent approach using a programtransformation system Stratego.,*,*,*
E-mail: iwasaki@ ipl. ei. tuat. ac. jp,ZHENJIANG HU; MASATO TAKEICHI,In functional programming; Constructive Algorithmics is one of the promising approaches toprogram transformation; especially to fusion; in which a concept called hylomorphism playsquite an important role. However; previous studies have mainly focused on programsconstructed by single recursive functions; whereas programs constructed by mutualrecursion have been little investigated; particularly with respect to their practical use foroptimizing functional programs. In this paper; we shall formalize mutual recursive data typesin terms of bifunctors and extend hylomorphisms to describe mutual recursive functions onthis type. It is shown that theorems (transformation rules) for original hylomorphisms alsohold while keeping the same form for extended (mutual) hylomorphisms. As a result;program transformation by calculation; which mechanically applies these theorems; is …,*,*,*
Di: A Powerful Parallel Skeleton,Seiichi Adachi; Hideya Iwasaki; Zhenjiang Hu,Abstract Skeleton parallel programming encourages programmers to build a parallelprogram from ready-made components for which e cient implementations are known to exist;making both the parallel program development and the parallelization process easier.However; programmers often su er from the di culty to choose a proper combination ofparallel primitives so as to construct e cient parallel programs. To overcome this di culty; wepropose a new powerful parallel skeleton di derived from the di usion theorem; showing howit can be used to naturally code e cient solutions to problems; and how it can be e cientlyimplemented in parallel using MPI (Message Passing Interface).,Proc. International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA'2000)(to appear),*,*
PType: A Type System for Parallelization Technical Report,Dana N Xu; Siau-Cheng Khoo; Wei-Ngan Chin; Zhenjiang Hu,*,*,*,*
A Calculational Fusion System,Y Onoue; Z Hu; H Iwasaki,Abstract Fusion; one of the most useful transformation tactics for deriving e cient programs; isthe process whereby separate pieces of programs are fused into a single one; leading to ane cient program with no intermediate data structures produced. In this paper; we report ouron-going investigation on the design and implementation of an automatic transformationsystem HYLO which performs fusion transformation in a more systematic and more generalway than any other systems. The distinguished point of our system is its calculational featurebased on simple application of transformation laws rather than traditional search-basedtransformation.,*,*,*
A Type System for Parallelization,Dana N Xu; Siau-Cheng Khoo; Wei-Ngan Chin; Zhenjiang Hu,Abstract. Parallel programming is becoming an important cornerstone of general computing.In addition; type systems have significant impact on program analysis. In this paper; wedemonstrate an automated typebased system that soundly synthesizes parallel programsfrom sequential functional programs. Our type inference system discovers theparallelizability property of a sequential program in a modular fashion; by exploring a ringstructure among the program's operators. It handles selfrecursive functions withaccumulating parameters; as well as a class of non-linear mutual-recursive functions. Weautomatically generates parallel code in a mutumorphic form–a succint model for parallelcomputation. Transforming into such a form is an important step toward constructing efficientdata parallel programs.,*,*,*
Calculating Linear Time Algorithms for Solving Maximum Weightsum Problems,Isao Sasano Zhenjiang Hu Masato Takeichi; Mizuhito Ogawa,Abstract In this paper; we propose a new method to derive practical linear time algorithms formaximum weightsum problems. A maximum weightsum problem is speci ed as follows:given a recursive data x; nd an optimal subset of elements of x which not only satis escertain property p but also maximizes the sum of the weight of elements of the subset. Thekey point of our approach is to describe the property p as a functional program. This enablesus to use program transformation techniques. Based on this approach; we present theoptimization theorem; with which we construct a systematic framework to calculate e cientlinear time algorithms for maximum weightsum problems on recursive data structures. Wedemonstrate e ectiveness of our approach through several interesting and non-trivialexamples; which would be di cult to solve by known approaches.,*,*,*
Workshop on Foundations of Software,Robert Glück; Zhenjiang Hu,These proceedings contain the contributions presented at the 1st DIKU-IST Joint Workshopon Foundations of Software held at Dragør Badehotel; Denmark; September 23-24; 2005.This workshop featured talks and discussions on the theory and practice of automaticsoftware production; programming language technologies; and the safety and robustness ofcritical software components. The workshop aimed to provide a forum for exchangingresearch ideas and promoting research collaboration on foundations of software betweenthe Department of Computer Science; University of Copenhagen (DIKU); and the GraduateSchool of Information Science and Technology; University of Tokyo (IST). Until now therehas been a long and continuing; but only intermittent; series of informal contacts betweenresearchers at both institutions. Our objective is to create a closer collaboration between …,*,*,*
Doo-Hwan Bae KAIST; Korea Xiaoying Bai Tsinghua University; China Fevzi Belli Universität Paderborn; Germany Nikolaj Bjorner Microsoft Research; USA,Maarten Boasson; Christof Budnik; Kai-Yuan Cai; Joao Cangussu; Alessandra Cavarra; Xiaojun Chen; SC Cheung; Byoungju Choi; William Chu; Sam Chung; Bojan Cukic; Tadashi Dohi; Gordon Fraser; Yuxi Fu; Sudipto Ghosh; Swapna S Gokhale; Arnaud Gotlieb; Wolfgang Grieskamp; Yann-Gael Gueheneuc; Rajiv Gupta; Walter Gutjahr; Xudong He; Rob Hierons; Zhenjiang Hu; Pankaj Jalote; Stan Jarzabek; Ross Jeffrey; Moonzoo Kim; Sung Kim; Victor Kuliamin; David Kung; Yvan Labiche; Richard Lai; Yu Lei; Jenny Li; Wenjun Li; Xuandong Li; Shaoying Liu; Michael R Lyu; Xiaoguang Mao; Eda Marchetti; Hong Mei; Atif Memon; V Krshna Nandivada,Doo-Hwan Bae KAIST; Korea Xiaoying Bai Tsinghua University; China Fevzi Belli UniversitätPaderborn; Germany Nikolaj Bjorner Microsoft Research; USA Maarten Boasson University ofAmsterdam; The Netherlands Christof Budnik Siemens Corporate Research; USA Kai-YuanCai Beihang University; China Joao Cangussu University of Texas at Dallas; USA AlessandraCavarra Oxford University; UK Xiaojun Chen University of Windsor; Canada SC Cheung TheHong Kong University of Science and Technology; Hong Kong Byoungju Choi Ewha WomansUniversity; Korea William Chu Tunghai University; Taiwan Sam Chung University ofWashington; Tacoma; USA Bojan Cukic West Virginia university; USA Tadashi Dohi HiroshimaUniversity; Japan Gordon Fraser Saarland University; Germany Yuxi Fu Shanghai Jiao TongUniversity; China Sudipto Ghosh Colorado State University; USA Swapna S. Gokhale …,*,*,*
Graph-Query Verification using Monadic Second-Order Logic,K Inaba; S Hidaka; Z Hu; H Kato; K Nakano,Abstract. This paper presents a static verification algorithm for a core subset of UnCAL; thequery algebra for graph-structured databases proposed by Bunemann et al. Given a queryand input/output schemas; our algorithm statically verifies that any graph satisfying the inputschema is converted by the query to a graph satisfying the output schema. The basic idea isto reformulate the semantics of UnCAL using monadic second-order logic (MSO). The logic-based foundation allows to express the schema satisfaction of transformations as the validityof MSO formulas over graph structures. Furthermore; with several insights on the establishedproperties of UnCAL; the problem turns out to be reducible to the validity of MSO over trees;which has a sound and complete decision procedure.,*,*,*
Generating Synchronizers for Architecture-Based Runtime Management,Hui Song; Yingfei Xiong; Gang Huang; Zhenjiang Hu; Xingrun Chen; Hong Mei,ABSTRACT Architecture-based runtime management supports management agents inmonitoring and controlling a running system by manipulating a high-level and intuitivearchitecture model. A key component for architecture-based runtime management is thesynchronizer that propagates changes between the architecture model and the system state;and maintains the correspondence between them. In this paper; we provide a new approachto automated generation of such synchronizers from the developers' specifications about thearchitecture styles; the system management APIs and the relations between them. Our maincontributions include a general synchronization algorithm based on bidirectionaltransformation; and a code generation method to make this general algorithm work forvarious architecture styles and system APIs. We have implemented this approach as a …,*,*,*
Rewriting XQuery to Avoid Redundant Expressions based on Static Emulation of XML Store,Zhenjiang Hu; Keisuke Nakano,ABSTRACT Rewriting composite expressions based on eliminating intermediate resultsgenerated by redundant expressions is a traditional optimization technique (known asfusion) in both programming languages community and database community. In XQuery;composite expressions for node creation are typical in practice; for example; in dataintegration systems for XML with XQuery as schema mapping. We propose a fusionalgorithm for this kind of composite XQuery. The XQuery fusion is more difficult than theexisting fusion; because naive elimination of node creations does not preserve documentorder. The document order plays an important role in XQuery. An XQuery expression isevaluated against an XML store which contains XML fragments that are created asintermediate results; in addition to initial XML documents with their document order. So …,*,*,*
GRACE TECHNICAL REPORTS,Yingfei Xiong; Zhenjiang Hu; Haiyan Zhao; Masato Takeichi; Song Hui; Hong Mei,Abstract Modern development environment often involves data with complex relationships.When users update some part of the data; we need to synchronize the update to make alldata consistent. Bidirectional transformation supports synchronization by propagatingupdates between two replicas; from one replica to the other or vice versa. However; replicasare often constrained with intra-relations; and we may have to propagate updates within onereplica. Such kind of propagation is not well supported by current bidirectionaltransformation. In this paper we propose Beanbag; a new language for operation-basedsynchronization of data with intra-relations. Beanbag treats inter-relations and intra-relationsin a unified way; and allows users to define these relations declaratively. A Beanbagprogram can be compiled into a synchronizer; which takes user updates as input and …,*,*,*
A Language for Bidirectional Updating Based on Injective Mapping,Shin-Cheng Mu; Zhenjiang Hu; Masato Takeichi,Abstract With the popularity of XML; bidirectional updating–maintaining the consistencybetween two pieces of structured data; again becomes a problem of interest. In this paperwe propose a new framework; inspired by program inversion; to look at this problem. Wedesign a functional language; Inv; in which all programs are injective and their inverses canbe trivially constructed. The language is equivalent to reversible Turing machines andexpressive enough to describe most transforms one would need. It is assumed that the datato be synchronised are related by a transform written in Inv. The semantics of Inv is thenextended to deal with bidirectional updating. Given a transform; its synchronisationbehaviour can be derived by algebraic reasoning. The main feature of our approach is beingable to deal with duplication and structural changes.,*,*,*
